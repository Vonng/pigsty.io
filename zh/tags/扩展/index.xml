<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pigsty – 扩展</title>
    <link>/zh/tags/%E6%89%A9%E5%B1%95/</link>
    <description>Recent content in 扩展 on Pigsty</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 02 Nov 2024 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="/zh/tags/%E6%89%A9%E5%B1%95/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: PostgreSQL神功大成！最全扩展仓库来了！</title>
      <link>/zh/blog/pg/pg-ext-repo/</link>
      <pubDate>Sat, 02 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/pg-ext-repo/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/pg-ext-repo/featured_hua49e85834b344fe1b85a922a5102032f_362146_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;p&gt;最近没怎么更新，因为在憋大招。最近功成出关，遂发此文为贺 —— 我做了一个收录PG生态所有能打的400个扩展的&lt;a href=&#34;https://ext.pigsty.io&#34;&gt;仓库&lt;/a&gt;，让 PostgreSQL 在成为数据库全能王的道路上又往前迈出了坚实的一步！&lt;/p&gt;
&lt;p&gt;自从我在 《&lt;a href=&#34;/zh/blog/pg/pg-eat-db-world&#34;&gt;&lt;strong&gt;PostgreSQL正在吞噬数据库世界&lt;/strong&gt;&lt;/a&gt;》 一文中指出 &lt;strong&gt;可扩展性&lt;/strong&gt; 对于 PostgreSQL 的重要性以来，PG 社区对此进行了&lt;a href=&#34;/zh/blog/pg/pgcondev-2024&#34;&gt;&lt;strong&gt;热烈的讨论&lt;/strong&gt;&lt;/a&gt;，并且达成了共识。
最终体现在《&lt;a href=&#34;/zh/blog/pg/pg-17&#34;&gt;&lt;strong&gt;PostgreSQL 17 发布注记！&lt;/strong&gt;&lt;/a&gt;》中。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/pg/pg-eat-deb-world&#34;&gt;&lt;img src=&#34;/img/pigsty/ecosystem.jpg&#34; style=&#34;max-width: 1000px; max-height: 1000px; width: 100%; height: auto;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;但真正重要的事情不是认识世界，而是改变世界。既然大家都已经认清了扩展很重要，&lt;strong&gt;那么我们应该做什么，怎么做&lt;/strong&gt;，就成了真正关键的问题。&lt;/p&gt;
&lt;p&gt;那么什么是 PostgreSQL 扩展最关键的问题？在我看来，扩展用得上用不上，是 PG 扩展生态的首要问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pg-扩展分发现状&#34;&gt;PG 扩展分发现状&lt;/h2&gt;
&lt;p&gt;大家知道 PG 生态有很多扩展插件，但这些扩展插件如何安装使用？这第一道门槛就成了许多用户的拦路虎。怎么解决这个问题？
PGXN 说，用我的办法，我可以现场下载编译扩展；
Tembo 说，我提前帮你打好 docker 镜像；
StackGres 和 Omnigres 说，我们可以在线下载编译好的 So 文件；
八仙过海，各显神通。&lt;/p&gt;
&lt;p&gt;大家都有很多好想法，唯独没仔细考虑绝大多数用户到底是如何安装扩展的。
作为前 DBA，我只能说什么现场编译，OCI镜像，下载so文件，在实战中都有些离谱了 —— &lt;strong&gt;使用最广泛且最可靠的扩展安装方式，依然是用操作系统的包管理器安装签名二进制包&lt;/strong&gt;。
而 yum / dnf / apt 在解决这个问题上已经做的足够好了！所以真的问题其实是，谁来把这几百个扩展插件打成开箱即用的软件包？&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ext.pigsty.io/#/time&#34;&gt;&lt;strong&gt;TIME&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/timescaledb&#34;&gt;&lt;code&gt;timescaledb&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/timescaledb_toolkit&#34;&gt;&lt;code&gt;timescaledb_toolkit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/timeseries&#34;&gt;&lt;code&gt;timeseries&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/periods&#34;&gt;&lt;code&gt;periods&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/temporal_tables&#34;&gt;&lt;code&gt;temporal_tables&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/emaj&#34;&gt;&lt;code&gt;emaj&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/table_version&#34;&gt;&lt;code&gt;table_version&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_cron&#34;&gt;&lt;code&gt;pg_cron&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_later&#34;&gt;&lt;code&gt;pg_later&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_background&#34;&gt;&lt;code&gt;pg_background&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/gis&#34;&gt;&lt;strong&gt;GIS&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/postgis&#34;&gt;&lt;code&gt;postgis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/postgis_topology&#34;&gt;&lt;code&gt;postgis_topology&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/postgis_raster&#34;&gt;&lt;code&gt;postgis_raster&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/postgis_sfcgal&#34;&gt;&lt;code&gt;postgis_sfcgal&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/postgis_tiger_geocoder&#34;&gt;&lt;code&gt;postgis_tiger_geocoder&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/address_standardizer&#34;&gt;&lt;code&gt;address_standardizer&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/address_standardizer_data_us&#34;&gt;&lt;code&gt;address_standardizer_data_us&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgrouting&#34;&gt;&lt;code&gt;pgrouting&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pointcloud&#34;&gt;&lt;code&gt;pointcloud&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pointcloud_postgis&#34;&gt;&lt;code&gt;pointcloud_postgis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/h3&#34;&gt;&lt;code&gt;h3&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/h3_postgis&#34;&gt;&lt;code&gt;h3_postgis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/q3c&#34;&gt;&lt;code&gt;q3c&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/ogr_fdw&#34;&gt;&lt;code&gt;ogr_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/geoip&#34;&gt;&lt;code&gt;geoip&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_polyline&#34;&gt;&lt;code&gt;pg_polyline&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_geohash&#34;&gt;&lt;code&gt;pg_geohash&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/mobilitydb&#34;&gt;&lt;code&gt;mobilitydb&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/earthdistance&#34;&gt;&lt;code&gt;earthdistance&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/rag&#34;&gt;&lt;strong&gt;RAG&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/vector&#34;&gt;&lt;code&gt;vector&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/vectorscale&#34;&gt;&lt;code&gt;vectorscale&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/vectorize&#34;&gt;&lt;code&gt;vectorize&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_similarity&#34;&gt;&lt;code&gt;pg_similarity&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/smlar&#34;&gt;&lt;code&gt;smlar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_summarize&#34;&gt;&lt;code&gt;pg_summarize&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_tiktoken&#34;&gt;&lt;code&gt;pg_tiktoken&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgml&#34;&gt;&lt;code&gt;pgml&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg4ml&#34;&gt;&lt;code&gt;pg4ml&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/fts&#34;&gt;&lt;strong&gt;FTS&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/pg_search&#34;&gt;&lt;code&gt;pg_search&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_bigm&#34;&gt;&lt;code&gt;pg_bigm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/zhparser&#34;&gt;&lt;code&gt;zhparser&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_cs_cz&#34;&gt;&lt;code&gt;hunspell_cs_cz&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_de_de&#34;&gt;&lt;code&gt;hunspell_de_de&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_en_us&#34;&gt;&lt;code&gt;hunspell_en_us&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_fr&#34;&gt;&lt;code&gt;hunspell_fr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_ne_np&#34;&gt;&lt;code&gt;hunspell_ne_np&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_nl_nl&#34;&gt;&lt;code&gt;hunspell_nl_nl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_nn_no&#34;&gt;&lt;code&gt;hunspell_nn_no&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_pt_pt&#34;&gt;&lt;code&gt;hunspell_pt_pt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_ru_ru&#34;&gt;&lt;code&gt;hunspell_ru_ru&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_ru_ru_aot&#34;&gt;&lt;code&gt;hunspell_ru_ru_aot&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/fuzzystrmatch&#34;&gt;&lt;code&gt;fuzzystrmatch&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_trgm&#34;&gt;&lt;code&gt;pg_trgm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/olap&#34;&gt;&lt;strong&gt;OLAP&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/citus&#34;&gt;&lt;code&gt;citus&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/citus_columnar&#34;&gt;&lt;code&gt;citus_columnar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/columnar&#34;&gt;&lt;code&gt;columnar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_analytics&#34;&gt;&lt;code&gt;pg_analytics&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_duckdb&#34;&gt;&lt;code&gt;pg_duckdb&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_mooncake&#34;&gt;&lt;code&gt;pg_mooncake&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/duckdb_fdw&#34;&gt;&lt;code&gt;duckdb_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_parquet&#34;&gt;&lt;code&gt;pg_parquet&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_fkpart&#34;&gt;&lt;code&gt;pg_fkpart&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_partman&#34;&gt;&lt;code&gt;pg_partman&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plproxy&#34;&gt;&lt;code&gt;plproxy&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_strom&#34;&gt;&lt;code&gt;pg_strom&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/tablefunc&#34;&gt;&lt;code&gt;tablefunc&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/feat&#34;&gt;&lt;strong&gt;FEAT&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/age&#34;&gt;&lt;code&gt;age&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hll&#34;&gt;&lt;code&gt;hll&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/rum&#34;&gt;&lt;code&gt;rum&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_graphql&#34;&gt;&lt;code&gt;pg_graphql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_jsonschema&#34;&gt;&lt;code&gt;pg_jsonschema&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/jsquery&#34;&gt;&lt;code&gt;jsquery&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_hint_plan&#34;&gt;&lt;code&gt;pg_hint_plan&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hypopg&#34;&gt;&lt;code&gt;hypopg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/index_advisor&#34;&gt;&lt;code&gt;index_advisor&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plan_filter&#34;&gt;&lt;code&gt;plan_filter&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/imgsmlr&#34;&gt;&lt;code&gt;imgsmlr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_ivm&#34;&gt;&lt;code&gt;pg_ivm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgmq&#34;&gt;&lt;code&gt;pgmq&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgq&#34;&gt;&lt;code&gt;pgq&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_cardano&#34;&gt;&lt;code&gt;pg_cardano&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/rdkit&#34;&gt;&lt;code&gt;rdkit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/bloom&#34;&gt;&lt;code&gt;bloom&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/lang&#34;&gt;&lt;strong&gt;LANG&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/pg_tle&#34;&gt;&lt;code&gt;pg_tle&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plv8&#34;&gt;&lt;code&gt;plv8&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pllua&#34;&gt;&lt;code&gt;pllua&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hstore_pllua&#34;&gt;&lt;code&gt;hstore_pllua&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plluau&#34;&gt;&lt;code&gt;plluau&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hstore_plluau&#34;&gt;&lt;code&gt;hstore_plluau&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plprql&#34;&gt;&lt;code&gt;plprql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pldbgapi&#34;&gt;&lt;code&gt;pldbgapi&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plpgsql_check&#34;&gt;&lt;code&gt;plpgsql_check&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plprofiler&#34;&gt;&lt;code&gt;plprofiler&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plsh&#34;&gt;&lt;code&gt;plsh&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pljava&#34;&gt;&lt;code&gt;pljava&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plr&#34;&gt;&lt;code&gt;plr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgtap&#34;&gt;&lt;code&gt;pgtap&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/faker&#34;&gt;&lt;code&gt;faker&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/dbt2&#34;&gt;&lt;code&gt;dbt2&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pltcl&#34;&gt;&lt;code&gt;pltcl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pltclu&#34;&gt;&lt;code&gt;pltclu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plperl&#34;&gt;&lt;code&gt;plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/bool_plperl&#34;&gt;&lt;code&gt;bool_plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hstore_plperl&#34;&gt;&lt;code&gt;hstore_plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/jsonb_plperl&#34;&gt;&lt;code&gt;jsonb_plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plperlu&#34;&gt;&lt;code&gt;plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/bool_plperlu&#34;&gt;&lt;code&gt;bool_plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/jsonb_plperlu&#34;&gt;&lt;code&gt;jsonb_plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hstore_plperlu&#34;&gt;&lt;code&gt;hstore_plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plpgsql&#34;&gt;&lt;code&gt;plpgsql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plpython3u&#34;&gt;&lt;code&gt;plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/jsonb_plpython3u&#34;&gt;&lt;code&gt;jsonb_plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/ltree_plpython3u&#34;&gt;&lt;code&gt;ltree_plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hstore_plpython3u&#34;&gt;&lt;code&gt;hstore_plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/type&#34;&gt;&lt;strong&gt;TYPE&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/prefix&#34;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/semver&#34;&gt;&lt;code&gt;semver&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/unit&#34;&gt;&lt;code&gt;unit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/md5hash&#34;&gt;&lt;code&gt;md5hash&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/asn1oid&#34;&gt;&lt;code&gt;asn1oid&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/roaringbitmap&#34;&gt;&lt;code&gt;roaringbitmap&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgfaceting&#34;&gt;&lt;code&gt;pgfaceting&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_sphere&#34;&gt;&lt;code&gt;pg_sphere&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/country&#34;&gt;&lt;code&gt;country&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/currency&#34;&gt;&lt;code&gt;currency&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgmp&#34;&gt;&lt;code&gt;pgmp&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/numeral&#34;&gt;&lt;code&gt;numeral&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_rational&#34;&gt;&lt;code&gt;pg_rational&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/uint&#34;&gt;&lt;code&gt;uint&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/uint128&#34;&gt;&lt;code&gt;uint128&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/ip4r&#34;&gt;&lt;code&gt;ip4r&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/uri&#34;&gt;&lt;code&gt;uri&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgemailaddr&#34;&gt;&lt;code&gt;pgemailaddr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/acl&#34;&gt;&lt;code&gt;acl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/debversion&#34;&gt;&lt;code&gt;debversion&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_rrule&#34;&gt;&lt;code&gt;pg_rrule&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/timestamp9&#34;&gt;&lt;code&gt;timestamp9&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/chkpass&#34;&gt;&lt;code&gt;chkpass&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/isn&#34;&gt;&lt;code&gt;isn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/seg&#34;&gt;&lt;code&gt;seg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/cube&#34;&gt;&lt;code&gt;cube&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/ltree&#34;&gt;&lt;code&gt;ltree&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hstore&#34;&gt;&lt;code&gt;hstore&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/citext&#34;&gt;&lt;code&gt;citext&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/xml2&#34;&gt;&lt;code&gt;xml2&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/func&#34;&gt;&lt;strong&gt;FUNC&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/topn&#34;&gt;&lt;code&gt;topn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/gzip&#34;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/zstd&#34;&gt;&lt;code&gt;zstd&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/http&#34;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_net&#34;&gt;&lt;code&gt;pg_net&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_smtp_client&#34;&gt;&lt;code&gt;pg_smtp_client&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_html5_email_address&#34;&gt;&lt;code&gt;pg_html5_email_address&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgsql_tweaks&#34;&gt;&lt;code&gt;pgsql_tweaks&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_extra_time&#34;&gt;&lt;code&gt;pg_extra_time&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/timeit&#34;&gt;&lt;code&gt;timeit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/count_distinct&#34;&gt;&lt;code&gt;count_distinct&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/extra_window_functions&#34;&gt;&lt;code&gt;extra_window_functions&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/first_last_agg&#34;&gt;&lt;code&gt;first_last_agg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/tdigest&#34;&gt;&lt;code&gt;tdigest&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/aggs_for_vecs&#34;&gt;&lt;code&gt;aggs_for_vecs&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/aggs_for_arrays&#34;&gt;&lt;code&gt;aggs_for_arrays&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/arraymath&#34;&gt;&lt;code&gt;arraymath&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/quantile&#34;&gt;&lt;code&gt;quantile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/lower_quantile&#34;&gt;&lt;code&gt;lower_quantile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_idkit&#34;&gt;&lt;code&gt;pg_idkit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_uuidv7&#34;&gt;&lt;code&gt;pg_uuidv7&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/permuteseq&#34;&gt;&lt;code&gt;permuteseq&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_hashids&#34;&gt;&lt;code&gt;pg_hashids&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sequential_uuids&#34;&gt;&lt;code&gt;sequential_uuids&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_math&#34;&gt;&lt;code&gt;pg_math&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/random&#34;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/base36&#34;&gt;&lt;code&gt;base36&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/base62&#34;&gt;&lt;code&gt;base62&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_base58&#34;&gt;&lt;code&gt;pg_base58&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/floatvec&#34;&gt;&lt;code&gt;floatvec&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/financial&#34;&gt;&lt;code&gt;financial&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgjwt&#34;&gt;&lt;code&gt;pgjwt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_hashlib&#34;&gt;&lt;code&gt;pg_hashlib&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/shacrypt&#34;&gt;&lt;code&gt;shacrypt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/cryptint&#34;&gt;&lt;code&gt;cryptint&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pguecc&#34;&gt;&lt;code&gt;pguecc&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgpcre&#34;&gt;&lt;code&gt;pgpcre&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/icu_ext&#34;&gt;&lt;code&gt;icu_ext&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgqr&#34;&gt;&lt;code&gt;pgqr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/envvar&#34;&gt;&lt;code&gt;envvar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_protobuf&#34;&gt;&lt;code&gt;pg_protobuf&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/url_encode&#34;&gt;&lt;code&gt;url_encode&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/refint&#34;&gt;&lt;code&gt;refint&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/autoinc&#34;&gt;&lt;code&gt;autoinc&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/insert_username&#34;&gt;&lt;code&gt;insert_username&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/moddatetime&#34;&gt;&lt;code&gt;moddatetime&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/tsm_system_time&#34;&gt;&lt;code&gt;tsm_system_time&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/dict_xsyn&#34;&gt;&lt;code&gt;dict_xsyn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/tsm_system_rows&#34;&gt;&lt;code&gt;tsm_system_rows&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/tcn&#34;&gt;&lt;code&gt;tcn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/uuid-ossp&#34;&gt;&lt;code&gt;uuid-ossp&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/btree_gist&#34;&gt;&lt;code&gt;btree_gist&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/btree_gin&#34;&gt;&lt;code&gt;btree_gin&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/intarray&#34;&gt;&lt;code&gt;intarray&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/intagg&#34;&gt;&lt;code&gt;intagg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/dict_int&#34;&gt;&lt;code&gt;dict_int&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/unaccent&#34;&gt;&lt;code&gt;unaccent&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/admin&#34;&gt;&lt;strong&gt;ADMIN&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/pg_repack&#34;&gt;&lt;code&gt;pg_repack&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_squeeze&#34;&gt;&lt;code&gt;pg_squeeze&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_dirtyread&#34;&gt;&lt;code&gt;pg_dirtyread&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgfincore&#34;&gt;&lt;code&gt;pgfincore&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgdd&#34;&gt;&lt;code&gt;pgdd&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/ddlx&#34;&gt;&lt;code&gt;ddlx&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/prioritize&#34;&gt;&lt;code&gt;prioritize&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_checksums&#34;&gt;&lt;code&gt;pg_checksums&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_readonly&#34;&gt;&lt;code&gt;pg_readonly&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/safeupdate&#34;&gt;&lt;code&gt;safeupdate&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_permissions&#34;&gt;&lt;code&gt;pg_permissions&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgautofailover&#34;&gt;&lt;code&gt;pgautofailover&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_catcheck&#34;&gt;&lt;code&gt;pg_catcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pre_prepare&#34;&gt;&lt;code&gt;pre_prepare&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgcozy&#34;&gt;&lt;code&gt;pgcozy&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_orphaned&#34;&gt;&lt;code&gt;pg_orphaned&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_crash&#34;&gt;&lt;code&gt;pg_crash&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_cheat_funcs&#34;&gt;&lt;code&gt;pg_cheat_funcs&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_savior&#34;&gt;&lt;code&gt;pg_savior&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/table_log&#34;&gt;&lt;code&gt;table_log&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_fio&#34;&gt;&lt;code&gt;pg_fio&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgpool_adm&#34;&gt;&lt;code&gt;pgpool_adm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgpool_recovery&#34;&gt;&lt;code&gt;pgpool_recovery&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgpool_regclass&#34;&gt;&lt;code&gt;pgpool_regclass&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgagent&#34;&gt;&lt;code&gt;pgagent&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/vacuumlo&#34;&gt;&lt;code&gt;vacuumlo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_prewarm&#34;&gt;&lt;code&gt;pg_prewarm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/oid2name&#34;&gt;&lt;code&gt;oid2name&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/lo&#34;&gt;&lt;code&gt;lo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/basic_archive&#34;&gt;&lt;code&gt;basic_archive&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/basebackup_to_shell&#34;&gt;&lt;code&gt;basebackup_to_shell&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/old_snapshot&#34;&gt;&lt;code&gt;old_snapshot&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/adminpack&#34;&gt;&lt;code&gt;adminpack&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/amcheck&#34;&gt;&lt;code&gt;amcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_surgery&#34;&gt;&lt;code&gt;pg_surgery&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/stat&#34;&gt;&lt;strong&gt;STAT&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/pg_profile&#34;&gt;&lt;code&gt;pg_profile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_show_plans&#34;&gt;&lt;code&gt;pg_show_plans&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_stat_kcache&#34;&gt;&lt;code&gt;pg_stat_kcache&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_stat_monitor&#34;&gt;&lt;code&gt;pg_stat_monitor&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_qualstats&#34;&gt;&lt;code&gt;pg_qualstats&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_store_plans&#34;&gt;&lt;code&gt;pg_store_plans&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_track_settings&#34;&gt;&lt;code&gt;pg_track_settings&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_wait_sampling&#34;&gt;&lt;code&gt;pg_wait_sampling&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/system_stats&#34;&gt;&lt;code&gt;system_stats&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/meta&#34;&gt;&lt;code&gt;meta&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgnodemx&#34;&gt;&lt;code&gt;pgnodemx&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_proctab&#34;&gt;&lt;code&gt;pg_proctab&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_sqlog&#34;&gt;&lt;code&gt;pg_sqlog&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/bgw_replstatus&#34;&gt;&lt;code&gt;bgw_replstatus&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgmeminfo&#34;&gt;&lt;code&gt;pgmeminfo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/toastinfo&#34;&gt;&lt;code&gt;toastinfo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/explain_ui&#34;&gt;&lt;code&gt;explain_ui&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_relusage&#34;&gt;&lt;code&gt;pg_relusage&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_top&#34;&gt;&lt;code&gt;pg_top&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pagevis&#34;&gt;&lt;code&gt;pagevis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/powa&#34;&gt;&lt;code&gt;powa&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pageinspect&#34;&gt;&lt;code&gt;pageinspect&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgrowlocks&#34;&gt;&lt;code&gt;pgrowlocks&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sslinfo&#34;&gt;&lt;code&gt;sslinfo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_buffercache&#34;&gt;&lt;code&gt;pg_buffercache&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_walinspect&#34;&gt;&lt;code&gt;pg_walinspect&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_freespacemap&#34;&gt;&lt;code&gt;pg_freespacemap&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_visibility&#34;&gt;&lt;code&gt;pg_visibility&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgstattuple&#34;&gt;&lt;code&gt;pgstattuple&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/auto_explain&#34;&gt;&lt;code&gt;auto_explain&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_stat_statements&#34;&gt;&lt;code&gt;pg_stat_statements&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sec&#34;&gt;&lt;strong&gt;SEC&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/passwordcheck_cracklib&#34;&gt;&lt;code&gt;passwordcheck_cracklib&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/supautils&#34;&gt;&lt;code&gt;supautils&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgsodium&#34;&gt;&lt;code&gt;pgsodium&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/supabase_vault&#34;&gt;&lt;code&gt;supabase_vault&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_session_jwt&#34;&gt;&lt;code&gt;pg_session_jwt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/anon&#34;&gt;&lt;code&gt;anon&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_tde&#34;&gt;&lt;code&gt;pg_tde&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgsmcrypto&#34;&gt;&lt;code&gt;pgsmcrypto&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgaudit&#34;&gt;&lt;code&gt;pgaudit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgauditlogtofile&#34;&gt;&lt;code&gt;pgauditlogtofile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_auth_mon&#34;&gt;&lt;code&gt;pg_auth_mon&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/credcheck&#34;&gt;&lt;code&gt;credcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgcryptokey&#34;&gt;&lt;code&gt;pgcryptokey&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_jobmon&#34;&gt;&lt;code&gt;pg_jobmon&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/logerrors&#34;&gt;&lt;code&gt;logerrors&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/login_hook&#34;&gt;&lt;code&gt;login_hook&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/set_user&#34;&gt;&lt;code&gt;set_user&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_snakeoil&#34;&gt;&lt;code&gt;pg_snakeoil&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgextwlist&#34;&gt;&lt;code&gt;pgextwlist&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_auditor&#34;&gt;&lt;code&gt;pg_auditor&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sslutils&#34;&gt;&lt;code&gt;sslutils&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/noset&#34;&gt;&lt;code&gt;noset&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sepgsql&#34;&gt;&lt;code&gt;sepgsql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/auth_delay&#34;&gt;&lt;code&gt;auth_delay&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgcrypto&#34;&gt;&lt;code&gt;pgcrypto&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/passwordcheck&#34;&gt;&lt;code&gt;passwordcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/fdw&#34;&gt;&lt;strong&gt;FDW&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/wrappers&#34;&gt;&lt;code&gt;wrappers&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/multicorn&#34;&gt;&lt;code&gt;multicorn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/odbc_fdw&#34;&gt;&lt;code&gt;odbc_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/jdbc_fdw&#34;&gt;&lt;code&gt;jdbc_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/mysql_fdw&#34;&gt;&lt;code&gt;mysql_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/oracle_fdw&#34;&gt;&lt;code&gt;oracle_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/tds_fdw&#34;&gt;&lt;code&gt;tds_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/db2_fdw&#34;&gt;&lt;code&gt;db2_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sqlite_fdw&#34;&gt;&lt;code&gt;sqlite_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgbouncer_fdw&#34;&gt;&lt;code&gt;pgbouncer_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/mongo_fdw&#34;&gt;&lt;code&gt;mongo_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/redis_fdw&#34;&gt;&lt;code&gt;redis_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/redis&#34;&gt;&lt;code&gt;redis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/kafka_fdw&#34;&gt;&lt;code&gt;kafka_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hdfs_fdw&#34;&gt;&lt;code&gt;hdfs_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/firebird_fdw&#34;&gt;&lt;code&gt;firebird_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/aws_s3&#34;&gt;&lt;code&gt;aws_s3&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/log_fdw&#34;&gt;&lt;code&gt;log_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/dblink&#34;&gt;&lt;code&gt;dblink&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/file_fdw&#34;&gt;&lt;code&gt;file_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/postgres_fdw&#34;&gt;&lt;code&gt;postgres_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sim&#34;&gt;&lt;strong&gt;SIM&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/orafce&#34;&gt;&lt;code&gt;orafce&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgtt&#34;&gt;&lt;code&gt;pgtt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/session_variable&#34;&gt;&lt;code&gt;session_variable&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_statement_rollback&#34;&gt;&lt;code&gt;pg_statement_rollback&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_dbms_metadata&#34;&gt;&lt;code&gt;pg_dbms_metadata&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_dbms_lock&#34;&gt;&lt;code&gt;pg_dbms_lock&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_dbms_job&#34;&gt;&lt;code&gt;pg_dbms_job&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/babelfishpg_common&#34;&gt;&lt;code&gt;babelfishpg_common&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/babelfishpg_tsql&#34;&gt;&lt;code&gt;babelfishpg_tsql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/babelfishpg_tds&#34;&gt;&lt;code&gt;babelfishpg_tds&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/babelfishpg_money&#34;&gt;&lt;code&gt;babelfishpg_money&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgmemcache&#34;&gt;&lt;code&gt;pgmemcache&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/etl&#34;&gt;&lt;strong&gt;ETL&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/pglogical&#34;&gt;&lt;code&gt;pglogical&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pglogical_origin&#34;&gt;&lt;code&gt;pglogical_origin&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pglogical_ticker&#34;&gt;&lt;code&gt;pglogical_ticker&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgl_ddl_deploy&#34;&gt;&lt;code&gt;pgl_ddl_deploy&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_failover_slots&#34;&gt;&lt;code&gt;pg_failover_slots&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/wal2json&#34;&gt;&lt;code&gt;wal2json&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/wal2mongo&#34;&gt;&lt;code&gt;wal2mongo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/decoderbufs&#34;&gt;&lt;code&gt;decoderbufs&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/decoder_raw&#34;&gt;&lt;code&gt;decoder_raw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/test_decoding&#34;&gt;&lt;code&gt;test_decoding&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/mimeo&#34;&gt;&lt;code&gt;mimeo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/repmgr&#34;&gt;&lt;code&gt;repmgr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_fact_loader&#34;&gt;&lt;code&gt;pg_fact_loader&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_bulkload&#34;&gt;&lt;code&gt;pg_bulkload&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PostgreSQL 的 PGDG 官方仓库中，提供了大约 &lt;strong&gt;100&lt;/strong&gt; 个左右的扩展，但存在各种问题：有的扩展在 Debian/Ubuntu 的 APT 仓库里有，在 EL 系统的 YUM 仓库里没有；
有的扩展在 EL8 上有，EL9 没有；有的扩展在 Ubuntu 22 上有，在 24 上没有；有的扩展针对 PostgreSQL 12 - 15 提供，PG 16，17 不提供；有的扩展只有 x86_64 架构，没有 arm 架构；有时候碰上这种问题确实蛮让人头疼。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;怎么办我行我上&#34;&gt;怎么办？我行我上！&lt;/h2&gt;
&lt;p&gt;作为一个 PostgreSQL 发行版维护者，我曾经寄希望于 PG 生态的其他人来解决这个问题。
每当我看见 PGDG 仓库有出现错漏缺失，我都会第一时间反馈给仓库维护者 Devrim 和 Cris 。&lt;/p&gt;
&lt;p&gt;有的时候这种模式挺管用，比如去年当我发现 pgvector 这个强力向量数据库扩展还没有二进制软件包制成品时，我第一时间&lt;a href=&#34;https://github.com/pgvector/pgvector/issues/76&#34;&gt;提给 Devrim&lt;/a&gt; ，
&lt;a href=&#34;/zh/blog/pg/vector-json-pg/#%E8%AF%91%E8%80%85%E8%AF%84%E8%AE%BA&#34;&gt;将其放入 PGDG 仓库&lt;/a&gt;，然后 pgvector 遂成为 PG 生态中的向量数据库事实标准，进入到各家云厂商 RDS 中。&lt;/p&gt;
&lt;p&gt;但有的时候，事情并不能总能如意。例如，&lt;strong&gt;Devrim&lt;/strong&gt; 表示，他绝对不会接受任何 Rust 扩展插件进入 PGDG YUM 仓库。
但我确实有二十多个用 Rust 编写的 PostgreSQL 扩展需要分发（例如自建 Supabase 就需要 pg_graphql, pg_jsonschema, wrappers 三个 Rust 扩展），怎么办呢？&lt;/p&gt;
&lt;p&gt;再比如说，最近 PG 生态非常火热的 &lt;a href=&#34;/zh/blog/pg/pg-duckdb&#34;&gt;DuckDB 缝合大赛&lt;/a&gt;，大家都在密集地更新跟进 DuckDB 系扩展 ，这些扩展插件我第一时间 &lt;a href=&#34;https://ext.pigsty.io/#/olap&#34;&gt;打好了 RPM/DEB 包&lt;/a&gt;，但是如何分发呢？&lt;/p&gt;
&lt;p&gt;思来想去，我决定还是我行我上，自己维护一个 PostgreSQL 扩展插件的 APT / YUM 仓库，分发 PG 扩展。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ext.pigsty.io&#34;&gt;&lt;img src=&#34;ext-website.png&#34; style=&#34;max-width: 800px; width: 100%; height: auto;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pg-扩展大全&#34;&gt;PG 扩展大全&lt;/h2&gt;
&lt;p&gt;在过去的半年中，我的工作重心放在 PG 扩展生态的整合上。而最近，这项工作终于达到了一个让我自己感到满意的里程碑。我建设了一个 PG Yum/APT 仓库，收录了 340 个可用 PG 扩展的元数据，以及二进制制成品。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Entry / Filter&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;All&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PGDG&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PIGSTY&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;CONTRIB&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;MISC&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;MISS&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG17&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG16&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG15&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG14&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG13&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG12&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;RPM Extension&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;334&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;119&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;139&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;301&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;330&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;333&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;319&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;307&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;294&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DEB Extension&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;326&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;104&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;143&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;14&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;302&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;322&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;325&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;316&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;303&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;293&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;RPM Package&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;251&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;107&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;138&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;220&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;247&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;250&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;239&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;229&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;216&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DEB Package&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;241&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;90&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;142&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;218&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;237&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;240&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;234&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;223&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;213&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以上是这个仓库的一些统计数字：总共有 340 个可用 Extension，去除 PG 自带的 70 个，总共 270 个第三方扩展插件。这 270 个扩展插件中，有小一半是 PGDG 官方仓库维护的（126个RPM扩展，102个DEB扩展），另外的大一半（131个RPM，143个DEB）都是由我维护，修复，编译，打包，测试，分发的。&lt;/p&gt;
&lt;p&gt;每一个扩展，我都针对最新的 PostgreSQL 12 - 17 这六个生命周期大版本分别打包构建，针对 EL8，EL9，Ubuntu 22.04，Ubuntu 24.04，以及 Debian 12 这五个绝对主流 Linux 发行版构建。此外也对 EL7，Debian 11， Ubuntu 20.04 这些过保系统提供部分有限支持。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ext.pigsty.io&#34;&gt;&lt;img src=&#34;usage.png&#34; style=&#34;max-width: 800px; max-height: 800px; width: 100%; height: auto;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个仓库还解决了扩展对齐的问题，例如，原本在 APT 和 YUM 仓库中的扩展，APT 有一小半几十个扩展 YUM 仓库没有，YUM 仓库有一小半 APT 仓库没有。我把两者独有的扩展都尽可能移植到另一个操作系统生态中，现在只有 7 个 APT 扩展在 YUM 仓库中缺失，16 个扩展在 APT 仓库缺失，只占总数的 6%。很多 PGDG 扩展版本缺失的问题，也在这里得到了一并修复。&lt;/p&gt;
&lt;p&gt;我提供了一个完整的目录，列出了支持的扩展，并且对每一个扩展，都给出了详情，依赖安装说明与注意事项。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ext.pigsty.io/#/postgis&#34;&gt;&lt;img src=&#34;postgis.png&#34; style=&#34;max-width: 1200px; width: 100%; height: auto;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我想，用户吭哧吭哧抱怨扩展编译失败的问题，应该能在这里得到最终的解决。&lt;/p&gt;
&lt;p&gt;当然题外话是广告时间，安装这些扩展，使用这个仓库的最简单的方式是什么？当然是开箱即用的 PostgreSQL 数据库发行版 —— &lt;strong&gt;Pigsty&lt;/strong&gt; —— &lt;strong&gt;但这并非必选项&lt;/strong&gt;。
你依然可以用简单的一行 shell 在任何 EL/Debian/Ubuntu 系统上启用此仓库。&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;使用Pigsty一次性配置好并拉起用于自建Supabase的PostgreSQL集群，只要简单地声明要安装哪些扩展插件即可！&lt;/summary&gt;&lt;br&gt;
&lt;p&gt;一键自建 Supabase 所需的 PostgreSQL 集群，请参考样例配置文件： &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/conf/supa.yml&#34;&gt;&lt;code&gt;conf/dbms/supabase.yml&lt;/code&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pg-meta, the underlying postgres database for supabase&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg-meta&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_seq: 1, pg_role&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;primary } }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg-meta&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_users&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase roles: anon, authenticated, dashboard_user&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: anon           ,login&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: authenticated  ,login&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: dashboard_user ,login: false ,replication: true ,createdb: true ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: service_role   ,login: false ,bypassrls&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase users: please use the same password&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_admin             ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: true   ,roles: [ dbrole_admin ] ,superuser: true ,replication: true ,createdb: true ,createrole: true ,bypassrls&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: authenticator              ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbrole_admin, authenticated ,anon ,service_role ] }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_auth_admin        ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles: [ dbrole_admin ] ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_storage_admin     ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles: [ dbrole_admin, authenticated ,anon ,service_role ] ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_functions_admin   ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles: [ dbrole_admin ] ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_replication_admin ,password: &amp;#39;DBUser.Supa&amp;#39; ,replication: true ,roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbrole_admin ]}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_read_only_user    ,password: &amp;#39;DBUser.Supa&amp;#39; ,bypassrls: true ,roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbrole_readonly, pg_read_all_data ] }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_databases&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;baseline&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase.sql&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;owner&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase_admin&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;comment&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase postgres database&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;schemas&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;extensions ,auth ,realtime ,storage ,graphql_public ,supabase_functions ,_analytics ,_realtime ]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;extensions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pgcrypto  ,schema: extensions  } # 1.3   &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;cryptographic functions&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_net    ,schema: extensions  } # 0.9.2 &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;async HTTP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pgjwt     ,schema: extensions  } # 0.2.0 &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;json web token API for postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: uuid-ossp ,schema: extensions  } # 1.1   &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;generate universally unique identifiers (UUIDs)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pgsodium        }                # 3.1.9 &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsodium is a modern cryptography library for Postgres.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_vault  }                # 0.2.8 &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Supabase Vault Extension&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_graphql      }                # 1.5.9 : pg_graphql&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GraphQL support&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_jsonschema   }                # 0.3.3 : pg_jsonschema&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Validate json schema&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: wrappers        }                # 0.4.3 : wrappers&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;FDW collections&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: http            }                # 1.6   : http&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;allows web page retrieval inside the database.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_cron         }                # 1.6   : pg_cron&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Job scheduler for PostgreSQL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: timescaledb     }                # 2.17  : timescaledb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Enables scalable inserts and complex queries for time-series data&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_tle          }                # 1.2   : pg_tle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Trusted Language Extensions for PostgreSQL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase required extensions&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_libs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;pg_stat_statements, pgaudit, plpgsql, plpgsql_check, pg_cron, pg_net, timescaledb, auto_explain, pg_tle, plan_filter&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_extensions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# extensions to be installed on this cluster&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;supa-stack&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;timescaledb pg_cron pg_timetable&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;postgis pg_geohash&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pgvector pgvectorscale pg_similarity smlar pg_summarize pg_tiktoken&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_search pg_bigm zhparser hunspell&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_analytics pg_parquet pg_duckdb&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_hint_plan hll rum pg_graphql pg_jsonschema index_advisor pg_plan_filter hypopg pg_ivm pgmq pg_cardano&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_tle plv8 plpgsql_check&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pljava&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pgunit md5hash asn1oid roaringbitmap pgfaceting pgsphere pg_country pg_currency pgmp numeral pg_rational pguint pg_uint128 ip4r pg_uri pgemailaddr acl timestamp9&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_gzip pg_zstd pg_http pg_net pg_html5_email_address pgsql_tweaks pg_extra_time pg_timeit count_distinct extra_window_functions first_last_agg tdigest aggs_for_arrays aggs_for_vecs pg_arraymath quantile lower_quantile&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_idkit pg_uuidv7 permuteseq pg_hashids sequential_uuids pg_math pg_random pg_base36 pg_base62 pg_base58 floatvec pg_financial pgjwt pg_hashlib shacrypt cryptint pg_ecdsa pgpcre icu_ext pgqr envvar pg_protobuf url_encode&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_repack pg_squeeze pg_dirtyread ddlx pg_readonly safeupdate pg_permissions pg_savior pg_fio&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_profile pg_show_plans pg_stat_kcache pg_stat_monitor pg_qualstats pg_track_settings system_stats pg_meta pgnodemx pg_sqlog bgw_replstatus toastinfo pg_explain_ui pg_relusage&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;passwordcheck supautils pgsodium pg_vault anonymizer pgsmcrypto pgaudit pgauditlogtofile pg_auth_mon credcheck logerrors login_hook set_user pgextwlist pg_auditor sslutils noset&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;wrappers mysql_fdw redis_fdw pg_redis_pubsub aws_s3 log_fdw&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pglogical wal2json decoder_raw pg_fact_loader&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_parameters&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cron.database_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pgsodium.enable_event_trigger&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;off&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_hba_rules&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase hba rules, require access from docker network&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user: all ,db: postgres  ,addr: intra         ,auth: pwd ,title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;allow supabase access from intranet&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user: all ,db: postgres  ,addr: 172.17.0.0/16 ,auth: pwd ,title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;allow access from local docker network&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_vip_enabled&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_vip_address&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10.10.2&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/24&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_vip_interface&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;eth1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/details&gt;
&lt;hr&gt;
&lt;h2 id=&#34;这个仓库里有什么&#34;&gt;这个仓库里有什么？&lt;/h2&gt;
&lt;p&gt;在 Pigsty 的扩展仓库中，所有的扩展都已经被预先分为了十五类之一：TIME，GIS，RAG，FTS，OLAP，FEAT，LANG，TYPE，FUNC，ADMIN，STAT，SEC，FDW，SIM，ETL，如下所示。&lt;/p&gt;
&lt;p&gt;请移步 &lt;a href=&#34;https://ext.pigsty.io&#34;&gt;ext.pigsty.io&lt;/a&gt; 查看完整详情。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/time&#34;&gt;&lt;strong&gt;TIME&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/timescaledb&#34;&gt;&lt;code&gt;timescaledb&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/timescaledb_toolkit&#34;&gt;&lt;code&gt;timescaledb_toolkit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/timeseries&#34;&gt;&lt;code&gt;timeseries&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/periods&#34;&gt;&lt;code&gt;periods&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/temporal_tables&#34;&gt;&lt;code&gt;temporal_tables&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/emaj&#34;&gt;&lt;code&gt;emaj&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/table_version&#34;&gt;&lt;code&gt;table_version&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_cron&#34;&gt;&lt;code&gt;pg_cron&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_later&#34;&gt;&lt;code&gt;pg_later&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_background&#34;&gt;&lt;code&gt;pg_background&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/gis&#34;&gt;&lt;strong&gt;GIS&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/postgis&#34;&gt;&lt;code&gt;postgis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/postgis_topology&#34;&gt;&lt;code&gt;postgis_topology&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/postgis_raster&#34;&gt;&lt;code&gt;postgis_raster&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/postgis_sfcgal&#34;&gt;&lt;code&gt;postgis_sfcgal&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/postgis_tiger_geocoder&#34;&gt;&lt;code&gt;postgis_tiger_geocoder&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/address_standardizer&#34;&gt;&lt;code&gt;address_standardizer&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/address_standardizer_data_us&#34;&gt;&lt;code&gt;address_standardizer_data_us&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgrouting&#34;&gt;&lt;code&gt;pgrouting&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pointcloud&#34;&gt;&lt;code&gt;pointcloud&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pointcloud_postgis&#34;&gt;&lt;code&gt;pointcloud_postgis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/h3&#34;&gt;&lt;code&gt;h3&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/h3_postgis&#34;&gt;&lt;code&gt;h3_postgis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/q3c&#34;&gt;&lt;code&gt;q3c&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/ogr_fdw&#34;&gt;&lt;code&gt;ogr_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/geoip&#34;&gt;&lt;code&gt;geoip&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_polyline&#34;&gt;&lt;code&gt;pg_polyline&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_geohash&#34;&gt;&lt;code&gt;pg_geohash&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/mobilitydb&#34;&gt;&lt;code&gt;mobilitydb&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/earthdistance&#34;&gt;&lt;code&gt;earthdistance&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/rag&#34;&gt;&lt;strong&gt;RAG&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/vector&#34;&gt;&lt;code&gt;vector&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/vectorscale&#34;&gt;&lt;code&gt;vectorscale&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/vectorize&#34;&gt;&lt;code&gt;vectorize&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_similarity&#34;&gt;&lt;code&gt;pg_similarity&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/smlar&#34;&gt;&lt;code&gt;smlar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_summarize&#34;&gt;&lt;code&gt;pg_summarize&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_tiktoken&#34;&gt;&lt;code&gt;pg_tiktoken&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgml&#34;&gt;&lt;code&gt;pgml&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg4ml&#34;&gt;&lt;code&gt;pg4ml&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/fts&#34;&gt;&lt;strong&gt;FTS&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/pg_search&#34;&gt;&lt;code&gt;pg_search&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_bigm&#34;&gt;&lt;code&gt;pg_bigm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/zhparser&#34;&gt;&lt;code&gt;zhparser&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_cs_cz&#34;&gt;&lt;code&gt;hunspell_cs_cz&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_de_de&#34;&gt;&lt;code&gt;hunspell_de_de&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_en_us&#34;&gt;&lt;code&gt;hunspell_en_us&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_fr&#34;&gt;&lt;code&gt;hunspell_fr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_ne_np&#34;&gt;&lt;code&gt;hunspell_ne_np&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_nl_nl&#34;&gt;&lt;code&gt;hunspell_nl_nl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_nn_no&#34;&gt;&lt;code&gt;hunspell_nn_no&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_pt_pt&#34;&gt;&lt;code&gt;hunspell_pt_pt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_ru_ru&#34;&gt;&lt;code&gt;hunspell_ru_ru&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_ru_ru_aot&#34;&gt;&lt;code&gt;hunspell_ru_ru_aot&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/fuzzystrmatch&#34;&gt;&lt;code&gt;fuzzystrmatch&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_trgm&#34;&gt;&lt;code&gt;pg_trgm&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/olap&#34;&gt;&lt;strong&gt;OLAP&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/citus&#34;&gt;&lt;code&gt;citus&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/citus_columnar&#34;&gt;&lt;code&gt;citus_columnar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/columnar&#34;&gt;&lt;code&gt;columnar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_analytics&#34;&gt;&lt;code&gt;pg_analytics&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_duckdb&#34;&gt;&lt;code&gt;pg_duckdb&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_mooncake&#34;&gt;&lt;code&gt;pg_mooncake&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/duckdb_fdw&#34;&gt;&lt;code&gt;duckdb_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_parquet&#34;&gt;&lt;code&gt;pg_parquet&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_fkpart&#34;&gt;&lt;code&gt;pg_fkpart&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_partman&#34;&gt;&lt;code&gt;pg_partman&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plproxy&#34;&gt;&lt;code&gt;plproxy&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_strom&#34;&gt;&lt;code&gt;pg_strom&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/tablefunc&#34;&gt;&lt;code&gt;tablefunc&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/feat&#34;&gt;&lt;strong&gt;FEAT&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/age&#34;&gt;&lt;code&gt;age&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hll&#34;&gt;&lt;code&gt;hll&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/rum&#34;&gt;&lt;code&gt;rum&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_graphql&#34;&gt;&lt;code&gt;pg_graphql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_jsonschema&#34;&gt;&lt;code&gt;pg_jsonschema&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/jsquery&#34;&gt;&lt;code&gt;jsquery&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_hint_plan&#34;&gt;&lt;code&gt;pg_hint_plan&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hypopg&#34;&gt;&lt;code&gt;hypopg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/index_advisor&#34;&gt;&lt;code&gt;index_advisor&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plan_filter&#34;&gt;&lt;code&gt;plan_filter&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/imgsmlr&#34;&gt;&lt;code&gt;imgsmlr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_ivm&#34;&gt;&lt;code&gt;pg_ivm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgmq&#34;&gt;&lt;code&gt;pgmq&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgq&#34;&gt;&lt;code&gt;pgq&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_cardano&#34;&gt;&lt;code&gt;pg_cardano&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/rdkit&#34;&gt;&lt;code&gt;rdkit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/bloom&#34;&gt;&lt;code&gt;bloom&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/lang&#34;&gt;&lt;strong&gt;LANG&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/pg_tle&#34;&gt;&lt;code&gt;pg_tle&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plv8&#34;&gt;&lt;code&gt;plv8&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pllua&#34;&gt;&lt;code&gt;pllua&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hstore_pllua&#34;&gt;&lt;code&gt;hstore_pllua&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plluau&#34;&gt;&lt;code&gt;plluau&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hstore_plluau&#34;&gt;&lt;code&gt;hstore_plluau&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plprql&#34;&gt;&lt;code&gt;plprql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pldbgapi&#34;&gt;&lt;code&gt;pldbgapi&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plpgsql_check&#34;&gt;&lt;code&gt;plpgsql_check&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plprofiler&#34;&gt;&lt;code&gt;plprofiler&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plsh&#34;&gt;&lt;code&gt;plsh&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pljava&#34;&gt;&lt;code&gt;pljava&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plr&#34;&gt;&lt;code&gt;plr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgtap&#34;&gt;&lt;code&gt;pgtap&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/faker&#34;&gt;&lt;code&gt;faker&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/dbt2&#34;&gt;&lt;code&gt;dbt2&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pltcl&#34;&gt;&lt;code&gt;pltcl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pltclu&#34;&gt;&lt;code&gt;pltclu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plperl&#34;&gt;&lt;code&gt;plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/bool_plperl&#34;&gt;&lt;code&gt;bool_plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hstore_plperl&#34;&gt;&lt;code&gt;hstore_plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/jsonb_plperl&#34;&gt;&lt;code&gt;jsonb_plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plperlu&#34;&gt;&lt;code&gt;plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/bool_plperlu&#34;&gt;&lt;code&gt;bool_plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/jsonb_plperlu&#34;&gt;&lt;code&gt;jsonb_plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hstore_plperlu&#34;&gt;&lt;code&gt;hstore_plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plpgsql&#34;&gt;&lt;code&gt;plpgsql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plpython3u&#34;&gt;&lt;code&gt;plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/jsonb_plpython3u&#34;&gt;&lt;code&gt;jsonb_plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/ltree_plpython3u&#34;&gt;&lt;code&gt;ltree_plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hstore_plpython3u&#34;&gt;&lt;code&gt;hstore_plpython3u&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/type&#34;&gt;&lt;strong&gt;TYPE&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/prefix&#34;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/semver&#34;&gt;&lt;code&gt;semver&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/unit&#34;&gt;&lt;code&gt;unit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/md5hash&#34;&gt;&lt;code&gt;md5hash&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/asn1oid&#34;&gt;&lt;code&gt;asn1oid&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/roaringbitmap&#34;&gt;&lt;code&gt;roaringbitmap&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgfaceting&#34;&gt;&lt;code&gt;pgfaceting&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_sphere&#34;&gt;&lt;code&gt;pg_sphere&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/country&#34;&gt;&lt;code&gt;country&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/currency&#34;&gt;&lt;code&gt;currency&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgmp&#34;&gt;&lt;code&gt;pgmp&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/numeral&#34;&gt;&lt;code&gt;numeral&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_rational&#34;&gt;&lt;code&gt;pg_rational&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/uint&#34;&gt;&lt;code&gt;uint&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/uint128&#34;&gt;&lt;code&gt;uint128&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/ip4r&#34;&gt;&lt;code&gt;ip4r&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/uri&#34;&gt;&lt;code&gt;uri&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgemailaddr&#34;&gt;&lt;code&gt;pgemailaddr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/acl&#34;&gt;&lt;code&gt;acl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/debversion&#34;&gt;&lt;code&gt;debversion&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_rrule&#34;&gt;&lt;code&gt;pg_rrule&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/timestamp9&#34;&gt;&lt;code&gt;timestamp9&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/chkpass&#34;&gt;&lt;code&gt;chkpass&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/isn&#34;&gt;&lt;code&gt;isn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/seg&#34;&gt;&lt;code&gt;seg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/cube&#34;&gt;&lt;code&gt;cube&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/ltree&#34;&gt;&lt;code&gt;ltree&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hstore&#34;&gt;&lt;code&gt;hstore&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/citext&#34;&gt;&lt;code&gt;citext&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/xml2&#34;&gt;&lt;code&gt;xml2&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/func&#34;&gt;&lt;strong&gt;FUNC&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/topn&#34;&gt;&lt;code&gt;topn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/gzip&#34;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/zstd&#34;&gt;&lt;code&gt;zstd&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/http&#34;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_net&#34;&gt;&lt;code&gt;pg_net&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_smtp_client&#34;&gt;&lt;code&gt;pg_smtp_client&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_html5_email_address&#34;&gt;&lt;code&gt;pg_html5_email_address&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgsql_tweaks&#34;&gt;&lt;code&gt;pgsql_tweaks&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_extra_time&#34;&gt;&lt;code&gt;pg_extra_time&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/timeit&#34;&gt;&lt;code&gt;timeit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/count_distinct&#34;&gt;&lt;code&gt;count_distinct&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/extra_window_functions&#34;&gt;&lt;code&gt;extra_window_functions&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/first_last_agg&#34;&gt;&lt;code&gt;first_last_agg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/tdigest&#34;&gt;&lt;code&gt;tdigest&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/aggs_for_vecs&#34;&gt;&lt;code&gt;aggs_for_vecs&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/aggs_for_arrays&#34;&gt;&lt;code&gt;aggs_for_arrays&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/arraymath&#34;&gt;&lt;code&gt;arraymath&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/quantile&#34;&gt;&lt;code&gt;quantile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/lower_quantile&#34;&gt;&lt;code&gt;lower_quantile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_idkit&#34;&gt;&lt;code&gt;pg_idkit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_uuidv7&#34;&gt;&lt;code&gt;pg_uuidv7&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/permuteseq&#34;&gt;&lt;code&gt;permuteseq&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_hashids&#34;&gt;&lt;code&gt;pg_hashids&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/sequential_uuids&#34;&gt;&lt;code&gt;sequential_uuids&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_math&#34;&gt;&lt;code&gt;pg_math&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/random&#34;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/base36&#34;&gt;&lt;code&gt;base36&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/base62&#34;&gt;&lt;code&gt;base62&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_base58&#34;&gt;&lt;code&gt;pg_base58&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/floatvec&#34;&gt;&lt;code&gt;floatvec&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/financial&#34;&gt;&lt;code&gt;financial&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgjwt&#34;&gt;&lt;code&gt;pgjwt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_hashlib&#34;&gt;&lt;code&gt;pg_hashlib&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/shacrypt&#34;&gt;&lt;code&gt;shacrypt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/cryptint&#34;&gt;&lt;code&gt;cryptint&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pguecc&#34;&gt;&lt;code&gt;pguecc&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgpcre&#34;&gt;&lt;code&gt;pgpcre&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/icu_ext&#34;&gt;&lt;code&gt;icu_ext&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgqr&#34;&gt;&lt;code&gt;pgqr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/envvar&#34;&gt;&lt;code&gt;envvar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_protobuf&#34;&gt;&lt;code&gt;pg_protobuf&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/url_encode&#34;&gt;&lt;code&gt;url_encode&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/refint&#34;&gt;&lt;code&gt;refint&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/autoinc&#34;&gt;&lt;code&gt;autoinc&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/insert_username&#34;&gt;&lt;code&gt;insert_username&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/moddatetime&#34;&gt;&lt;code&gt;moddatetime&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/tsm_system_time&#34;&gt;&lt;code&gt;tsm_system_time&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/dict_xsyn&#34;&gt;&lt;code&gt;dict_xsyn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/tsm_system_rows&#34;&gt;&lt;code&gt;tsm_system_rows&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/tcn&#34;&gt;&lt;code&gt;tcn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/uuid-ossp&#34;&gt;&lt;code&gt;uuid-ossp&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/btree_gist&#34;&gt;&lt;code&gt;btree_gist&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/btree_gin&#34;&gt;&lt;code&gt;btree_gin&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/intarray&#34;&gt;&lt;code&gt;intarray&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/intagg&#34;&gt;&lt;code&gt;intagg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/dict_int&#34;&gt;&lt;code&gt;dict_int&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/unaccent&#34;&gt;&lt;code&gt;unaccent&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/admin&#34;&gt;&lt;strong&gt;ADMIN&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/pg_repack&#34;&gt;&lt;code&gt;pg_repack&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_squeeze&#34;&gt;&lt;code&gt;pg_squeeze&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_dirtyread&#34;&gt;&lt;code&gt;pg_dirtyread&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgfincore&#34;&gt;&lt;code&gt;pgfincore&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgdd&#34;&gt;&lt;code&gt;pgdd&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/ddlx&#34;&gt;&lt;code&gt;ddlx&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/prioritize&#34;&gt;&lt;code&gt;prioritize&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_checksums&#34;&gt;&lt;code&gt;pg_checksums&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_readonly&#34;&gt;&lt;code&gt;pg_readonly&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/safeupdate&#34;&gt;&lt;code&gt;safeupdate&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_permissions&#34;&gt;&lt;code&gt;pg_permissions&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgautofailover&#34;&gt;&lt;code&gt;pgautofailover&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_catcheck&#34;&gt;&lt;code&gt;pg_catcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pre_prepare&#34;&gt;&lt;code&gt;pre_prepare&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgcozy&#34;&gt;&lt;code&gt;pgcozy&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_orphaned&#34;&gt;&lt;code&gt;pg_orphaned&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_crash&#34;&gt;&lt;code&gt;pg_crash&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_cheat_funcs&#34;&gt;&lt;code&gt;pg_cheat_funcs&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_savior&#34;&gt;&lt;code&gt;pg_savior&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/table_log&#34;&gt;&lt;code&gt;table_log&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_fio&#34;&gt;&lt;code&gt;pg_fio&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgpool_adm&#34;&gt;&lt;code&gt;pgpool_adm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgpool_recovery&#34;&gt;&lt;code&gt;pgpool_recovery&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgpool_regclass&#34;&gt;&lt;code&gt;pgpool_regclass&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgagent&#34;&gt;&lt;code&gt;pgagent&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/vacuumlo&#34;&gt;&lt;code&gt;vacuumlo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_prewarm&#34;&gt;&lt;code&gt;pg_prewarm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/oid2name&#34;&gt;&lt;code&gt;oid2name&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/lo&#34;&gt;&lt;code&gt;lo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/basic_archive&#34;&gt;&lt;code&gt;basic_archive&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/basebackup_to_shell&#34;&gt;&lt;code&gt;basebackup_to_shell&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/old_snapshot&#34;&gt;&lt;code&gt;old_snapshot&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/adminpack&#34;&gt;&lt;code&gt;adminpack&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/amcheck&#34;&gt;&lt;code&gt;amcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_surgery&#34;&gt;&lt;code&gt;pg_surgery&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/stat&#34;&gt;&lt;strong&gt;STAT&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/pg_profile&#34;&gt;&lt;code&gt;pg_profile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_show_plans&#34;&gt;&lt;code&gt;pg_show_plans&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_stat_kcache&#34;&gt;&lt;code&gt;pg_stat_kcache&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_stat_monitor&#34;&gt;&lt;code&gt;pg_stat_monitor&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_qualstats&#34;&gt;&lt;code&gt;pg_qualstats&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_store_plans&#34;&gt;&lt;code&gt;pg_store_plans&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_track_settings&#34;&gt;&lt;code&gt;pg_track_settings&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_wait_sampling&#34;&gt;&lt;code&gt;pg_wait_sampling&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/system_stats&#34;&gt;&lt;code&gt;system_stats&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/meta&#34;&gt;&lt;code&gt;meta&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgnodemx&#34;&gt;&lt;code&gt;pgnodemx&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_proctab&#34;&gt;&lt;code&gt;pg_proctab&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_sqlog&#34;&gt;&lt;code&gt;pg_sqlog&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/bgw_replstatus&#34;&gt;&lt;code&gt;bgw_replstatus&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgmeminfo&#34;&gt;&lt;code&gt;pgmeminfo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/toastinfo&#34;&gt;&lt;code&gt;toastinfo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/explain_ui&#34;&gt;&lt;code&gt;explain_ui&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_relusage&#34;&gt;&lt;code&gt;pg_relusage&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_top&#34;&gt;&lt;code&gt;pg_top&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pagevis&#34;&gt;&lt;code&gt;pagevis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/powa&#34;&gt;&lt;code&gt;powa&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pageinspect&#34;&gt;&lt;code&gt;pageinspect&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgrowlocks&#34;&gt;&lt;code&gt;pgrowlocks&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/sslinfo&#34;&gt;&lt;code&gt;sslinfo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_buffercache&#34;&gt;&lt;code&gt;pg_buffercache&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_walinspect&#34;&gt;&lt;code&gt;pg_walinspect&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_freespacemap&#34;&gt;&lt;code&gt;pg_freespacemap&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_visibility&#34;&gt;&lt;code&gt;pg_visibility&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgstattuple&#34;&gt;&lt;code&gt;pgstattuple&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/auto_explain&#34;&gt;&lt;code&gt;auto_explain&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_stat_statements&#34;&gt;&lt;code&gt;pg_stat_statements&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/sec&#34;&gt;&lt;strong&gt;SEC&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/passwordcheck_cracklib&#34;&gt;&lt;code&gt;passwordcheck_cracklib&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/supautils&#34;&gt;&lt;code&gt;supautils&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgsodium&#34;&gt;&lt;code&gt;pgsodium&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/supabase_vault&#34;&gt;&lt;code&gt;supabase_vault&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_session_jwt&#34;&gt;&lt;code&gt;pg_session_jwt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/anon&#34;&gt;&lt;code&gt;anon&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_tde&#34;&gt;&lt;code&gt;pg_tde&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgsmcrypto&#34;&gt;&lt;code&gt;pgsmcrypto&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgaudit&#34;&gt;&lt;code&gt;pgaudit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgauditlogtofile&#34;&gt;&lt;code&gt;pgauditlogtofile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_auth_mon&#34;&gt;&lt;code&gt;pg_auth_mon&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/credcheck&#34;&gt;&lt;code&gt;credcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgcryptokey&#34;&gt;&lt;code&gt;pgcryptokey&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_jobmon&#34;&gt;&lt;code&gt;pg_jobmon&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/logerrors&#34;&gt;&lt;code&gt;logerrors&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/login_hook&#34;&gt;&lt;code&gt;login_hook&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/set_user&#34;&gt;&lt;code&gt;set_user&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_snakeoil&#34;&gt;&lt;code&gt;pg_snakeoil&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgextwlist&#34;&gt;&lt;code&gt;pgextwlist&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_auditor&#34;&gt;&lt;code&gt;pg_auditor&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/sslutils&#34;&gt;&lt;code&gt;sslutils&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/noset&#34;&gt;&lt;code&gt;noset&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/sepgsql&#34;&gt;&lt;code&gt;sepgsql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/auth_delay&#34;&gt;&lt;code&gt;auth_delay&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgcrypto&#34;&gt;&lt;code&gt;pgcrypto&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/passwordcheck&#34;&gt;&lt;code&gt;passwordcheck&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/fdw&#34;&gt;&lt;strong&gt;FDW&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/wrappers&#34;&gt;&lt;code&gt;wrappers&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/multicorn&#34;&gt;&lt;code&gt;multicorn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/odbc_fdw&#34;&gt;&lt;code&gt;odbc_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/jdbc_fdw&#34;&gt;&lt;code&gt;jdbc_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/mysql_fdw&#34;&gt;&lt;code&gt;mysql_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/oracle_fdw&#34;&gt;&lt;code&gt;oracle_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/tds_fdw&#34;&gt;&lt;code&gt;tds_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/db2_fdw&#34;&gt;&lt;code&gt;db2_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/sqlite_fdw&#34;&gt;&lt;code&gt;sqlite_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgbouncer_fdw&#34;&gt;&lt;code&gt;pgbouncer_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/mongo_fdw&#34;&gt;&lt;code&gt;mongo_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/redis_fdw&#34;&gt;&lt;code&gt;redis_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/redis&#34;&gt;&lt;code&gt;redis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/kafka_fdw&#34;&gt;&lt;code&gt;kafka_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hdfs_fdw&#34;&gt;&lt;code&gt;hdfs_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/firebird_fdw&#34;&gt;&lt;code&gt;firebird_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/aws_s3&#34;&gt;&lt;code&gt;aws_s3&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/log_fdw&#34;&gt;&lt;code&gt;log_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/dblink&#34;&gt;&lt;code&gt;dblink&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/file_fdw&#34;&gt;&lt;code&gt;file_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/postgres_fdw&#34;&gt;&lt;code&gt;postgres_fdw&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/sim&#34;&gt;&lt;strong&gt;SIM&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/orafce&#34;&gt;&lt;code&gt;orafce&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgtt&#34;&gt;&lt;code&gt;pgtt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/session_variable&#34;&gt;&lt;code&gt;session_variable&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_statement_rollback&#34;&gt;&lt;code&gt;pg_statement_rollback&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_dbms_metadata&#34;&gt;&lt;code&gt;pg_dbms_metadata&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_dbms_lock&#34;&gt;&lt;code&gt;pg_dbms_lock&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_dbms_job&#34;&gt;&lt;code&gt;pg_dbms_job&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/babelfishpg_common&#34;&gt;&lt;code&gt;babelfishpg_common&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/babelfishpg_tsql&#34;&gt;&lt;code&gt;babelfishpg_tsql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/babelfishpg_tds&#34;&gt;&lt;code&gt;babelfishpg_tds&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/babelfishpg_money&#34;&gt;&lt;code&gt;babelfishpg_money&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgmemcache&#34;&gt;&lt;code&gt;pgmemcache&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/etl&#34;&gt;&lt;strong&gt;ETL&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/pglogical&#34;&gt;&lt;code&gt;pglogical&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pglogical_origin&#34;&gt;&lt;code&gt;pglogical_origin&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pglogical_ticker&#34;&gt;&lt;code&gt;pglogical_ticker&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgl_ddl_deploy&#34;&gt;&lt;code&gt;pgl_ddl_deploy&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_failover_slots&#34;&gt;&lt;code&gt;pg_failover_slots&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/wal2json&#34;&gt;&lt;code&gt;wal2json&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/wal2mongo&#34;&gt;&lt;code&gt;wal2mongo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/decoderbufs&#34;&gt;&lt;code&gt;decoderbufs&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/decoder_raw&#34;&gt;&lt;code&gt;decoder_raw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/test_decoding&#34;&gt;&lt;code&gt;test_decoding&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/mimeo&#34;&gt;&lt;code&gt;mimeo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/repmgr&#34;&gt;&lt;code&gt;repmgr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_fact_loader&#34;&gt;&lt;code&gt;pg_fact_loader&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_bulkload&#34;&gt;&lt;code&gt;pg_bulkload&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一些感想与体会&#34;&gt;一些感想与体会&lt;/h2&gt;
&lt;p&gt;PG 每个大版本都会引入一些变动，因此维护一百多个扩展插件并不是一件轻松的事情。特别是一些扩展的作者都好几年没动静了，那还真就只能自己上。我自己修复了十几个扩展插件，提供了最新的 PG 大版本支持。能联系上作者的，我也提交了一堆 PR 或者 Issue，推动解决。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Vonng&#34;&gt;&lt;img src=&#34;github-contrib.png&#34; style=&#34;max-width: 800px; width: 100%; height: auto;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在这个过程中，我和许多扩展作者都建立了联系。例如，我手把手帮助 ParadeDB 的老板与作者 &lt;a href=&#34;https://github.com/paradedb/paradedb/issues/1116&#34;&gt;解决了&lt;/a&gt; RPM / DEB 包打包与分发的问题。我说动了 duckdb_fdw 的作者使用一个单独的 libduckdb，并发布了 v1.0.0 ，我给一些PG扩展的作者发邮件/Issue，国产机器学习框架 PG4ML 的作者也找到了我希望能够通过这个渠道进行分发。&lt;/p&gt;
&lt;p&gt;再比如说，最近 PG 生态 OLAP 缝合 DuckDB 的竞赛如火如荼，但不管是ParadeDB 的 pg_analytics，国内个人开发者李红艳编写的 duckdb_fdw，CrunchyData 的 pg_parquet，MooncakeLab 的 pg_mooncake， Hydra 和 DuckDB 原厂 MotherDuck 亲自下场搞的 pg_duckdb ，都被我在第一时间编译打包收录整合其中，做到了 —— 你卷你的，反正我全都要。&lt;/p&gt;
&lt;p&gt;言归正传，&lt;strong&gt;我希望这个仓库能设立起 PostgreSQL 扩展安装分发的标准，解决让人头大的分发难题&lt;/strong&gt;。目前最让我感到高兴的进展是，流行的开源 PostgreSQL高可用集群搭建项目 &lt;a href=&#34;https://postgresql-cluster.org/&#34;&gt;&lt;code&gt;postgresql_cluster&lt;/code&gt;&lt;/a&gt; 的作者 Vitaliy Kukharik 已经将这个仓库作为默认启用的仓库来安装 PostgreSQL 扩展。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://x.com/VKukharik/status/1853012121623155117&#34;&gt;&lt;img src=&#34;pg-clusters.png&#34; style=&#34;max-width: 800px; width: 100%; height: auto;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前这个仓库 (repo.pigsty.io) 托管在 Cloudflare 上，所以没有什么流量成本。国内有一个镜像站点 repo.pigsty.cc，方便墙内用户使用，每个有小几百块流量费，不是什么大问题。两个仓库加起来，过去一个月的下载流量大概 200GB ，考虑到扩展平均几十KB到几MB的大小，总下载量小几十万是有了。&lt;/p&gt;
&lt;p&gt;因为&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487240&amp;idx=1&amp;sn=ba535fd0c1026bc2482ea6ad1e1fb8bf&amp;chksm=fe4b3ad3c93cb3c50bfeaed64963cce25c49bee80364d3a8ca78b87d7c9f19fd4d79d3c62ddc&amp;scene=21#wechat_redirect&#34;&gt;赛博菩萨 Cloudflare &lt;/a&gt;不收流量费，所以总的来说，我觉得做一个永久免费的声明与承诺并不困难，所以 So be it。我承诺这个仓库将持续维护并永久免费。如果有国内开源软件站点的朋友愿意赞助或提供镜像服务，欢迎联系我。&lt;/p&gt;
&lt;p&gt;我相信我的工作可以帮助到全球PG用户，并对 PostgreSQL 生态的繁荣贡献一份力量。我也希望我的工作可以帮到您，&lt;strong&gt;Enjoy PostgreSQL&lt;/strong&gt;！&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: PostgreSQL正在吞噬数据库世界</title>
      <link>/zh/blog/pg/pg-eat-db-world/</link>
      <pubDate>Mon, 04 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/pg-eat-db-world/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/pg-eat-db-world/featured_huad6106095fcb5f74fa6d6f432197f3af_1011164_640x0_resize_catmullrom_3.png" width="640" height="357"/>]]>
        
        &lt;p&gt;PostgreSQL 并不是一个简单的关系型数据库，而是一个数据管理的抽象框架，具有吞噬整个数据库世界的力量。而这也是正在发生的事情 —— “一切皆用 Postgres” 已经不再是少数精英团队的前沿探索，而是成为了一种进入主流视野的最佳实践。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;olap-领域迎来踢馆者&#34;&gt;OLAP 领域迎来踢馆者&lt;/h2&gt;
&lt;p&gt;在 2016 年的一次数据库沙龙里，我提出了一个观点： 现在 PostgreSQL 生态的一个主要遗憾是，缺少一个&lt;strong&gt;足够好&lt;/strong&gt;的列式存储分析插件来做 OLAP 分析。尽管PostgreSQL 本身提供了很强大的分析功能集，应付常规的分析任务绰绰有余。但在较大数据量下全量分析的&lt;strong&gt;性能&lt;/strong&gt;，相比专用的实时数仓仍然有些不够看。&lt;/p&gt;
&lt;p&gt;以分析领域的权威评测 &lt;a href=&#34;https://benchmark.clickhouse.com/&#34;&gt;&lt;strong&gt;ClickBench&lt;/strong&gt;&lt;/a&gt; 为例，我们在其中标注出了 PostgreSQL 与生态扩展插件以及兼容衍生数据库在其中的性能表现。原生未经过调优的 PostgreSQL 表现较为拉垮（&lt;strong&gt;x1050&lt;/strong&gt;），但经过调优后可以达到（&lt;strong&gt;x47&lt;/strong&gt;）；此外还有三个与分析有关系的扩展：列存 &lt;strong&gt;Hydra&lt;/strong&gt;（&lt;strong&gt;x42&lt;/strong&gt;），时序扩展 &lt;strong&gt;TimescaleDB&lt;/strong&gt;（&lt;strong&gt;x103&lt;/strong&gt;），以及分布式扩展 &lt;strong&gt;Citus&lt;/strong&gt;（&lt;strong&gt;x262&lt;/strong&gt;）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://benchmark.clickhouse.com/&#34;&gt;&lt;img alt=&#34;clickbench.png&#34; src=&#34;/zh/blog/pg/pg-eat-db-world/clickbench.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ClickBench c6a.4xlarge, 500gb gp2，Hot Run 执行相对耗时&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样的分析性能表现不能说烂，因为比起 MySQL，MariaDB 这样的纯 OLTP 数据库的辣眼表现（&lt;strong&gt;x3065,x19700&lt;/strong&gt;）确实好很多；但第三梯队的性能表现也绝对说不上足够好，与专注于 OLAP 的第一梯队组件：Umbra，ClickHouse，Databend，SelectDB（&lt;strong&gt;x3~x4&lt;/strong&gt;）相比，在分析性能上仍然有十几倍的性能差距。食之无味，弃之可惜。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;然而，&lt;/strong&gt; &lt;a href=&#34;/zh/blog/pg/paradedb/&#34;&gt;&lt;strong&gt;ParadeDB&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;和&lt;/strong&gt; &lt;a href=&#34;https://duckdb.org/&#34;&gt;&lt;strong&gt;DuckDB&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;的出现改变了这一点！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ParadeDB&lt;/strong&gt; 提供的 PG 原生扩展 &lt;strong&gt;pg_analytics&lt;/strong&gt; 实现了第二梯队（&lt;strong&gt;x10&lt;/strong&gt;）的性能水准，与第一梯队只有 3～4 倍的性能差距。相对于其他功能上的收益，这种程度的性能差距通常是可以接受的 —— ACID，新鲜性与实时性，无需 ETL、额外学习成本、维护独立的新服务，更别提它还提供了 ElasticSearch 质量的全文检索能力。&lt;/p&gt;
&lt;p&gt;而 &lt;strong&gt;DuckDB&lt;/strong&gt; 则专注于 OLAP ，将分析性能这件事做到了极致（&lt;strong&gt;x3.2&lt;/strong&gt;） —— 略过第一名 Umbra 这种学术研究型闭源数据库，DuckDB 也许是 OLAP 实战性能最快的数据库了。它并不是 PG 的扩展插件，但它是一个嵌入式文件数据库，而 &lt;a href=&#34;https://github.com/alitrack/duckdb_fdw&#34;&gt;&lt;strong&gt;DuckDB FDW&lt;/strong&gt;&lt;/a&gt; 以及 &lt;a href=&#34;https://github.com/hydradatabase/pg_quack&#34;&gt;&lt;strong&gt;pg_quack&lt;/strong&gt;&lt;/a&gt; 这样的 PG 生态项目，能让 PostgreSQL 充分利用 DuckDB 带来的完整分析性能红利！&lt;/p&gt;
&lt;p&gt;ParadeDB 与 DuckDB 的出现让 PostgreSQL 的分析性能来到了 OLAP 的第一梯队与金字塔尖，弥补了 PostgreSQL 在 OLAP 性能这最后一块关键短板。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;分久必合的数据库领域&#34;&gt;分久必合的数据库领域&lt;/h2&gt;
&lt;p&gt;数据库诞生伊始，并没有 OLTP 与 OLAP 的分野。OLAP 数据仓库从数据库中“独立”出来，已经是上世纪九十年代时候的事了 —— 因为传统的 OLTP 数据库难以支撑起分析场景下的查询模式，数据量与性能要求。&lt;/p&gt;
&lt;p&gt;在相当一段时间里，数据处理的最佳实践是使用 MySQL / PG 处理 OLTP 工作负载，并通过 ETL 将数据同步到专用的 OLAP 组件中去处理，比如 Greenplum, ClickHouse, Doris, Snowflake 等等。&lt;/p&gt;
&lt;figure class=&#34;card rounded p-2 td-post-card mb-4 mt-4&#34; style=&#34;max-width: 735px&#34;&gt;
&lt;img class=&#34;card-img-top&#34; src=&#34;/zh/blog/pg/pg-eat-db-world/ddia_hu04f70ed29e59e1b4862c5f1df5de3cec_998548_768x512_fit_catmullrom_3.png&#34; width=&#34;725&#34; height=&#34;512&#34;&gt;
&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;设计数据密集型应用，Martin Kleppmann，&lt;a href=&#34;http://ddia.vonng.com/#/ch3&#34;&gt;第三章&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;与许多 “专用数据库” 一样，专业的 OLAP 组件的优势往往在于&lt;strong&gt;性能&lt;/strong&gt; —— 相比原生 PG 、MySQL 上有 1～3 个数量级的提升；而代价则是数据冗余、 大量不必要的数据搬运工作、分布式组件之间缺乏一致性、额外的专业技能带来的复杂度成本、学习成本、以及人力成本、 额外的软件许可费用、极其有限的查询语言能力、可编程性、可扩展性、有限的工具链、以及与OLTP 数据库相比更差的数据完整性和可用性 —— &lt;strong&gt;但这是一个合理的利弊权衡&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;然而天下大势，&lt;strong&gt;分久必合，合久必分&lt;/strong&gt;。&lt;a href=&#34;/zh/blog/cloud/bonus&#34;&gt;硬件遵循摩尔定律又发展了三十年&lt;/a&gt;，性能翻了几个数量级，成本下降了几个数量级。在 2024 年的当下，x86 单机可以达到几百核 (512 vCPU &lt;a href=&#34;https://www.amd.com/zh-hans/products/cpu/amd-epyc-9754&#34;&gt;EPYC 9754&lt;/a&gt;x2)，几个TB的内存，单卡 NVMe SSD 可达 64TB，全闪单机柜 2PB ；S3 这样对象存储更是能实现几乎没有上限的存储。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;io-bandwidth.png&#34; src=&#34;/zh/blog/pg/pg-eat-db-world/io-bandwidth.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;硬件的发展解决了数据量的问题，而数据库软件的发展（PostgreSQL，ParadeDB，DuckDB）解决了查询模式的问题，而这导致分析领域 —— 所谓的“大数据” 行业基本工作假设面临挑战。&lt;/p&gt;
&lt;p&gt;正如 DuckDB 发表的宣言《&lt;a href=&#34;https://mp.weixin.qq.com/s/gk3BOirM6uCTQ1HFTQz3ew&#34;&gt;&lt;strong&gt;大数据已死&lt;/strong&gt;&lt;/a&gt;》所主张的：&lt;strong&gt;大数据时代已经结束了&lt;/strong&gt; —— 大多数人并没有那么多的数据，大多数数据也很少被查询。大数据的前沿随着软硬件发展不断后退，99% 的场景已经不再需要所谓“大数据”了。&lt;/p&gt;
&lt;p&gt;如果 99% 的场景甚至都可以放在一台计算机上用单机/主从的 DuckDB 或 PostgreSQL 搞定，那么使用专用的分析组件还有多少意义？如果每台手机都可以自由自主收发短信，那么 BP 机还有什么存在价值？（北美医院还在用BP机，正好比也还有 1% 不到的场景也许真的需要“大数据”）&lt;/p&gt;
&lt;p&gt;基本工作假设的变化，将重新推动数据库世界从百花齐放的“合久必分”阶段，走向“分久必合”的阶段，从大爆发到大灭绝，大浪淘沙中，新的大一统超融合数据库将会出现，重新统一 OLTP 与 OLAP。而承担重新整合数据库领域这一使命的会是谁？&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;吞食天地的-postgresql&#34;&gt;吞食天地的 PostgreSQL&lt;/h2&gt;
&lt;p&gt;数据库领域有许多“细分领域”：时序数据库，地理空间数据库，文档数据库，搜索数据库，图数据库，向量数据库，消息队列，对象数据库。而 PostgreSQL 在任何一个领域都不会缺席。&lt;/p&gt;
&lt;p&gt;一个 PostGIS 插件，成为了地理空间事实标准；一个 TimescaleDB 扩展，让一堆“通用”时序数据库尴尬的说不出话来；一个向量扩展 &lt;a href=&#34;/zh/blog/dev/llm-and-pgvector&#34;&gt;&lt;strong&gt;PGVector&lt;/strong&gt;&lt;/a&gt; 插件，更是让整个 &lt;a href=&#34;/zh/blog/db/svdb-is-dead&#34;&gt;&lt;strong&gt;专用向量数据库细分领域&lt;/strong&gt;&lt;/a&gt; 变成笑话。&lt;/p&gt;
&lt;p&gt;同样的事情已经发生过很多次，而现在，我们将在拆分最早，地盘最大的一个子领域 OLAP 分析中再次见证这一点。但 PostgreSQL 要替代的可不仅仅是 OLAP 数仓，它的野望是整个数据库世界！&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/docs/reference/extension&#34;&gt;&lt;img alt=&#34;ecosystem.jpg&#34; src=&#34;/zh/blog/pg/pg-eat-db-world/ecosystem.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然 PostgreSQL 有何德何能，可当此大任？诚然 PostgreSQL 先进，但 Oracle 也先进；PostgreSQL 开源，但 MySQL 也开源。PostgreSQL &lt;strong&gt;先进且开源&lt;/strong&gt;，这是它与 Oracle / MySQL 竞争的底气，但要说其独一无二的特点，那还得是它的&lt;strong&gt;极致可扩展性，与繁荣的扩展生态&lt;/strong&gt;！&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.timescale.com/state-of-postgres/2022/&#34;&gt;&lt;img alt=&#34;survey.png&#34; src=&#34;/zh/blog/pg/pg-eat-db-world/survey.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TimescaleDB 2022 社区调研：用户&lt;a href=&#34;/zh/blog/pg/pg-is-best/&#34;&gt;选择 PostgreSQL 的原因&lt;/a&gt;：开源，先进，&lt;strong&gt;扩展&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PostgreSQL 并不是一个简单的关系型数据库，而是一个数据管理的抽象框架，&lt;strong&gt;具有囊括一切，吞噬整个数据库世界的力量&lt;/strong&gt;。而它的核心竞争力（除了开源与先进）来自&lt;strong&gt;可扩展性&lt;/strong&gt;，即基础设施的&lt;strong&gt;可复用性&lt;/strong&gt;与扩展插件的&lt;strong&gt;可组合性&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;极致可扩展性的魔法&#34;&gt;极致可扩展性的魔法&lt;/h3&gt;
&lt;p&gt;PostgreSQL 允许用户开发功能模块，复用数据库公共基础设施，以最低的成本交付功能。例如，仅有两千行代码的向量数据库扩展 pgvector 与百万行代码的 PostgreSQL 在复杂度上相比可以说微不足道，但正是这“微不足道”的扩展，实现了完整的向量数据类型与索引能力，干翻了几乎所有专用向量数据库。&lt;/p&gt;
&lt;p&gt;为什么？因为 PGVECTOR 作者不需要操心数据库的通用额外复杂度：事务 ACID，故障恢复，备份PITR，高可用，访问控制，监控，部署，三方生态工具，客户端驱动这些需要成百上千万行代码才能解决好的问题，只需要关注自己所需问题的本质复杂度即可。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/db/svdb-is-dead&#34;&gt;&lt;img src=&#34;/zh/blog/pg/pg-eat-db-world/vectordbs.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;向量数据库哪家强？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再比如，ElasticSearch 基于 Lucene 搜索库开发，而 Rust 生态有一个改进版的下一代 Tantivy 全文搜索库作为 Lucene 的替代；而 ParadeDB 只需要将其封装对接到 PostgreSQL 的接口上，即可提供比肩 ElasticSearch 的搜索服务。更重要的是，它可以站在 PostgreSQL 巨人的肩膀上，借用 PG 生态的全部合力（例如，与 PG Vector 做混合检索），不讲武德地用数据库全能王的力量，去与一个专用数据库单品来对比。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/docs/reference/extension/&#34;&gt;&lt;img alt=&#34;img&#34; src=&#34;/img/pigsty/extension.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pigsty 中提供了 &lt;a href=&#34;/zh/docs/reference/extension/&#34;&gt;&lt;strong&gt;255&lt;/strong&gt;&lt;/a&gt; 个可用扩展插件，在生态中还有 1000+ 扩展&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;可扩展性带来的另一点巨大优势是扩展的&lt;strong&gt;可组合性&lt;/strong&gt;，让不同扩展相互合作，产生出 1+1 &amp;raquo; 2 的协同效应。例如，TimescaleDB 可以与 PostGIS 组合使用，提供时空数据支持；再比如，提供全文检索能力的 BM25 扩展可以和提供语义模糊检索的 PGVector 扩展组合使用，提供混合检索能力。&lt;/p&gt;
&lt;p&gt;再比如，&lt;strong&gt;分布式&lt;/strong&gt;扩展 Citus 可以将单机主从数据库集群，原地升级改造为透明水平分片的分布式数据库集群。而这个能力是可以与其他功能正交组合的，因此，PostGIS 可以成为分布式地理数据库，PGVector 可以成为分布式向量数据库，ParadeDB 可以成为分布式全文搜索数据库，诸如此类。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;更强大的地方在于，扩展插件是&lt;strong&gt;独立演进&lt;/strong&gt;的，不需要繁琐的主干合并，联调协作。因此可以 Scale  —— PG 的可扩展性允许无数个团队并行探索数据库前研发展方向，而扩展全部都是的可选的，不会影响主干核心能力的稳定性。那些非常强大成熟的特性，则有机会以稳定的形态进入主干中。&lt;/p&gt;
&lt;p&gt;通过极致可扩展性的魔法，PostgreSQL 做到了**守正出奇，实现了主干极致稳定性与功能敏捷性的统一。**扎实的基本盘配上惊人的演进速度，让它成为了数据库世界中的一个异数，改变了数据库世界的游戏规则。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;改变游戏规则的玩家&#34;&gt;改变游戏规则的玩家&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;PostgreSQL 的出现，改变了数据库领域的游戏规则&lt;/strong&gt;：任何试图开发“新数据库内核”的团队，都需要经过这道试炼与考验 —— 相比开源免费、功能齐备的 Postgres，价值点在哪里？&lt;/p&gt;
&lt;p&gt;至少到硬件出现革命性突破前，实用的通用数据库新内核都不太可能诞生了，因为任何单一数据库都无法与所有扩展加持下的 PG 在&lt;strong&gt;整体实力&lt;/strong&gt;上相抗衡 —— 包括 Oracle，因为 PG 还有开源免费的必杀技。&lt;/p&gt;
&lt;p&gt;而某个细分领域的数据库产品，如果能在单点属性（通常是性能）上相比 PostgreSQL 实现超过一个数量级的优势，那也许还有一个专用数据库的生态位存在。但通常用不了多久，便会有 PostgreSQL 生态的开源替代扩展插件滚滚而来。因为选择开发 PG 扩展，而不是一个完整数据库的团队会在追赶复刻速度上有碾压性优势！&lt;/p&gt;
&lt;p&gt;因此，如果按照这样的逻辑展开，PostgreSQL 生态的雪球只会越滚越大，随着优势的积累，不可避免地进入一家独大的状态。在几年的时间内，实现 Linux 内核在服务器操作系统领域的状态。而各种开发者调研报告，数据库流行趋势都在印证着这一点。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://survey.stackoverflow.co/2023/#section-most-popular-technologies-databases&#34;&gt;&lt;img alt=&#34;sf-survey.png&#34; src=&#34;/zh/blog/pg/pg-eat-db-world/sf-survey.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://survey.stackoverflow.co/2023/#section-most-popular-technologies-databases&#34;&gt;&lt;strong&gt;StackOverflow 2023 调研结果，PostgreSQL 三项全能王&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://demo.pigsty.cc/d/sf-survey&#34;&gt;&lt;img alt=&#34;sf-trend.jpg&#34; src=&#34;/zh/blog/pg/pg-eat-db-world/sf-trend.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://demo.pigsty.cc/d/sf-survey&#34;&gt;&lt;strong&gt;StackOverflow过去7年的数据库指标走势&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在引领潮流的 HackerNews StackOverflow 上，PostgreSQL 早已成为了最受欢迎的数据库。许多新的开源项目都默认使用 PostgreSQL 作为首要，甚至唯一的数据库 —— 例如，给各种数据库做模式管理的 Bytebase。《&lt;a href=&#34;https://mp.weixin.qq.com/s/HeIGQC6JsE9ZXqJtFjiczA&#34;&gt;云时代数据库DevOps：硅谷调研&lt;/a&gt;》也提出，许多新一代互联网公司都开始积极拥抱并 All in PostgreSQL。&lt;/p&gt;
&lt;p&gt;正如《&lt;a href=&#34;/zh/blog/pg/just-use-pg/&#34;&gt;&lt;strong&gt;技术极简主义：一切皆用 Postgres&lt;/strong&gt;&lt;/a&gt; 》所言：简化技术栈、减少组件、加快开发速度、降低风险并提供更多功能特性的方法之一就是 &lt;strong&gt;“一切皆用 Postgres”&lt;/strong&gt;。Postgres 能够取代许多后端技术，包括 MySQL，Kafka、RabbitMQ、ElasticSearch，Mongo和 Redis，至少到数百万用户时都毫无问题。&lt;strong&gt;一切皆用 Postgres&lt;/strong&gt; ，已经不再是少数精英团队的前沿探索，而是成为了一种进入主流视野的最佳实践。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;还有什么可以做的&#34;&gt;还有什么可以做的？&lt;/h2&gt;
&lt;p&gt;我们已经不难预见到数据库领域的终局。但我们又能做什么，又应该做什么呢？&lt;/p&gt;
&lt;p&gt;PostgreSQL 对于绝大多数场景都已经是一个足够完美的数据库内核了，在这个前提下，数据库内核&lt;a href=&#34;/zh/blog/db/db-choke/&#34;&gt;卡脖子纯属无稽之谈&lt;/a&gt;。这些Fork PostgreSQL 和 MySQL 并以内核魔改作为卖点的所谓“&lt;a href=&#34;/zh/blog/db/db-choke/&#34;&gt;数据库&lt;/a&gt;”基本没啥出息。&lt;/p&gt;
&lt;p&gt;这好比今天我们看 Linux 操作系统内核一样，尽管市面上有这么多的 Linux 操作系统发行版，但大家都选择使用同样的 Linux 内核，吃饱了撑着魔改内核属于没有困难创造困难也要上，会被业界当成山炮看待。&lt;/p&gt;
&lt;p&gt;同理，数据库内核本身已经不再是主要矛盾，焦点将会集中到两个方向上 —— 数据库&lt;strong&gt;扩展&lt;/strong&gt;与数据库&lt;strong&gt;服务&lt;/strong&gt;！前者体现为数据库内部的可扩展性， 后者体现为数据库外部的可组合性。而竞争的形式，正如操作系统生态一样 —— 集中于&lt;strong&gt;数据库发行版&lt;/strong&gt;上。对于数据库领域来说，只有那些以扩展和服务作为核心价值主张的发行版，才有最终成功的可能。&lt;/p&gt;
&lt;p&gt;做内核的厂商不温不火，MariaDB 作为 MySQL 的亲爹 Fork 甚至都已经濒临退市，而白嫖内核自己做服务与扩展卖 RDS 的 AWS 可以赚的钵满盆翻。投资机构已经出手了许多 PG 生态的扩展插件与服务发行版：Citus，TimescaleDB，Hydra，PostgresML，ParadeDB，FerretDB，StackGres，Aiven，Neon，Supabase，Tembo，PostgresAI，以及我们正在做的 Pigsty 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/pigsty/players.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;PostgreSQL 生态中的一个困境就是，许多扩展插件，生态工具都是独立演进，各自为战的，没有一个整合者能将他们凝聚起来形成合力。例如，提供分析的 Hydra 会打一个包一个 Docker 镜像， PostgresML 也会打自己的包和镜像，各家只发行加装了自己扩展的 Postgres 镜像。而这些朴素的镜像与包也距离 RDS 这样完整的数据库服务相距甚远。&lt;/p&gt;
&lt;p&gt;即使是类似于 AWS RDS 这样的服务提供商与生态整合者，在诸多扩展面前也依然力有所不逮，只能提供其中的少数。更多的强力扩展出于各种原因（AGPLv3 协议，多租户租赁带来的安全挑战）而无法使用。从而难以发挥 PostgreSQL 生态扩展的协同增幅作用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里列出了一些重要扩展，对比基于最新的 PostgreSQL 16 主干版本进行，截止至 2024-02-28&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;扩展类目&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&#34;/zh/docs/reference/extension&#34;&gt;&lt;strong&gt;Pigsty RDS&lt;/strong&gt;&lt;/a&gt; / PGDG 官方仓库&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://help.aliyun.com/zh/rds/apsaradb-rds-for-postgresql/extensions-supported-by-apsaradb-rds-for-postgresql&#34;&gt;&lt;strong&gt;阿里云 RDS&lt;/strong&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://docs.aws.amazon.com/AmazonRDS/latest/PostgreSQLReleaseNotes/postgresql-extensions.html&#34;&gt;&lt;strong&gt;AWS RDS PG&lt;/strong&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;加装扩展&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; 自由加装&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt; 不允许&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt; 不允许&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;地理空间&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; PostGIS 3.4.2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; PostGIS 3.3.4 / Ganos 6.1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; PostGIS 3.4.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;雷达点云&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; PG PointCloud 1.2.5&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; Ganos PointCloud 6.1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;向量嵌入&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; PGVector 0.6.1 / Svector 0.5.6&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-triangle-exclamation text-secondary&#34;&gt;&lt;/i&gt; pase 0.0.1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; PGVector 0.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;机器学习&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; PostgresML 2.8.1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;时序扩展&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; TimescaleDB 2.14.2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;水平分布式&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; Citus 12.1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;列存扩展&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; Hydra 1.1.1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;全文检索&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; pg_bm25 0.5.6&lt;br /&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;图数据库&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; Apache AGE 1.5.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GraphQL&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; PG GraphQL 1.5.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OLAP&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; pg_analytics 0.5.6&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;消息队列&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; pgq 3.5.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DuckDB&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; duckdb_fdw 1.1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;模糊分词&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; zhparser 1.1 / pg_bigm 1.2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; zhparser 1.0 / pg_jieba&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; pg_bigm 1.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CDC抽取&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; wal2json 2.5.3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; wal2json 2.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;膨胀治理&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; pg_repack 1.5.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; pg_repack 1.4.8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-success&#34;&gt;&lt;/i&gt; pg_repack 1.5.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;许多关键扩展在RDS中并不可用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;扩展是 PostgreSQL 的灵魂，无法自由使用扩展的 Postgres 就像做菜不放盐。只能和 MySQL 放在同一个 RDS 的框子里同台，龙游浅水，虎落平阳。&lt;/p&gt;
&lt;p&gt;而这正是我们想要解决的首要问题之一。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;知行合一的实践pigsty&#34;&gt;知行合一的实践：Pigsty&lt;/h2&gt;
&lt;p&gt;虽然接触 MySQL 和 MSSQL 要早得多，但我在 2015 年第一次上手 PostgreSQL 时，就相信它会是数据库领域的未来了。快十年过去，我也从 PG 的使用者，管理者，变为了贡献者，开发者。也不断见证着 PG 走向这一目标。&lt;/p&gt;
&lt;p&gt;在与形形色色的用户沟通交流中，我早已发现数据库领域的木桶短板不是内核 —— 现有的 PostgreSQL 已经足够好了，而是&lt;strong&gt;用好数据库内核本身的能力&lt;/strong&gt;，这也是 RDS 这样的服务赚的钵满盆翻的原因。&lt;/p&gt;
&lt;p&gt;但我希望这样的能力，应该像自由软件运动所倡导的理念那样，像 PostgreSQL 内核本身一样 —— 普及到每一个用户手中，而不是必须向赛博空间上的封建云领主花大价钱租赁。&lt;/p&gt;
&lt;p&gt;所以我打造了 &lt;strong&gt;&lt;a href=&#34;https://pigsty.io&#34;&gt;Pigsty&lt;/a&gt;&lt;/strong&gt; —— 一个开箱即用的开源 PostgreSQL 数据库发行版，旨在凝聚 PostgreSQL 生态扩展的合力，并把提供优质数据库服务的能力普及到每个用户手中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/pigsty/banner.en.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pigsty 是 &lt;strong&gt;P&lt;/strong&gt;ostgreSQL &lt;strong&gt;i&lt;/strong&gt;n &lt;strong&gt;G&lt;/strong&gt;reat &lt;strong&gt;STY&lt;/strong&gt;le 的缩写，意为 &lt;strong&gt;PostgreSQL 的全盛状态&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们提出了六点核心价值主张，对应 PostgreSQL 数据库服务中的的六个核心问题：&lt;strong&gt;Postgres 的可扩展性&lt;/strong&gt;，&lt;strong&gt;基础设施的可靠性&lt;/strong&gt;，&lt;strong&gt;图形化的可观测性&lt;/strong&gt;，&lt;strong&gt;服务的可用性&lt;/strong&gt;，&lt;strong&gt;工具的可维护性&lt;/strong&gt;，以及&lt;strong&gt;扩展模块和三方组件可组合性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;Pigsty 六点价值主张的首字母合起来，则为 Pigsty 提供了另外一种缩写解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;P&lt;/strong&gt;ostgres, &lt;strong&gt;I&lt;/strong&gt;nfras, &lt;strong&gt;G&lt;/strong&gt;raphics, &lt;strong&gt;S&lt;/strong&gt;ervice, &lt;strong&gt;T&lt;/strong&gt;oolbox, &lt;strong&gt;Y&lt;/strong&gt;ours.&lt;/p&gt;
&lt;p&gt;属于你的图形化 Postgres 基础设施服务工具箱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;/img/pigsty/homepage.zh.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可扩展的 PostgreSQL&lt;/strong&gt; 是这个发行版中最重要的价值主张。在刚刚发布的 &lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487025&amp;idx=1&amp;sn=c32f102718e3e9cf55cdefa7133f259f&amp;chksm=fe4b3beac93cb2fc25c2c2c4f9ea74d4353e565ef90c5e2bbaf5881a3a031cbdff706971af9a&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;Pigsty v2.6&lt;/strong&gt;&lt;/a&gt; 中，我们整合了上面提到的 DuckdbFDW 与 ParadeDB 扩展，这两个插件让 PostgreSQL 的分析能力得到史诗级增强，而我们确保每个用户都能轻松用得上这样的能力。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;regards.png&#34; src=&#34;/zh/blog/pg/pg-eat-db-world/regards.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;来自 ParadeDB 创始人与 DuckdbFDW 作者的感谢致意&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们希望整合 PostgreSQL 生态里的各种力量，并将其凝聚在一起形成合力，打造一个数据库世界中的 &lt;strong&gt;Ubuntu&lt;/strong&gt; 发行版。而我相信，内核之争早已尘埃落定，而这里才会是数据库世界的未来竞争焦点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://postgis.net/&#34;&gt;&lt;strong&gt;PostGIS&lt;/strong&gt;&lt;/a&gt;：提供地理空间数据类型与索引支持，GIS 事实标准 （&amp;amp; &lt;a href=&#34;https://pgpointcloud.github.io/pointcloud/&#34;&gt;&lt;strong&gt;pgPointCloud&lt;/strong&gt;&lt;/a&gt; 点云，&lt;a href=&#34;https://pgrouting.org/&#34;&gt;&lt;strong&gt;pgRouting&lt;/strong&gt;&lt;/a&gt; 寻路）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.timescale.com/&#34;&gt;&lt;strong&gt;TimescaleDB&lt;/strong&gt;&lt;/a&gt;：添加时间序列/持续聚合/分布式/列存储/自动压缩的能力&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pgvector/pgvector&#34;&gt;&lt;strong&gt;PGVector&lt;/strong&gt;&lt;/a&gt;：添加 AI 向量/嵌入数据类型支持，以及 ivfflat 与 hnsw 向量索引。（&amp;amp; &lt;a href=&#34;https://github.com/paradedb/paradedb/tree/dev/pg_sparse&#34;&gt;&lt;strong&gt;pg_sparse&lt;/strong&gt;&lt;/a&gt; 稀疏向量支持）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.citusdata.com/&#34;&gt;&lt;strong&gt;Citus&lt;/strong&gt;&lt;/a&gt;：将经典的主从PG集群原地改造为水平分片的分布式数据库集群。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hydra.so/&#34;&gt;&lt;strong&gt;Hydra&lt;/strong&gt;&lt;/a&gt;：添加列式存储与分析能力，提供比肩 ClickHouse 的强力分析能力。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.paradedb.com/&#34;&gt;&lt;strong&gt;ParadeDB&lt;/strong&gt;&lt;/a&gt;：添加 ElasticSearch 水准的全文搜索能力与混合检索的能力。（&amp;amp; &lt;a href=&#34;https://github.com/amutu/zhparser&#34;&gt;&lt;strong&gt;zhparser&lt;/strong&gt;&lt;/a&gt; 中文分词）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://age.apache.org/&#34;&gt;&lt;strong&gt;Apache AGE&lt;/strong&gt;&lt;/a&gt;：图数据库扩展，为 PostgreSQL 添加类 Neo4J 的 OpenCypher 查询支持，&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/supabase/pg_graphql&#34;&gt;&lt;strong&gt;PG GraphQL&lt;/strong&gt;&lt;/a&gt;：为 PostgreSQL 添加原生内建的 GraphQL 查询语言支持。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alitrack/duckdb_fdw&#34;&gt;&lt;strong&gt;DuckDB FDW&lt;/strong&gt;&lt;/a&gt;：允许您通过 PostgreSQL 直接读写强力的嵌入式分析数据库 &lt;a href=&#34;https://github.com/Vonng/pigsty/tree/master/app/duckdb&#34;&gt;&lt;strong&gt;DuckDB&lt;/strong&gt;&lt;/a&gt; 文件 （&amp;amp; DuckDB CLI 本体）。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/tree/master/app/supabase&#34;&gt;&lt;strong&gt;Supabase&lt;/strong&gt;&lt;/a&gt;：基于 PostgreSQL 的开源的 Firebase 替代，提供完整的应用开发存储解决方案。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/tree/master/app/ferretdb&#34;&gt;&lt;strong&gt;FerretDB&lt;/strong&gt;&lt;/a&gt;：基于 PostgreSQL 的开源 MongoDB 替代，兼容 MongoDB API / 驱动协议。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/tree/master/app/pgml&#34;&gt;&lt;strong&gt;PostgresML&lt;/strong&gt;&lt;/a&gt;：使用SQL完成经典机器学习算法，调用、部署、训练 AI 模型。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Pigsty 支持的 180+ &lt;a href=&#34;/zh/docs/reference/extension/&#34;&gt;&lt;strong&gt;扩展列表&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;/img/pigsty/desc.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;开发者朋友们，你们的选择会塑造数据库世界的未来。希望我的这些工作，可以帮助你们更好的用好这世界上最先进的开源数据库内核 —— PostgreSQL。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@fengruohang/postgres-is-eating-the-database-world-157c204dcfc4&#34;&gt;Medium 英文版&lt;/a&gt; | &lt;a href=&#34;https://github.com/Vonng/pigsty&#34;&gt;GitHub 仓库: Pigsty&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;参考阅读&#34;&gt;参考阅读&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487025&amp;idx=1&amp;sn=c32f102718e3e9cf55cdefa7133f259f&amp;chksm=fe4b3beac93cb2fc25c2c2c4f9ea74d4353e565ef90c5e2bbaf5881a3a031cbdff706971af9a&amp;scene=21#wechat_redirect&#34;&gt;Pigsty v2.6：PostgreSQL 踢馆 OLAP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486931&amp;idx=1&amp;sn=91dbe43bb6d26c760c532f4aa8d6e3cb&amp;chksm=fe4b3808c93cb11e00194655a49bf7aa0d4d05a61a9b06ffcc57017c633de17066443ec62b6d&amp;scene=21#wechat_redirect&#34;&gt;技术极简主义：一切皆用Postgres&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486913&amp;idx=1&amp;sn=3b7d8cf3f0e323932aba52c897f3c7a4&amp;chksm=fe4b381ac93cb10cc6175c4c7978b5903946d369fe0084fbae5edf76ab08d84134260f28dffc&amp;scene=21#wechat_redirect&#34;&gt;PG生态新玩家ParadeDB&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486903&amp;idx=1&amp;sn=01c57499f41e8f51045bb8dd52586595&amp;chksm=fe4b386cc93cb17a2d2fad903e809107162cc1e67e8ad7c8bfdd51de657c97f32f912cabe550&amp;scene=21#wechat_redirect&#34;&gt;DBA会被云淘汰吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486832&amp;idx=1&amp;sn=6b6b5f03b77c8a607f43f323fdf9ee7d&amp;chksm=fe4b38abc93cb1bd84e3360b857016a9be3329c91d47c998fe73dc37d1f4b2c5571161fb0ff2&amp;scene=21#wechat_redirect&#34;&gt;令人惊叹的PostgreSQL可伸缩性&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486763&amp;idx=1&amp;sn=d05db7200faa6b23f61ca51328439833&amp;chksm=fe4b38f0c93cb1e6cebb4818d22555bbb94ed33f0a191b149383127c12ae3091add20a53f102&amp;scene=21#wechat_redirect&#34;&gt;中国对PostgreSQL的贡献约等于零吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486752&amp;idx=1&amp;sn=b10354a0cee5b0ccd88df606787e1297&amp;chksm=fe4b38fbc93cb1ed39b86882b596020ba3d2f5901bea530bf09cf2519e1ad248d1f93f648180&amp;scene=21#wechat_redirect&#34;&gt;展望PostgreSQL的2024 (Jonathan Katz)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486745&amp;idx=1&amp;sn=b92be029db148f53239c29bea912fc78&amp;chksm=fe4b38c2c93cb1d443ac8e6babe4d735f09404b6fac23c6045dd959f291bc28f13287571a189&amp;scene=21#wechat_redirect&#34;&gt;2023年度数据库：PostgreSQL (DB-Engine)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486710&amp;idx=1&amp;sn=261e4754df6c85954b50d8f68f277abe&amp;chksm=fe4b392dc93cb03bf26554a7a232f6217b8aa78d7e35ce0566d9404dc9526d3776141e628a2b&amp;scene=21#wechat_redirect&#34;&gt;MySQL的正确性为何如此拉垮？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486505&amp;idx=1&amp;sn=a585c9ff22a81a8efe6b87ce9bd66cb1&amp;chksm=fe4b39f2c93cb0e4c5d46f54e7ba9309dc0d66b5ac73bfe6722cc39f3959e47ae78210aeea1f&amp;scene=21#wechat_redirect&#34;&gt;向量数据库凉了吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486489&amp;idx=1&amp;sn=f2be1be496de46ac5ca816ac39cfdf24&amp;chksm=fe4b39c2c93cb0d4ff50dd6962370523a6271eab478fe9174c0c7a88fc88ea05fd3e51313ad3&amp;scene=21#wechat_redirect&#34;&gt;重新拿回计算机硬件的红利&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486379&amp;idx=1&amp;sn=b751c51a2b73e43e61487abfdc073da3&amp;chksm=fe4b3e70c93cb766625f9e18a92eabe31af437eb0fd7ed9d38b95750c743ce44934433c4dd66&amp;scene=21#wechat_redirect&#34;&gt;数据库真被卡脖子了吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486349&amp;idx=1&amp;sn=ade54570a726c0aee0d23444372bd6b9&amp;scene=21#wechat_redirect&#34;&gt;PG查询优化：观宏之道&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486241&amp;idx=1&amp;sn=f39b87095837b042e74f55f8e60bb7a9&amp;scene=21#wechat_redirect&#34;&gt;FerretDB：假扮成MongoDB的PostgreSQL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486234&amp;idx=1&amp;sn=d1273152e624fb31bf7be2c8f3991315&amp;scene=21#wechat_redirect&#34;&gt;如何用 pg_filedump 抢救数据？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486215&amp;idx=1&amp;sn=52ce37a537336a6d07448f35c7bc4cfd&amp;scene=21#wechat_redirect&#34;&gt;PGSQL x Pigsty: 数据库全能王来了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486135&amp;idx=1&amp;sn=7d9c4920e94efba5d0e0b6af467f596c&amp;scene=21#wechat_redirect&#34;&gt;Pigsty 特性与快速上手&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486101&amp;idx=1&amp;sn=30dfc9b11f4f812e699af2711f93931a&amp;scene=21#wechat_redirect&#34;&gt;PG先写脏页还是先写WAL？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485685&amp;idx=1&amp;sn=688f6d6d0f4128d7f77d710f04ff9024&amp;scene=21#wechat_redirect&#34;&gt;PostgreSQL：世界上最成功的数据库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485647&amp;idx=1&amp;sn=1ca65ee357516a06dca7ec13fa679f9a&amp;scene=21#wechat_redirect&#34;&gt;ISD数据集：分析全球120年气候变化&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485589&amp;idx=1&amp;sn=931f2d794e9b8486f623f746db9f00cd&amp;scene=21#wechat_redirect&#34;&gt;AI大模型与向量数据库 PGVECTOR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485518&amp;idx=1&amp;sn=3d5f3c753facc829b2300a15df50d237&amp;scene=21#wechat_redirect&#34;&gt;更好的开源RDS替代：Pigsty&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485240&amp;idx=1&amp;sn=9052f03ae2ef21d9e21037fd7a1fa7fe&amp;scene=21#wechat_redirect&#34;&gt;PostgreSQL 到底有多强？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485216&amp;idx=1&amp;sn=1b59c7dda5f347145c2f39d2679a274d&amp;scene=21#wechat_redirect&#34;&gt;为什么PostgreSQL是最成功的数据库？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247484979&amp;idx=1&amp;sn=6b7afac9905b3d07ed7c1d43f8a2e464&amp;scene=21#wechat_redirect&#34;&gt;PG与Pigsty用户需求问卷调研结果&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247484546&amp;idx=1&amp;sn=f89c7c3b87b24ee536bfc56b8b51c2d5&amp;scene=21#wechat_redirect&#34;&gt;高可用PgSQL集群架构设计与落地&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247484591&amp;idx=1&amp;sn=a6ab13d93bfa26fca969ba163b01e1d5&amp;scene=21#wechat_redirect&#34;&gt;为什么说PostgreSQL前途无量？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247484489&amp;idx=1&amp;sn=11163ce0afdb14af07619ae587fadb59&amp;scene=21#wechat_redirect&#34;&gt;Postgres本地化排序规则&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247484483&amp;idx=1&amp;sn=47469a6a57a497a551022b287bf1b31e&amp;scene=21#wechat_redirect&#34;&gt;PG复制标识详解（Replica Identity）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247484478&amp;idx=1&amp;sn=ea44675df79b60a12273e78b358bb557&amp;scene=21#wechat_redirect&#34;&gt;利用监控系统诊断PG慢查询&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247484195&amp;idx=1&amp;sn=cea57269d0ffec585547727170887441&amp;scene=21#wechat_redirect&#34;&gt;数据库集群管理概念与实体命名规范&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247484164&amp;idx=1&amp;sn=d69a31948d96507aca10a48587ea275c&amp;scene=21#wechat_redirect&#34;&gt;PostgreSQL的KPI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247484189&amp;idx=1&amp;sn=19d4381c7ec4bc4498bd56c5ee9f916b&amp;scene=21#wechat_redirect&#34;&gt;PostgreSQL监控系统Pigsty概述&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247483969&amp;idx=1&amp;sn=c5264dc6cd36d5696138bad085a72b37&amp;scene=21#wechat_redirect&#34;&gt;故障档案：PG安装扩展导致无法连接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247483964&amp;idx=1&amp;sn=b128086019256401b135ea0aa07b0c1c&amp;scene=21#wechat_redirect&#34;&gt;PostgreSQL中的表锁&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247483950&amp;idx=1&amp;sn=9c233f5e9a690706ae96ceabb938bff9&amp;scene=21#wechat_redirect&#34;&gt;把PG放入Docker是一个好主意吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247483915&amp;idx=1&amp;sn=1793258171169a5b4a75944302f1ae3a&amp;scene=21#wechat_redirect&#34;&gt;PostgreSQL监控系统概览&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247483863&amp;idx=1&amp;sn=4b6851c0db5d2862e8698219800e28a7&amp;scene=21#wechat_redirect&#34;&gt;pg_dump导致的血案&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247483850&amp;idx=1&amp;sn=b10652fc434e3f17f56bcdeaacc91974&amp;scene=21#wechat_redirect&#34;&gt;PostgreSQL数据页面损坏修复&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247483768&amp;idx=1&amp;sn=8a5005a95e874e6a13522cab0b5c1883&amp;scene=21#wechat_redirect&#34;&gt;PostgreSQL关系膨胀:原理，监控与处理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247483719&amp;idx=1&amp;sn=1a0a04fe974ea20026d378bd65cda57f&amp;scene=21#wechat_redirect&#34;&gt;探探PostgreSQL开发规约&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247483715&amp;idx=1&amp;sn=b17d3d8920a596c383745abd0dce0584&amp;scene=21#wechat_redirect&#34;&gt;并发异常那些事&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247483706&amp;idx=1&amp;sn=b842684b41ac6dde8310448ae0a81a76&amp;scene=21#wechat_redirect&#34;&gt;PG好处都有啥？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247483692&amp;idx=1&amp;sn=0cdb3609daf22fa2a5614d280da96b66&amp;scene=21#wechat_redirect&#34;&gt;IP归属地查询的高效实现&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247483688&amp;idx=1&amp;sn=0b08c7c47e28ceae77f89a78d38b029f&amp;scene=21#wechat_redirect&#34;&gt;PostGIS高效解决行政区划归属查询问题&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: PG生态新玩家：ParadeDB</title>
      <link>/zh/blog/pg/paradedb/</link>
      <pubDate>Sun, 18 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/paradedb/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/paradedb/featured_hu5dad383ddf0f5c5c1fffb938b806e995_1849_640x0_resize_catmullrom_3.png" width="640" height="337"/>]]>
        
        &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/bx2dRxlrtLcM6AD2qsplQQ&#34;&gt;微信公众号原文链接&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pg生态新玩家paradedb&#34;&gt;PG生态新玩家ParadeDB&lt;/h2&gt;
&lt;p&gt;YC S23 投了一个新项目 &lt;a href=&#34;https://www.paradedb.com/&#34;&gt;ParadeDB&lt;/a&gt;， 非常有意思。他们的 Slogan 是 “Postgres for Search &amp;amp; Analytics —— Modern Elasticsearch Alternative built on Postgres”。就是用于搜索和分析的 PostgreSQL，旨在成为 Elasticsearch 的替代。&lt;/p&gt;
&lt;p&gt;PostgreSQL 的生态确实越来越繁荣了，在基于 PG 的扩展与衍生中，我们已经有了基于 MongoDB 开源替代 —— FerretDB，SQL Server 开源替代 Babelfish，Firebase 开源替代 Supabase，AirTable 开源替代 NocoDB，现在又多了 ElasticSearch 开源替代 —— ParadeDB。&lt;/p&gt;
&lt;p&gt;ParadeDB 实际上是由三个 PostgreSQL 扩展组成：&lt;code&gt;pg_bm25&lt;/code&gt;，&lt;code&gt;pg_analytics&lt;/code&gt;，以及 &lt;code&gt;pg_sparse&lt;/code&gt;。这三个扩展都可以独立使用了。我已经将这几个扩展打好包（v0.5.6），并将会在 Pigsty 的下个 Release 中默认收录，让用户能够开箱即用。&lt;/p&gt;
&lt;p&gt;我翻译了 ParadeDB 的官网介绍与四篇博客文章，为您介绍这个 PostgreSQL 生态的新星。 今天是第一篇 —— 概览&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/paradedb/paradedb-rank.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;paradedb&#34;&gt;ParadeDB&lt;/h2&gt;
&lt;p&gt;我们荣幸地向您介绍 ParadeDB：针对搜索场景优化的 PostgreSQL 数据库。&lt;strong&gt;ParadeDB&lt;/strong&gt; 是第一个旨在成为 Elasticsearch 替代的 Postgres 数据库构建，被设计为可以在PG表上进行闪电般快速的全文检索、语义检索、以及混合检索。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/paradedb/paradedb-logo.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;paradedb解决什么问题&#34;&gt;ParadeDB解决什么问题？&lt;/h3&gt;
&lt;p&gt;对于许多组织而言，搜索依然是一个未解问题 —— 尽管有像 Elasticsearch 这样的巨头存在，但大多数与其打过交道的开发者都知道，运行、调优和管理 Elasticsearch 是多么痛苦的一件事。虽然也有其他的搜索引擎服务，但在现有数据库上粘连对接这些外部服务，会引入更多重建索引和数据复制的复杂难题与成本。&lt;/p&gt;
&lt;p&gt;那些追求统一权威数据源与搜索引擎的开发者转了 Postgres，PG 已经通过 &lt;code&gt;tsvector&lt;/code&gt; 提供了基本的全文检索能力，也通过 &lt;code&gt;pgvector&lt;/code&gt; 提供了向量语义检索能力。这些工具也许对于简单用例和中等大小的数据集来说很好使，但当表变大或查询变得复杂时就有些不够用了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;大表上的排序和关键词搜索非常缓慢&lt;/li&gt;
&lt;li&gt;不支持 BM25 计算&lt;/li&gt;
&lt;li&gt;没有混合检索支持，将向量搜索与全文搜索的技术&lt;/li&gt;
&lt;li&gt;没有实时搜索 — 数据必须手动重新索引或重新嵌入&lt;/li&gt;
&lt;li&gt;对复杂查询如分面或相关性调优的支持有限&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;到目前为止，我们已经目睹了许多工程团队用很勉强的方式在 Postgres 上叠加了一套 Elasticsearch，随即因为后者太过于臃肿、昂贵或复杂，而最终放弃。我们在想：如果 Postgres 本身就带有 ElasticSearch 水平的搜索会发生什么？那么开发者就不会有这种两难选择了 —— 统一使用 PostgreSQL 但搜索能力受限，还是使用事实源和搜索引擎两种独立的服务？&lt;/p&gt;
&lt;h3 id=&#34;paradedb适用于谁&#34;&gt;ParadeDB适用于谁？&lt;/h3&gt;
&lt;p&gt;Elasticsearch 拥有广泛的应用场景，但我们并不企图一蹴而就地覆盖所有场景——至少现阶段不是。我们更倾向于专注于一些核心场景 —— 专为那些希望在 PostgreSQL 上进行搜索的用户服务。对于以下情况，ParadeDB 会是您的理想选择：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;希望使用单一 Postgres 作为事实来源，厌恶在多个服务之间搬运复制数据。&lt;/li&gt;
&lt;li&gt;希望在不损害性能与可伸缩性的前提下，对存储在 Postgres 中的海量文档进行全文搜索。&lt;/li&gt;
&lt;li&gt;希望 ANN/相似度搜索与全文搜索相结合，从而获得更精准的语义匹配效果&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;paradedb产品介绍&#34;&gt;ParadeDB产品介绍&lt;/h3&gt;
&lt;p&gt;ParadeDB 是一个完全托管的 Postgres 数据库，具有在任何其他 Postgres 提供者中未发现的索引和搜索 Postgres 表的能力：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;BM25全文搜索&lt;/td&gt;
&lt;td&gt;支持布尔、模糊、提升和关键字查询的全文搜索。搜索结果使用 BM25 算法打分。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分面搜索&lt;/td&gt;
&lt;td&gt;Postgres 列可以定义为分面，以便轻松分桶和收集指标。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;混合搜索&lt;/td&gt;
&lt;td&gt;搜索结果可以打分，综合考虑语义相关性（向量搜索）与全文相关性（ BM25）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分布式搜索&lt;/td&gt;
&lt;td&gt;表可以进行分片，以便进行并行查询加速。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;生成式搜索&lt;/td&gt;
&lt;td&gt;Postgres 列可以输入到大型语言模型（LLMs）中，用于自动摘要、分类或文本生成。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;实时搜索&lt;/td&gt;
&lt;td&gt;文本索引和向量列自动与底层数据保持同步。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;与 AWS RDS 等托管服务不同，ParadeDB 是一个 PostgreSQL 扩展插件，不需要任何设置，可以与整个 PG 生态集成，并完全可定制。ParadeDB 是开源的（AGPLv3），并提供了一个简单的 Docker Compose 模板以满足需要自建/定制的开发者的需求。&lt;/p&gt;
&lt;h3 id=&#34;paradedb-的构建方式&#34;&gt;ParadeDB 的构建方式&lt;/h3&gt;
&lt;p&gt;ParadeDB 的核心是一个带有自定义扩展的标准 Postgres 数据库，这些扩展使用 Rust 编写，引入了增强的搜索能力。&lt;/p&gt;
&lt;p&gt;ParadeDB 的搜索引擎基于 Tantivy 构建，Tantivy 是受 Apache Lucene 启发的开源 Rust 搜索库。其索引作为原生的 PG 索引存储在PG中，从而避免了繁琐的数据复制/ETL工作，并同时可以确保事务 ACID。&lt;/p&gt;
&lt;p&gt;ParadeDB 为 Postgres 生态提供了一个新扩展：&lt;code&gt;pg_bm25&lt;/code&gt;。&lt;code&gt;pg_bm25&lt;/code&gt; 使用 BM25 评分算法在 Postgres 中实现了基于 Rust 的全文搜索。ParadeDB 会预装这个扩展插件。&lt;/p&gt;
&lt;h3 id=&#34;下一步是什么&#34;&gt;下一步是什么？&lt;/h3&gt;
&lt;p&gt;ParadeDB 的托管云版本目前处于 PrivateBeta 阶段。我们的目标是在 2024 年初推出一个自助服务的云平台。如果你想在此期间访问 PrivateBeta 版本，欢迎&lt;a href=&#34;https://paradedb.typeform.com/to/jHkLmIzx?typeform-source=www.paradedb.com&#34;&gt;加入我们的等待名单&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我们核心团队的重点是开发 ParadeDB 的开源版本，将在 2023 年冬季推出。&lt;/p&gt;
&lt;p&gt;我们 Build in Public，并很高兴能与整个社区分享 ParadeDB。欢迎关注我们，在未来的博文中我们会进一步详细介绍 ParadeDB 背后的有趣技术挑战。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: FerretDB：假扮成MongoDB的PG</title>
      <link>/zh/blog/pg/ferretdb/</link>
      <pubDate>Sun, 08 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/ferretdb/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/ferretdb/featured_hu1e4ff0222d0314d966cbf4927e40d805_371286_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="640"/>]]>
        
        &lt;p&gt;&lt;strong&gt;MongoDB&lt;/strong&gt; 曾经是一项令人惊叹的技术，让开发者能够抛开关系型数据库的“模式束缚”，快速构建应用程序。然而随着时间推移，MongoDB 放弃了它的开源本质，这使得许多开源项目和早期商业项目无法使用它。&lt;/p&gt;
&lt;p&gt;大多数 MongoDB 用户其实并不需要 MongoDB 提供的高级功能，但他们确实需要一个易于使用的&lt;strong&gt;开源&lt;/strong&gt;文档数据库解决方案。PostgreSQL 的 JSON 功能支持已经足够完善了：二进制存储 JSONB，GIN 任意字段索引 ，各种 JSON 处理函数，JSON PATH 和 JSON Schema，PG早已是一个功能完备，性能强大的文档数据库了。但是提供替代的功能，和&lt;strong&gt;直接仿真&lt;/strong&gt;还是不一样的。&lt;/p&gt;
&lt;p&gt;为了填补这个空白，&lt;strong&gt;FerretDB&lt;/strong&gt; 应运而生，旨在提供一个&lt;strong&gt;真正开源&lt;/strong&gt;的 &lt;strong&gt;MongoDB&lt;/strong&gt; 替代。这是一个非常有趣的项目，之前的名字叫 “&lt;strong&gt;MangoDB&lt;/strong&gt;”，因为有碰瓷 &amp;ldquo;&lt;strong&gt;MongoDB&lt;/strong&gt;&amp;rdquo; 的嫌疑（芒果DB vs 蒙古DB），所以在 1.0 版本改成了现在的名字 FerretDB。FerretDB 可以为使用 MongoDB 驱动的应用提供一个丝滑迁移到 PostgreSQL 的过渡方案。&lt;/p&gt;
&lt;p&gt;它的功能就是让 PostgreSQL 假扮成 MongoDB。它是一个为 PG 提供 MongoDB Wire Protocol 支持的协议转换中间件/Proxy。上次做过这种事的插件是 AWS 的 Babelfish，让 PostgreSQL 兼容 SQL Service 的线缆协议假扮成 Microsoft SQL Server。&lt;/p&gt;
&lt;p&gt;FerretDB 作为一个选装组件，对丰富 PostgreSQL 生态大有裨益。Pigsty 在 1.x 中就提供了基于 Docker 的 FerretDB 模板，在 v2.3 中更是提供了原生部署支持。目前，Pigsty 社区已经与 FerretDB 社区成为了合作伙伴，后续将进行深度的合作与适配支持。&lt;/p&gt;
&lt;p&gt;本文简单介绍了 FerretDB 的安装、部署与使用。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;p&gt;在部署 Mongo (FerretDB) 集群前，你需要先在配置清单中使用相关参数定义好它。下面的例子将默认的单节点 &lt;code&gt;pg-meta&lt;/code&gt; 集群的 &lt;code&gt;meta&lt;/code&gt; 数据库作为 FerretDB 的底层存储：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;ferret&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mongo_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;mongo_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ferret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;mongo_pgurl&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;postgres://dbuser_meta:DBUser.Meta@10.10.10.10:5432/meta&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里 &lt;code&gt;mongo_cluster&lt;/code&gt; 与 &lt;code&gt;mongo_seq&lt;/code&gt; 属于不可或缺的身份参数，对于 FerretDB 来说，还有一个必须提供的参数是 &lt;code&gt;mongo_pgurl&lt;/code&gt;，指定了底层 PG 的位置。&lt;/p&gt;
&lt;p&gt;您可以使用 服务 来接入高可用的 PostgreSQL 集群，并部署多个 FerretDB 实例副本并绑定 L2 VIP 以实现 FerretDB 层本身的高可用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;ferret&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ha&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.45&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mongo_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.46&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mongo_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.47&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mongo_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;mongo_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ferret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;mongo_pgurl&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;postgres://test:test@10.10.10.3:5436/test&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;vip_enabled&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#3465a4&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;vip_vrid&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;128&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;vip_address&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.99&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;vip_interface&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;eth1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;管理&#34;&gt;管理&lt;/h2&gt;
&lt;h3 id=&#34;创建mongo集群&#34;&gt;创建Mongo集群&lt;/h3&gt;
&lt;p&gt;在配置清单中定义好MONGO集群后，您可以使用以下命令完成安装。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./mongo.yml -l ferret   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 在 ferret 分组上安装“MongoDB/FerretDB”&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;因为 FerretDB 使用了 PostgreSQL 作为底层存储，所以重复运行此剧本通常并无大碍。&lt;/p&gt;
&lt;h3 id=&#34;移除mongo集群&#34;&gt;移除Mongo集群&lt;/h3&gt;
&lt;p&gt;要移除 Mongo/FerretDB 集群，运行 &lt;code&gt;mongo.yml&lt;/code&gt;剧本的子任务：&lt;code&gt;mongo_purge&lt;/code&gt;，并使用 &lt;code&gt;mongo_purge&lt;/code&gt; 命令行参数即可：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./mongo.yml -e &lt;span style=&#34;color:#000&#34;&gt;mongo_purge&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt; -t mongo_purge
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;安装mongosh&#34;&gt;安装MongoSH&lt;/h3&gt;
&lt;p&gt;您可以使用 MongoSH 作为客户端工具访问 FerretDB 集群&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;gt; /etc/yum.repos.d/mongo.repo &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;[mongodb-org-6.0]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;name=MongoDB Repository
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/6.0/$basearch/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;gpgcheck=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;enabled=1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;gpgkey=https://www.mongodb.org/static/pgp/server-6.0.asc
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install -y mongodb-mongosh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然，您也可以直接安装 &lt;code&gt;mongosh&lt;/code&gt; 的 RPM 包：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rpm -ivh https://mirrors.tuna.tsinghua.edu.cn/mongodb/yum/el7/RPMS/mongodb-mongosh-1.9.1.x86_64.rpm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;连接到ferretdb&#34;&gt;连接到FerretDB&lt;/h3&gt;
&lt;p&gt;你可以使用 MongoDB 连接串，用任何语言的 MongoDB 驱动访问 FerretDB，这里以上面安装的 &lt;code&gt;mongosh&lt;/code&gt; 命令行工具为例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongosh &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;mongodb://dbuser_meta:DBUser.Meta@10.10.10.10:27017?authMechanism=PLAIN&amp;#39;&lt;/span&gt;mongosh &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;mongodb://test:test@10.10.10.11:27017/test?authMechanism=PLAIN&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Pigsty 管理的 PostgreSQL 集群默认使用 &lt;code&gt;scram-sha-256&lt;/code&gt; 作为默认的认证方式，因此，您必须使用 &lt;code&gt;PLAIN&lt;/code&gt; 认证方式连接至 FerretDB。参阅 FerretDB：认证[17] 获取详细信息。&lt;/p&gt;
&lt;p&gt;你也可以使用其他 PostgreSQL 用户来访问 FerretDB，只要在连接串中指定即可：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongosh &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;mongodb://dbuser_dba:DBUser.DBA@10.10.10.10:27017?authMechanism=PLAIN&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;快速上手&#34;&gt;快速上手&lt;/h2&gt;
&lt;p&gt;你可以连接到 FerretDB 并假装它是一个 MongoDB 集群。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mongosh &amp;#39;mongodb://dbuser_meta:DBUser.Meta@10.10.10.10:27017?authMechanism=PLAIN&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MongoDB 的命令会被翻译为&lt;code&gt;SQL&lt;/code&gt;命令，在底下的 PostgreSQL 中执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;use &lt;span style=&#34;color:#204a87&#34;&gt;test&lt;/span&gt;                            &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# CREATE SCHEMA test;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.dropDatabase&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;()&lt;/span&gt;                   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DROP SCHEMA test;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.createCollection&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;posts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;        &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# CREATE TABLE posts(_data JSONB,...)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.posts.insert&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;({&lt;/span&gt;                   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# INSERT INTO posts VALUES(...);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Post One&amp;#39;&lt;/span&gt;,body: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Body of post one&amp;#39;&lt;/span&gt;,category: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;News&amp;#39;&lt;/span&gt;,tags: &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;news&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;events&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user: &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;name: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;John Doe&amp;#39;&lt;/span&gt;,status: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;author&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;,date: Date&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;()}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.posts.find&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;()&lt;/span&gt;.limit&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;.pretty&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;()&lt;/span&gt;   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# SELECT * FROM posts LIMIT 2;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.posts.createIndex&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;({&lt;/span&gt; title: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;})&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# CREATE INDEX ON posts(_data-&amp;gt;&amp;gt;&amp;#39;title&amp;#39;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你不是很熟悉 MongoDB，这里有一个快速上手教程，同样适用于 FerretDB： Perform CRUD Operations with MongoDB Shell[18]&lt;/p&gt;
&lt;p&gt;如果你希望生成一些样例负载，可以使用 &lt;code&gt;mongosh&lt;/code&gt; 执行以下的简易测试剧本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;gt; benchmark.js &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;&amp;#39;EOF&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;const coll = &amp;#34;testColl&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;const numDocs = 10000;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;for (let i = 0; i &amp;lt; numDocs; i++) {  // insert
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  db.getCollection(coll).insert({ num: i, name: &amp;#34;MongoDB Benchmark Test&amp;#34; });
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;for (let i = 0; i &amp;lt; numDocs; i++) {  // select
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  db.getCollection(coll).find({ num: i });
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;for (let i = 0; i &amp;lt; numDocs; i++) {  // update
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  db.getCollection(coll).update({ num: i }, { $set: { name: &amp;#34;Updated&amp;#34; } });
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;for (let i = 0; i &amp;lt; numDocs; i++) {  // delete
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  db.getCollection(coll).deleteOne({ num: i });
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongosh &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;mongodb://dbuser_meta:DBUser.Meta@10.10.10.10:27017?authMechanism=PLAIN&amp;#39;&lt;/span&gt; benchmark.js
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可以查阅 FerretDB 支持的 MongoDB命令，同时还有一些&lt;a href=&#34;https://docs.ferretdb.io/diff/&#34;&gt;已知的区别&lt;/a&gt;，对于基本的使用来说，通常不是什么大问题。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;FerretDB uses the same protocol error names and codes, but the exact error messages may be different in some cases.&lt;/li&gt;
&lt;li&gt;FerretDB does not support NUL (&lt;code&gt;\0&lt;/code&gt;) characters in strings.&lt;/li&gt;
&lt;li&gt;FerretDB does not support nested arrays.&lt;/li&gt;
&lt;li&gt;FerretDB converts &lt;code&gt;-0&lt;/code&gt; (negative zero) to &lt;code&gt;0&lt;/code&gt; (positive zero).&lt;/li&gt;
&lt;li&gt;Document restrictions:
&lt;ul&gt;
&lt;li&gt;document keys must not contain &lt;code&gt;.&lt;/code&gt; sign;&lt;/li&gt;
&lt;li&gt;document keys must not start with &lt;code&gt;$&lt;/code&gt; sign;&lt;/li&gt;
&lt;li&gt;document fields of double type must not contain &lt;code&gt;Infinity&lt;/code&gt;, &lt;code&gt;-Infinity&lt;/code&gt;, or &lt;code&gt;NaN&lt;/code&gt; values.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;When insert command is called, insert documents must not have duplicate keys.&lt;/li&gt;
&lt;li&gt;Update command restrictions:
&lt;ul&gt;
&lt;li&gt;update operations producing &lt;code&gt;Infinity&lt;/code&gt;, &lt;code&gt;-Infinity&lt;/code&gt;, or &lt;code&gt;NaN&lt;/code&gt; are not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Database and collection names restrictions:
&lt;ul&gt;
&lt;li&gt;name cannot start with the reserved prefix &lt;code&gt;_ferretdb_&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;database name must not include non-latin letters;&lt;/li&gt;
&lt;li&gt;collection name must be valid UTF-8 characters;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FerretDB offers the same validation rules for the &lt;code&gt;scale&lt;/code&gt; parameter in both the &lt;code&gt;collStats&lt;/code&gt; and &lt;code&gt;dbStats&lt;/code&gt; commands. If an invalid &lt;code&gt;scale&lt;/code&gt; value is provided in the &lt;code&gt;dbStats&lt;/code&gt; command, the same error codes will be triggered as with the &lt;code&gt;collStats&lt;/code&gt; command.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;剧本&#34;&gt;剧本&lt;/h2&gt;
&lt;p&gt;Pigsty 提供了一个内置的剧本： &lt;code&gt;mongo.yml&lt;/code&gt;，用于在节点上安装 FerretDB 集群。&lt;/p&gt;
&lt;h3 id=&#34;mongoyml&#34;&gt;&lt;code&gt;mongo.yml&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;该剧本由以下子任务组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mongo_check&lt;/code&gt; ：检查 mongo 身份参数•&lt;code&gt;mongo_dbsu&lt;/code&gt; ：创建操作系统用户 mongod•&lt;code&gt;mongo_install&lt;/code&gt; ：安装 mongo/ferretdb RPM包•&lt;code&gt;mongo_purge&lt;/code&gt; ：清理现有 mongo/ferretdb 集群（默认不执行）•&lt;code&gt;mongo_config&lt;/code&gt; ：配置 mongo/ferretdb&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mongo_cert&lt;/code&gt; ：签发 mongo/ferretdb SSL证书&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mongo_launch&lt;/code&gt; ：启动 mongo/ferretdb 服务•&lt;code&gt;mongo_register&lt;/code&gt;：将 mongo/ferretdb 注册到 Prometheus 监控中&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;监控&#34;&gt;监控&lt;/h2&gt;
&lt;p&gt;MONGO 模块提供了一个简单的监控面板：Mongo Overview&lt;/p&gt;
&lt;h3 id=&#34;mongo-overview&#34;&gt;Mongo Overview&lt;/h3&gt;
&lt;p&gt;Mongo Overview: Mongo/FerretDB 集群概览&lt;/p&gt;
&lt;p&gt;这个监控面板提供了关于 FerretDB 的基本监控指标，因为 FerretDB 底层使用了 PostgreSQL，所以更多的监控指标，还请参考 PostgreSQL 本身的监控。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/ferretdb/ferretdb-dashboard.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;参数&#34;&gt;参数&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;MONGO&lt;/code&gt;[24] 模块中提供了9个相关的配置参数，如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;级别&lt;/th&gt;
&lt;th&gt;注释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongo_seq&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;mongo 实例号，必选身份参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongo_cluster&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;mongo 集群名，必选身份参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongo_pgurl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;pgurl&lt;/td&gt;
&lt;td&gt;C/I&lt;/td&gt;
&lt;td&gt;mongo/ferretdb 底层使用的 PGURL 连接串，必选&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongo_ssl_enabled&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;bool&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;mongo/ferretdb 是否启用SSL？默认为 &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongo_listen&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ip&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;mongo 监听地址，默认留控则监听所有地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongo_port&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;port&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;mongo 服务端口，默认使用 27017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongo_ssl_port&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;port&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;mongo TLS 监听端口，默认使用 27018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongo_exporter_port&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;port&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;mongo exporter 端口，默认使用 9216&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mongo_extra_vars&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;MONGO 服务器额外环境变量，默认为空白字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 向量是新的 JSON</title>
      <link>/zh/blog/pg/vector-json-pg/</link>
      <pubDate>Sun, 06 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/vector-json-pg/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/vector-json-pg/featured_huce730e9630068787d1bd07a58d4aebf3_428852_640x0_resize_q75_catmullrom.jpg" width="640" height="640"/>]]>
        
        &lt;p&gt;“&lt;strong&gt;向量是新的JSON&lt;/strong&gt;”，这本身就是一种很有趣的说法。因为&lt;strong&gt;向量&lt;/strong&gt;（Vector）是一种已经被深入研究过的&lt;strong&gt;数学结构&lt;/strong&gt;，而 &lt;strong&gt;JSON&lt;/strong&gt; 是一种&lt;strong&gt;数据交换格式&lt;/strong&gt;。然而，在数据存储和检索的世界中，这两种数据表示方式都已经成为了各自领域的通用语言，成为（或即将成为）现代应用开发中必不可少的要素。如果按当下的趋势发展，&lt;strong&gt;向量将会像 JSON 一样，成为构建应用时的关键要素&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;生成型AI 引发的热潮促使开发者寻找一种简便的方法来存储与查询这些系统的&lt;strong&gt;输出&lt;/strong&gt;。出于很多因素，PostgreSQL 成为了最自然的选择。但即使是生成型AI 炒翻天也无法改变这一事实：向量并不是一种新的数据模式，它作为一种数学概念已经存在数百年了，而机器学习领域也对其已有半个世纪多的研究。向量的基础数据结构 —— &lt;strong&gt;数组&lt;/strong&gt;，几乎在所有初级导论性质的计算机科学课程中都会讲授。连 PostgreSQL 对向量运算的支持也已经有20多年的历史了！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-1.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;高中数学知识：向量的余弦距离与相似度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那有什么东西是新的呢？其实是 AI/ML 算法的 &lt;strong&gt;易用性（Accessibility）&lt;/strong&gt;，以及如何将一些“真实世界”的结构（文本、图像、音频、视频）用向量的形式表示，并将其存储起来，以供应用实现一些有用的功能。有些人可能会说，把这些AI系统的输出（也就是所谓的“&lt;strong&gt;嵌入 Embedding&lt;/strong&gt;”）放进数据存储系统中并不是什么新把戏。所以这里我们得再次强调，真正的新模式是 &lt;strong&gt;易用性&lt;/strong&gt;：几乎所有应用都可以用这种近乎实时的方式查询并返回这些数据（文字图片音视频的向量表示）。&lt;/p&gt;
&lt;p&gt;不过，这些与 PostgreSQL 有什么关系？那关系可大了！&lt;strong&gt;高效存储检索向量 —— 这种普适泛用数据类型，可以极大地简化应用程序开发，让相关联的数据都存放在同一个地方，并让人们继续使用现有的工具链&lt;/strong&gt;。我们在十多年前的 JSON 上看到了这一点，现在我们在向量上也看到了这一点。&lt;/p&gt;
&lt;p&gt;要理解为什么向量是新的 JSON，让我们回顾一下 JSON —— 互联网通信的事实标准，当 JSON 崭露头角时发生了什么？&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;json-简史postgresql-实现&#34;&gt;JSON 简史：PostgreSQL 实现&lt;/h2&gt;
&lt;p&gt;在 “JSON崛起” 期间，我主要还是一名应用开发者。我正在构建的系统，要么是将 JSON 数据发送到前端，使其可以完成某种操作（例如渲染一个可更新的组件），要么是与返回 JSON 格式数据的“现代”API交互。JSON 的好处在于其简单性（很容易阅读和操作），作为一种数据交换格式具有很强的表达力。JSON 确实简化了系统间的通信，无论是从开发还是运维的角度。但我是希望在JSON中看到一些我喜欢的东西 —— 在数据库这一侧，我是使用&lt;strong&gt;模式&lt;/strong&gt;（Schemas）的坚定支持者。&lt;/p&gt;
&lt;p&gt;虽然 JSON 最初是作为一种&lt;strong&gt;交换格式&lt;/strong&gt;而存在的，但人们确实会问 “为什么我不能直接存储和查询这玩意？” 这个问题引出了一种专门的数据存储系统 —— 可以用来存储和查询 JSON 文档。我确实试过好几种不同的 &lt;strong&gt;专用 JSON 存储系统&lt;/strong&gt;，来解决一个特定场景下的问题，但我并不确定我是否想把他们引入到自己的应用技术栈中 —— 出于性能与可维护性的原因 （我不会说具体是哪些，因为十多年过去，时过境迁了）。这就引出了一个问题 —— 能否在PostgreSQL中存储 JSON 数据？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-2.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PostgreSQL JSON 特性矩阵&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我记得当年去参加 PostgreSQL 活动时的急切心情 —— 等待 PostgreSQL 对原生 JSON 存储检索支持的更新。我记得当 PostgreSQL 9.2 增加了基于文本的 JSON 类型支持时自己是多么的激动开心。PostgreSQL 对 JSON 最开始的支持是对所存储 JSON 内容的合法性校验，以及一些用于提取 JSON 文档数据的函数与运算符。那时候并没有原生的索引支持，但如果你需要根据文档中的某个 Key 进行频繁查询，还是可以使用 &lt;strong&gt;表达式索引&lt;/strong&gt; 功能来为你感兴趣的 Key 添加索引。&lt;/p&gt;
&lt;p&gt;PostgreSQL 对 JSON 的初步支持帮助我解决了一些问题，具体来说有：对数据库中几个表的状态做快照，以及记录我与之交互的 API 的输出。最初的基于文本的 JSON 数据类型在检索能力上乏善可陈：你确实可以构建表达式索引来根据 JSON 文档中的特定 Key 来走索引，但实践上我还是会把那个 Key 单独抽取出来放在与 JSON 相邻的单独列中。&lt;/p&gt;
&lt;p&gt;这里的关键在于：PG 对 JSON 的初步支持以 “JSON数据库”的标准来看还是很有限的。没错，我们现在可以存储 JSON，也拥有了一些有限的查询能力，但要和专用 JSON 数据库拼功能，显然还需要更多的工作。不过对于许多这样的用例，PostgreSQL仍然已经是&lt;strong&gt;足够好&lt;/strong&gt;了：&lt;strong&gt;只要能和现有的应用基础设施一起使用，开发者还是愿意在某种程度上接受这些局限性的&lt;/strong&gt;。PostgreSQL 也是&lt;strong&gt;第一个&lt;/strong&gt;提供 JSON 支持的关系型数据库，带了一波节奏，最终直接导致 JSON 进入到 SQL 标准中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-3.jpeg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;俄罗斯的 PostgreSQL 与 Oleg 对 PG JSON 特性居功至伟&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;紧接着 PostgreSQL 作为 “JSON数据库” 的可行性，在 PostgreSQL 9.4 发布后出现质变：这个版本新增了 &lt;strong&gt;JSONB&lt;/strong&gt; 类型，这是 JSON 数据类型的二进制表示，而且可以使用 GIN 索引来索引 JSON 文档中的任意数据。这让 PostgreSQL 能在性能上与专用 JSON数据库旗鼓相当，同时还能保留有关系数据库的所有好处 —— 尽管适应并支持这类应用负载花费了 PostgreSQL 好几年的时间。&lt;/p&gt;
&lt;p&gt;PostgreSQL 对 JSON 的支持在过去的几年中持续发展演进，随着PostgreSQL不断实现和采纳 SQL/JSON 标准，未来也一定会继续保持这种发展势头。我曾与一些 PostgreSQL 用户聊过，他们在 PostgreSQL 数据库中存了几十TB的 JSON 文档 —— 用户表示体验甚好！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-4.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个故事的关键是，开发者愿意押注 PostgreSQL 会拥有一个具有竞争力的 JSON存储系统，并愿意接受其最初实现的局限性，直到更为强大稳健的支持出现。这就引出了我们要讨论的 &lt;strong&gt;向量&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;向量崛起一种新-json&#34;&gt;向量崛起：一种新 JSON&lt;/h2&gt;
&lt;p&gt;向量并不是新东西，但近来它们的流行度飙升。如前所述，这归功于AI/ML系统新涌现出的&lt;strong&gt;易用性&lt;/strong&gt;，而这些系统的输出结果是&lt;strong&gt;向量&lt;/strong&gt;。典型用例是在存储的数据（文本、声音、视频）上建立模型，并用模型将其转换为向量格式，然后用于“&lt;strong&gt;语义搜索&lt;/strong&gt;”。&lt;/p&gt;
&lt;p&gt;语义搜索工作原理如下：你把输入用模型转换为对应的向量，并在数据库中查找与此向量最为相似的结果。&lt;strong&gt;相似度&lt;/strong&gt;使用&lt;strong&gt;距离函数&lt;/strong&gt;进行衡量：比如欧式距离，或余弦距离，结果通常会按距离排序取 TOP K，即 K 个最为相似的对象（K-NN, k nearest neighbors）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-5.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;向量的余弦距离被广泛用于衡量两者的相似度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用模型将“训练集”编码为向量需要耗费很长的时间，所以把这些编码结果 “缓存” 在持久化数据存储 —— 比如说数据库中是有意义的，然后你就可以在数据库中运行 K-NN 查询了。事先在数据库里准备好一组备查的向量，通常会为语义搜索带来更好的用户体验，需要“向量数据库”的想法就是这么来的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-6.jpeg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AI模型将各种对象统一编码为向量（浮点数组）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在PostgreSQL中存储向量不是一件新鲜事儿。1996 年 PostgreSQL 首次开源时就已经带有&lt;strong&gt;数组类型&lt;/strong&gt;（Array）了！而且多年来又进行了无数的改进。实际上，PostgreSQL 中 &lt;strong&gt;数组&lt;/strong&gt; 类型名称可能有些用词不当，因为它其实可以存储&lt;strong&gt;多维&lt;/strong&gt;数据（例如矩阵/张量）。PostgreSQL 原生支持了一些数组函数，不过有一些常见的向量运算不在其中，比如计算两个数组间的距离。你确实可以写个存储过程来干这个事，但这就是把活儿推给开发者了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-7.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PostgreSQL特性矩阵：数组与Cube&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;幸运的是，&lt;code&gt;cube&lt;/code&gt; 数据类型克服了这些局限。cube 在PostgreSQL代码库中也已经有20多年了，并且是为在高维向量上执行运算而设计的。cube 包含了在向量相似性搜索中使用的大多数常见距离函数，包括欧几里得距离，而且可以使用 GiST索引来执行高效的 K-NN 查询！但是 cube 最多只能存储100维的向量，而许多现代AI/ML系统的维度远超这个数。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-8.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ChatGPT Embedding API 使用 1536 维向量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么，如果 &lt;strong&gt;array&lt;/strong&gt; 可以搞定向量&lt;strong&gt;维度&lt;/strong&gt;的问题但没有解决向量&lt;strong&gt;运算&lt;/strong&gt;的问题；而 &lt;strong&gt;cube&lt;/strong&gt; 可以搞定运算但搞不定维度，我们该怎么办？&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pgvector-开源pg向量扩展&#34;&gt;PGVECTOR: 开源PG向量扩展&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;可扩展性&lt;/strong&gt; 是 PostgreSQL 的基石特性之一：PostgreSQL 提供创建新数据类型和新索引方法的接口。这让 &lt;strong&gt;pgvector&lt;/strong&gt; 成为可能：一个开源 PostgreSQL 扩展，提供了一种可索引的 &lt;code&gt;vector&lt;/code&gt; 数据类型。简而言之，pgvector 允许您在 PostgreSQL 中存储向量，并使用各种距离度量执行K-NN查询：欧式距离、余弦和内积。到目前为止，pgvector 带有一种新索引类型 &lt;code&gt;ivfflat&lt;/code&gt;，实现了 IVF FLAT 向量索引。&lt;/p&gt;
&lt;p&gt;当您使用索引来查询向量数据时，事情可能和您所习惯的 PostgreSQL 数据查询略有不同。由于在高维向量上执行最近邻搜索的计算成本很高，许多向量索引方法选择寻找与正确结果 “足够接近” 的 “&lt;strong&gt;近似&lt;/strong&gt;” 答案，这将我们带入 “近似最近邻搜索”（ANN）的领域。ANN 查询的关注焦点是，&lt;strong&gt;性能与召回率两个维度上的利弊权衡&lt;/strong&gt;，这里“&lt;strong&gt;召回率（Recall）&lt;/strong&gt;”指的是返回相关的结果所占百分比。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-9.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pgvector 在 ANN Benchmark 各测试集下的召回率/性能曲线&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;让我们以 ivfflat 方法为例。构建 ivfflat 索引时，您需要决定有多少个 &lt;strong&gt;list&lt;/strong&gt; 。每个 &lt;strong&gt;list&lt;/strong&gt; 代表一个“中心”，这些中心会使用 k-means 聚类算法确定。确定所有中心后，ivfflat 会计算每一个向量最接近哪个中心点，并将其添加到索引中。当查询向量数据时，你还需要决定需要检查多少个中心，这由 &lt;code&gt;ivfflat.probes&lt;/code&gt; 参数确定。这就是您所看到的 ANN性能/召回率权衡：你检查的中心越多，结果就会越精确，但性能开销就越大。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-10.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IVF FLAT 索引算法的的召回率取决于检查的中心数量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;把 AI/ML 的输出存入 “向量数据库” 已经很流行了，至于 pgvector 也已经有大把的使用样例。所以这里我们将关注重点放在未来的发展方向上。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;迈向明天更好的向量支持&#34;&gt;迈向明天：更好的向量支持&lt;/h2&gt;
&lt;p&gt;与 PostgreSQL 9.2 版本中的 JSON 情况类似，我们正处于如何在 PostgreSQL 中存储向量数据的初级阶段 —— 虽然我们在PostgreSQL和 pgvector 中看到的大部分内容都很不错，但它即将要好得多！&lt;/p&gt;
&lt;p&gt;pgvector 已经可以处理许多常见的 AI/ML 数据用例 —— 我已经看到许多用户成功地使用它开发部署应用！—— 因此下一步是帮助它打江山。这与 PostgreSQL 中的 JSON 和 JSONB 的情况没有太大区别，但 pgvector 作为一个扩展，将有助于它更快地迭代。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-11.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pgvector 的 Github Star 增长在2023年4月出现加速&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 2023 年的 PGCon 上，这是一个聚集了许多内部开发者的 PostgreSQL 会议，我做了一个名为《向量是新的JSON[1]》的快速演讲，其中分享了使用案例，以及改进 PostgreSQL 和 pgvector 向量数据检索性能所面临的挑战。这是一些需要解决的问题（有些已经在做了！）：包括给 pgvector 添加更多并行机制，对超过 2000 维向量的索引支持，以及尽可能使用硬件来加速计算。好消息是添加这些功能并不难，只需要开源贡献！&lt;/p&gt;
&lt;p&gt;许多人对于把 PostgreSQL 当成向量数据库这件事充满兴趣（重点是 PG 还是一个全能数据库！）。我预计正如历史上的 JSON 一样，PostgreSQL 社区会找到一种支持这种新兴工作负载的方法，更为安全，更容易伸缩扩展。&lt;/p&gt;
&lt;p&gt;我期待您能提供各种反馈 —— 无论是关于PostgreSQL 本身还是 pgvector ，还是关于您如何在 PostgreSQL 中处理向量数据，或者您希望如何在 PostgreSQL 中处理数据，因为这将帮助社区为向量查询提供最佳的支持。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文译自《VECTORS ARE THE NEW JSON IN POSTGRESQL[2]》一文。&lt;/p&gt;
&lt;p&gt;作者 JONATHAN KATZ ，译者 冯若航&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;译者评论&#34;&gt;译者评论&lt;/h2&gt;
&lt;p&gt;PostgreSQL 在过去十年间有着持续稳定的高速增长，从一个&amp;quot;相对来说小众&amp;quot;的数据库，成为如今全世界开发者中最流行，最受喜爱，需求量最大的数据库，不可谓不成功。PG 成功的因素有很多，开源，稳定，可扩展，等等等等。但我认为这里的&lt;strong&gt;关键一招&lt;/strong&gt;还是 &lt;strong&gt;JSON&lt;/strong&gt; 支持。笔者本人就是在 PostgreSQL 9.4 为其强大 JSON 功能折服，果断从 MySQL 跳车弃暗投明。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-12.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PostgreSQL 获得数据库三项大满贯冠军，且势头一往无前&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;拥有了 JSON 特性的 PostgreSQL 等于 &lt;strong&gt;MongoDB&lt;/strong&gt; 与 &lt;strong&gt;MySQL&lt;/strong&gt; 合二为一，恰到好处地赶上了互联网下半场的风口。从 DB-Engine 热度趋势上也能看出，PostgreSQL 开始起飞的时间正是在 2014 年 发布 PostgreSQL 9.4 之后。2013 ～ 2023 这十年可以说是 PG 的黄金十年，无数强大的新功能与各式扩展插件喷涌而出，奠定了 PG 现今不可撼动的地位。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-13.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DB-Engine 热度走势，来自搜索引擎与网站的综合指数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而放眼未来十年，数据库的下一站会是哪里？本文给出了答案 —— &lt;strong&gt;向量&lt;/strong&gt;。正如同 JSON 一样，PostgreSQL 永远站在时代浪潮的巅峰引领潮流 —— 成为&lt;strong&gt;第一个&lt;/strong&gt;提供全方位向量支持的关系型数据库。我有充足的把握断言：以向量为代表的功能将在接下来的十年中继续驱动 PostgreSQL 的高速增长。&lt;/p&gt;
&lt;p&gt;pgvector 一定不会是 PostgreSQL 处理向量数据的终点，但它为 SQL 向量处理设定了一个标杆。PGVector 项目由 Andrew Kane 于 2021年4月创建，慢热了两年，而从今年三四月开始半年不到暴涨 4K star。而我也可以骄傲的说，作为 PG 社区的一员，我也在这里推波助澜，做了一些工作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-14.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们将 pgvector 提入 PostgreSQL PGDG 官方源，正式成为 PG向量扩展的事实标准；我们进行性能评测，引发了推上关于 PGVector 的大讨论；而我们所维护的开箱即用的开源 RDS PG 替代 Pigsty，则是第一波将 pgvector 集成整合提供服务的 &lt;strong&gt;PostgreSQL 发行版&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pigsty 凝聚 PG 生态合力，为用户提供开源免费开箱即用的本地 PostgreSQL RDS 服务&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;目前我们也在着力于改进 pgvector 的实现，实现了另一种主流向量索引算法 &lt;strong&gt;hnsw&lt;/strong&gt;，在一些 ANN 场景下相比 IVFFLAT 有20倍的性能提升，而且完全兼容 pgvector 接口，并将于近期 Pigsty Release 提供预览。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/vector-json-pg/vector-new-json-15.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;pgvector 改进实现在 ANN-Benchmark 下的初步表现&lt;/p&gt;
&lt;p&gt;最重要的是，我们相信 PostgreSQL 社区的力量，我们愿意凝聚合力，劲往一处使，共同让 PostgreSQL 走得更快、更远，让 PostgreSQL 在 AI 时代再创辉煌！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;p&gt;[1] 向量是新的JSON&lt;/p&gt;
&lt;p&gt;[2] VECTORS ARE THE NEW JSON IN POSTGRESQL&lt;/p&gt;
&lt;p&gt;[3] AI大模型与向量数据库 PGVECTOR&lt;/p&gt;
&lt;p&gt;[4] PostgreSQL：世界上最成功的数据库&lt;/p&gt;
&lt;p&gt;[5] 更好的开源RDS替代：Pigsty&lt;/p&gt;
&lt;p&gt;[6] Pigsty v2.1 发布：向量扩展 / PG12-16 支持&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: AI大模型与向量库 PGVector</title>
      <link>/zh/blog/dev/llm-and-pgvector/</link>
      <pubDate>Wed, 10 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/dev/llm-and-pgvector/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/dev/llm-and-pgvector/featured_hud49dd1eb0336c26a2408eb1970e5570e_109138_640x0_resize_q75_catmullrom.jpg" width="640" height="641"/>]]>
        
        &lt;p&gt;新 AI 应用在过去一年中出现了指数爆炸的增长态势，而这些应用面临的一个共同挑战是如何大规模地&lt;strong&gt;存储&lt;/strong&gt;与&lt;strong&gt;查询&lt;/strong&gt;以向量表示的 AI Embedding。本文聚焦被 AI 炒火了的&lt;strong&gt;向量数据库&lt;/strong&gt;，介绍了AI嵌入与向量存储检索的基本原理，并用一个具体的知识库检索案例来串联介绍向量数据库插件 &lt;strong&gt;PGVECTOR&lt;/strong&gt; 的功能、性能、获取与应用。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;ai是怎么工作的&#34;&gt;AI是怎么工作的&lt;/h2&gt;
&lt;p&gt;GPT 展现出来了强大的智能水平，它的成功有很多因素，但在工程上关键的一步是：&lt;strong&gt;神经网络与大语言模型将一个语言问题转化为数学问题，并使用工程手段高效解决了这个数学问题&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;对于AI来说，各种各样的知识与概念在内部都使用数学向量来存储表示输入输出。将词汇/文本/语句/段落/图片/音频各种对象转换为数学向量的这个过程被叫做&lt;strong&gt;嵌入&lt;/strong&gt;（&lt;strong&gt;Embedding&lt;/strong&gt;）。&lt;/p&gt;
&lt;p&gt;例如 OpenAI 就使用 &lt;strong&gt;1536&lt;/strong&gt; 维的浮点数向量空间。当你问 ChatGPT 一个问题时，输入的文本首先被编码转换成为一个&lt;strong&gt;数学向量&lt;/strong&gt;，才能作为神经网络的输入。而神经网络的直接输出结果，也是一个向量，向量被重新解码为人类的自然语言或其他形式，再呈现到人类眼前。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;llm-pgvector-1.jpeg&#34; src=&#34;/zh/blog/dev/llm-and-pgvector/llm-pgvector-1.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;人工智能大模型的“思考过程”，在数学上就是一系列向量与矩阵之间的加乘正逆运算。这种向量对于人类来说过于抽象，无法理解。但这种形式很适合使用 GPU/FPGA/ASIC 这样的专用硬件来高效实现 —— AI 有了一个硅基的仿生大脑，带有更多的神经元，更快的处理速度，以及更强大的学习算法，惊人的智能水平，高速自我复制与永生的能力。&lt;/p&gt;
&lt;p&gt;语言大模型解决的是 &lt;strong&gt;编码&lt;/strong&gt; - &lt;strong&gt;运算&lt;/strong&gt; - &lt;strong&gt;输出&lt;/strong&gt; 的问题，但是只有计算是不够的，还有一个重要的部分是&lt;strong&gt;记忆&lt;/strong&gt;。大模型本身可以视作人类公开数据集的一个压缩存储，这些知识通过训练被编码到了模型中，内化到了模型的权重参数里。&lt;strong&gt;而精确性的，长期性的，过程性的，大容量的外部记忆存储，就需要用到向量数据库了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;llm-pgvector-2.png&#34; src=&#34;/zh/blog/dev/llm-and-pgvector/llm-pgvector-2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;所有的概念都可以用向量来表示，而向量空间有一些很好的数学性质，比如可以计算两个向量的“&lt;strong&gt;距离&lt;/strong&gt;”。&lt;strong&gt;这意味着任意两个抽象概念之间的“相关性”，都可以用对应编码向量的距离来衡量&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这个看上去简单的功能却有着非常强大的效果，例如最经典的应用场景就是搜索。比如，您可以预处理你的知识库，将每个文档都是用模型转换成抽象向量存储在向量数据库中，当你想要检索时，只需要将您的问题也用模型编码成为一个一次性的查询向量，并在数据库中找到与此查询向量“**距离最近“**的文档作为回答返回给用户即可。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;llm-pgvector-3.jpeg&#34; src=&#34;/zh/blog/dev/llm-and-pgvector/llm-pgvector-3.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过这种方式，一个模糊而困难的自然语言处理问题，转换成为了一个简单清晰的数学问题。而向量数据库，就可以用来高效地解决这个数学问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;向量数据库能干什么&#34;&gt;向量数据库能干什么？&lt;/h2&gt;
&lt;p&gt;数据库有事务处理（OLTP）与数据分析（OLAP）两大核心场景，向量数据库自然也不例外。典型的事务处理场景包括：知识库，问答，推荐系统，人脸识别，图片搜索，等等等等。知识问答：给出一个自然语言描述的问题，返回与这些输入最为接近的结果；以图搜图：给定一张图片，找出与这张图片在逻辑上最接近的其他相关图片。&lt;/p&gt;
&lt;p&gt;这些功能说到底都是一个共同的数学问题：**向量最近邻检索（KNN）：**给定一个向量，找到距离此向量最近的其他向量。&lt;/p&gt;
&lt;p&gt;典型的分析场景是&lt;strong&gt;聚类&lt;/strong&gt;：将一系列向量按照距离亲疏远近分门别类，找出内在的关联结构，并对比急簇之间的差异。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;llm-pgvector-4.jpeg&#34; src=&#34;/zh/blog/dev/llm-and-pgvector/llm-pgvector-4.jpeg&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pg向量插件-pgvector&#34;&gt;PG向量插件 PGVECTOR&lt;/h2&gt;
&lt;p&gt;市面上有许多向量数据库产品，商业的有 Pinecone，Zilliz，开源的有 Milvus，Qdrant 等，基于已有流行数据库以插件形式提供的则有 &lt;code&gt;pgvector&lt;/code&gt; 与 Redis Stack。&lt;/p&gt;
&lt;p&gt;在所有现有向量数据库中，&lt;strong&gt;pgvector&lt;/strong&gt; 是一个独特的存在 —— 它选择了在现有的世界上最强大的开源关系型数据库 PostgreSQL 上以插件的形式添砖加瓦，而不是另起炉灶做成另一个专用的“数据库” [1]。&lt;strong&gt;pgvector&lt;/strong&gt; 有着优雅简单易用的接口，不俗的性能表现，更是继承了PG生态的超能力集合。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;llm-pgvector-5.png&#34; src=&#34;/zh/blog/dev/llm-and-pgvector/llm-pgvector-5.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一个合格的向量数据库，首先得是一个合格的数据库，而从零开始做到这一点并不容易&lt;/strong&gt;。&lt;strong&gt;比起使用一种全新的独立数据库品类，为现有数据库加装向量搜索的能力显然是一个更为务实，简单，经济的选择&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pgvector-知识检索案例&#34;&gt;PGVECTOR 知识检索案例&lt;/h2&gt;
&lt;p&gt;下面我们通过一个具体的例子演示 PGVECTOR 这样的向量数据库是如何工作的。&lt;/p&gt;
&lt;h3 id=&#34;模型&#34;&gt;模型&lt;/h3&gt;
&lt;p&gt;OpenAI 提供了将自然语言文本转换为数学向量的 API ：例如 &lt;code&gt;text-embedding-ada-002&lt;/code&gt; ，便可以将最长2048～8192个字符的句子/文档转换为一个 1536 维的向量。但是这里我们选择使用 HuggingFace 上的 &lt;code&gt;shibing624/text2vec-base-chinese&lt;/code&gt; 模型替代 OpenAI 的 API 完成文本到向量的转换。&lt;/p&gt;
&lt;p&gt;这个模型针对中文语句进行了优化，尽管没有 OpenAI 模型有那样深入的语义理解能力，但它是开箱即用的，使用 &lt;code&gt;pip install torch text2vec&lt;/code&gt; 即可完成安装，而且可以在本地CPU上运行，完全开源免费。您可以随时换用其他模型：基本用法是类似的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;text2vec&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SentenceModel&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 自动下载并加载模型&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SentenceModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;shibing624/text2vec-base-chinese&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;sentence&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;这里是你想编码的文本输入&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;vec&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;encode&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sentence&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用以上代码片段即可将任意长度在512内的中文语句编码为 768 维的向量。拆分后只需要调用模型的编码（encode）方法，即可将文本转换为数学向量。对于很长的大文档，您需要合理地将文档与知识库拆分成一系列长度得当的段落。&lt;/p&gt;
&lt;h3 id=&#34;存储&#34;&gt;存储&lt;/h3&gt;
&lt;p&gt;编码后的结果，在 PostgreSQL 中使用形如 &lt;code&gt;ARRAY[1.1,2.2,...]&lt;/code&gt; 这样的浮点数组形式表示。这里我们跳过数据清洗灌入的琐碎细节，总之在一番操作后有了一张语料数据表 &lt;code&gt;sentences&lt;/code&gt;，一个 &lt;code&gt;txt&lt;/code&gt; 字段来存储原始文本表示，并使用一个额外的 &lt;code&gt;vec&lt;/code&gt; 字段存储文本编码后的 768 维向量。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;EXTENSION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sentences&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;BIGINT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRIMARY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 标识    txt   TEXT NOT NULL,       -- 文本    vec   VECTOR(768) NOT NULL -- 向量);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这张表和普通的数据库表并没有任何区别，你可以用一模一样的增删改查语句。特殊的地方在于 &lt;code&gt;pgvector&lt;/code&gt; 扩展提供了一种新的数据类型 &lt;code&gt;VECTOR&lt;/code&gt; ，以及相应的几种距离函数、运算符与对应的索引类型，允许您高效地完成向量最近邻搜索。&lt;/p&gt;
&lt;h3 id=&#34;查询&#34;&gt;查询&lt;/h3&gt;
&lt;p&gt;这里我们只需要用一个简易的 Python 小脚本，就可以制作一个全文模糊检索的命令行小工具：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# !/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;text2vec&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SentenceModel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;psycopg2&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;connect&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SentenceModel&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;shibing624/text2vec-base-chinese&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;query&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;question&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;limit&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;vec&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;encode&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;question&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 生成一个一次性的编码向量，默认查找最接近的64条记录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;ARRAY[&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;join&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;vec&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tolist&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()])&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;]::VECTOR(768)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;cursor&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;postgres:///&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;cursor&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;cursor&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;execute&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&amp;#34;SELECT id, txt, vec &amp;lt;-&amp;gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; AS d FROM sentences ORDER BY 3 LIMIT &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;item&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;limit&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;txt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;distance&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cursor&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fetchall&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%-6d&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; [&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%.3f&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;distance&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;txt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt=&#34;llm-pgvector-6.png&#34; src=&#34;/zh/blog/dev/llm-and-pgvector/llm-pgvector-6.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pgvector-的性能&#34;&gt;PGVECTOR 的性能&lt;/h2&gt;
&lt;p&gt;当功能、正确性、安全性满足需求后，用户的目光就会转向&lt;strong&gt;性能&lt;/strong&gt;。PGVECTOR 有着不错的性能表现，尽管比起专用的高性能向量计算Library来说有些差距，但性能对于生产环境中使用已经是绰绰有余了。&lt;/p&gt;
&lt;p&gt;对于向量数据库来说，最近邻查询的延迟是一个重要的性能指标，&lt;strong&gt;ANN-Benchmark&lt;/strong&gt; 则是一个相对权威的最近邻性能评测基准[2]。pgvector 的索引算法是 ivfflat ，在几个常见的基准测试中表现如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;llm-pgvector-7.png&#34; src=&#34;/zh/blog/dev/llm-and-pgvector/llm-pgvector-7.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;为了对 &lt;code&gt;pgvector&lt;/code&gt; 的性能表现在直觉上有一个把握，在 M1 Max 芯片 Macbook 下单核运行一些简单的测试：从1百万条随机 1536 维向量（正好是 OpenAI 的输出向量维度）中找出余弦距离最近的TOP 1 ～ 50 条向量，每次耗时大约 8ms 。从 1 亿条随机 128 维向量 （SIFT图像数据集的维度）中找出 L2 欧几里得距离 TOP 1 向量耗时 5ms，TOP 100 耗时也只要 21ms 。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 1M 个 1536 维向量，随机取 TOP1～50，余弦距离， 单核：插入与索引耗时均为5～6分钟，大小8GB左右。随机向量最近邻 Top1 召回：8ms
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IF&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXISTS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vtest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vtest&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;BIGINT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VECTOR&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1536&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TRUNCATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vtest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INSERT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INTO&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vtest&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;random_array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1536&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1536&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;generate_series&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1000000&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vtest&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;USING&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ivfflat&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vector_cosine_ops&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lists&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1000&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;probe&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;random_array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1536&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VECTOR&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1536&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vtest&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;probe&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;limit&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 简易SIFT ，1亿个128维向量，测试L2距离，召回1个最近向量， 5 ms， 召回最近100个向量：21ms
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IF&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXISTS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vtest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vtest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;BIGINT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VECTOR&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TRUNCATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vtest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INSERT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INTO&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vtest&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;random_array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;generate_series&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100000000&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vtest&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;USING&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ivfflat&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vector_l2_ops&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lists&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10000&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;probe&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;random_array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VECTOR&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vtest&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;probe&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;limit&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- LIMIT 100
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用真实的 SIFT 1M 数据集来测试，找出测试集中1万条向量在1百万条基础向量集中的最近邻单核总共只需18秒，单次查询的延迟在 1.8 ms ，折合单核500 QPS，可以说是相当不错了。当然对于 PostgreSQL 这样的成熟数据库来说，你总可以简单地通过加核数与拖从库来近乎无限地扩容其QPS吞吐量。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- SIFT 1M 数据集，128维embedding，使用ivfflat索引, L2距离，10K测试向量集。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IF&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXISTS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sift_base&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sift_base&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;BIGINT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRIMARY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VECTOR&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IF&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXISTS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sift_query&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sift_query&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;BIGINT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRIMARY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VECTOR&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sift_base&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;USING&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ivfflat&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vector_l2_ops&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lists&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1000&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 一次性寻找 sift_query 表中 10000 条向量在 sift_base 表中的最近邻 Top1: 单进程 18553ms / 10000 Q = 1.8ms
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;explain&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;analyze&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;q&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sift_query&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;q&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LATERAL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sift_base&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;q&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;limit&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 单次随机查询耗时在 个位数毫秒
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;probe&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;query&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sift_query&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;random&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;999&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)::&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;BIGINT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LIMIT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sift_base&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;query&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;probe&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LIMIT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;如何获取-pgvector&#34;&gt;如何获取 PGVECTOR？&lt;/h2&gt;
&lt;p&gt;最后，我们来聊一聊，如何快速获取一个可用的 PGVECTOR ？&lt;/p&gt;
&lt;p&gt;在以前，PGVECTOR 需要自行下载编译安装，所以我提了一个 Issue 把它加入到 PostgreSQL 全球开发组的官方仓库中[5]。你只需要正常使用 PGDG 源即可直接 &lt;code&gt;yum install pgvector_15&lt;/code&gt; 完成安装。在安装了 &lt;code&gt;pgvector&lt;/code&gt; 的数据库实例中使用 &lt;code&gt;CREATE EXTENSION vector&lt;/code&gt; 即可启用此扩展。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE EXTENSION vector;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE TABLE items (vec vector(2));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;INSERT INTO items (vec) VALUES (&amp;#39;[1,1]&amp;#39;), (&amp;#39;[-2,-2]&amp;#39;), (&amp;#39;[-3,4]&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SELECT *, vec &amp;lt;=&amp;gt; &amp;#39;[0,1]&amp;#39; AS d FROM items ORDER BY 2 LIMIT 3;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更简单的选择是本地优先的开源 RDS PostgreSQL 替代 —— Pigsty ，在三月底发布的v2.0.2 中， &lt;code&gt;pgvector&lt;/code&gt; 已经默认启用，开箱即用。您可以在一台全新虚拟机上一键完成安装，自带时序地理空间向量插件，监控备份高可用齐全。分文不收，立等可取。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;llm-pgvector-8.png&#34; src=&#34;/zh/blog/dev/llm-and-pgvector/llm-pgvector-8.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Supabase，Neon 也提供了带有 &lt;code&gt;pgvector&lt;/code&gt; 插件的付费托管 PostgreSQL 服务，AWS RDS for PostgreSQL 也已经在五月初刚刚支持了此扩展 。提供托管服务的完整供应商列表可以参考 &lt;code&gt;pgvector&lt;/code&gt; 的 Github Issue [6]。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;p&gt;[1] &lt;a href=&#34;https://github.com/pgvector/pgvector&#34;&gt;PGVECTOR GitHub仓库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2] &lt;a href=&#34;https://ann-benchmarks.com/&#34;&gt;ANN性能评测基准&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[3] &lt;a href=&#34;https://supabase.com/blog/openai-embeddings-postgres-vector&#34;&gt;使用 PGVECTOR 存储 OpenAI 嵌入&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[4] &lt;a href=&#34;https://openai.com/blog/introducing-text-and-code-embeddings&#34;&gt;文本与代码嵌入&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[5] &lt;a href=&#34;https://github.com/pgvector/pgvector/issues/76&#34;&gt;Add official RPM package and inclusion in PGDG YUM repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[6] &lt;a href=&#34;https://github.com/pgvector/pgvector/issues/54&#34;&gt;PGVector Hosted Providers&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 故障档案：PG安装Extension导致无法连接</title>
      <link>/zh/blog/admin/extension/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/admin/extension/</guid>
      <description>
        
        
        &lt;p&gt;今天遇到一个比较有趣的Case，客户报告说数据库连不上了。报这个错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql: FATAL:  could not load library &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/export/servers/pgsql/lib/pg_hint_plan.so&amp;#34;&lt;/span&gt;: /export/servers/pgsql/lib/pg_hint_plan.so: undefined symbol: RINFO_IS_PUSHED_DOWN
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然，这种错误一眼就知道是插件没编译好，报符号找不到。因此数据库后端进程在启动时尝试加载&lt;code&gt;pg_hint_plan&lt;/code&gt;插件时就GG了，报FATAL错误直接退出。&lt;/p&gt;
&lt;p&gt;通常来说这个问题还是比较好解决的，这种额外的扩展通常都是在&lt;code&gt;shared_preload_libraries&lt;/code&gt;中指定的，只要把这个扩展名称去掉就好了。&lt;/p&gt;
&lt;h2 id=&#34;结果&#34;&gt;结果……&lt;/h2&gt;
&lt;p&gt;客户说是通过&lt;code&gt;ALTER ROLE|DATABASE SET session_preload_libraries = pg_hint_plan&lt;/code&gt;的方式来启用扩展的。&lt;/p&gt;
&lt;p&gt;这两条命令会在使用特定用户，或连接到特定数据库时覆盖系统默认参数，去加载&lt;code&gt;pg_hint_plan&lt;/code&gt;插件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;DATABASE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;session_preload_libraries&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pg_hint_plan&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ROLE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;session_preload_libraries&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pg_hint_plan&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果是这样的话，也是可以解决的，通常来说只要有其他的用户或者其他的数据库可以正常登陆，就可以通过&lt;code&gt;ALTER TABLE&lt;/code&gt;语句把这两行配置给去掉。&lt;/p&gt;
&lt;p&gt;但坏事就坏在，所有的用户和数据库都配了这个参数，以至于没有任何一条连接能连到数据库了。&lt;/p&gt;
&lt;p&gt;这种情况下，数据库就成了植物人状态，postmaster还活着，但任何新创建的后端服务器进程都会因为扩展失效自杀……。即使&lt;code&gt;dropdb&lt;/code&gt;这种外部自带的二进制命令也无法工作。&lt;/p&gt;
&lt;h2 id=&#34;于是&#34;&gt;于是……&lt;/h2&gt;
&lt;p&gt;无法建立到数据库的连接，那么常规手段就都失效了……，只能Dirty hack了。&lt;/p&gt;
&lt;p&gt;如果我们从二进制层面把用户和数据库级别的配置项给抹掉，那么就可以连接到数据库，把扩展给清理掉了。&lt;/p&gt;
&lt;p&gt;DB与Role级别的配置存储在系统目录&lt;code&gt;pg_db_role_setting&lt;/code&gt;中，这个表有着固定的OID = 2964，存储在数据目录下&lt;code&gt;global/2964&lt;/code&gt;里。关闭数据库，使用二进制编辑器打开&lt;code&gt;pg_db_role_setting&lt;/code&gt;对应的文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# vim打开后使用 :%!xxd 编辑二进制&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 编辑完成后使用 :%!xxd -r转换回二进制，再用:wq保存&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vi &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGDATA&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;/global/2964
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/img/blog/pg/pit-extension.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里，将所有的&lt;code&gt;pg_hint_plan&lt;/code&gt;字符串都替换成等长的&lt;code&gt;^@&lt;/code&gt;二进制零字符即可。当然如果不在乎原来的配置，更省事的做法是直接把这个文件截断成零长文件。&lt;/p&gt;
&lt;p&gt;重启数据库，终于又能连接上了。&lt;/p&gt;
&lt;h2 id=&#34;复现&#34;&gt;复现&lt;/h2&gt;
&lt;p&gt;这个问题复现起来也非常简单，初始化一个新数据库实例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;initdb -D /pg/test -U postgres &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; pg_ctl -D /pg/test start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后执行以下语句，就可以体会这种酸爽了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;psql&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;ALTER ROLE postgres SET session_preload_libraries = pg_hint_plan;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;教训&#34;&gt;教训……&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;安装扩展后，一定要先验证扩展本身可以正常工作，再&lt;strong&gt;启用&lt;/strong&gt;扩展&lt;/li&gt;
&lt;li&gt;凡事留一线，日后好相见：一个紧急备用的纯洁的su，或者一个无污染的可连接数据库，都不至于这么麻烦。&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: PipelineDB快速上手</title>
      <link>/zh/blog/admin/pipeline-intro/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/admin/pipeline-intro/</guid>
      <description>
        
        
        &lt;h2 id=&#34;pipelinedb安装与配置&#34;&gt;PipelineDB安装与配置&lt;/h2&gt;
&lt;p&gt;PipelineDB可以直接通过官方rpm包安装。&lt;/p&gt;
&lt;p&gt;加载PipelineDB需要添加动态链接库，在&lt;code&gt;postgresql.conf&lt;/code&gt;中修改配置项并重启：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;shared_preload_libraries&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;pipelinedb&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;max_worker_processes&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;128&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意如果不修改&lt;code&gt;max_worker_processes&lt;/code&gt;会报错。其他配置都参照标准的PostgreSQL&lt;/p&gt;
&lt;h2 id=&#34;pipelinedb使用样例--维基pv数据&#34;&gt;PipelineDB使用样例 —— 维基PV数据&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 创建Stream
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FOREIGN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;wiki_stream&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;hour&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;timestamp&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;view_count&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;bigint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;bigint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SERVER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pipelinedb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 在Stream上进行聚合
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;VIEW&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;wiki_stats&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;materialize&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;hour&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;total_pages&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;sum&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;view_count&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;total_views&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;min&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;view_count&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;min_views&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;max&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;view_count&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;max_views&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;avg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;view_count&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;avg_views&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;percentile_cont&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;WITHIN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GROUP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;view_count&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;p99_views&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;sum&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;total_bytes_served&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;wiki_stream&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GROUP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;hour&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，向Stream中插入数据：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -sL http://pipelinedb.com/data/wiki-pagecounts &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; gunzip &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;        psql -c &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        COPY wiki_stream (hour, project, title, view_count, size) FROM STDIN&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;基本概念&#34;&gt;基本概念&lt;/h2&gt;
&lt;p&gt;PipelineDB中的基本抽象被称之为：&lt;strong&gt;连续视图（Continuous View）&lt;/strong&gt;。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: TimescaleDB 快速上手</title>
      <link>/zh/blog/admin/timescale-install/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/admin/timescale-install/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;官方网站：https://www.timescale.com&lt;/li&gt;
&lt;li&gt;官方文档：https://docs.timescale.com/v0.9/main&lt;/li&gt;
&lt;li&gt;Github：https://github.com/timescale/timescaledb&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;为什么使用timescaledb&#34;&gt;为什么使用TimescaleDB&lt;/h2&gt;
&lt;h3 id=&#34;什么是时间序列数据&#34;&gt;什么是时间序列数据？&lt;/h3&gt;
&lt;p&gt;我们一直在谈论什么是“时间序列数据”，以及与其他数据有何不同以及为什么？&lt;/p&gt;
&lt;p&gt;许多应用程序或数据库实际上采用的是过于狭窄的视图，并将时间序列数据与特定形式的服务器度量值等同起来：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Name:    CPU
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Tags:    Host=MyServer, Region=West
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Data:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2017-01-01 01:02:00    70
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2017-01-01 01:03:00    71
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2017-01-01 01:04:00    72
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2017-01-01 01:05:01    68
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但实际上，在许多监控应用中，通常会收集不同的指标（例如，CPU，内存，网络统计数据，电池寿命）。因此，单独考虑每个度量并不总是有意义的。考虑这种替代性的“更广泛”的数据模型，它保持了同时收集的指标之间的相关性。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Metrics: CPU, free_mem, net_rssi, battery
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Tags:    Host=MyServer, Region=West
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Data:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2017-01-01 01:02:00    70    500    -40    80
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2017-01-01 01:03:00    71    400    -42    80
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2017-01-01 01:04:00    72    367    -41    80
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2017-01-01 01:05:01    68    750    -54    79
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这类数据属于&lt;strong&gt;更广泛的&lt;/strong&gt;类别，无论是来自传感器的温度读数，股票价格，机器状态，甚至是登录应用程序的次数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;时间序列数据是统一表示系统，过程或行为随时间变化的数据。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;时间序列数据的特征&#34;&gt;时间序列数据的特征&lt;/h3&gt;
&lt;p&gt;如果仔细研究它是如何生成和摄入的，TimescaleDB等时间序列数据库通常具有以下重要特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;以时间为中心&lt;/strong&gt;：数据记录始终有一个时间戳。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;仅追加-&lt;/strong&gt;：数据是几乎完全追加只（插入）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最近&lt;/strong&gt;：新数据通常是关于最近的时间间隔，我们更少更新或回填旧时间间隔的缺失数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;尽管数据的频率或规律性并不重要，它可以每毫秒或每小时收集一次。它也可以定期或不定期收集（例如，当发生某些&lt;em&gt;事件&lt;/em&gt;时，而不是在预先确定的时间）。&lt;/p&gt;
&lt;p&gt;但是没有数据库很久没有时间字段？与标准关系“业务”数据等其他数据相比，时间序列数据（以及支持它们的数据库）之间的一个主要区别是&lt;strong&gt;对数据的更改是插入而不是覆盖&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;时间序列数据无处不在&#34;&gt;时间序列数据无处不在&lt;/h3&gt;
&lt;p&gt;时间序列数据无处不在，但有些环境特别是在洪流中创建。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;监控计算机系统&lt;/strong&gt;：虚拟机，服务器，容器指标（CPU，可用内存，网络/磁盘IOP），服务和应用程序指标（请求率，请求延迟）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;金融交易系统&lt;/strong&gt;：经典证券，较新的加密货币，支付，交易事件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;物联网&lt;/strong&gt;：工业机器和设备上的传感器，可穿戴设备，车辆，物理容器，托盘，智能家居的消费设备等的数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;事件应用程序&lt;/strong&gt;：用户/客户交互数据，如点击流，综合浏览量，登录，注册等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;商业智能&lt;/strong&gt;：跟踪关键指标和业务的整体健康状况。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;环境监测&lt;/strong&gt;：温度，湿度，压力，pH值，花粉计数，空气流量，一氧化碳（CO），二氧化氮（NO2），颗粒物质（PM10）。&lt;/li&gt;
&lt;li&gt;（和更多）&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;时序数据模型&#34;&gt;时序数据模型&lt;/h2&gt;
&lt;p&gt;TimescaleDB使用“宽表”数据模型，这在关系数据库中是非常普遍的。这使得Timescale与大多数其他时间序列数据库有所不同，后者通常使用“窄表”模型。&lt;/p&gt;
&lt;p&gt;在这里，我们讨论为什么我们选择宽表模型，以及我们如何推荐将它用于时间序列数据，使用物联网（IoT）示例。&lt;/p&gt;
&lt;p&gt;设想一个由1,000个IoT设备组成的分布式组，旨在以不同的时间间隔收集环境数据。这些数据可能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;标识符：&lt;/strong&gt; &lt;code&gt;device_id&lt;/code&gt;，&lt;code&gt;timestamp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;元数据：&lt;/strong&gt; &lt;code&gt;location_id&lt;/code&gt;，，，&lt;code&gt;dev_type``firmware_version``customer_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设备指标：&lt;/strong&gt; &lt;code&gt;cpu_1m_avg&lt;/code&gt;，，，，，&lt;code&gt;free_mem``used_mem``net_rssi``net_loss``battery&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;传感器指标：&lt;/strong&gt; &lt;code&gt;temperature&lt;/code&gt;，，，，，&lt;code&gt;humidity``pressure``CO``NO2``PM10&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如，您的传入数据可能如下所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;时间戳&lt;/th&gt;
&lt;th&gt;设备ID&lt;/th&gt;
&lt;th&gt;cpu_1m_avg&lt;/th&gt;
&lt;th&gt;Fri_mem&lt;/th&gt;
&lt;th&gt;温度&lt;/th&gt;
&lt;th&gt;LOCATION_ID&lt;/th&gt;
&lt;th&gt;dev_type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2017-01-01 01:02:00&lt;/td&gt;
&lt;td&gt;ABC123&lt;/td&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;500MB&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;td&gt;335&lt;/td&gt;
&lt;td&gt;领域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017-01-01 01:02:23&lt;/td&gt;
&lt;td&gt;def456&lt;/td&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;400MB&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;335&lt;/td&gt;
&lt;td&gt;屋顶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017-01-01 01:02:30&lt;/td&gt;
&lt;td&gt;ghi789&lt;/td&gt;
&lt;td&gt;120&lt;/td&gt;
&lt;td&gt;0MB&lt;/td&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;屋顶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017-01-01 01:03:12&lt;/td&gt;
&lt;td&gt;ABC123&lt;/td&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;500MB&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;td&gt;335&lt;/td&gt;
&lt;td&gt;领域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017-01-01 01:03:35&lt;/td&gt;
&lt;td&gt;def456&lt;/td&gt;
&lt;td&gt;95&lt;/td&gt;
&lt;td&gt;350MB&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;335&lt;/td&gt;
&lt;td&gt;屋顶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017-01-01 01:03:42&lt;/td&gt;
&lt;td&gt;ghi789&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;100MB&lt;/td&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;屋顶&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;现在，我们来看看用这些数据建模的各种方法。&lt;/p&gt;
&lt;h3 id=&#34;窄表模型&#34;&gt;窄表模型&lt;/h3&gt;
&lt;p&gt;大多数时间序列数据库将以下列方式表示这些数据：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代表每个指标作为一个单独的实体（例如，表示与作为两个不同的东西）&lt;code&gt;cpu_1m_avg``free_mem&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;为该指标存储一系列“时间”，“值”对&lt;/li&gt;
&lt;li&gt;将元数据值表示为与该指标/标记集组合关联的“标记集”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这个模型中，每个度量/标签集组合被认为是包含一系列时间/值对的单独“时间序列”。&lt;/p&gt;
&lt;p&gt;使用我们上面的例子，这种方法会导致9个不同的“时间序列”，每个“时间序列”由一组独特的标签定义。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. {name:  cpu_1m_avg,  device_id: abc123,  location_id: 335,  dev_type: field}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. {name:  cpu_1m_avg,  device_id: def456,  location_id: 335,  dev_type: roof}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3. {name:  cpu_1m_avg,  device_id: ghi789,  location_id:  77,  dev_type: roof}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4. {name:    free_mem,  device_id: abc123,  location_id: 335,  dev_type: field}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5. {name:    free_mem,  device_id: def456,  location_id: 335,  dev_type: roof}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;6. {name:    free_mem,  device_id: ghi789,  location_id:  77,  dev_type: roof}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7. {name: temperature,  device_id: abc123,  location_id: 335,  dev_type: field}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;8. {name: temperature,  device_id: def456,  location_id: 335,  dev_type: roof}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;9. {name: temperature,  device_id: ghi789,  location_id:  77,  dev_type: roof}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样的时间序列的数量与每个标签的基数的叉积（即，（＃名称）×（＃设备ID）×（＃位置ID）×（设备类型））的交叉积。&lt;/p&gt;
&lt;p&gt;而且这些“时间序列”中的每一个都有自己的一组时间/值序列。&lt;/p&gt;
&lt;p&gt;现在，如果您独立收集每个指标，而且元数据很少，则此方法可能有用。&lt;/p&gt;
&lt;p&gt;但总的来说，我们认为这种方法是有限的。它会丢失数据中的固有结构，使得难以提出各种有用的问题。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统状态到0 时是什么状态？&lt;code&gt;free_mem&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如何关联？&lt;code&gt;cpu_1m_avg``free_mem&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;平均值是多少？&lt;code&gt;temperature``location_id&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们也发现这种方法认知混乱。我们是否真的收集了9个不同的时间序列，或者只是一个包含各种元数据和指标读数的数据集？&lt;/p&gt;
&lt;h3 id=&#34;宽表模型&#34;&gt;宽表模型&lt;/h3&gt;
&lt;p&gt;相比之下，TimescaleDB使用宽表模型，它反映了数据中的固有结构。&lt;/p&gt;
&lt;p&gt;我们的宽表模型看起来与初始数据流完全一样：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;时间戳&lt;/th&gt;
&lt;th&gt;设备ID&lt;/th&gt;
&lt;th&gt;cpu_1m_avg&lt;/th&gt;
&lt;th&gt;Fri_mem&lt;/th&gt;
&lt;th&gt;温度&lt;/th&gt;
&lt;th&gt;LOCATION_ID&lt;/th&gt;
&lt;th&gt;dev_type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2017-01-01 01:02:00&lt;/td&gt;
&lt;td&gt;ABC123&lt;/td&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;500MB&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;领域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017-01-01 01:02:23&lt;/td&gt;
&lt;td&gt;def456&lt;/td&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;400MB&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;屋顶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017-01-01 01:02:30&lt;/td&gt;
&lt;td&gt;ghi789&lt;/td&gt;
&lt;td&gt;120&lt;/td&gt;
&lt;td&gt;0MB&lt;/td&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;屋顶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017-01-01 01:03:12&lt;/td&gt;
&lt;td&gt;ABC123&lt;/td&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;500MB&lt;/td&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;领域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017-01-01 01:03:35&lt;/td&gt;
&lt;td&gt;def456&lt;/td&gt;
&lt;td&gt;95&lt;/td&gt;
&lt;td&gt;350MB&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;屋顶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017-01-01 01:03:42&lt;/td&gt;
&lt;td&gt;ghi789&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;100MB&lt;/td&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;屋顶&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在这里，每一行都是一个新的读数，在给定的时间里有一组度量和元数据。这使我们能够保留数据中的关系，并提出比以前更有趣或探索性更强的问题。&lt;/p&gt;
&lt;p&gt;当然，这不是一种新的格式：这是在关系数据库中常见的。这也是为什么我们发现这种格式更直观的原因。&lt;/p&gt;
&lt;h3 id=&#34;与关系数据join&#34;&gt;与关系数据JOIN&lt;/h3&gt;
&lt;p&gt;TimescaleDB的数据模型与关系数据库还有另一个相似之处：它支持JOIN。具体来说，可以将附加元数据存储在辅助表中，然后在查询时使用该数据。&lt;/p&gt;
&lt;p&gt;在我们的示例中，可以有一个单独的位置表，映射到该位置的其他元数据。例如：&lt;code&gt;location_id&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;LOCATION_ID&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;纬度&lt;/th&gt;
&lt;th&gt;经度&lt;/th&gt;
&lt;th&gt;邮政编码&lt;/th&gt;
&lt;th&gt;地区&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;大中央车站&lt;/td&gt;
&lt;td&gt;40.7527°N&lt;/td&gt;
&lt;td&gt;73.9772°W&lt;/td&gt;
&lt;td&gt;10017&lt;/td&gt;
&lt;td&gt;NYC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;大厅7&lt;/td&gt;
&lt;td&gt;42.3593°N&lt;/td&gt;
&lt;td&gt;71.0935°W&lt;/td&gt;
&lt;td&gt;02139&lt;/td&gt;
&lt;td&gt;马萨诸塞&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;然后在查询时，通过加入我们的两个表格，可以提出如下问题：10017 中我们的设备的平均值是多少？&lt;code&gt;free_mem``zip_code&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果没有联接，则需要对数据进行非规范化并将所有元数据存储在每个测量行中。这造成数据膨胀，并使数据管理更加困难。&lt;/p&gt;
&lt;p&gt;通过连接，可以独立存储元数据，并更轻松地更新映射。&lt;/p&gt;
&lt;p&gt;例如，如果我们想更新我们的“区域”为77（例如从“马萨诸塞州”到“波士顿”），我们可以进行此更改，而不必返回并覆盖历史数据。&lt;code&gt;location_id&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;架构与概念&#34;&gt;架构与概念&lt;/h2&gt;
&lt;p&gt;TimescaleDB作为PostgreSQL的扩展实现，这意味着Timescale数据库在整个PostgreSQL实例中运行。该扩展模型允许数据库利用PostgreSQL的许多属性，如可靠性，安全性以及与各种第三方工具的连接性。同时，TimescaleDB通过在PostgreSQL的查询规划器，数据模型和执行引擎中添加钩子，充分利用扩展可用的高度自定义。&lt;/p&gt;
&lt;p&gt;从用户的角度来看，TimescaleDB公开了一些看起来像单数表的称为&lt;strong&gt;hypertable的&lt;/strong&gt;表，它们实际上是一个抽象或许多单独表的虚拟视图，称为&lt;strong&gt;块&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;可改变和块&#34; src=&#34;https://assets.iobeam.com/images/docs/illustration-hypertable-chunk.svg&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过将hypertable的数据划分为一个或多个维度来创建块：所有可编程元素按时间间隔分区，并且可以通过诸如设备ID，位置，用户ID等的关键字进行分区。我们有时将此称为分区横跨“时间和空间”。&lt;/p&gt;
&lt;h3 id=&#34;术语&#34;&gt;术语&lt;/h3&gt;
&lt;h4 id=&#34;hypertables&#34;&gt;Hypertables&lt;/h4&gt;
&lt;p&gt;与数据交互的主要点是一个可以抽象化的跨越所有空间和时间间隔的单个连续表，从而可以通过标准SQL查询它。&lt;/p&gt;
&lt;p&gt;实际上，所有与TimescaleDB的用户交互都是使用可调整的。创建表格和索引，修改表格，插入数据，选择数据等都可以（也应该）在hypertable上执行。[[跳转到基本的SQL操作] [jumpSQL]]&lt;/p&gt;
&lt;p&gt;一个带有列名和类型的标准模式定义了一个hypertable，其中至少一列指定了一个时间值，另一列（可选）指定了一个额外的分区键。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;提示：请参阅我们的[数据模型] []，以进一步讨论组织数据的各种方法，具体取决于您的使用情况; 最简单和最自然的就像许多关系数据库一样在“宽桌”中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;单个TimescaleDB部署可以存储多个可更改的超文本，每个超文本具有不同的架构。&lt;/p&gt;
&lt;p&gt;在TimescaleDB中创建一个可超过的值需要两个简单的SQL命令:( 使用标准的SQL语法），后面跟着。&lt;code&gt;CREATE TABLE``SELECT create_hypertable()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;时间索引和分区键自动创建在hypertable上，尽管也可以创建附加索引（并且TimescaleDB支持所有PostgreSQL索引类型）。&lt;/p&gt;
&lt;h4 id=&#34;chunk&#34;&gt;Chunk&lt;/h4&gt;
&lt;p&gt;在内部，TimescaleDB自动将每个可分&lt;strong&gt;区块&lt;/strong&gt;分割成&lt;strong&gt;块&lt;/strong&gt;，每个块对应于特定的时间间隔和分区键空间的一个区域（使用散列）。这些分区是不相交的（非重叠的），这有助于查询计划人员最小化它必须接触以解决查询的组块集合。&lt;/p&gt;
&lt;p&gt;每个块都使用标准数据库表来实现。（在PostgreSQL内部，这个块实际上是一个“父”可变的“子表”。）&lt;/p&gt;
&lt;p&gt;块是正确的大小，确保表的索引的所有B树可以在插入期间驻留在内存中。这样可以避免在修改这些树中的任意位置时发生颠簸。&lt;/p&gt;
&lt;p&gt;此外，通过避免过大的块，我们可以避免根据自动化保留策略删除删除的数据时进行昂贵的“抽真空”操作。运行时可以通过简单地删除块（内部表）来执行这些操作，而不是删除单独的行。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;单节点与集群&#34;&gt;单节点与集群&lt;/h2&gt;
&lt;p&gt;TimescaleDB在&lt;strong&gt;单节点&lt;/strong&gt;部署和&lt;strong&gt;集群&lt;/strong&gt;部署（开发中）上执行这种广泛的分区。虽然分区传统上只用于在多台机器上扩展，但它也允许我们扩展到高写入速率（并改进了并行查询），即使在单台机器上也是如此。&lt;/p&gt;
&lt;p&gt;TimescaleDB的当前开源版本仅支持单节点部署。值得注意的是，TimescaleDB的单节点版本已经在商用机器上基于超过100亿行高可用性进行了基准测试，而没有插入性能的损失。&lt;/p&gt;
&lt;h3 id=&#34;单节点分区的好处&#34;&gt;单节点分区的好处&lt;/h3&gt;
&lt;p&gt;在单台计算机上扩展数据库性能的常见问题是内存和磁盘之间的显着成本/性能折衷。最终，我们的整个数据集不适合内存，我们需要将我们的数据和索引写入磁盘。&lt;/p&gt;
&lt;p&gt;一旦数据足够大以至于我们无法将索引的所有页面（例如B树）放入内存中，那么更新树的随机部分可能会涉及从磁盘交换数据。像PostgreSQL这样的数据库为每个表索引保留一个B树（或其他数据结构），以便有效地找到该索引中的值。所以，当您索引更多列时，问题会复杂化。&lt;/p&gt;
&lt;p&gt;但是，由于TimescaleDB创建的每个块本身都存储为单独的数据库表，因此其所有索引都只能建立在这些小得多的表中，而不是代表整个数据集的单个表。所以，如果我们正确地确定这些块的大小，我们可以将最新的表（和它们的B-树）完全放入内存中，并避免交换到磁盘的问题，同时保持对多个索引的支持。&lt;/p&gt;
&lt;p&gt;有关TimescaleDB自适应空间/时间组块的动机和设计的更多信息，请参阅我们的[技术博客文章] [chunking]。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;timescaledb-与-postgresql-相比&#34;&gt;TimescaleDB 与 PostgreSQL 相比&lt;/h2&gt;
&lt;p&gt;TimescaleDB相对于存储时间序列数据的vanilla PostgreSQL或其他传统RDBMS提供了三大优势：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据采集率要高得多，尤其是在数据库规模较大的情况下。&lt;/li&gt;
&lt;li&gt;查询性能从相当于&lt;em&gt;数量级更大&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;时间导向的功能。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;而且由于TimescaleDB仍然允许您使用PostgreSQL的全部功能和工具 - 例如，与关系表联接，通过PostGIS进行地理空间查询，以及任何可以说PostgreSQL的连接器 - &lt;strong&gt;都没&lt;/strong&gt;有理由&lt;strong&gt;不&lt;/strong&gt;使用TimescaleDB来存储时间序列PostgreSQL节点中的数据。&lt;code&gt;pg_dump``pg_restore&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;更高的写入速率&#34;&gt;更高的写入速率&lt;/h3&gt;
&lt;p&gt;对于时间序列数据，TimescaleDB比PostgreSQL实现更高且更稳定的采集速率。正如我们的&lt;a href=&#34;https://docs.timescale.com/introduction/architecture#benefits-chunking&#34;&gt;架构讨论中&lt;/a&gt;所描述的那样，只要索引表不能再适应内存，PostgreSQL的性能就会显着下降。&lt;/p&gt;
&lt;p&gt;特别是，无论何时插入新行，数据库都需要更新表中每个索引列的索引（例如B树），这将涉及从磁盘交换一个或多个页面。在这个问题上抛出更多的内存只会拖延不可避免的，一旦您的时间序列表达到数千万行，每秒10K-100K +行的吞吐量就会崩溃到每秒数百行。&lt;/p&gt;
&lt;p&gt;TimescaleDB通过大量利用时空分区来解决这个问题，即使在&lt;em&gt;单台机器上&lt;/em&gt;运行&lt;em&gt;也是如此&lt;/em&gt;。因此，对最近时间间隔的所有写入操作仅适用于保留在内存中的表，因此更新任何二级索引的速度也很快。&lt;/p&gt;
&lt;p&gt;基准测试显示了这种方法的明显优势。数据库客户端插入适度大小的包含时间，设备标记集和多个数字指标（在本例中为10）的批量数据，以下10亿行（在单台计算机上）的基准测试模拟常见监控方案。在这里，实验在具有网络连接的SSD存储的标准Azure VM（DS4 v2,8核心）上执行。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;img&#34; src=&#34;https://assets.timescale.com/benchmarks/timescale-vs-postgres-insert-1B.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们观察到PostgreSQL和TimescaleDB对于前20M请求的启动速度大约相同（分别为106K和114K），或者每秒超过1M指标。然而，在大约五千万行中，PostgreSQL的表现开始急剧下降。在过去的100M行中，它的平均值仅为5K行/秒，而TimescaleDB保留了111K行/秒的吞吐量。&lt;/p&gt;
&lt;p&gt;简而言之，Timescale在PostgreSQL的总时间的&lt;strong&gt;十五分&lt;/strong&gt;之一中加载了十亿行数据库，并且吞吐量超过了PostgreSQL在这些较大规模时的&lt;strong&gt;20倍&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我们的TimescaleDB基准测试表明，即使使用单个磁盘，它仍能保持超过10B行的恒定性能。&lt;/p&gt;
&lt;p&gt;此外，用户在一台计算机上利用多个磁盘时，可以为数&lt;strong&gt;以十亿计的行提供&lt;/strong&gt;稳定的性能，无论是采用RAID配置，还是使用TimescaleDB支持在多个磁盘上传播单个超级缓存（通过多个表空间传统的PostgreSQL表）。&lt;/p&gt;
&lt;h3 id=&#34;卓越或类似的查询性能&#34;&gt;卓越或类似的查询性能&lt;/h3&gt;
&lt;p&gt;在单磁盘机器上，许多只执行索引查找或表扫描的简单查询在PostgreSQL和TimescaleDB之间表现相似。&lt;/p&gt;
&lt;p&gt;例如，在具有索引时间，主机名和CPU使用率信息的100M行表上，对于每个数据库，以下查询将少于5毫秒：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SELECT date_trunc(&amp;#39;minute&amp;#39;, time) AS minute, max(user_usage)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  FROM cpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  WHERE hostname = &amp;#39;host_1234&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    AND time &amp;gt;= &amp;#39;2017-01-01 00:00&amp;#39; AND time &amp;lt; &amp;#39;2017-01-01 01:00&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  GROUP BY minute ORDER BY minute;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;涉及对索引进行基本扫描的类似查询在两者之间也是等效的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SELECT * FROM cpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  WHERE usage_user &amp;gt; 90.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    AND time &amp;gt;= &amp;#39;2017-01-01&amp;#39; AND time &amp;lt; &amp;#39;2017-01-02&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;涉及基于时间的GROUP BY的较大查询 - 在面向时间的分析中很常见 - 通常在TimescaleDB中实现卓越的性能。&lt;/p&gt;
&lt;p&gt;例如，当整个（超）表为100M行时，接触33M行的以下查询在TimescaleDB中速度提高&lt;strong&gt;5倍&lt;/strong&gt;，而在1B行时速度提高约&lt;strong&gt;2&lt;/strong&gt;倍。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SELECT date_trunc(&amp;#39;hour&amp;#39;, time) as hour,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hostname, avg(usage_user)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  FROM cpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  WHERE time &amp;gt;= &amp;#39;2017-01-01&amp;#39; AND time &amp;lt; &amp;#39;2017-01-02&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  GROUP BY hour, hostname
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ORDER BY hour;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此外，可以约时间订购专理等查询可以&lt;em&gt;多&lt;/em&gt;在TimescaleDB更好的性能。&lt;/p&gt;
&lt;p&gt;例如，TimescaleDB引入了基于时间的“合并追加”优化，以最小化必须处理以执行以下操作的组的数量（考虑到时间已经被排序）。对于我们的100M行表，这导致查询延迟比PostgreSQL快&lt;strong&gt;396&lt;/strong&gt;倍（82ms vs. 32566ms）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SELECT date_trunc(&amp;#39;minute&amp;#39;, time) AS minute, max(usage_user)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  FROM cpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  WHERE time &amp;lt; &amp;#39;2017-01-01&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  GROUP BY minute
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ORDER BY minute DESC
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  LIMIT 5;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们将很快发布PostgreSQL和TimescaleDB之间更完整的基准测试比较，以及复制我们基准的软件。&lt;/p&gt;
&lt;p&gt;我们的查询基准测试的高级结果是，对于几乎&lt;strong&gt;所有&lt;/strong&gt;我们已经尝试过的&lt;strong&gt;查询&lt;/strong&gt;，TimescaleDB都可以为PostgreSQL 实现&lt;strong&gt;类似或优越（或极其优越）的性能&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;与PostgreSQL相比，TimescaleDB的一项额外成本是更复杂的计划（假设单个可超集可由许多块组成）。这可以转化为几毫秒的计划时间，这对于非常低延迟的查询（&amp;lt;10ms）可能具有不成比例的影响。&lt;/p&gt;
&lt;h3 id=&#34;时间导向的功能&#34;&gt;时间导向的功能&lt;/h3&gt;
&lt;p&gt;TimescaleDB还包含许多在传统关系数据库中没有的时间导向功能。这些包括特殊查询优化（如上面的合并附加），它为面向时间的查询以及其他面向时间的函数（其中一些在下面列出）提供了一些巨大的性能改进。&lt;/p&gt;
&lt;h4 id=&#34;面向时间的分析&#34;&gt;面向时间的分析&lt;/h4&gt;
&lt;p&gt;TimescaleDB包含面向时间分析的&lt;em&gt;新&lt;/em&gt;功能，其中包括以下一些功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;时间分段&lt;/strong&gt;：标准功能的更强大的版本，它允许任意的时间间隔（例如5分钟，6小时等），以及灵活的分组和偏移，而不仅仅是第二，分钟，小时等。&lt;code&gt;date_trunc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最后&lt;/strong&gt;和&lt;strong&gt;第一个&lt;/strong&gt;聚合：这些函数允许您按另一个列的顺序获取一列的值。例如，将返回基于组内时间的最新温度值（例如，一小时）。&lt;code&gt;last(temperature, time)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些类型的函数能够实现非常自然的面向时间的查询。例如，以下财务查询打印每个资产的开盘价，收盘价，最高价和最低价。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SELECT time_bucket(&amp;#39;3 hours&amp;#39;, time) AS period
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    asset_code,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    first(price, time) AS opening, last(price, time) AS closing,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    max(price) AS high, min(price) AS low
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  FROM prices
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  WHERE time &amp;gt; NOW() - interval &amp;#39;7 days&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  GROUP BY period, asset_code
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ORDER BY period DESC, asset_code;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过辅助列进行排序的能力（甚至不同于集合）能够实现一些强大的查询类型。例如，财务报告中常见的技术是“双时态建模”，它们分别从与记录观察时间有关的观察时间的原因出发。在这样的模型中，更正插入为新行（具有更新的&lt;em&gt;time_recorded&lt;/em&gt;字段），并且不替换现有数据。&lt;code&gt;last&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以下查询返回每个资产的每日价格，按最新记录的价格排序。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SELECT time_bucket(&amp;#39;1 day&amp;#39;, time) AS day,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    asset_code,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    last(price, time_recorded)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  FROM prices
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  WHERE time &amp;gt; &amp;#39;2017-01-01&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  GROUP BY day, asset_code
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ORDER BY day DESC, asset_code;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;有关TimescaleDB当前（和增长中）时间功能列表的更多信息，请&lt;a href=&#34;https://docs.timescale.com/api#time_bucket&#34;&gt;参阅我们的API&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;面向时间的数据管理&#34;&gt;面向时间的数据管理&lt;/h4&gt;
&lt;p&gt;TimescaleDB还提供了某些在PostgreSQL中不易获取或执行的数据管理功能。例如，在处理时间序列数据时，数据通常会很快建立起来。因此，您希望按照“仅存储一周原始数据”的方式编写&lt;em&gt;数据保留&lt;/em&gt;策略。&lt;/p&gt;
&lt;p&gt;实际上，将这与使用连续聚合相结合是很常见的，因此您可以保留两个可改写的数据：一个包含原始数据，另一个包含已经汇总为精细或小时聚合的数据。然后，您可能需要在两个（超）表上定义不同的保留策略，以长时间存储汇总的数据。&lt;/p&gt;
&lt;p&gt;TimescaleDB允许通过其功能有效地删除&lt;strong&gt;块&lt;/strong&gt;级别的旧数据，而不是行级别的旧数据。&lt;code&gt;drop_chunks&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SELECT drop_chunks(interval &amp;#39;7 days&amp;#39;, &amp;#39;conditions&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这将删除只包含比此持续时间早的数据的可超级“条件”中的所有块（文件），而不是删除块中的任何单独数据行。这避免了底层数据库文件中的碎片，这反过来又避免了在非常大的表格中可能过于昂贵的抽真空的需要。&lt;/p&gt;
&lt;p&gt;有关更多详细信息，请参阅我们的&lt;a href=&#34;https://docs.timescale.com/api/data-retention&#34;&gt;数据保留&lt;/a&gt;讨论，包括如何自动执行数据保留策略。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;timescaledb之于nosql&#34;&gt;TimescaleDB之于NoSQL&lt;/h2&gt;
&lt;p&gt;与一般的NoSQL数据库（例如MongoDB，Cassandra）或更专门的时间导向数据库（例如InfluxDB，KairosDB）相比，TimescaleDB提供了定性和定量差异：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;普通SQL&lt;/strong&gt;：即使在规模上，TimescaleDB也可以为时间序列数据提供标准SQL查询的功能。大多数（所有？）NoSQL数据库都需要学习新的查询语言或使用最好的“SQL-ish”（它仍然与现有工具兼容）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;操作简单&lt;/strong&gt;：使用TimescaleDB，您只需要为关系数据和时间序列数据管理一个数据库。否则，用户通常需要将数据存储到两个数据库中：“正常”关系数据库和第二个时间序列数据库。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JOIN&lt;/strong&gt;可以通过关系数据和时间序列数据执行。&lt;/li&gt;
&lt;li&gt;对于不同的查询集，查询&lt;strong&gt;性能&lt;/strong&gt;更快。在NoSQL数据库中，更复杂的查询通常是缓慢或全表扫描，而有些数据库甚至无法支持许多自然查询。&lt;/li&gt;
&lt;li&gt;**像PostgreSQL一样管理，**并继承对不同数据类型和索引（B树，哈希，范围，BRIN，GiST，GIN）的支持。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对地理空间数据的本地支持&lt;/strong&gt;：存储在TimescaleDB中的数据可以利用PostGIS的几何数据类型，索引和查询。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第三方工具&lt;/strong&gt;：TimescaleDB支持任何可以说SQL的东西，包括像Tableau这样的BI工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;何时不使用timescaledb&#34;&gt;何时&lt;em&gt;不&lt;/em&gt;使用TimescaleDB？&lt;/h3&gt;
&lt;p&gt;然后，如果以下任一情况属实，则可能不想使用TimescaleDB：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;简单的读取要求&lt;/strong&gt;：如果您只需要快速键值查找或单列累积，则内存或列导向数据库可能更合适。前者显然不能扩展到相同的数据量，但是，后者的性能明显低于更复杂的查询。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;非常稀疏或非结构化的数据&lt;/strong&gt;：尽管TimescaleDB利用PostgreSQL对JSON / JSONB格式的支持，并且相当有效地处理稀疏性（空值的位图），但在某些情况下，无模式体系结构可能更合适。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重要的压缩是一个优先事项&lt;/strong&gt;：基准测试显示在ZFS上运行的TimescaleDB获得约4倍的压缩率，但压缩优化的列存储可能更适合于更高的压缩率。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不频繁或离线分析&lt;/strong&gt;：如果响应时间较慢（或响应时间限于少量预先计算的度量标准），并且您不希望许多应用程序/用户同时访问该数据，则可以避免使用数据库，而只是将数据存储在分布式文件系统中。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt;下直接使用 brew 安装，最省事的方法，可以连PostgreSQL和PostGIS一起装了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Add our tap&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew tap timescale/tap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# To install&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install timescaledb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Post-install to move files to appropriate place&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/local/bin/timescaledb_move.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 EL 系操作系统下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo yum install -y https://download.postgresql.org/pub/repos/yum/9.6/redhat/fedora-7.2-x86_64/pgdg-redhat10-10-1.noarch.rpm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://timescalereleases.blob.core.windows.net/rpm/timescaledb-0.9.0-postgresql-9.6-0.x86_64.rpm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# For PostgreSQL 10:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://timescalereleases.blob.core.windows.net/rpm/timescaledb-0.9.0-postgresql-10-0.x86_64.rpm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# To install&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo yum install timescaledb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;postgresql.conf&lt;/code&gt;中添加以下配置，即可在PostgreSQL启动时加载该插件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;shared_preload_libraries&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;timescaledb&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在数据库中执行以下命令以创建timescaledb扩展。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;EXTENSION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;timescaledb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;调参&#34;&gt;调参&lt;/h2&gt;
&lt;p&gt;对timescaledb比较重要的参数是锁的数量。&lt;/p&gt;
&lt;p&gt;TimescaleDB在很大程度上依赖于表分区来扩展时间序列工作负载，这对&lt;a href=&#34;https://www.postgresql.org/docs/current/static/runtime-config-locks.html&#34;&gt;锁管理&lt;/a&gt;有影响。在查询过程中，可修改需要在许多块（子表）上获取锁，这会耗尽所允许的锁的数量的默认限制。这可能会导致如下警告：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql: FATAL:  out of shared memory
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HINT:  You might need to increase max_locks_per_transaction.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了避免这个问题，有必要修改默认值（通常是64），增加最大锁的数量。由于更改此参数需要重新启动数据库，因此建议预估未来的增长。对大多数情况，推荐配置为：&lt;code&gt;max_locks_per_transaction&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;max_locks_per_transaction&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;2 * num_chunks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;num_chunks&lt;/code&gt;是在**超级表（HyperTable)&lt;strong&gt;中可能存在的&lt;/strong&gt;块（chunk）**数量上限。&lt;/p&gt;
&lt;p&gt;这种配置是考虑到对超级表查询可能申请锁的数量粗略等于超级表中的块数量，如果使用索引的话还要翻倍。&lt;/p&gt;
&lt;p&gt;注意这个参数并不是精确的限制，它只是控制每个事物中&lt;strong&gt;平均&lt;/strong&gt;的对象锁数量。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;创建超表&#34;&gt;创建超表&lt;/h2&gt;
&lt;p&gt;为了创建一个可改写的，你从一个普通的SQL表开始，然后通过函数（&lt;a href=&#34;https://docs.timescale.com/api#create_hypertable&#34;&gt;API参考&lt;/a&gt;）将它转换为一个可改写的。&lt;code&gt;create_hypertable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以下示例创建一个可随时间跨越一系列设备来跟踪温度和湿度的可调整高度。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-- We start by creating a regular SQL table
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE TABLE conditions (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  time        TIMESTAMPTZ       NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  location    TEXT              NOT NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  temperature DOUBLE PRECISION  NULL,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  humidity    DOUBLE PRECISION  NULL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，把它变成一个超表：&lt;code&gt;create_hypertable&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- This creates a hypertable that is partitioned by time
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;--   using the values in the `time` column.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;create_hypertable&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;conditions&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- OR you can additionally partition the data on another
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;--   dimension (what we call &amp;#39;space partitioning&amp;#39;).
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- E.g., to partition `location` into 4 partitions:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;create_hypertable&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;conditions&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;location&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;插入和查询&#34;&gt;插入和查询&lt;/h2&gt;
&lt;p&gt;通过普通的SQL 命令将数据插入到hypertable中，例如使用毫秒时间戳：&lt;code&gt;INSERT&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;INSERT INTO conditions(time, location, temperature, humidity)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  VALUES (NOW(), &amp;#39;office&amp;#39;, 70.0, 50.0);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同样，查询数据是通过正常的SQL 命令完成的。&lt;code&gt;SELECT&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SELECT * FROM conditions ORDER BY time DESC LIMIT 100;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL 和命令也按预期工作。有关使用TimescaleDB标准SQL接口的更多示例，请参阅我们的&lt;a href=&#34;https://docs.timescale.com/using-timescaledb&#34;&gt;使用页面&lt;/a&gt;。&lt;code&gt;UPDATE``DELETE&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: GeoIP 地理逆查询优化</title>
      <link>/zh/blog/dev/geoip/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/dev/geoip/</guid>
      <description>
        
        
        &lt;blockquote&gt;
&lt;p&gt;IP归属地查询的高效实现&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在应用开发中，一个‘很常见’的需求就是GeoIP转换。将请求的来源IP转换为相应的地理坐标，或者行政区划（国家-省-市-县-乡-镇）。这种功能有很多用途，譬如分析网站流量的地理来源，或者干一些坏事。使用PostgreSQL可以多快好省，优雅高效地实现这一需求。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;0x01-思路方法&#34;&gt;0x01 思路方法&lt;/h2&gt;
&lt;p&gt;通常网上的IP地理数据库的形式都是：&lt;code&gt;start_ip, stop_ip , longitude, latitude&lt;/code&gt;，再缀上一些国家代码，城市代码，邮编之类的属性字段。大概长这样：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Column&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;start_ip&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end_ip&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;longitude&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;latitude&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;country_code&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;……&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;说到底，其核心是从&lt;strong&gt;IP地址段&lt;/strong&gt;到&lt;strong&gt;地理坐标点&lt;/strong&gt;的映射。&lt;/p&gt;
&lt;p&gt;典型查询实际上是给出一个IP地址，返回该地址对应的地理范围。其逻辑用SQL来表示差不多长这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;longitude&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;latitude&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;geoip&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;start_ip&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;target_ip&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;target_ip&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;stop_ip&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不过，想直接提供服务，还有几个问题需要解决：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一个问题：虽然IPv4实际上是一个&lt;code&gt;uint32&lt;/code&gt;，但我们已经完全习惯了&lt;code&gt;123.123.123.123&lt;/code&gt;这种文本表示形式。而这种文本表示形式是无法比较大小的。&lt;/li&gt;
&lt;li&gt;第二个问题：这里的IP范围是用两个IP边界字段表示的范围，那么这个范围是开区间还是闭区间呢？是不是还需要一个额外字段来表示？&lt;/li&gt;
&lt;li&gt;第三个问题：想要高效地查询，那么在两个字段上的索引又该如何建立？&lt;/li&gt;
&lt;li&gt;第四个问题：我们希望所有的IP段相互之间不会出现重叠，但简单的建立在&lt;code&gt;(start_ip, stop_ip)&lt;/code&gt;上的唯一约束并无法保证这一点，那又如何是好？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;令人高兴的是，对于PostgreSQL而言，这些都不是问题。上面四个问题，可以轻松使用PostgreSQL的特性解决。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络数据类型：高性能，紧凑，灵活的网络地址表示。&lt;/li&gt;
&lt;li&gt;范围类型：对区间的良好抽象，对区间查询与操作的良好支持。&lt;/li&gt;
&lt;li&gt;GiST索引：既能作用于IP地址段，也可以用于地理位置点。&lt;/li&gt;
&lt;li&gt;Exclude约束：泛化的高级UNIQUE约束，从根本上确保数据完整性。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;0x01-网络地址类型&#34;&gt;0x01 网络地址类型&lt;/h2&gt;
&lt;p&gt;PostgreSQL提供用于存储 IPv4、IPv6 和 MAC 地址的数据类型。包括&lt;code&gt;cidr&lt;/code&gt;，&lt;code&gt;inet&lt;/code&gt;以及&lt;code&gt;macaddr&lt;/code&gt;，并且提供了很多常见的操作函数，不需要再在程序中去实现一些繁琐重复的功能。&lt;/p&gt;
&lt;p&gt;最常见的网络地址就是IPv4地址，对应着PostgreSQL内建的&lt;code&gt;inet&lt;/code&gt;类型，inet类型可以用来存储IPv4，IPv6地址，或者带上一个可选的子网。当然这些细节操作都可以&lt;a href=&#34;http://www.postgres.cn/docs/9.6/datatype-net-types.html&#34;&gt;参阅文档&lt;/a&gt;，在此不详细展开。&lt;/p&gt;
&lt;p&gt;一个需要注意的点就是，虽然我们知道IPv4实质上是一个&lt;code&gt;Unsigned Integer&lt;/code&gt;，但在数据库中实际存储成&lt;code&gt;INTEGER&lt;/code&gt;其实是不行的，因为SQL标准并不支持&lt;code&gt;Unsigned&lt;/code&gt;这种用法，所以有一半的IP地址的表示就会被解释为负数，在比大小的时候产生令人惊异的结果，真要这么存请使用&lt;code&gt;BIGINT&lt;/code&gt;。此外，直接面对一堆长长的整数也是相当令人头大的问题，&lt;code&gt;inet&lt;/code&gt;是最佳的选择。&lt;/p&gt;
&lt;p&gt;如果需要将IP地址（&lt;code&gt;inet&lt;/code&gt;类型）与对应的整数相互转换，只要与&lt;code&gt;0.0.0.0&lt;/code&gt;做加减运算即可；当然也可以使用以下函数，并创建一个类型转换，然后就能直接在&lt;code&gt;inet&lt;/code&gt;与&lt;code&gt;bigint&lt;/code&gt;之间来回转换：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- inet to bigint
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FUNCTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet2int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RETURNS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;bigint&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;$$&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;$$&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LANGUAGE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IMMUTABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RETURNS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INPUT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- bigint to inet
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FUNCTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;int2inet&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;bigint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RETURNS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;$$&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;$$&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LANGUAGE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IMMUTABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RETURNS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INPUT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- create type conversion
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CAST&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;bigint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FUNCTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet2int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CAST&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;bigint&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FUNCTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;int2inet&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;bigint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- test
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;123456&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;BIGINT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;INET&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;1.2.3.4&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;INET&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;BIGINT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 生成随机的IP地址
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;random&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4294967295&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)::&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;BIGINT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;INET&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;inet&lt;/code&gt;之间的大小比较也相当直接，直接使用大小比较运算符就可以了。实际比较的是底下的整数值。这就解决了第一个问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;0x02-范围类型&#34;&gt;0x02 范围类型&lt;/h2&gt;
&lt;p&gt;PostgreSQL的Range类型是一种很实用的功能，它与数组类似，属于一种&lt;strong&gt;泛型&lt;/strong&gt;。只要是能被B树索引（可以比大小）的数据类型，都可以作为范围类型的基础类型。它特别适合用来表示区间：整数区间，时间区间，IP地址段等等。而且对于开区间，闭区间，区间索引这类问题有比较细致的考虑。&lt;/p&gt;
&lt;p&gt;PostgreSQL内置了预定义的&lt;code&gt;int4range, int8range, numrange, tsrange, tstzrange, daterange&lt;/code&gt;，开箱即用。但没有提供网络地址对应的范围类型，好在自己造一个非常简单：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TYPE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inetrange&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;RANGE&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBTYPE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然为了高效地支持GiST索引查询，还需要实现一个距离度量，告诉索引两个&lt;code&gt;inet&lt;/code&gt;之间的距离应该如何计算：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 定义基本类型间的距离度量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FUNCTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet_diff&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;INET&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;INET&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RETURNS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;FLOAT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;$$&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;FLOAT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;$$&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LANGUAGE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IMMUTABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;STRICT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 重新创建inetrange类型，使用新定义的距离度量。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TYPE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inetrange&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;RANGE&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBTYPE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBTYPE_DIFF&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet_diff&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;幸运的是，俩网络地址之间的距离定义天然就有一个很简单的计算方法，减一下就好了。&lt;/p&gt;
&lt;p&gt;这个新定义的类型使用起来也很简单，构造函数会自动生成：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;geo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# select misc.inetrange(&amp;#39;64.60.116.156&amp;#39;,&amp;#39;64.60.116.161&amp;#39;,&amp;#39;[)&amp;#39;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;inetrange &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;64.60.116.156,64.60.116.161&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;geo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# select &amp;#39;[64.60.116.156,64.60.116.161]&amp;#39;::inetrange;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;inetrange &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;64.60.116.156,64.60.116.161&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;方括号和圆括号分别表示闭区间和开区间，与数学中的表示方法一致。&lt;/p&gt;
&lt;p&gt;同时，检测一个IP地址是否落在给定的IP范围内也是很直接的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;geo&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# select &amp;#39;[64.60.116.156,64.60.116.161]&amp;#39;::inetrange @&amp;gt; &amp;#39;64.60.116.160&amp;#39;::inet as res;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;res &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; t
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;有了范围类型，就可以着手构建我们的数据表了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;0x03-范围索引&#34;&gt;0x03 范围索引&lt;/h2&gt;
&lt;p&gt;实际上，找一份IP地理对应数据花了我一个多小时，但完成这个需求只用了几分钟。&lt;/p&gt;
&lt;p&gt;假设已经有了这样一份数据：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;geoips&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ips&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inetrange&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;geo&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;geometry&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Point&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;country_code&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;region_code&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;city_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ad_code&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postal_code&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;里面的数据大概长这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SELECT ips,ST_AsText&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;geo&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; as geo,country_code FROM geoips
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;64.60.116.156,64.60.116.161&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; POINT&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;-117.853 33.7878&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; US
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;64.60.116.139,64.60.116.154&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; POINT&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;-117.853 33.7878&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; US
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;64.60.116.138,64.60.116.138&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; POINT&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;-117.76 33.7081&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; US
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;那么查询包含某个IP地址的记录就可以写作：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ip&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ips&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;@&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inet&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;67.185.41.77&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于600万条记录，约600M的表，在笔者的机器上暴力扫表的平均用时是900ms，差不多单核QPS是1.1，48核生产机器也就差不多三四十的样子。肯定是没法用的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;geoips&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;USING&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GiST&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ips&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查询用时从1秒变为340微秒，差不多3000倍的提升。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-- pgbench
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\s&lt;/span&gt;et ip random&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0,4294967295&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SELECT * FROM geoips WHERE ips @&amp;gt; :ip::BIGINT::INET&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-- result
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;latency &lt;span style=&#34;color:#000&#34;&gt;average&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 0.342 ms
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;tps&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 2925.100036 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;including connections establishing&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;tps&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 2926.151762 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;excluding connections establishing&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;折算成生产QPS差不多是十万QPS，啧啧啧，美滋滋。&lt;/p&gt;
&lt;p&gt;如果需要把地理坐标转换为行政区划，可以参考上一篇文章：使用PostGIS高效解决行政区划归属地理编码问题。&lt;/p&gt;
&lt;p&gt;一次地理编码也就是100微秒，从IP转换为省市区县整个的QPS，单机几万基本问题不大（全天满载相当于七八十亿次调用，根本用不满）。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;0x04-exclude约束&#34;&gt;0x04 EXCLUDE约束&lt;/h2&gt;
&lt;p&gt;问题至此已经基本解决了，不过还有一个问题。如何避免一个IP查出两条记录的尴尬情况？&lt;/p&gt;
&lt;p&gt;数据完整性是极其重要的，但由应用保证的数据完整性并不总是那么靠谱：人会犯傻，程序会出错。如果能通过数据库约束来Enforce数据完整性，那是再好不过了。&lt;/p&gt;
&lt;p&gt;然而，有一些约束是相当复杂的，例如确保表中的IP范围不发生重叠，类似的，确保地理区划表中各个城市的边界不会重叠。传统上要实现这种保证是相当困难的：譬如&lt;code&gt;UNIQUE&lt;/code&gt;约束就无法表达这种语义，&lt;code&gt;CHECK&lt;/code&gt;与存储过程或者触发器虽然可以实现这种检查，但也相当tricky。PostgreSQL提供的&lt;code&gt;EXCLUDE&lt;/code&gt;约束可以优雅地解决这个问题。修改我们的&lt;code&gt;geoips&lt;/code&gt;表：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;geoips&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ips&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;inetrange&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;geo&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;geometry&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Point&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;country_code&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;region_code&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;city_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ad_code&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postal_code&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;EXCLUDE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;USING&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;gist&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ips&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DEFERRABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INITIALLY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DEFERRED&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里&lt;code&gt;EXCLUDE USING gist (ips WITH &amp;amp;&amp;amp;)  &lt;/code&gt; 的意思就是&lt;code&gt;ips&lt;/code&gt;字段上不允许出现范围重叠，即新插入的字段不能与任何现存范围重叠（&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;为真）。而&lt;code&gt;DEFERRABLE INITIALLY IMMEDIATE &lt;/code&gt;表示在语句结束时再检查所有行上的约束。创建该约束会自动在&lt;code&gt;ips&lt;/code&gt;字段上创建GIST索引，因此无需手工创建了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;0x05-小结&#34;&gt;0x05 小结&lt;/h2&gt;
&lt;p&gt;本文介绍了如何使用PostgreSQL特性高效而优雅地解决IP归属地查询的问题。性能表现优异，600w记录0.3ms定位；复杂度低到发指：只要一张表DDL，连索引都不用显式创建就解决了这一问题；数据完整性有充分的保证：百行代码才能解决的问题现在只要添加约束即可，从根本上保证数据完整性。&lt;/p&gt;
&lt;p&gt;PostgreSQL这么棒棒，快快学起来用起来吧~。 什么？你问我数据哪里找？搜索MaxMind有真相，在隐秘的小角落能够找到不要钱的GeoIP数据。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: file_fdw妙用无穷——从数据库读取系统信息</title>
      <link>/zh/blog/admin/file_fdw/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/admin/file_fdw/</guid>
      <description>
        
        
        &lt;p&gt;PostgreSQL是最先进的开源数据库，其中一个非常给力的特性就是FDW：外部数据包装器（Foreign Data Wrapper）。通过FDW，用户可以用统一的方式从Pg中访问各类外部数据源。&lt;code&gt;file_fdw&lt;/code&gt;就是其中随数据库附赠的两个fdw之一。随着pg10的更新，&lt;code&gt;file_fdw&lt;/code&gt;也添加了一颗赛艇的功能：从程序输出读取。&lt;/p&gt;
&lt;p&gt;小霸王妙用无穷，我们能通过&lt;code&gt;file_fdw&lt;/code&gt;，轻松查看操作系统信息，拉取网络数据，把各种各样的数据源轻松喂进数据库里统一查看管理。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;安装与配置&#34;&gt;安装与配置&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;file_fdw&lt;/code&gt;是Pg自带的组件，不需要奇怪的配置，在数据库中执行以下命令即可启用&lt;code&gt;file_fdw&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE EXTENSION file_fdw;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启用FDW插件之后，需要创建一个实例，也是一行SQL搞定，创建一个名为&lt;code&gt;fs&lt;/code&gt;的FDW Server实例。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE SERVER fs FOREIGN DATA WRAPPER file_fdw;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;创建外部表&#34;&gt;创建外部表&lt;/h2&gt;
&lt;p&gt;举个栗子，如果我想从数据库中读取操作系统中正在运行的进程信息，该怎么做呢？&lt;/p&gt;
&lt;p&gt;最典型，也是最常用的外部数据格式就是CSV啦。不过系统命令输出的结果并不是很规整：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; ps ux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vonng     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2658&lt;/span&gt;  0.0  0.2 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;148428&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2620&lt;/span&gt; ?        S    11:51   0:00 sshd: vonng@pts/0,pts/2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vonng     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2659&lt;/span&gt;  0.0  0.2 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;115648&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2312&lt;/span&gt; pts/0    Ss+  11:51   0:00 -bash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vonng     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4854&lt;/span&gt;  0.0  0.2 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;115648&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2272&lt;/span&gt; pts/2    Ss   15:46   0:00 -bash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vonng     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5176&lt;/span&gt;  0.0  0.1 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;150940&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1828&lt;/span&gt; pts/2    R+   16:06   0:00 ps -ux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vonng    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;26460&lt;/span&gt;  0.0  1.2 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;271808&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;13060&lt;/span&gt; ?        S    10月26   0:22 /usr/local/pgsql/bin/postgres
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vonng    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;26462&lt;/span&gt;  0.0  0.2 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;271960&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2640&lt;/span&gt; ?        Ss   10月26   0:00 postgres: checkpointer process
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vonng    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;26463&lt;/span&gt;  0.0  0.2 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;271808&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2148&lt;/span&gt; ?        Ss   10月26   0:25 postgres: writer process
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vonng    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;26464&lt;/span&gt;  0.0  0.5 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;271808&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5300&lt;/span&gt; ?        Ss   10月26   0:27 postgres: wal writer process
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vonng    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;26465&lt;/span&gt;  0.0  0.2 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;272216&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2096&lt;/span&gt; ?        Ss   10月26   0:31 postgres: autovacuum launcher process
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vonng    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;26466&lt;/span&gt;  0.0  0.1 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;126896&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1104&lt;/span&gt; ?        Ss   10月26   0:54 postgres: stats collector process
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vonng    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;26467&lt;/span&gt;  0.0  0.1 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;272100&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1588&lt;/span&gt; ?        Ss   10月26   0:01 postgres: bgworker: logical replication launcher
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以通过&lt;code&gt;awk&lt;/code&gt;，将&lt;code&gt;ps&lt;/code&gt;的命令输出规整为分隔符为&lt;code&gt;\x1F&lt;/code&gt;的csv格式。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps aux | awk &amp;#39;{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,substr($0,index($0,$11))}&amp;#39; OFS=&amp;#39;\037&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;正戏来啦！通过以下DDL创建一张外表定义&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE FOREIGN TABLE process_status (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  username TEXT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  pid      INTEGER,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cpu      NUMERIC,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  mem      NUMERIC,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  vsz      BIGINT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  rss      BIGINT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  tty      TEXT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  stat     TEXT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  start    TEXT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  time     TEXT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  command  TEXT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) SERVER fs OPTIONS (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PROGRAM $$ps aux | awk &amp;#39;{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,substr($0,index($0,$11))}&amp;#39; OFS=&amp;#39;\037&amp;#39;$$,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FORMAT &amp;#39;csv&amp;#39;, DELIMITER E&amp;#39;\037&amp;#39;, HEADER &amp;#39;TRUE&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里，关键是通过&lt;code&gt;CREATE FOREIGN TABLE OPTIONS (xxxx)&lt;/code&gt;中的&lt;code&gt;OPTIONS&lt;/code&gt;提供相应的参数，在&lt;code&gt;PROGRAM&lt;/code&gt;参数中填入上面的命令，pg就会在查询这张表的时候自动执行此命令，并读取其输出。&lt;code&gt;FORMAT&lt;/code&gt;参数可以指定为&lt;code&gt;CSV&lt;/code&gt;，&lt;code&gt;DELIMITER&lt;/code&gt;参数指定为之前使用的&lt;code&gt;\x1F&lt;/code&gt;，并通过&lt;code&gt;HEADER &#39;TRUE&#39;&lt;/code&gt;忽略CSV的第一行&lt;/p&gt;
&lt;p&gt;那么结果如何呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/blog/pg/file_fdw.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;有什么用&#34;&gt;有什么用&lt;/h2&gt;
&lt;p&gt;最简单的场景，原本系统指标监控需要编写各种监测脚本，部署在奇奇怪怪的地方。然后定期执行拉取metric，再存进数据库。现在通过file_fdw的方式，可以将感兴趣的指标直接录入数据库表，一步到位，而且维护方便，部署简单，更加可靠。在外表上加上视图，定期拉取聚合，将原本一个监控系统完成的事情，在数据库中一条龙解决了。&lt;/p&gt;
&lt;p&gt;因为可以从程序输出读取结果，因此file_fdw可以与linux生态里各类强大的命令行工具配合使用，发挥出强大的威力。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;其他栗子&#34;&gt;其他栗子&lt;/h2&gt;
&lt;p&gt;诸如此类，实际上后来我发现Facebook貌似有一个类似的产品，叫OSQuery，也是干了差不多的事。通过SQL查询操作系统的指标。但明显PostgreSQL这种方法最简单粗暴高效啦，只要定义表结构，和命令数据源就能轻松对接指标数据，用不了一天就能做出一个功能差不多的东西来。&lt;/p&gt;
&lt;p&gt;用于读取系统用户列表的DDL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE FOREIGN TABLE etc_password (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  username  TEXT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  password  TEXT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  user_id   INTEGER,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  group_id  INTEGER,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  user_info TEXT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  home_dir  TEXT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  shell     TEXT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) SERVER fs OPTIONS (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  PROGRAM $$awk -F: &amp;#39;NF &amp;amp;&amp;amp; !/^[:space:]*#/ {print $1,$2,$3,$4,$5,$6,$7}&amp;#39; OFS=&amp;#39;\037&amp;#39; /etc/passwd$$, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  FORMAT &amp;#39;csv&amp;#39;, DELIMITER E&amp;#39;\037&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;用于读取磁盘用量的DDL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE FOREIGN TABLE disk_free (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  file_system TEXT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  blocks_1m   BIGINT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  used_1m     BIGINT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  avail_1m    BIGINT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  capacity    TEXT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  iused       BIGINT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ifree       BIGINT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  iused_pct   TEXT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  mounted_on  TEXT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) SERVER fs OPTIONS (PROGRAM $$df -ml| awk &amp;#39;{print $1,$2,$3,$4,$5,$6,$7,$8,$9}&amp;#39; OFS=&amp;#39;\037&amp;#39;$$, FORMAT &amp;#39;csv&amp;#39;, HEADER &amp;#39;TRUE&amp;#39;, DELIMITER E&amp;#39;\037&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然，用file_fdw只是一个很Naive的FDW，譬如这里就只能读，不能改。&lt;/p&gt;
&lt;p&gt;自己编写FDW实现增删改查逻辑也非常简单，例如Multicorn就是使用Python编写FDW的项目。&lt;/p&gt;
&lt;p&gt;SQL over everything，让世界变的更简单~&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 源码编译安装 PostGIS</title>
      <link>/zh/blog/admin/postgis-install/</link>
      <pubDate>Thu, 07 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/admin/postgis-install/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;p&gt;强烈建议使用使用 yum / apt 命令从 PostgreSQL 官方二进制仓库安装 PostGIS。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;参考&lt;a href=&#34;http://www.postgresonline.com/journal/archives/362-An-almost-idiots-guide-to-install-PostgreSQL-9.5,-PostGIS-2.2-and-pgRouting-2.1.0-with-Yum.html&#34;&gt;http://www.postgresonline.com/journal/archives/362-An-almost-idiots-guide-to-install-PostgreSQL-9.5,-PostGIS-2.2-and-pgRouting-2.1.0-with-Yum.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1-安装环境&#34;&gt;1. 安装环境&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CentOS 7&lt;/li&gt;
&lt;li&gt;PostgreSQL10&lt;/li&gt;
&lt;li&gt;PostGIS2.4&lt;/li&gt;
&lt;li&gt;PGROUTING2.5.2&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-postgresql10安装&#34;&gt;2. PostgreSQL10安装&lt;/h3&gt;
&lt;h5 id=&#34;21-确定系统环境&#34;&gt;2.1 确定系统环境&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ uname -a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Linux localhost.localdomain 3.10.0-693.el7.x86_64 &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;22-安装正确的rpm包&#34;&gt;2.2 安装正确的rpm包&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;rpm&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ivh&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;https&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;download&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postgresql&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;org&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pub&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;repos&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;yum&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;redhat&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rhel&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x86_64&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgdg&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;centos10&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;noarch&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rpm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不同的系统使用不同的rpm源，你可以从 &lt;a href=&#34;http://yum.postgresql.org/repopackages.php&#34;&gt;http://yum.postgresql.org/repopackages.php&lt;/a&gt; 获取相应的平台链接。&lt;/p&gt;
&lt;h5 id=&#34;23-查看rpm包是否正确安装&#34;&gt;2.3 查看rpm包是否正确安装&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum list | grep pgdg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pgdg-centos10.noarch                        10-2                       installed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CGAL.x86_64                                 4.7-1.rhel7                pgdg10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CGAL-debuginfo.x86_64                       4.7-1.rhel7                pgdg10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CGAL-demos-source.x86_64                    4.7-1.rhel7                pgdg10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CGAL-devel.x86_64                           4.7-1.rhel7                pgdg10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MigrationWizard.noarch                      1.1-3.rhel7                pgdg10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;24-安装pg&#34;&gt;2.4 安装PG&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install -y postgresql10 postgresql10-server postgresql10-libs postgresql10-contrib postgresql10-devel
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可以根据需要选择安装相应的rpm包。&lt;/p&gt;
&lt;h5 id=&#34;25-启动服务&#34;&gt;2.5 启动服务&lt;/h5&gt;
&lt;p&gt;默认情况下，PG安装目录为&lt;code&gt;/usr/pgsql-10/&lt;/code&gt;，data目录为&lt;code&gt;/var/lib/pgsql/&lt;/code&gt;,系统默认创建用户&lt;code&gt;postgres&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;passwd&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 为系统postgres设置密码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;su&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt; 	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 切换到用户postgres&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;usr&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsql&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bin&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;initdb&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;D&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsql&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 初始化数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;usr&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsql&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bin&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_ctl&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;D&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsql&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;l&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;logfile&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 启动数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;usr&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsql&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bin&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;psql&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt;	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 登录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-postgis安装&#34;&gt;3. PostGIS安装&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install postgis24_10-client postgis24_10
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;如果遇到错误如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&amp;gt; 解决依赖关系完成
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;错误：软件包：postgis24_10-client-2.4.2-1.rhel7.x86_64 (pgdg10)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          需要：libproj.so.0()(64bit)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;错误：软件包：postgis24_10-2.4.2-1.rhel7.x86_64 (pgdg10)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          需要：gdal-libs &amp;gt;= 1.9.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可以尝试通过以下命令解决:&lt;code&gt;yum -y install epel-release&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;4-fdw安装&#34;&gt;4. fdw安装&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install ogr_fdw10
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5-pgrouting安装&#34;&gt;5. pgrouting安装&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install pgrouting_10
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;6-验证测试&#34;&gt;6. 验证测试&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# 登录pg后执行以下命令，无报错则证明成功
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE EXTENSION postgis;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE EXTENSION postgis_topology;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CREATE EXTENSION ogr_fdw;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SELECT postgis_full_version();
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;编译工具&#34;&gt;编译工具&lt;/h2&gt;
&lt;p&gt;此类工具一般系统都自带。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GCC与G++，版本至少为&lt;code&gt;4.x&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;GNU Make，CMake， Autotools&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CentOS下直接通过&lt;code&gt;sudo yum install gcc gcc-c++ git autoconf automake libtool m4 &lt;/code&gt;安装。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;必选依赖&#34;&gt;必选依赖&lt;/h2&gt;
&lt;h3 id=&#34;postgresql&#34;&gt;PostgreSQL&lt;/h3&gt;
&lt;p&gt;PostgreSQL是PostGIS的宿主平台。这里以10.1为例。&lt;/p&gt;
&lt;h3 id=&#34;geos&#34;&gt;GEOS&lt;/h3&gt;
&lt;p&gt;GEOS是Geometry Engine, Open Source的缩写，是一个C++版本的几何库。是PostGIS的核心依赖。&lt;/p&gt;
&lt;p&gt;PostGIS 2.4用到了GEOS 3.7的一些新特性。不过截止到现在，GEOS官方发布的最新版本是3.6.2，3.7版本的GEOS可以通过&lt;a href=&#34;http://geos.osgeo.org/snapshots/&#34;&gt;Nightly snapshot&lt;/a&gt; 获取。所以目前如果希望用到所有新特性，需要从源码编译安装GEOS 3.7。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 滚动的每日更新，此URL有可能过期，检查这里http://geos.osgeo.org/snapshots/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -P ./ http://geos.osgeo.org/snapshots/geos-20171211.tar.bz2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -jxf geos-20171211.tar.bz2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; geos-20171211
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./configure
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo make install
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; ..
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;proj&#34;&gt;Proj&lt;/h3&gt;
&lt;p&gt;为PostGIS提供坐标投影支持，目前最新版本为4.9.3 ：&lt;a href=&#34;http://proj4.org/download.html&#34;&gt;下载&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 此URL有可能过期，检查这里http://proj4.org/download.html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -P . http://download.osgeo.org/proj/proj-4.9.3.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -zxf proj-4.9.3.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; proj-4.9.3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;json-c&#34;&gt;JSON-C&lt;/h3&gt;
&lt;p&gt;目前用于导入GeoJSON格式的数据，函数&lt;code&gt;ST_GeomFromGeoJson&lt;/code&gt;用到了这个库。&lt;/p&gt;
&lt;p&gt;编译&lt;code&gt;json-c&lt;/code&gt;需要用到&lt;code&gt;autoconf, automake, libtool&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/json-c/json-c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; json-c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sh autogen.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./configure  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# --enable-threading&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;libxml2&#34;&gt;LibXML2&lt;/h3&gt;
&lt;p&gt;目前用于导入GML与KML格式的数据，函数&lt;code&gt;ST_GeomFromGML&lt;/code&gt;和&lt;code&gt;ST_GeomFromKML&lt;/code&gt;依赖这个库。&lt;/p&gt;
&lt;p&gt;目前可以在这个&lt;a href=&#34;ftp://xmlsoft.org/libxml2/&#34;&gt;FTP&lt;/a&gt;服务器上搞到，目前使用的版本是&lt;code&gt;2.9.7&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -zxf libxml2-sources-2.9.7.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; libxml2-sources-2.9.7
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./configure
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gadl&#34;&gt;GADL&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -P . http://download.osgeo.org/gdal/2.2.3/gdal-2.2.3.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sfcgal&#34;&gt;SFCGAL&lt;/h3&gt;
&lt;p&gt;SFCGAL是CGAL的扩展包装，虽说是可选项，但是很多函数都会经常用到，因此这里也需要安装。&lt;a href=&#34;http://oslandia.github.io/SFCGAL/installation.html&#34;&gt;下载页面&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SFCGAL依赖的东西比较多。包括&lt;code&gt;CMake, CGAL, Boost, MPFR, GMP&lt;/code&gt;等，其中，&lt;code&gt;CGAL&lt;/code&gt;在上面手动安装过了。这里还需要手动安装BOOST&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -P . https://github.com/Oslandia/SFCGAL/archive/v1.3.0.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;boost&#34;&gt;Boost&lt;/h3&gt;
&lt;p&gt;Boost是C++的常用库，SFCGAL依赖BOOST，&lt;a href=&#34;http://www.boost.org&#34;&gt;下载页面&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -P . https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -zxf boost_1_65_1.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; boost_1_65_1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./bootstrap.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./b2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: PostgreSQL MongoFDW安装部署</title>
      <link>/zh/blog/admin/mongo_fdw-install/</link>
      <pubDate>Sat, 28 May 2016 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/admin/mongo_fdw-install/</guid>
      <description>
        
        
        &lt;blockquote&gt;
&lt;p&gt;更新：最近MongoFDW已经由Cybertech接手维护，也许没有这么不堪了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近有业务要求通过PostgreSQL FDW去访问MongoDB。开始我觉得这是个很轻松的任务。但接下来的事真是让人恶心的吐了。MongoDB FDW编译起来真是要人命：混乱的依赖，临时下载和Hotpatch，错误的编译参数，以及最过分的是错误的文档。总算，我在生产环境(Linux RHEL7u2)和开发环境(Mac OS X 10.11.5)都编译成功了。赶紧记录下来，省的下次蛋疼。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;环境概述&#34;&gt;环境概述&lt;/h2&gt;
&lt;p&gt;理论上编译这套东西，GCC版本至少为4.1。
生产环境 (RHEL7.2 + PostgreSQL9.5.3 + GCC 4.8.5)
本地环境 (Mac OS X 10.11.5 + PostgreSQL9.5.3 + clang-703.0.31)&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;mongo_fdw的依赖&#34;&gt;&lt;code&gt;mongo_fdw&lt;/code&gt;的依赖&lt;/h2&gt;
&lt;p&gt;总的来说，能用包管理解决的问题，尽量用包管理解决。
&lt;a href=&#34;https://github.com/EnterpriseDB/mongo_fdw&#34; title=&#34;mongo_fdw&#34;&gt;mongo_fdw&lt;/a&gt;是我们最终要安装的包
它的直接依赖有三个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/json-c/json-c/tree/json-c-0.12&#34; title=&#34;json-c 0.12&#34;&gt;json-c 0.12&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mongodb/mongo-c-driver/tree/r1.3&#34; title=&#34;libmongoc-1.3.1&#34;&gt;libmongoc-1.3.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mongodb/libbson/tree/r1.3&#34; title=&#34;libbson-1.3.1&#34;&gt;libbson-1.3.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总的来说，mongo_fdw是使用mongo提供的C驱动程序完成功能的。所以我们需要安装libbson与libmongoc。其中libmongoc就是MongoDB的C语言驱动库，它依赖于libbson。
所以最后的安装顺序是：
&lt;code&gt;libbson&lt;/code&gt; → &lt;code&gt;libmongoc&lt;/code&gt; → &lt;code&gt;json-c&lt;/code&gt;→ &lt;code&gt;mongo_fdw&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;间接依赖&#34;&gt;间接依赖&lt;/h2&gt;
&lt;p&gt;默认依赖的GNU Build全家桶，文档是不会告诉你的。下面列出一些比较简单的，可以通过包管理解决的依赖。请一定按照以下顺序安装&lt;code&gt;GNU Autotools&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;m4-1.4.17&lt;/code&gt; → &lt;code&gt;autoconf-2.69&lt;/code&gt; → &lt;code&gt;automake-1.15&lt;/code&gt; → &lt;code&gt;libtool-2.4.6&lt;/code&gt; → &lt;code&gt;pkg-config-0.29.1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;总之，用yum也好，apt也好，homebrew也好，都是一行命令能搞定的事。 还有一个依赖是libmongoc的依赖：&lt;code&gt;openssl-devel&lt;/code&gt;，不要忘记装。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;安装-libbson-131&#34;&gt;安装 &lt;code&gt;libbson-1.3.1&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone -b r1.3 https://github.com/mongodb/libbson&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; libbson&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git checkout 1.3.1&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./autogen.sh&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo make install&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make test&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;安装-libmongoc-131&#34;&gt;安装 &lt;code&gt;libmongoc-1.3.1&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone -b r1.3 https://github.com/mongodb/mongo-c-driver
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; mongo-c-driver&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git checkout 1.3.1&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./autogen.sh&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 下一步很重要，一定要使用刚才安装好的系统中的libbson。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./configure --with-libbson&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;system&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo make install&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里为什么要使用1.3.1的版本？这也是有讲究的。因为mongo_fdw中默认使用的是1.3.1的mongo-c-driver。但是它在文档里说只要1.0.0+就可以，其实是在放狗屁。mongo-c-driver与libbson版本是一一对应的。1.0.0版本的libbson脑子被驴踢了，使用了超出C99的特性，比如复数类型。要是用了默认版本就傻逼了。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;安装json-c&#34;&gt;安装&lt;code&gt;json-c&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;首先，我们来解决json-c的问题&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/json-c/json-c&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; json-c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git checkout json-c-0.12
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./configure&lt;/code&gt;完了可不要急着Make，这个版本的json-c编译参数有问题。&lt;/li&gt;
&lt;li&gt;打开Makefile，找到&lt;code&gt;CFLAGS&lt;/code&gt;,在编译参数后面添加&lt;code&gt;-fPIC&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;这样GCC会生成位置无关代码，不这样做的话mongo_fdw链接会报错。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;安装-mongo_fdw&#34;&gt;安装 &lt;code&gt;mongo_fdw&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;真正恶心的地方来咯。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/EnterpriseDB/mongo_fdw&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;好了，如果这时候想当然的运行&lt;code&gt;./autogen.sh --with-master&lt;/code&gt;，它就会去重新下一遍上面几个包了……，而且都是从墙外亚马逊的云主机去下。靠谱的方法就是手动一条条的执行autogen里面的命令。&lt;/p&gt;
&lt;p&gt;首先把上面的json-c目录复制到mongo_fdw的根目录内。 然后添加libbson和libmongoc的include路径。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;C_INCLUDE_PATH&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/usr/local/include/libbson-1.0/:/usr/local/include/libmongoc-1.0:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$C_INCLUDE_PATH&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看&lt;code&gt;autogen.sh&lt;/code&gt;，发现里面根据&lt;code&gt;--with-legacy&lt;/code&gt;和&lt;code&gt;--with-master&lt;/code&gt;的不同选项，会有不同的操作。具体来说，当指定&lt;code&gt;--with-master&lt;/code&gt;选项时，它会创建一个config.h,里面定义了一个META_DRIVER的宏变量。当有这个宏变量时，mongo_fdw会使用mongoc.h头文件，也就是所谓的“master”，新版的mongo驱动。当没有时，则会使用&amp;quot;mongo.h&amp;quot;头文件，也就是老版的mongo驱动。这里，我们直接&lt;code&gt;vi config.h&lt;/code&gt;，添加一行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#define META_DRIVER&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这时候，基本上才能算万事大吉。 在最终build之前，别忘了执行：&lt;code&gt;ldconfig&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ldconfig
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;回到mongo_fdw根目录&lt;code&gt;make&lt;/code&gt;，不出意外，这个&lt;code&gt;mongo_fdw.so&lt;/code&gt;就出来了。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;试一试吧&#34;&gt;试一试吧？&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo make install&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;admin&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# CREATE EXTENSION mongo_fdw;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果提示找不到 &lt;code&gt;libmongoc.so&lt;/code&gt; 和 &lt;code&gt;libbson.so&lt;/code&gt;，直接把它们丢进pgsql的lib目录即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo cp /usr/local/lib/libbson* /usr/local/pgsql/lib/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo cp /usr/local/lib/libmongoc* /usr/local/pgsql/lib/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
