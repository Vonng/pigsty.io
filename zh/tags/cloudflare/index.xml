<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pigsty – Cloudflare</title>
    <link>/zh/tags/cloudflare/</link>
    <description>Recent content in Cloudflare on Pigsty</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 23 Jul 2024 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="/zh/tags/cloudflare/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: 蓝屏星期五：甲乙双方都是草台班子</title>
      <link>/zh/blog/cloud/bsod-friday/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/bsod-friday/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/bsod-friday/featured_hu441334f1a06133531028f083ec7fe48d_85331_640x0_resize_q75_catmullrom.jpg" width="640" height="652"/>]]>
        
        &lt;p&gt;最近，因为网络安全公司 CrowdStrike 发布的一个配置更新，全球范围内无数 Windows 电脑都陷入蓝屏死机状态，无数的混乱 —— 航司停飞，医院取消手术，超市、游乐园、各行各业歇业。&lt;/p&gt;
&lt;p&gt;表：受到影响的行业领域、国家地区与相关机构（&lt;a href=&#34;https://www.secrss.com/articles/68310&#34;&gt;CrowdStrike导致大规模系统崩溃事件的技术分析&lt;/a&gt;）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;涉及领域&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;相关机构&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;航空运输&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;美国、澳大利亚、英国、荷兰、印度、捷克、匈牙利、西班牙、中国香港、瑞士等部分航空公司出现航班延误或机场服务中断。美国达美航空、美国航空和忠实航空宣布停飞所有航班。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;媒体通信&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;以色列邮政、法国电视频道TF1、TFX、LCI和Canal+Group网络、爱尔兰国家广播公司RTÉ、加拿大广播公司、沃丰达集团、电话和互联网服务提供商Bouygues Telecom等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;交通运输&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;澳大利亚货运列车运营商Aurizon、西日本旅客铁道公司、马来西亚铁路运营商KTMB、英国铁路公司、澳大利亚猎人线和南部高地线的区域列车等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;银行与****金融服务&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;加拿大皇家银行、加拿大道明银行、印度储备银行、印度国家银行、新加坡星展银行、巴西布拉德斯科银行、西太平洋银行、澳新银行、联邦银行、本迪戈银行等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;零售&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;德国连锁超市Tegut、部分麦当劳和星巴克、迪克体育用品公司、英国杂货连锁店Waitrose、新西兰的Foodstuffs和Woolworths超市等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;医疗服务&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;纪念斯隆凯特琳癌症中心、英国国家医疗服务体系、德国吕贝克和基尔的两家医院、北美部分医院等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;……&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;……&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在这次事件中，有许多程序员在津津乐道哪个 sys 文件或者配置文件搞崩了系统 （&lt;a href=&#34;https://www.crowdstrike.com/blog/falcon-update-for-windows-hosts-technical-details/&#34;&gt;CrowdStrike官方故障复盘&lt;/a&gt;），或者XX公司是草台班子云云 —— 做安全的乙方和甲方工程师撕成一片。但在我看来，这个问题&lt;strong&gt;根本不是一个技术问题&lt;/strong&gt;，而是一个工程管理问题。重要的也不是指责谁是草台班子，而是我们能从中吸取什么教训？&lt;/p&gt;
&lt;p&gt;在我看来，这场事故是甲乙方两侧的共同责任 —— 乙方的问题在于：崩溃率如此之高的变更，为什么在没有灰度的情况下迅速发布到了全球？有没有做过灰度测试与验证？甲方的问题在于：将自己的终端安全全部寄托于供应链的可靠之上，为什么能允许这样的变更联网实时推送到自己的电脑上而不加以控制？&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;控制爆炸半径&lt;/strong&gt;是软件发布中的一条基本原则，而灰度发布则是软件发布中的基本操作。互联网行业中的许多应用会采用精细的灰度发布策略，比如从 1% 的流量开始滚动上量，一旦发现问题也能立刻回滚，避免一勺烩大翻车的出现。&lt;/p&gt;
&lt;p&gt;数据库与操作系统变更同理，作为一个管理过大规模生产环境数据库集群的 DBA，我们在对数据库或者底层操作系统进行变更时，都会极为小心地采取灰度策略：首先在 Devbox 开发环境中测试变更，然后应用到预发/UAT/Staging环境中。跑几天没事后，开始针对生产环境发布：从一两套边缘业务开始，然后按照业务重要性划分的 A、B、C 三级，以及从库/主库的顺序与批次进行灰度变更。&lt;/p&gt;
&lt;p&gt;某头部券商运维主管也在群里分享了金融行业的最佳实践 —— 直接网络隔离，禁止从互联网更新，买微软 ELA，在内网搭建补丁服务器，然后几万台终端/服务器从补丁服务器统一更新补丁和病毒库。灰度的方式是每个网点和分支机构/每个业务部门都选择一到两台组成灰度环境，跑一两天没事，进入大灰度环境跑满一周，最后的生产环境分成三波每天更新一次，完成整个发布。如果遇到紧急安全事件 —— 也会使用同样的灰度流程，只是把时间周期从一两周压缩到几个小时而已。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;当然，有些乙方安全公司，安全出身的工程师会提出不同的看法：“安全行业不一样，我们要与病毒赶时间“，”病毒研究员发现最新的病毒，然后判断如何最快的全网防御”，“病毒来的时候，我的安全专家判断需要启用，跟你们打招呼来不及”，“蓝屏总好过数字资产丢失或者被人随意控制”。但对甲方来说，安全是一整个体系，配置灰度发布晚一点不是什么大不了的事情，然而集中批量崩溃这种惊吓则是让人难以接受的。&lt;/p&gt;
&lt;p&gt;至少对于企业客户来说，更不更新，什么时候更新，这个利弊权衡应该是由甲方来做的，而不是乙方去拍脑袋决定。而放弃这一职责，无条件信任乙方供应商给你空中升级的甲方，也是草台班子。安全软件是合法的，大规模肉鸡软件，即使用户以最大的善意信任供应商没有主观恶意，但在实践中也难以避免因为无心之失与愚蠢傲慢导致的灾难（比如这次蓝屏星期五）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;fuck-ms.png&#34; src=&#34;/zh/blog/cloud/bsod-friday/fuck-ms.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（美剧《太空部队》名梗：紧急任务遇到Microsoft强制更新）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你的系统真的很重要，在接受任何变更与更新前请切记 —— &lt;strong&gt;Trust，But Verify&lt;/strong&gt;。如果供应商不提供 Verify 这个选项，你应该在权力范围内果断 Say No。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我认为这次事件会极大利好 “&lt;strong&gt;本地优先软件&lt;/strong&gt;” 的理念 —— 本地优先不是不更新，不变更，一个版本用到地老天荒，而是能够在无需联网的情况下，在你自己的电脑与服务器上持续运行。用户与供应商依然可以通过补丁服务器，与定期推送的方式升级功能，更新配置，但更新的时间点、方法、规模、策略都应当允许由用户自行指定，而不是由供应商越俎代庖替你决策。我认为这一点才是 “&lt;strong&gt;自主可控&lt;/strong&gt;” 概念的真正实质。&lt;/p&gt;
&lt;p&gt;在我们自己的开源 PostgreSQL RDS，数据库管控软件 Pigsty 中，也一直践行着本地优先的原则。每当我们发布一个新版本时，我们会对所有需要安装的软件及其依赖取一个快照，制作成离线软件安装包，让用户在没有互联网访问的环境下，无需容器也可以轻松完成高度确定性的安装。如果用户希望部署更多套数据库集群，他可以期待环境中的版本总是一致的 —— 这意味着，你可以随意移除或添加节点进行新陈代谢，让数据库服务跑到地老天荒。&lt;/p&gt;
&lt;p&gt;如果您需要升级软件版本打补丁，将新版本软件包加入本地软件源，使用 Ansible 剧本批量更新即可。您可以选择用老旧 EOL 版本跑到地老天荒，也可以选择在第一时间发布就更新并尝鲜最新特性，您可以按照软件工程最佳实践依次灰度发布，但真想要糙猛快一把梭全量上也随意，我们只提供默认的行为与实践的工具，但说到底，这是用户的自由与选择。&lt;/p&gt;
&lt;p&gt;俗话说，物极必反，在 SaaS 与云服务盛行的当下，关键基础设施故障的单点风险与脆弱性愈加凸显。相信在本次事故后，本地优先软件的理念将会在未来得到更多的关注与实践。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Cloudflare圆桌访谈与问答录</title>
      <link>/zh/blog/cloud/cf-interview/</link>
      <pubDate>Tue, 23 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/cf-interview/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/cf-interview/featured_hu04231d9bc7cd3ef23d4bb4ec3641bb94_410122_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;p&gt;上周我作为圆桌嘉宾受邀参加了 Cloudflare 在深圳举办的 Immerse 大会，在 Cloudflare Immerse 鸡尾酒会和晚宴上，我与 Cloudflare 亚太区CMO，大中华区技术总监，以及一线工程师深入交流探讨了许多关于 Cloudflare 的问题。&lt;/p&gt;
&lt;p&gt;本文是圆桌会谈纪要与问答采访的摘录，从用户视角点评 Cloudflare 请参考本号前一篇文章：《&lt;a href=&#34;/zh/blog/cloud/cloudflare&#34;&gt;&lt;strong&gt;吊打公有云的赛博佛祖 Cloudflare&lt;/strong&gt;&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/jU418HAlObe1nWgzEsLrJQ&#34;&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/featured.webp&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;第一部分圆桌访谈&#34;&gt;第一部分：圆桌访谈&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;您与 Cloudflare 如何结缘？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我是冯若航，现在做 &lt;strong&gt;PostgreSQL&lt;/strong&gt; 数据库发行版 &lt;a href=&#34;https://pigsty.io/zh/&#34;&gt;&lt;strong&gt;Pigsty&lt;/strong&gt;&lt;/a&gt;，运营着一个开源社区，同时作为一个数据库 &amp;amp; 云计算领域的 KOL，在国内宣扬下云理念。在 Cloudflare 的场子里讲下云挺有意思，但我并不是来踢馆的。&lt;/p&gt;
&lt;p&gt;事实上我与 Cloudflare 还有好几层缘分，所以今天很高兴在这里和大家分享一下我的&lt;strong&gt;三重视角&lt;/strong&gt; ：作为一个独立开发者终端用户，作为一个开源社区的成员与运营者，作为一个公有云计算反叛军，我是如何看待 Cloudflare 的。&lt;/p&gt;
&lt;p&gt;作为一个&lt;strong&gt;开源软件供应商&lt;/strong&gt;，我们需要一种稳定可靠的软件分发方式。我们最开始使用了本土的阿里云与腾讯云，在国内的体验尚可，但当我们需要走出海外，面向国外用户时，使用体验确实不尽如人意。我们尝试了 AWS，Package Cloud ，但最终选择了 Cloudflare。包括我们有几个网站也托管到了CF。&lt;/p&gt;
&lt;p&gt;作为 &lt;strong&gt;PostgreSQL 社区的一员&lt;/strong&gt;，我们知道 Cloudflare 深度使用了 PostgreSQL 作为底层存储的数据库。并且不同于其他云厂商喜欢将其包装为 RDS 白嫖社区，Cloudflare 一直是杰出的开源社区参与者与建设者。甚至像 Pingora 和 Workerd 这样的核心组件都是开源的。我对此给出高度评价，这是开源软件社区与云厂商共存的典范。&lt;/p&gt;
&lt;p&gt;作为&lt;strong&gt;下云理念的倡导者&lt;/strong&gt;，我一直认为传统公有云使用了一种非常不健康的商业模式。所以在中国引领着一场针对公有云的&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486813&amp;idx=1&amp;sn=ffb126fdd061c1e27626dd558f6fa26a&amp;chksm=fe4b3886c93cb190e2acf7af6cfd25f298199f6ee73da566bed050c066b96753b913e3453d4f&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;下云运动&lt;/strong&gt;&lt;/a&gt;。我认为 Cloudflare 也许是这场运动中的重要盟友 —— 传统 IDC 开源自建，难以解决 “在线” 的问题，而 Cloudflare 的接入能力，边缘计算能力，都弥补了这一块短板。所以我非常看好这种模式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-1.jpg&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;您用到了哪些 Cloudflare的服务，打动你的是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我用到了 Cloudflare 的静态网站托管服务 Pages，对象存储服务 R2 和边缘计算 Worker。最打动我的有这么几点：易用性，成本，质量，安全，专业的服务态度，以及这种模式的前景与未来。&lt;/p&gt;
&lt;p&gt;首先聊一聊&lt;strong&gt;易用性&lt;/strong&gt;吧，我使用的第一项服务是 Pages。我自己有一个网站，静态 HTML 托管在这里。我把这个网站搬上 Cloudflare 用了多长时间？一个小时！我只是创建了一个新的 GitHub Repo，把静态内容提交上去，然后在 Cloudflare 点点按钮，绑定一个新的子域名，链接到 GitHub Repo，整个网站瞬间就可以被全世界访问，你不需要操心什么高可用，高并发，全球部署，HTTPS 证书，抗 DDoS 之类的问题 —— 这种丝滑的用户体验让我非常舒适，并很乐意在这上面花点钱解锁额外功能。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;再来聊一聊&lt;strong&gt;成本&lt;/strong&gt;吧。在独立开发者，个人站长这个圈子里，我们给 Cloudflare 起了一个外号 —— “&lt;strong&gt;赛博佛祖&lt;/strong&gt;”。这主要是因为 Cloudflare 提供了非常慷慨的免费计划。Cloudflare 有着相当独特的商业模式 —— &lt;strong&gt;免流量费，靠安全赚钱&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;比如说 R2，我认为这就是专门针对 AWS S3 进行啪啪打脸的。我曾经作为大甲方对各种云服务与自建的成本进行过精算 —— 得出会让普通用户感到震惊的结论。云上的&lt;a href=&#34;/zh/blog/cloud/s3&#34;&gt;&lt;strong&gt;对象存储&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485745&amp;idx=4&amp;sn=93746ecea381afd8e2f9820447b09ec7&amp;chksm=fe4b3ceac93cb5fc44f33ffff226747bc317854acbb3882aeb0d9a7e196eeb5df002d0e77275&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;块存储&lt;/strong&gt;&lt;/a&gt; 比本地自建贵了两个数量级，堪称史诗级杀猪盘。AWS S3 标准档价格 0.023 $/GB·月，而 Cloudflare R2 价格 0.015 $/GB·月，看上去只是便宜了 1/3 。但重要的是&lt;strong&gt;流量费全免&lt;/strong&gt;！这就带来质变了！&lt;/p&gt;
&lt;p&gt;比如，我自己那个网站也还算有点流量，最近一个月跑了 300GB ，没收钱，我有一个朋友每月跑掉 3TB 流量，没收钱；然后我在推特上看到有个朋友 Free Plan 跑黄网图床，每月 1PB 流量，这确实挺过分了，于是 CF 联系了他 —— 建议购买企业版，也仅仅是 “建议”。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;接下来我们来聊一聊&lt;strong&gt;质量&lt;/strong&gt;。我讲下云的一个前提是：各家公有云厂商卖的是没有不可替代性的大路货标准品。比如那种在&lt;a href=&#34;/zh/blog/cloud/luo-live&#34;&gt;&lt;strong&gt;老罗直播间&lt;/strong&gt;&lt;/a&gt;中，夹在吸尘器与牙膏中间卖的云服务器。但是 Cloudflare 确实带来了一些不一样的东西。&lt;/p&gt;
&lt;p&gt;举个例子，Cloudflare Worker 确实很有意思，比起传统云上笨拙的开发部署体验来说，CF worker 真正做到了让开发者爽翻天的 Serverless 效果。开发者不需要操心什么数据库连接串，AccessPoint，AK/SK密钥管理，用什么数据库驱动，怎么管理本地日志，怎么搭建 CI/CD 流程这些繁琐问题，最多在环境变量里面指定一下存储桶名称这类简单信息就够了。写好 Worker 胶水代码实现业务逻辑，命令行一把梭就可以完成全球部署上线。&lt;/p&gt;
&lt;p&gt;与之对应的是传统公有云厂商提供的各种所谓 Serverless 服务，比如 RDS Serverless，就像一个恶劣的笑话，单纯是一种计费模式上的区别 —— 既不能 Scale to Zero，也没什么易用性上的改善 —— 你依然要在控制台去点点点创建一套 RDS，而不是像 Neon 这种真 Serverless 一样用连接串连上去就能直接迅速拉起一个新实例。更重要的是，稍微有个几十上百的QPS，相比包年包月的账单就要爆炸上天了 —— 这种平庸的 “Serverless” 确实污染了这个词语的本意。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;最后我想说一下&lt;strong&gt;安全&lt;/strong&gt;，我认为安全才是 Cloudflare 核心价值主张。为什么这么说，还是举一个例子。有一个独立站长朋友用了某个头部本土云 CDN ，最近两年有莫名其妙的超多流量。一个月海外几个T流量，一个IP 过来吃个10G 流量然后消失掉。后来换了个地方提供服务，这些奇怪的流量就没了。运行成本变为本来的 1/10，这就有点让人细思恐极 —— &lt;strong&gt;是不是这些云厂商坚守自盗，在盗刷流量？或者是是云厂商本身（或其附属）组织在有意攻击，从而推广他们的高防 IP 服务&lt;/strong&gt;？这种例子其实我是有所耳闻的。&lt;/p&gt;
&lt;p&gt;因此，在使用本土云 CDN 的时候，很多用户会有一些天然的顾虑与不信任。但 Cloudflare 就解决了这个问题 —— 第一，流量不要钱，按请求量计费，所以刷流量没意义；第二，它替你抗 DDoS，即使是 Free Plan 也有这个服务，CF不能砸自己的招牌 —— 这解决了一个用户痛点，就是把账单刷爆的问题 —— 我确实有见过这样的案例，公有云账号里有几万块钱，一下子给盗刷干净了。用 Cloudflare 就彻底没有这个问题，我可以确保账单有高度的确定性 —— 如果不是确定为零的话。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;专业的服务态度指的是？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本土云厂商在面对大故障时，体现出相当业余的专业素养与服务态度，这一点我专门写了好几篇文章进行批判。说起来特别赶巧，去年双十一，阿里云出了一个史诗级&lt;a href=&#34;/zh/blog/cloud/aliyun&#34;&gt;&lt;strong&gt;全球大故障&lt;/strong&gt;&lt;/a&gt;。Cloudflare 也出了个机房断电故障。一周前 4.8 号，腾讯云也出了个翻版&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487267&amp;idx=1&amp;sn=7d31d44e89560356b5c5a2e7a40bb1e1&amp;chksm=fe4b3af8c93cb3ee9b8000cd90a12a798395f67205d4ba5b0c77b8c5b6ce9ea448d9fc014921&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;全球故障&lt;/strong&gt;&lt;/a&gt;，Cloudflare 也恰好在同一天又出了 Code Orange 机房断电故障。作为一个工程师，我理解故障是难以避免的 —— &lt;strong&gt;但出现故障后，体现出来的专业素养和服务态度是天差地别的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;首先，阿里云和腾讯云的故障都是人为操作失误/糟糕的软件工程/架构设计导致的，而 Cloudflare 的问题是机房断电，某种程度上算不可抗力的天灾。其次，在处理态度上，阿里云到现在都没发布一个像样的故障复盘，我替它做了一个&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486468&amp;idx=1&amp;sn=7fead2b49f12bc2a2a94aae942403c22&amp;chksm=fe4b39dfc93cb0c92e5d4c67241de0519ae6a23ce6f07fe5411b95041accb69e5efb86a38150&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;非官方故障复盘&lt;/strong&gt;&lt;/a&gt;；至于腾讯云，我干脆连故障通告都替他们发了 —— 比官网还快10分钟。腾讯云倒是在前天发布了一个&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487348&amp;idx=1&amp;sn=412cf2afcd93c3f0a83d65219c4a28e8&amp;chksm=fe4b3aafc93cb3b900cef33bd0510c7c86367d71877b0ee65d4847da0ae1298e2b1fd88d0b3f&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;故障复盘&lt;/strong&gt;&lt;/a&gt;，但是也比较敷衍，专业素养不足，这种复盘报告拿到 Apple 和 Google 都属于不合格的 Post-Mortem ……&lt;/p&gt;
&lt;p&gt;Cloudflare 则恰恰相反，在故障的当天 CEO 亲自出来撰写故障复盘，细节翔实，态度诚恳，你见过本土云厂商这么做吗？没有!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;您对 Cloudflare 未来有什么期待？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我主张下云理念，是针对中型以上规模的企业。像我之前任职的探探，以及美国 DHH 37 Signal 这样的。但是 IDC 自建有个问题，&lt;strong&gt;接入&lt;/strong&gt;的问题，&lt;strong&gt;在线的问题&lt;/strong&gt; —— 你可以自建KVM，K8S，RDS，甚至是对象存储。但你不可能自建 CDN 吧？Cloudflare 就很好地弥补了这个缺憾。&lt;/p&gt;
&lt;p&gt;我认为，Cloudflare 是下云运动的坚实盟友。Cloudflare 并没有提供传统公有云上的那些弹性计算、存储、&lt;strong&gt;K8S&lt;/strong&gt;、&lt;strong&gt;RDS&lt;/strong&gt; 服务。但幸运地是，Cloudflare 可以与公有云 / IDC 良好地配合协同 —— 从某种意义上来说，因为 Cloudflare 成功解决了 “在线” 的问题，这使得传统数据库中心 IDC 2.0 也同样可以拥有比肩甚至超越公有云的 “在线” 能力，两者配合，在事实上摧毁了一些公有云的护城河，并挤压了传统公有云厂商的生存空间。&lt;/p&gt;
&lt;p&gt;我非常看好 Cloudflare 这种模式，实际上，这种丝滑的体验才配称的上是云，配享太庙，可以心安理得吃高科技行业的高毛利。实际上，&lt;strong&gt;我认为 Cloudflare 应该主动出击，去与传统公有云抢夺云计算的定义权&lt;/strong&gt; —— 我希望未来人们说起云的时候，指的应该是 Cloudflare 这种慷慨体面的连接云，而不是传统公有杀猪云。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;第二部分互动问答&#34;&gt;第二部分：互动问答&lt;/h2&gt;
&lt;p&gt;在 Cloudflare Immerse 鸡尾酒会和晚宴上，我与 Cloudflare 亚太区CMO，大中华区技术总监，以及一线工程师深入交流探讨了许多关于 Cloudflare 的问题，收获颇丰，这里给出了一些适合公开的问题与答案。因为我也不会录音，因此这里的文字属于我的事后回忆与阅读理解，&lt;strong&gt;仅供参考，不代表 CF 官方观点&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-2.jpg&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 如何定位自己，和 AWS 这种传统公有云是什么关系？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其实 Cloudflare 不是传统公有云，而是一种 &lt;strong&gt;SaaS&lt;/strong&gt;。我们现在管自己叫做 “Connectivity Cloud”（翻译为：&lt;strong&gt;全球联通云&lt;/strong&gt;），旨在为所有事物之间建立连接，与所有网络相集成；内置情报防范安全风险，并提供统一、简化的界面以恢复&lt;strong&gt;可见性&lt;/strong&gt;与&lt;strong&gt;控制&lt;/strong&gt;。从传统的视角来看，我们做的像是安全、CDN与边缘计算的一个整合。AWS 的 CloudFront 算是我们的竞品。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-3.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 为什么提供了如此慷慨的免费计划，到底靠什么赚钱？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cloudflare 的免费服务就像 Costco 的5美元烤鸡一样。实际上除了免费套餐，那个 Workers 和 Pages 的付费计划也是每月五美元，跟白送的一样，Cloudflare 也不是从这些用户身上赚钱的。&lt;/p&gt;
&lt;p&gt;Cloudflare 的核心商业模式是&lt;strong&gt;安全&lt;/strong&gt;。相比于只服务付费客户，更多的免费用户可以带来更深入的数据洞察 —— 也就能够发现更为广泛的攻击与威胁情报，为付费用户提供更好的安全服务。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;我们的 Free 计划有何优势？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 Cloudflare，我们的使命是帮助建立更好的互联网。我们认为 web 应该是开放和免费的，所有网站和 web 用户，无论多小，都应该是安全、稳固、快速的。由于&lt;a href=&#34;https://webmasters.stackexchange.com/questions/88659/how-can-cloudflare-offer-a-free-cdn-with-unlimited-bandwidth&#34;&gt;种种原因&lt;/a&gt;，Cloudflare 始终都提供慷慨的免费计划。&lt;/p&gt;
&lt;p&gt;我们努力将网络运营成本降至最低，从而能在我们的 Free 计划中提供巨大价值。最重要的是，通过保护更多网站，我们能就针对我们网络的各类攻击获得更完善的数据，从而能为所有网站提供更佳的安全和保护。&lt;/p&gt;
&lt;p&gt;作为隐私第一的公司，我们绝不出售您的数据。事实上，Cloudflare 承认个人数据隐私是一项基本人权，并已采取&lt;a href=&#34;https://blog.cloudflare.com/certifying-our-commitment-to-your-right-to-information-privacy/&#34;&gt;一系列措施&lt;/a&gt;来证明我们对隐私的承诺。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实际上 Cloudflare 的 CEO 在 StackOverflow &lt;a href=&#34;https://webmasters.stackexchange.com/questions/88659/how-can-cloudflare-offer-a-free-cdn-with-unlimited-bandwidth&#34;&gt;亲自对这个问题作出过回答&lt;/a&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-4.webp&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Five reasons we offer a free version of the service and always will:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Data: we see a much broader range of attacks than we would if we only had our paid users. This allows us to offer better protection to our paid users.&lt;/li&gt;
&lt;li&gt;Customer Referrals: some of our most powerful advocates are free customers who then &amp;ldquo;take CloudFlare to work.&amp;rdquo; Many of our largest customers came because a critical employee of theirs fell in love with the free version of our service.&lt;/li&gt;
&lt;li&gt;Employee Referrals: we need to hire some of the smartest engineers in the world. Most enterprise SaaS companies have to hire recruiters and spend significant resources on hiring. We don&amp;rsquo;t but get a constant stream of great candidates, most of whom are also CloudFlare users. In 2015, our employment acceptance rate was 1.6%, on par with some of the largest consumer Internet companies.&lt;/li&gt;
&lt;li&gt;QA: one of the hardest problems in software development is quality testing at production scale. When we develop a new feature we often offer it to our free customers first. Inevitably many volunteer to test the new code and help us work out the bugs. That allows an iteration and development cycle that is faster than most enterprise SaaS companies and a MUCH faster than any hardware or boxed software company.&lt;/li&gt;
&lt;li&gt;Bandwidth Chicken &amp;amp; Egg: in order to get the unit economics around bandwidth to offer competitive pricing at acceptable margins you need to have scale, but in order to get scale from paying users you need competitive pricing. Free customers early on helped us solve this chicken &amp;amp; egg problem. Today we continue to see that benefit in regions where our diversity of customers helps convince regional telecoms to peer with us locally, continuing to drive down our unit costs of bandwidth.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Today CloudFlare has 70%+ gross margins and is profitable (EBITDA)/break even (Net Income) even with the vast majority of our users paying us nothing.&lt;/p&gt;
&lt;p&gt;Matthew Prince Co-founder &amp;amp; CEO, CloudFlare&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;创始人的情怀与愿景其实挺重要的 …… ，Cloudflare 早期的许多服务一直都是免费提供的，第一个付费服务其实是 SSL 证书，现在也不要钱了。总的来说，就是靠企业级客户为安全付费。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare付费用户都是什么样的？怎么从免费用户成为付费用户的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们的免费客户转变为企业级付费客户的主要契机是安全问题。Cloudflare 控制台上有个 “&lt;strong&gt;遭受攻击&lt;/strong&gt;” 的按钮 —— 是这样的，只要用户在控制台上点这个 “Under Attack” 按钮，即使是免费客户，我们也会第一时间有人响应，帮助客户解决问题。例如在疫情期间，某头部视频会议厂商遭受到了安全攻击。我们立即抽调人手替客户解决问题 —— 他们很满意，我们就签了单子。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-5.webp&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 的免费套餐有可能会在未来取消吗？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Costco 有个 1.5 美元的热狗汽水套餐，创始人承诺永远不会提高热狗和苏打水套餐的价格。我知道像 Vercel，Planetscale 之类的 SaaS 厂商开始削减免费套餐，但我认为这事基本不太可能发生在 Cloudflare 上。因为如上所述，我们有充分的理由继续提供免费计划。实际上我们的大多数客户都没付钱，在使用 Free Plan。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-6.webp&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;为什么Cloudflare 会在故障后由 CEO 亲自出马复盘？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们的 CEO 是技术出身，工程师背景。出现故障的时候 IM 里一堆人在掰扯，CEO 跳出来说：够了，我来写故障复盘报告 —— 然后故障当天就发出来了，这种事放在公有云厂商里绝对是相当罕见的了… 我们其实也很震惊…。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-7.webp&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 在中国区域访问为什么这么慢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;中国区域带宽/流量费用太贵了，所以普通用户访问其实访问的其实主要是北美地区的机房与节点。我们在 全世界 95% 的地区都有非常优秀的延迟表现（比），但剩下 5% 嘛主要指的就是 …… ，在这里&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-8.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果你的主要用户群体都是国内，又比较在乎速度，可以考虑一下 Cloudflare 企业版，或者是本土 CDN 厂商。我们和京东云有合作，企业级客户在国内也可以使用他们提供的这些节点。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;中国区域用户使用 Cloudflare 的主要动机是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;主要是因为&lt;strong&gt;安全&lt;/strong&gt;：Cloudflare 即使是免费计划中，也提供了抗 DDoS 服务。中国的用户使用 Cloudflare 主要是为了出海。而那些纯粹面向本土的中国客户，宁可慢一点也要用 CF 的主要动机就是安全（抗DDoS）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 会在中国被封禁吗？有什么运营风险吗？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我觉得这件事不太可能会发生，你知道现在有多少网站托管在 Cloudflare 上面吗 … 这一炮打下去，大半个互联网都访问不了了。Cloudflare 本身并没有在中国地区运营…… ，在中国也主要服务于 C2G （China to Global）业务。
你刚才问为什么 Cloudflare 域名不备案为什么就能访问，就是这个原因 —— 我们压根没在中国运营。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;在与本土云厂商合作中，资源互换主要是一种什么形式？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有一些本土云厂商通过资源互换的方式合作，所谓资源互换嘛，&lt;code&gt;&amp;lt;Redacted&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你们如何看待腾讯云模仿你们的产品 EdgeOne ？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;做生意和气生财，我们不好公开评论其他云。但私下里说，CopyCat……&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 企业版的主要价值点在于？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;流量优先级。举个例子你出海的流量大概率是从上海的某一根跨海光纤出去的，平时这条线路的使用率是 &lt;code&gt;&amp;lt;Redacted&amp;gt;&lt;/code&gt; % ，但是在高峰期，我们就会优先保证企业级用户的服务质量。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-9.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 考虑推出托管的 RDS，Postgres数据库服务吗？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在那个 D1 其实是 SQLite，目前没有计划做这种托管数据库服务，但是生态里已经有可以满足这种需求的供应商了，你看有不少在 Worker 里使用 Neon （Serverless Postgres）的例子。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 吊打公有云的赛博佛祖 Cloudflare</title>
      <link>/zh/blog/cloud/cloudflare/</link>
      <pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/cloudflare/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/cloudflare/featured_huf46615db3e2baa55dbab3d6562c83645_104649_640x0_resize_q75_catmullrom.jpg" width="640" height="640"/>]]>
        
        &lt;p&gt;是在今天的 2024 开发者周上，Cloudflare 发布了一系列令人激动的新特性，例如 Python Worker 以及 Workers AI，把应用开发与交付的便利性拔高到了一个全新的程度。与 Cloudflare 的 Serverless 开发体验相比，传统云厂商号称 Serverless 的各种产品都显得滑稽可笑。&lt;/p&gt;
&lt;p&gt;Cloudflare 更广为人知的是它的慷慨免费套餐，一些中小型网站几乎能以零成本运行在这里。在 Cloudflare 的鲜明对比之下，天价出租 &lt;a href=&#34;/zh/blog/cloud/ecs&#34;&gt;CPU&lt;/a&gt;、&lt;a href=&#34;/zh/blog/cloud/ebs&#34;&gt;磁盘&lt;/a&gt;、&lt;a href=&#34;/zh/blog/cloud/cdn&#34;&gt;带宽&lt;/a&gt; 的公有云厂商显得面目可憎。Cloudflare 这样的云带来的开发体验，才真正配得上“云”的称号。在我看来， Cloudflare 应该主动出击，与传统公有云厂商抢夺云计算的定义权。&lt;/p&gt;
&lt;p&gt;利益相关：Cloudflare 没给我钱，我倒是给 Cloudflare 付了钱。纯粹是因为 Cloudflare 产品非常出色，极好地解决了我的需求，让我非常乐意付点费支持一下，并告诉更多朋友有这项福利。与之相反的是，我付钱给传统公有云厂商之后的感受是这做的都是什么玩意 —— 必须写文章&lt;a href=&#34;/zh/blog/cloud&#34;&gt;狠狠地骂他们&lt;/a&gt;，才能缓解内心的精神损失。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cloudflare-是什么&#34;&gt;Cloudflare 是什么&lt;/h2&gt;
&lt;p&gt;Cloudflare是一家提供内容分发网络（CDN）、互联网安全性、抗DDoS（分布式拒绝服务）和分布式DNS服务的美国公司。全世界互联网流量的 20% 由它服务。如果你挂着 VPN 访问一些网站，经常可以看到 Cloudflare 的抗 DDoS 验证码页面和 Logo。他们提供：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;内容分发网络（CDN）&lt;/strong&gt;：Cloudflare的CDN服务通过全球分布的数据中心缓存客户网站的内容，加快网站加载速度并减少服务器压力。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网站安全性&lt;/strong&gt;：提供SSL加密、防止SQL注入和跨站脚本攻击的安全措施，增强网站的安全性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DDoS防护&lt;/strong&gt;：具备先进的DDoS防护功能，能够抵御各种规模的攻击，保护网站不受干扰。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能路由&lt;/strong&gt;：使用Anycast网络技术，能够智能识别数据传输的最佳路径，减少延迟。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自动HTTPS重定向&lt;/strong&gt;：自动将访问转换为HTTPS，增强通信的安全性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Workers平台&lt;/strong&gt;：提供Serverless架构，允许在Cloudflare的全球网络上运行JavaScript或WASM（WebAssembly）代码，无需管理服务器。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然，Cloudflare 还有一些非常不错的服务，例如托管网站的 Pages，对象存储 R2，分布式数据库D1 等，开发者体验非常不错。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cloudflare/cloudflare-1.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cloudflare.com/zh-cn/what-is-cloudflare/&#34;&gt;Cloudflare 官网介绍&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pages简单易用的网站托管&#34;&gt;Pages：简单易用的网站托管&lt;/h2&gt;
&lt;p&gt;举个例子，如果您要托管一个静态网站。用 Cloudflare 有多简单？首先在 GitHub 创建一个 Repo，把网站内容丢进去，然后在 Cloudflare 链接到你的 &lt;a href=&#34;https://developers.cloudflare.com/pages/configuration/git-integration/&#34;&gt;Git Repo&lt;/a&gt;，分配一个子域名，然后你的网站就自动部署到全世界的各个角落了。如果你要更新网站内容，只要 git push 到特定分支就足够了。&lt;/p&gt;
&lt;p&gt;如果你使用特定的 &lt;a href=&#34;https://developers.cloudflare.com/pages/framework-guides/&#34;&gt;&lt;strong&gt;网站框架&lt;/strong&gt;&lt;/a&gt;，甚至还可以直接在线从仓库内容中构建：Blazor、Brunch、Docusaurus、Gatsby、Gridsome、Hexo、Hono、Hugo、Jekyll、Next.js、Nuxt、Pelican、Preact、Qwik、React、Remix、Solid、Sphinx、Svelte、Vite 3、Vue、VuePress、Zola、Angular、Astro、Elder.js、Eleventy、Ember、MkDocs。&lt;/p&gt;
&lt;p&gt;我从完全没接触过 Cloudflare，到把 Pigsty 的网站搬运到 CF 上并完成部署，只用了一个小时左右。我不需要操心什么服务器，CI/CD / HTTPS 证书，安全高防抗 DDoS，Cloudflare 已经把一切都替我做好了 —— 更重要的是流量费全免，我唯一做的就是绑了个信用卡花了十几块钱买了个域名，但实际上根本不需要什么额外费用 —— 都已经包含在免费计划中了。&lt;/p&gt;
&lt;p&gt;更令我震惊的是，虽然访问速度慢了一些，但在中国大陆是可以直接访问 CF 上的网站的，甚至不需要备案！说来也滑稽，本土云厂商虽然可以很快替你完成网站资源置备这件事，但耗时最久的步骤往往是卡在备案上。这一点确实算是 Cloudflare 的一个福利特性了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;worker极致的-serverless-体验&#34;&gt;Worker：极致的 Serverless 体验&lt;/h2&gt;
&lt;p&gt;尽管你可以把许多业务逻辑放在前端在浏览器中用 Javascript 解决，但一个复杂的动态网站也是需要一些后端开发的。而 Cloudflare 也把这一点简化到了极致 —— &lt;strong&gt;你只需要编写业务逻辑的 Javascript 函数就可以了&lt;/strong&gt;。当然，也可以使用 Typescript，现在更是支持 Python 了 —— 直接调用 AI 模型，难以想象后面会出现多少新的花活！&lt;/p&gt;
&lt;p&gt;用户编写的这个函数会被部署在 Cloudflare 全世界 CDN 边缘服务器节点上，执行用户定义的业务逻辑。你可以 &lt;a href=&#34;https://developers.cloudflare.com/workers/examples/&#34;&gt;&lt;strong&gt;干各种各样的事情&lt;/strong&gt;&lt;/a&gt;，返回动态的HTML与JSON，自定义路由、重定向、转发、过滤、缓存、A/B测试，重写请求，聚合请求，执行认证。当然，你也可以直接使用业务代码中调用对象存储 R2 与 SQL 数据库 D1，或者把请求转发到你自己的数据中心服务器上处理。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Env&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// If you set another name in wrangler.toml as the value for &amp;#39;binding&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// replace &amp;#34;DB&amp;#34; with the variable name you defined.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;DB&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;D1Database&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fetch&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;request&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Request&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Env&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pathname&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;URL&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;request&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pathname&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/api/beverages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// If you did not use `DB` as your binding name, change it here
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;results&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DB&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;prepare&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;SELECT * FROM Customers WHERE CompanyName = ?&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bind&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Bs Beverages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Response&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;json&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;results&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Response&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Call /api/beverages to see everyone who works at Bs Beverages&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://developers.cloudflare.com/d1/get-started/#write-queries-within-your-worker&#34;&gt;在 Worker 中查询 D1&lt;/a&gt;，简单到就是调用个变量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[[d1_databases]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;binding&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;DB&amp;#34; # available in your Worker on env.DB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;database_name&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;prod-d1-tutorial&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;database_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;unique-ID-for-your-database&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;也不需要什么配置，指定一下D1数据库/R2对象存储名称就好了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比起传统云上笨拙的开发部署体验来所，CF worker 真正做到了让开发者爽翻天的 Serverless 效果。开发者不需要操心什么数据库连接串，AccessPoint，AK/SK密钥管理，用什么数据库驱动，怎么管理本地日志，怎么搭建 CI/CD 流程这些繁琐问题，最多在环境变量里面指定一下存储桶名称这类简单信息就够了。写好 Worker 胶水代码实现业务逻辑，命令行一把梭就可以完成全球部署上线。&lt;/p&gt;
&lt;p&gt;与之对应的是传统公有云厂商提供的各种所谓 Serverless 服务，比如 RDS Serverless，就像一个恶劣的笑话，单纯是一种计费模式上的区别 —— 既不能 Scale to Zero，也没什么易用性上的改善 —— 你依然要在控制台去点点点创建一套 RDS，而不是像 Neon 这种真 Serverless 一样用连接串连上去就能直接迅速拉起一个新实例。更重要的是，稍微有个几十上百的QPS，相比包年包月的账单就要爆炸上天了 —— 这种平庸的 “Serverless” 确实污染了这个词语的本意。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;r2吊打-s3-的对象存储&#34;&gt;R2：吊打 S3 的对象存储&lt;/h2&gt;
&lt;p&gt;Cloudflare R2 提供了对象存储服务。与 AWS S3 相比，便宜了也许能有一个数量级 —— 我的意思是，尽管单纯看存储的价格 $ / GB·月，Cloudflare（0.015 $）价格与 S3 (0.023 $) 差距并不大，但 Cloudflare 的 R2 是免流量费的！&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;每月免费额度&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Cloudflare R2&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Amazon S3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;存储&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;10 GB / 月&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5 GB / 月&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;写请求&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1 M / 月&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2 K / 月&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;读请求&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;10 M / 月&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;20 K / 月&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;数据传输&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;无限量！&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;100 GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;超出免费额度后的价格&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;存储&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 0.11 / GB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 0.17 / GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;写请求&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 32.63 / 百万请求&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 36.25 / 百万请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;读请求&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 2.61 / 百万请求&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 2.9 / 百万请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;流量费&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;免费！&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 0.65 / GB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;Cloudflare &lt;a href=&#34;https://www.cloudflare.com/pg-cloudflare-r2-vs-aws-s3/&#34;&gt;R2 定价&lt;/a&gt; 与 AWS S3 对比&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;举个例子，我的网站，R2 在过去一个月内消耗了 300 GB 流量，按照本土云 1GB 流量八毛钱左右的价格，需要支付 240 元，但我一分钱也没付。而且，我还知道更极端的例子 —— 比如一个月消耗了 3TB 流量，也依然在免费套餐中……&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cloudflare/cloudflare-3.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;Cloudflare R2 是与 CDN 二合一的。在传统的云服务商中，你还需要操心额外的 CDN 配置，回源流量，CDN流量包，抗DDoS等等问题。但 Cloudflare 不需要，只要勾选配置启用，你的 R2 Bucket 可以直接被全世界读取，而最重要的是，而你根本不用担心账单被刷爆的问题 —— 我知道好几个在传统云厂商上，因为攻击把 CDN 流量刷爆，几万块钱余额一夜耗干欠费的案例。（包括我自己还亲历过一个因为云厂商自己SB的CDN回源设计，&lt;a href=&#34;/zh/blog/cloud/cdn&#34;&gt;爆刷CDN流量的案例&lt;/a&gt;）但是在 Cloudflare 上，你不需要像斗牛犬和猫头鹰一样监视着 &lt;a href=&#34;/zh/blog/cloud/finops&#34;&gt;&lt;strong&gt;账单&lt;/strong&gt;&lt;/a&gt; 与流量，首先，Cloudflare 流量免费…… ，更强的是， Cloudflare 已经有了智能的抗 DDoS 服务了，即使是免费的 Plan 也默认提供这项服务，可以有效避免恶意攻击（在传统云厂商，这玩意单独卖几千上万的所谓高防IP服务）。再加上每月慷慨的免费 1千万读取请求（对于放图片、软件包来说这已经非常大了！），可以确保在这上面的费用是高度确定性的 —— 如果不是零的话。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cloudflare在线的价值&#34;&gt;Cloudflare：在线的价值&lt;/h2&gt;
&lt;p&gt;王坚博士那本讲云计算的书《在线》其实说得很明白，云计算的真正价值是 &lt;strong&gt;在线&lt;/strong&gt;（而不是什么弹性、敏捷、便宜之类的东西）。举个例子：我有一些下云的客户与用户，虽然已经把主体业务从公有云上搬到了 IDC 或者自己办公室的服务器上，但依然在云上留一些 ECS 和 RDS 的尾巴 —— 因为他们收取数据的 API 放在那里，感觉公有云提供的网络接入要比自己的机房/办公室更稳定可靠 —— 注意是网络接入而不是存储计算。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cloudflare/cloudflare-4.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;很多云上的客户，&lt;a href=&#34;/zh/blog/cloud/ebs&#34;&gt;在算力上付出了几倍到十几倍溢价&lt;/a&gt;，&lt;a href=&#34;/zh/blog/cloud/ebs&#34;&gt;在存储上付出了几十倍到上百倍的溢价&lt;/a&gt;，都是为了这个网络 “在线” 的能力。但 Cloudflare 这样遍布全球的，带有边缘计算能力的 CDN ，将 “在线” 的能力拔高到了一个全新的高度上，比传统公有云更好地解决了这个问题。例如，AI 当红炸子鸡 OpenAI 的网站和 API 就是这么做的 —— 通过 CF 对外提供接入。&lt;/p&gt;
&lt;p&gt;在这种模式下，用户完全可以把网站与 API 通过 Cloudflare 对外提供接入，而将重量级的存储与计算放在 IDC 中，而不是在传统公有云上用几倍的价格进行租赁。Cloudflare 提供的 Worker 可以在边缘用于发送、收取数据，并将请求转发至您自己的数据中心进行处理。如果希望实现更可靠的容灾，您还可以利用 Cloudflare 上的 R2 与 D1 作为临时性本地缓存，预处理汇总数据后，统一拉取到 IDC 进行处理。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cf-与-idc-从两头挤压公有云&#34;&gt;CF 与 IDC 从两头挤压公有云&lt;/h2&gt;
&lt;p&gt;在 IT 规模光谱的一侧 —— 个人站长与小微企业上，新一代云服务 / SaaS（CF，Neon，Vercel，Supabase） 赛博菩萨们的免费套餐，对公有云产生了明显的替代与冲击 —— 别说 99 块钱包年的云服务器了，9块9 都不一定香了 —— &lt;strong&gt;再便宜能便宜过免费吗？&lt;/strong&gt; —— 更何况用 CF 建站的体验比云服务器自建要好太多了。&lt;/p&gt;
&lt;p&gt;但更重要的是，在光谱另一侧的中大型企业中，新出现的 IDC 2.0 与开源管控软件替代合流，短路掉公有云这个中间商，利用好&lt;a href=&#34;https://mp.weixin.qq.com/s/1OSRcBfd58s0tgZTUZHB9g&#34;&gt;硬件摩尔定律&lt;/a&gt;的累积优势，成为&lt;a href=&#34;https://mp.weixin.qq.com/s/Yp_PU8nmyK-NVq0clD98RQ&#34;&gt;终极FinOps实践&lt;/a&gt;，实现极为&lt;a href=&#34;https://mp.weixin.qq.com/s/CicctyvV1xk5B-AsKfzPjw&#34;&gt;惊人的降本增效能力&lt;/a&gt;。Cloudflare 的出现补齐了开源IDC自建模式的最后一块短板 —— “&lt;strong&gt;在线&lt;/strong&gt;” 能力。&lt;/p&gt;
&lt;p&gt;Cloudflare 并没有提供传统公有云上的那些弹性计算、存储、&lt;a href=&#34;/zh/blog/db/k8s&#34;&gt;K8S&lt;/a&gt;、&lt;a href=&#34;/zh/blog/cloud/rds&#34;&gt;RDS&lt;/a&gt; 服务。但幸运地是，Cloudflare 可以与公有云 / IDC 良好地配合协同 —— 从某种意义上来说，因为 Cloudflare 成功解决了 “在线” 的问题，这使得传统数据库中心 IDC 2.0 也同样可以拥有比肩甚至超越公有云的 “在线” 能力，两者配合，在事实上摧毁了一些公有云的护城河，并挤压了传统公有云厂商的生存空间。&lt;/p&gt;
&lt;p&gt;我非常看好 Cloudflare 这种模式，实际上，这种丝滑的体验才配称的上是云，配享太庙，可以心安理得吃高科技行业的高毛利。传统的 IDC 2.0 也在不断进步，租赁机柜、裸金属服务器的体验也并不逊色传统公有云（无非是服务器从两分钟到位变成几个小时到位）。而无法提供更多技术附加值，产品不可替代性的公有云厂商，生存空间会越来越小 —— &lt;a href=&#34;/zh/blog/cloud/profit&#34;&gt;最终回退到传统 IDC / IaaS 业务中去&lt;/a&gt;。&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
