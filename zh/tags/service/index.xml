<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pigsty – Service</title>
    <link>/zh/tags/service/</link>
    <description>Recent content in Service on Pigsty</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    
	  <atom:link href="/zh/tags/service/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 服务/接入</title>
      <link>/zh/docs/pgsql/svc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zh/docs/pgsql/svc/</guid>
      <description>
        
        
        &lt;blockquote&gt;
&lt;p&gt;分离读写操作，正确路由流量，稳定可靠地交付 PostgreSQL 集群提供的能力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;/zh/docs/pgsql/svc/#服务概述&#34;&gt;服务&lt;/a&gt;是一种抽象：它是数据库集群对外提供能力的形式，并封装了底层集群的细节。&lt;/p&gt;
&lt;p&gt;服务对于生产环境中的&lt;a href=&#34;/zh/docs/pgsql/svc/#接入服务&#34;&gt;稳定接入&lt;/a&gt;至关重要，在&lt;a href=&#34;/zh/docs/concept/ha&#34;&gt;高可用&lt;/a&gt;集群自动故障时方显其价值，&lt;a href=&#34;%E5%8D%95%E6%9C%BA%E7%94%A8%E6%88%B7&#34;&gt;单机用户&lt;/a&gt;通常不需要操心这个概念。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;单机用户&#34;&gt;单机用户&lt;/h2&gt;
&lt;p&gt;“服务” 的概念是给生产环境用的，个人用户/单机集群可以不折腾，直接拿实例名/IP地址访问数据库。&lt;/p&gt;
&lt;p&gt;例如，Pigsty 默认的单节点 &lt;code&gt;pg-meta&lt;/code&gt;.&lt;code&gt;meta&lt;/code&gt; 数据库，就可以直接用下面三个不同的用户连接上去。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql postgres://dbuser_dba:DBUser.DBA@10.10.10.10/meta     &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 直接用 DBA 超级用户连上去&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql postgres://dbuser_meta:DBUser.Meta@10.10.10.10/meta   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 用默认的业务管理员用户连上去&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql postgres://dbuser_view:DBUser.View@pg-meta/meta       &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 用默认的只读用户走实例域名连上去&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;服务概述&#34;&gt;服务概述&lt;/h2&gt;
&lt;p&gt;在真实世界生产环境中，我们会使用基于复制的主从数据库集群。集群中有且仅有一个实例作为领导者（&lt;a href=&#34;/zh/docs/pgsql/config#%E8%AF%BB%E5%86%99%E4%B8%BB%E5%BA%93&#34;&gt;主库&lt;/a&gt;）可以接受写入。
而其他实例（&lt;a href=&#34;/zh/docs/pgsql/config#%E5%8F%AA%E8%AF%BB%E4%BB%8E%E5%BA%93&#34;&gt;从库&lt;/a&gt;）则会从持续从集群领导者获取变更日志，与领导者保持一致。同时，从库还可以承载只读请求，在读多写少的场景下可以显著分担主库的负担，
因此对集群的写入请求与只读请求进行区分，是一种十分常见的实践。&lt;/p&gt;
&lt;p&gt;此外对于高频短连接的生产环境，我们还会通过连接池中间件（Pgbouncer）对请求进行池化，减少连接与后端进程的创建开销。但对于ETL与变更执行等场景，我们又需要绕过连接池，直接访问数据库。
同时，高可用集群在故障时会出现故障切换（Failover），故障切换会导致集群的领导者出现变更。因此高可用的数据库方案要求写入流量可以自动适配集群的领导者变化。
这些不同的访问需求（读写分离，池化与直连，故障切换自动适配）最终抽象出 &lt;strong&gt;服务&lt;/strong&gt; （Service）的概念。&lt;/p&gt;
&lt;p&gt;通常来说，数据库集群都必须提供这种最基础的服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;读写服务（primary）&lt;/strong&gt; ：可以读写数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于生产数据库集群，至少应当提供这两种服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;读写服务（primary）&lt;/strong&gt; ：写入数据：只能由主库所承载。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;只读服务（replica）&lt;/strong&gt; ：读取数据：可以由从库承载，没有从库时也可由主库承载&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，根据具体的业务场景，可能还会有其他的服务，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;默认直连服务（default）&lt;/strong&gt; ：允许（管理）用户，绕过连接池直接访问数据库的服务&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;离线从库服务（offline）&lt;/strong&gt; ：不承接线上只读流量的专用从库，用于ETL与分析查询&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;同步从库服务（standby）&lt;/strong&gt; ：没有复制延迟的只读服务，由&lt;a href=&#34;/zh/docs/pgsql/config#%E5%90%8C%E6%AD%A5%E5%A4%87%E5%BA%93&#34;&gt;同步备库&lt;/a&gt;/主库处理只读查询&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;延迟从库服务（delayed）&lt;/strong&gt; ：访问同一个集群在一段时间之前的旧数据，由&lt;a href=&#34;/zh/docs/pgsql/config#%E5%BB%B6%E8%BF%9F%E9%9B%86%E7%BE%A4&#34;&gt;延迟从库&lt;/a&gt;来处理&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;默认服务&#34;&gt;默认服务&lt;/h2&gt;
&lt;p&gt;Pigsty默认为每个 PostgreSQL 数据库集群提供四种不同的服务，以下是默认服务及其定义：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;服务&lt;/th&gt;
&lt;th&gt;端口&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/zh/docs/pgsql/svc/#primary服务&#34;&gt;primary&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;5433&lt;/td&gt;
&lt;td&gt;生产读写，连接到主库连接池（6432）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/zh/docs/pgsql/svc/#replica服务&#34;&gt;replica&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;5434&lt;/td&gt;
&lt;td&gt;生产只读，连接到备库连接池（6432）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/zh/docs/pgsql/svc/#default服务&#34;&gt;default&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;5436&lt;/td&gt;
&lt;td&gt;管理，ETL写入，直接访问主库（5432）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;/zh/docs/pgsql/svc/#offline服务&#34;&gt;offline&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;5438&lt;/td&gt;
&lt;td&gt;OLAP、ETL、个人用户、交互式查询&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以默认的 &lt;code&gt;pg-meta&lt;/code&gt; 集群为例，它提供四种默认服务：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql postgres://dbuser_meta:DBUser.Meta@pg-meta:5433/meta   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pg-meta-primary : 通过主要的 pgbouncer(6432) 进行生产读写&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql postgres://dbuser_meta:DBUser.Meta@pg-meta:5434/meta   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pg-meta-replica : 通过备份的 pgbouncer(6432) 进行生产只读&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql postgres://dbuser_dba:DBUser.DBA@pg-meta:5436/meta     &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pg-meta-default : 通过主要的 postgres(5432) 直接连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql postgres://dbuser_stats:DBUser.Stats@pg-meta:5438/meta &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pg-meta-offline : 通过离线的 postgres(5432) 直接连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从示例集群&lt;a href=&#34;/zh/docs/pgsql/arch&#34;&gt;架构图&lt;/a&gt;上可以看出这四种服务的工作方式：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/docs/concept/ha&#34;&gt;&lt;img alt=&#34;pigsty-ha.png&#34; src=&#34;/img/pigsty/ha.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注意在这里&lt;code&gt;pg-meta&lt;/code&gt; 域名指向了集群的 L2 VIP，进而指向集群主库上的 haproxy 负载均衡器，它负责将流量路由到不同的实例上，详见&lt;a href=&#34;/zh/docs/pgsql/svc/#接入服务&#34;&gt;服务接入&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;服务实现&#34;&gt;服务实现&lt;/h2&gt;
&lt;p&gt;在 Pigsty 中，服务使用&lt;a href=&#34;/zh/docs/node&#34;&gt;节点&lt;/a&gt;上的 &lt;a href=&#34;/zh/docs/reference/param#haproxy&#34;&gt;haproxy&lt;/a&gt; 来实现，通过主机节点上的不同端口进行区分。&lt;/p&gt;
&lt;p&gt;Pigsty 所纳管的每个节点上都默认启用了 Haproxy 以对外暴露服务，而数据库节点也不例外。
集群中的节点尽管从数据库的视角来看有主从之分，但从服务的视角来看，每个节点都是相同的：
这意味着即使您访问的是从库节点，只要使用正确的服务端口，就依然可以使用到主库读写的服务。
这样的设计可以屏蔽复杂度：所以您只要可以访问 PostgreSQL 集群上的任意一个实例，就可以完整的访问到所有服务。&lt;/p&gt;
&lt;p&gt;这样的设计类似于 Kubernetes 中的 NodePort 服务，同样在 Pigsty 中，每一个服务都包括以下两个核心要素：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过 NodePort 暴露的访问端点（端口号，从哪访问？）&lt;/li&gt;
&lt;li&gt;通过 Selectors 选择的目标实例（实例列表，谁来承载？）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Pigsty的服务交付边界止步于集群的HAProxy，用户可以用各种手段访问这些负载均衡器，请参考&lt;a href=&#34;/zh/docs/pgsql/svc/#接入服务&#34;&gt;接入服务&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;所有的服务都通过配置文件进行声明，例如，PostgreSQL 默认服务就是由 &lt;a href=&#34;/zh/docs/reference/param#pg_default_services&#34;&gt;&lt;code&gt;pg_default_services&lt;/code&gt;&lt;/a&gt; 参数所定义的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_default_services&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: primary ,port: 5433 ,dest: default  ,check: /primary   ,selector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: replica ,port: 5434 ,dest: default  ,check: /read-only ,selector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, backup&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[? pg_role == `primary` || pg_role == `offline` ]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: default ,port: 5436 ,dest: postgres ,check: /primary   ,selector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: offline ,port: 5438 ,dest: postgres ,check: /replica   ,selector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[? pg_role == `offline` || pg_offline_query ]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, backup&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[? pg_role == `replica` &amp;amp;&amp;amp; !pg_offline_query]&amp;#34;&lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;您也可以在 &lt;a href=&#34;/zh/docs/reference/param#pg_services&#34;&gt;&lt;code&gt;pg_services&lt;/code&gt;&lt;/a&gt; 中定义额外的服务，参数 &lt;code&gt;pg_default_services&lt;/code&gt; 与 &lt;code&gt;pg_services&lt;/code&gt; 都是由 &lt;a href=&#34;/zh/docs/pgsql/svc/#定义服务&#34;&gt;服务定义&lt;/a&gt; 对象组成的数组。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;定义服务&#34;&gt;定义服务&lt;/h2&gt;
&lt;p&gt;Pigsty 允许您定义自己的服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/reference/param#pg_default_services&#34;&gt;&lt;code&gt;pg_default_services&lt;/code&gt;&lt;/a&gt;：所有 PostgreSQL 集群统一对外暴露的服务，默认有四个。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/reference/param#pg_services&#34;&gt;&lt;code&gt;pg_services&lt;/code&gt;&lt;/a&gt;：额外的 PostgreSQL 服务，可以视需求在全局或集群级别定义。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/reference/param#haproxy_services&#34;&gt;&lt;code&gt;haproxy_servies&lt;/code&gt;&lt;/a&gt;：直接定制 HAProxy 服务内容，可以用于其他组件的接入&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于 PostgreSQL 集群来说，通常只需要关注前两者即可。
每一条服务定义都会在所有相关 HAProxy 实例的配置目录下生成一个新的配置文件：&lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/roles/pgsql/templates/service.j2&#34;&gt;&lt;code&gt;/etc/haproxy/&amp;lt;svcname&amp;gt;.cfg&lt;/code&gt;&lt;/a&gt;
下面是一个自定义的服务样例 &lt;code&gt;standby&lt;/code&gt;：当您想要对外提供没有复制延迟的只读服务时，就可以在  &lt;a href=&#34;/zh/docs/reference/param#pg_services&#34;&gt;&lt;code&gt;pg_services&lt;/code&gt;&lt;/a&gt; 新增这条记录：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;standby                  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 必选，服务名称，最终的 svc 名称会使用 `pg_cluster` 作为前缀，例如：pg-meta-standby&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;port&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5435&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                      &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 必选，暴露的服务端口（作为 kubernetes 服务节点端口模式）&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ip&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                         &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 可选，服务绑定的 IP 地址，默认情况下为所有 IP 地址&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;selector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 必选，服务成员选择器，使用 JMESPath 来筛选配置清单&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;backup&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[? pg_role == `primary`]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 可选，服务成员选择器（备份），也就是当默认选择器选中的实例都宕机后，服务才会由这里选中的实例成员来承载&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dest&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;default                  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 可选，目标端口，default|postgres|pgbouncer|&amp;lt;port_number&amp;gt;，默认为 &amp;#39;default&amp;#39;，Default的意思就是使用 pg_default_service_dest 的取值来最终决定&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;check&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/sync                   &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 可选，健康检查 URL 路径，默认为 /，这里使用 Patroni API：/sync ，只有同步备库和主库才会返回 200 健康状态码 &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;maxconn&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5000&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                   &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 可选，允许的前端连接最大数，默认为5000&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;balance&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;roundrobin            &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 可选，haproxy 负载均衡算法（默认为 roundrobin，其他选项：leastconn）&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;inter 3s fastinter 1s downinter 5s rise 3 fall 3 on-marked-down shutdown-sessions slowstart 30s maxconn 3000 maxqueue 128 weight 100&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而上面的服务定义，在样例的三节点 &lt;code&gt;pg-test&lt;/code&gt; 上将会被转换为 haproxy 配置文件 &lt;code&gt;/etc/haproxy/pg-test-standby.conf&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#---------------------------------------------------------------------&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# service: pg-test-standby @ 10.10.10.11:5435&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#---------------------------------------------------------------------&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# service instances 10.10.10.11, 10.10.10.13, 10.10.10.12&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# service backups   10.10.10.11&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;listen pg-test-standby&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bind *:5435           &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# &amp;lt;--- 绑定了所有IP地址上的 5435 端口&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mode tcp              &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# &amp;lt;--- 负载均衡器工作在 TCP 协议上&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;maxconn 5000          &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# &amp;lt;--- 最大连接数为 5000，可按需调大&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;balance roundrobin    &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# &amp;lt;--- 负载均衡算法为 rr 轮询，还可以使用 leastconn &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;option httpchk        &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# &amp;lt;--- 启用 HTTP 健康检查&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;option http-keep-alive&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# &amp;lt;--- 保持HTTP连接&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http-check send meth OPTIONS uri /sync  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# &amp;lt;---- 这里使用 /sync ，Patroni 健康检查 API ，只有同步备库和主库才会返回 200 健康状态码。 &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http-check expect status 200            &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# &amp;lt;---- 健康检查返回代码 200 代表正常&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;default-server inter 3s fastinter 1s downinter 5s rise 3 fall 3 on-marked-down shutdown-sessions slowstart 30s maxconn 3000 maxqueue 128 weight 100&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# servers： # pg-test 集群全部三个实例都被 selector: &amp;#34;[]&amp;#34; 给圈中了，因为没有任何的筛选条件，所以都会作为 pg-test-replica 服务的后端服务器。但是因为还有 /sync 健康检查，所以只有主库和同步备库才能真正承载请求。&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;server pg-test-1 10.10.10.11:6432 check port 8008 weight 100 backup &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# &amp;lt;----- 唯独主库满足条件 pg_role == `primary`， 被 backup selector 选中。&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;server pg-test-3 10.10.10.13:6432 check port 8008 weight 100        &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#        因此作为服务的兜底实例：平时不承载请求，其他从库全部宕机后，才会承载只读请求，从而最大避免了读写服务受到只读服务的影响&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;server pg-test-2 10.10.10.12:6432 check port 8008 weight 100        &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#        &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这里，&lt;code&gt;pg-test&lt;/code&gt; 集群全部三个实例都被 &lt;code&gt;selector: &amp;quot;[]&amp;quot;&lt;/code&gt; 给圈中了，渲染进入 &lt;code&gt;pg-test-replica&lt;/code&gt; 服务的后端服务器列表中。但是因为还有 &lt;code&gt;/sync&lt;/code&gt; 健康检查，Patroni Rest API只有在主库和&lt;a href=&#34;/zh/docs/pgsql/config#%E5%90%8C%E6%AD%A5%E5%A4%87%E5%BA%93&#34;&gt;同步备库&lt;/a&gt;上才会返回代表健康的 HTTP 200 状态码，因此只有主库和同步备库才能真正承载请求。
此外，主库因为满足条件 &lt;code&gt;pg_role == primary&lt;/code&gt;， 被 backup selector 选中，被标记为了备份服务器，只有当没有其他实例（也就是同步备库）可以满足需求时，才会顶上。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;primary服务&#34;&gt;Primary服务&lt;/h2&gt;
&lt;p&gt;Primary服务可能是生产环境中最关键的服务，它在 5433 端口提供对数据库集群的读写能力，服务定义如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: primary ,port: 5433 ,dest: default  ,check: /primary   ,selector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;选择器参数 &lt;code&gt;selector: &amp;quot;[]&amp;quot;&lt;/code&gt; 意味着所有集群成员都将被包括在Primary服务中&lt;/li&gt;
&lt;li&gt;但只有主库能够通过健康检查（&lt;code&gt;check: /primary&lt;/code&gt;），实际承载Primary服务的流量。&lt;/li&gt;
&lt;li&gt;目的地参数 &lt;code&gt;dest: default&lt;/code&gt; 意味着Primary服务的目的地受到 &lt;a href=&#34;/zh/docs/reference/param#pg_default_service_dest&#34;&gt;&lt;code&gt;pg_default_service_dest&lt;/code&gt;&lt;/a&gt; 参数的影响&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dest&lt;/code&gt; 默认值 &lt;code&gt;default&lt;/code&gt; 会被替换为 &lt;code&gt;pg_default_service_dest&lt;/code&gt; 的值，默认为 &lt;code&gt;pgbouncer&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;默认情况下 Primary 服务的目的地默认是主库上的连接池，也就是由 &lt;a href=&#34;/zh/docs/reference/param#pgbouncer_port&#34;&gt;&lt;code&gt;pgbouncer_port&lt;/code&gt;&lt;/a&gt; 指定的端口，默认为 6432&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果 &lt;code&gt;pg_default_service_dest&lt;/code&gt; 的值为 &lt;code&gt;postgres&lt;/code&gt;，那么 primary 服务的目的地就会绕过连接池，直接使用 PostgreSQL 数据库的端口（&lt;a href=&#34;/zh/docs/reference/param#pg_port&#34;&gt;&lt;code&gt;pg_port&lt;/code&gt;&lt;/a&gt;，默认值 5432），对于一些不希望使用连接池的场景，这个参数非常实用。&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;示例：pg-test-primary 的 haproxy 配置&lt;/summary&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;listen pg-test-primary&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bind *:5433        &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# &amp;lt;--- primary 服务默认使用 5433 端口&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mode tcp&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;maxconn 5000&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;balance roundrobin&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;option httpchk&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;option http-keep-alive&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http-check send meth OPTIONS uri /primary&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# &amp;lt;--- primary 服务默认使用 Patroni RestAPI /primary 健康检查&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http-check expect status 200&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;default-server inter 3s fastinter 1s downinter 5s rise 3 fall 3 on-marked-down shutdown-sessions slowstart 30s maxconn 3000 maxqueue 128 weight 100&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# servers&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;server pg-test-1 10.10.10.11:6432 check port 8008 weight 100&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;server pg-test-3 10.10.10.13:6432 check port 8008 weight 100&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;server pg-test-2 10.10.10.12:6432 check port 8008 weight 100&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;Patroni 的&lt;a href=&#34;/zh/docs/concept/ha&#34;&gt;高可用&lt;/a&gt;机制确保任何时候最多只会有一个实例的 &lt;code&gt;/primary&lt;/code&gt; 健康检查为真，因此Primary服务将始终将流量路由到主实例。&lt;/p&gt;
&lt;p&gt;使用 Primary 服务而不是直连数据库的一个好处是，如果集群因为某种情况出现了双主（比如在没有watchdog的情况下kill -9杀死主库 Patroni），Haproxy在这种情况下仍然可以避免脑裂，因为它只会在 Patroni 存活且返回主库状态时才会分发流量。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;replica服务&#34;&gt;Replica服务&lt;/h2&gt;
&lt;p&gt;Replica服务在生产环境中的重要性仅次于Primary服务，它在 5434 端口提供对数据库集群的只读能力，服务定义如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: replica ,port: 5434 ,dest: default  ,check: /read-only ,selector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, backup&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[? pg_role == `primary` || pg_role == `offline` ]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;选择器参数 &lt;code&gt;selector: &amp;quot;[]&amp;quot;&lt;/code&gt; 意味着所有集群成员都将被包括在Replica服务中&lt;/li&gt;
&lt;li&gt;所有实例都能够通过健康检查（&lt;code&gt;check: /read-only&lt;/code&gt;），承载Replica服务的流量。&lt;/li&gt;
&lt;li&gt;备份选择器：&lt;code&gt;[? pg_role == &#39;primary&#39; || pg_role == &#39;offline&#39; ]&lt;/code&gt; 将主库和&lt;a href=&#34;/zh/docs/pgsql/config#%E7%A6%BB%E7%BA%BF%E4%BB%8E%E5%BA%93&#34;&gt;离线从库&lt;/a&gt;标注为备份服务器。&lt;/li&gt;
&lt;li&gt;只有当所有&lt;a href=&#34;/zh/docs/pgsql/config#%E5%8F%AA%E8%AF%BB%E4%BB%8E%E5%BA%93&#34;&gt;普通从库&lt;/a&gt;都宕机后，Replica服务才会由主库或离线从库来承载。&lt;/li&gt;
&lt;li&gt;目的地参数 &lt;code&gt;dest: default&lt;/code&gt; 意味着Replica服务的目的地也受到 &lt;a href=&#34;/zh/docs/reference/param#pg_default_service_dest&#34;&gt;&lt;code&gt;pg_default_service_dest&lt;/code&gt;&lt;/a&gt; 参数的影响&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dest&lt;/code&gt; 默认值 &lt;code&gt;default&lt;/code&gt; 会被替换为 &lt;code&gt;pg_default_service_dest&lt;/code&gt; 的值，默认为 &lt;code&gt;pgbouncer&lt;/code&gt;，这一点和 &lt;a href=&#34;/zh/docs/pgsql/svc/#primary服务&#34;&gt;Primary服务&lt;/a&gt; 相同&lt;/li&gt;
&lt;li&gt;默认情况下 Replica 服务的目的地默认是从库上的连接池，也就是由 &lt;a href=&#34;/zh/docs/reference/param#pgbouncer_port&#34;&gt;&lt;code&gt;pgbouncer_port&lt;/code&gt;&lt;/a&gt; 指定的端口，默认为 6432&lt;/li&gt;
&lt;/ul&gt;
&lt;details&gt;&lt;summary&gt;示例：pg-test-replica 的 haproxy 配置&lt;/summary&gt; 
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;listen pg-test-replica&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;bind *:5434&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;mode tcp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;maxconn 5000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;balance roundrobin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;option httpchk&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;option http-keep-alive&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;http-check send meth OPTIONS uri /read-only&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;http-check expect status 200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;default-server inter 3s fastinter 1s downinter 5s rise 3 fall 3 on-marked-down shutdown-sessions slowstart 30s maxconn 3000 maxqueue 128 weight 100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# servers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;server pg-test-1 10.10.10.11:6432 check port 8008 weight 100 backup&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;server pg-test-3 10.10.10.13:6432 check port 8008 weight 100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;server pg-test-2 10.10.10.12:6432 check port 8008 weight 100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;Replica服务非常灵活：如果有存活的专用 Replica 实例，那么它会优先使用这些实例来承载只读请求，只有当从库实例全部宕机后，才会由主库来兜底只读请求。对于常见的一主一从双节点集群就是：只要从库活着就用从库，从库挂了再用主库。&lt;/p&gt;
&lt;p&gt;此外，除非专用只读实例全部宕机，Replica 服务也不会使用专用 Offline 实例，这样就避免了在线快查询与离线慢查询混在一起，相互影响。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;default服务&#34;&gt;Default服务&lt;/h3&gt;
&lt;p&gt;Default服务在 5436 端口上提供服务，它是Primary服务的变体。&lt;/p&gt;
&lt;p&gt;Default服务总是绕过连接池直接连到主库上的 PostgreSQL，这对于管理连接、ETL写入、CDC数据变更捕获等都很有用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: primary ,port: 5433 ,dest: default  ,check: /primary   ,selector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果 &lt;code&gt;pg_default_service_dest&lt;/code&gt; 被修改为 &lt;code&gt;postgres&lt;/code&gt;，那么可以说 Default 服务除了端口和名称内容之外，与 Primary 服务是完全等价的。在这种情况下，您可以考虑将 Default 从默认服务中剔除。&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;示例：pg-test-default 的 haproxy 配置&lt;/summary&gt; 
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;listen pg-test-default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;bind *:5436         # &amp;lt;--- 除了监听端口/目标端口和服务名，其他配置和 primary 服务一模一样&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;mode tcp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;maxconn 5000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;balance roundrobin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;option httpchk&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;option http-keep-alive&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;http-check send meth OPTIONS uri /primary&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;http-check expect status 200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;default-server inter 3s fastinter 1s downinter 5s rise 3 fall 3 on-marked-down shutdown-sessions slowstart 30s maxconn 3000 maxqueue 128 weight 100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# servers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;server pg-test-1 10.10.10.11:5432 check port 8008 weight 100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;server pg-test-3 10.10.10.13:5432 check port 8008 weight 100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;server pg-test-2 10.10.10.12:5432 check port 8008 weight 100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;offline服务&#34;&gt;Offline服务&lt;/h3&gt;
&lt;p&gt;Default服务在 5438 端口上提供服务，它也绕开连接池直接访问 PostgreSQL 数据库，通常用于慢查询/分析查询/ETL读取/个人用户交互式查询，其服务定义如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: offline ,port: 5438 ,dest: postgres ,check: /replica   ,selector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[? pg_role == `offline` || pg_offline_query ]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, backup&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[? pg_role == `replica` &amp;amp;&amp;amp; !pg_offline_query]&amp;#34;&lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Offline服务将流量直接路由到专用的&lt;a href=&#34;/zh/docs/pgsql/config#%E7%A6%BB%E7%BA%BF%E4%BB%8E%E5%BA%93&#34;&gt;离线从库&lt;/a&gt;上，或者带有 &lt;a href=&#34;/zh/docs/reference/param#pg_offline_query&#34;&gt;&lt;code&gt;pg_offline_query&lt;/code&gt;&lt;/a&gt; 标记的普通&lt;a href=&#34;/zh/docs/pgsql/config#%E5%8F%AA%E8%AF%BB%E4%BB%8E%E5%BA%93&#34;&gt;只读实例&lt;/a&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择器参数从集群中筛选出了两种实例：&lt;a href=&#34;/zh/docs/reference/param#pg_role&#34;&gt;&lt;code&gt;pg_role&lt;/code&gt;&lt;/a&gt; = &lt;code&gt;offline&lt;/code&gt; 的离线从库，或是带有 &lt;a href=&#34;/zh/docs/reference/param#pg_offline_query&#34;&gt;&lt;code&gt;pg_offline_query&lt;/code&gt;&lt;/a&gt; = &lt;code&gt;true&lt;/code&gt; 标记的普通&lt;a href=&#34;/zh/docs/pgsql/config#%E5%8F%AA%E8%AF%BB%E4%BB%8E%E5%BA%93&#34;&gt;只读实例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;专用离线从库和打标记的普通从库主要的区别在于：前者默认不承载 &lt;a href=&#34;/zh/docs/pgsql/svc/#replica服务&#34;&gt;Replica服务&lt;/a&gt; 的请求，避免快慢请求混在一起，而后者默认会承载。&lt;/li&gt;
&lt;li&gt;备份选择器参数从集群中筛选出了一种实例：不带 offline 标记的普通从库，这意味着如果离线实例或者带Offline标记的普通从库挂了之后，其他普通的从库可以用来承载Offline服务。&lt;/li&gt;
&lt;li&gt;健康检查 &lt;code&gt;/replica&lt;/code&gt; 只会针对从库返回 200， 主库会返回错误，因此 Offline服务 永远不会将流量分发到主库实例上去，哪怕集群中只剩这一台主库。&lt;/li&gt;
&lt;li&gt;同时，主库实例既不会被选择器圈中，也不会被备份选择器圈中，因此它永远不会承载Offline服务。因此 Offline 服务总是可以避免用户访问主库，从而避免对主库的影响。&lt;/li&gt;
&lt;/ul&gt;
&lt;details&gt;&lt;summary&gt;示例：pg-test-offline 的 haproxy 配置&lt;/summary&gt; 
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;listen pg-test-offline&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;bind *:5438&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;mode tcp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;maxconn 5000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;balance roundrobin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;option httpchk&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;option http-keep-alive&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;http-check send meth OPTIONS uri /replica&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;http-check expect status 200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;default-server inter 3s fastinter 1s downinter 5s rise 3 fall 3 on-marked-down shutdown-sessions slowstart 30s maxconn 3000 maxqueue 128 weight 100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# servers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;server pg-test-3 10.10.10.13:5432 check port 8008 weight 100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;server pg-test-2 10.10.10.12:5432 check port 8008 weight 100 backup&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;Offline服务提供受限的只读服务，通常用于两类查询：交互式查询（个人用户），慢查询长事务（分析/ETL）。&lt;/p&gt;
&lt;p&gt;Offline 服务需要额外的维护照顾：当集群发生主从切换或故障自动切换时，集群的实例角色会发生变化，而 Haproxy 的配置却不会自动发生变化。对于有多个从库的集群来说，这通常并不是一个问题。
然而对于一主一从，从库跑Offline查询的精简小集群而言，主从切换意味着从库变成了主库（健康检查失效），原来的主库变成了从库（不在 Offline 后端列表中），于是没有实例可以承载 Offline 服务了，因此需要手动&lt;a href=&#34;/zh/docs/pgsql/admin#%E9%87%8D%E8%BD%BD%E6%9C%8D%E5%8A%A1&#34;&gt;重载服务&lt;/a&gt;以使变更生效。&lt;/p&gt;
&lt;p&gt;如果您的业务模型较为简单，您可以考虑剔除 Default 服务与 Offline 服务，使用 Primary 服务与 Replica 服务直连数据库。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;重载服务&#34;&gt;重载服务&lt;/h2&gt;
&lt;p&gt;当集群成员发生变化，如添加/删除副本、主备切换或调整相对权重时， 你需要 &lt;a href=&#34;/zh/docs/pgsql/admin#%E9%87%8D%E8%BD%BD%E6%9C%8D%E5%8A%A1&#34;&gt;重载服务&lt;/a&gt; 以使更改生效。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bin/pgsql-svc &amp;lt;cls&amp;gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;ip...&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;         &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 为 lb 集群或 lb 实例重载服务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# ./pgsql.yml -t pg_service         # 重载服务的实际 ansible 任务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;接入服务&#34;&gt;接入服务&lt;/h2&gt;
&lt;p&gt;Pigsty的服务交付边界止步于集群的HAProxy，用户可以用各种手段访问这些负载均衡器。&lt;/p&gt;
&lt;p&gt;典型的做法是使用 DNS 或 VIP 接入，将其绑定在集群所有或任意数量的负载均衡器上。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pigsty-access.jpg&#34; src=&#34;/img/pigsty/access.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;你可以使用不同的 主机 &amp;amp; 端口 组合，它们以不同的方式提供 PostgreSQL 服务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主机&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;样例&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;集群域名&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pg-test&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;通过集群域名访问（由 dnsmasq @ infra 节点解析）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;集群 VIP 地址&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10.10.10.3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;通过由 &lt;code&gt;vip-manager&lt;/code&gt; 管理的 L2 VIP 地址访问，绑定到主节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;实例主机名&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pg-test-1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;通过任何实例主机名访问（由 dnsmasq @ infra 节点解析）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;实例 IP 地址&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10.10.10.11&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;访问任何实例的 IP 地址&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;端口&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pigsty 使用不同的 &lt;strong&gt;端口&lt;/strong&gt; 来区分 &lt;a href=&#34;/zh/docs/pgsql/svc/#服务概述&#34;&gt;pg services&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;端口&lt;/th&gt;
&lt;th&gt;服务&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;5432&lt;/td&gt;
&lt;td&gt;postgres&lt;/td&gt;
&lt;td&gt;数据库&lt;/td&gt;
&lt;td&gt;直接访问 postgres 服务器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6432&lt;/td&gt;
&lt;td&gt;pgbouncer&lt;/td&gt;
&lt;td&gt;中间件&lt;/td&gt;
&lt;td&gt;访问 postgres 前先通过连接池中间件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5433&lt;/td&gt;
&lt;td&gt;primary&lt;/td&gt;
&lt;td&gt;服务&lt;/td&gt;
&lt;td&gt;访问主 pgbouncer (或 postgres)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5434&lt;/td&gt;
&lt;td&gt;replica&lt;/td&gt;
&lt;td&gt;服务&lt;/td&gt;
&lt;td&gt;访问备份 pgbouncer (或 postgres)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5436&lt;/td&gt;
&lt;td&gt;default&lt;/td&gt;
&lt;td&gt;服务&lt;/td&gt;
&lt;td&gt;访问主 postgres&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5438&lt;/td&gt;
&lt;td&gt;offline&lt;/td&gt;
&lt;td&gt;服务&lt;/td&gt;
&lt;td&gt;访问离线 postgres&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;组合&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 通过集群域名访问&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test:5432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; L2 VIP -&amp;gt; 主直接连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test:6432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; L2 VIP -&amp;gt; 主连接池 -&amp;gt; 主&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test:5433/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; L2 VIP -&amp;gt; HAProxy -&amp;gt; 主连接池 -&amp;gt; 主&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test:5434/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; L2 VIP -&amp;gt; HAProxy -&amp;gt; 备份连接池 -&amp;gt; 备份&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_dba@pg-test:5436/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; L2 VIP -&amp;gt; HAProxy -&amp;gt; 主直接连接 (用于管理员)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_stats@pg-test:5438/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; L2 VIP -&amp;gt; HAProxy -&amp;gt; 离线直接连接 (用于 ETL/个人查询)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 通过集群 VIP 直接访问&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.3:5432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# L2 VIP -&amp;gt; 主直接访问&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.3:6432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# L2 VIP -&amp;gt; 主连接池 -&amp;gt; 主&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.3:5433/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# L2 VIP -&amp;gt; HAProxy -&amp;gt; 主连接池 -&amp;gt; 主&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.3:5434/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# L2 VIP -&amp;gt; HAProxy -&amp;gt; 备份连接池 -&amp;gt; 备份&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_dba@10.10.10.3:5436/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# L2 VIP -&amp;gt; HAProxy -&amp;gt; 主直接连接 (用于管理员)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_stats@10.10.10.3::5438/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# L2 VIP -&amp;gt; HAProxy -&amp;gt; 离线直接连接 (用于 ETL/个人查询)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 直接指定任何集群实例名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test-1:5432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; 数据库实例直接连接 (单例访问)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test-1:6432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; 连接池 -&amp;gt; 数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test-1:5433/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; HAProxy -&amp;gt; 连接池 -&amp;gt; 数据库读/写&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test-1:5434/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; HAProxy -&amp;gt; 连接池 -&amp;gt; 数据库只读&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_dba@pg-test-1:5436/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; HAProxy -&amp;gt; 数据库直接连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_stats@pg-test-1:5438/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; HAProxy -&amp;gt; 数据库离线读/写&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 直接指定任何集群实例 IP 访问&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.11:5432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 数据库实例直接连接 (直接指定实例, 没有自动流量分配)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.11:6432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 连接池 -&amp;gt; 数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.11:5433/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# HAProxy -&amp;gt; 连接池 -&amp;gt; 数据库读/写&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.11:5434/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# HAProxy -&amp;gt; 连接池 -&amp;gt; 数据库只读&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_dba@10.10.10.11:5436/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# HAProxy -&amp;gt; 数据库直接连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_stats@10.10.10.11:5438/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# HAProxy -&amp;gt; 数据库离线读-写&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 智能客户端：自动进行读写分离&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.11:6432,10.10.10.12:6432,10.10.10.13:6432/test?target_session_attrs&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;primary
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.11:6432,10.10.10.12:6432,10.10.10.13:6432/test?target_session_attrs&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;prefer-standby
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;覆盖服务&#34;&gt;覆盖服务&lt;/h2&gt;
&lt;p&gt;你可以通过多种方式覆盖默认的服务配置，一种常见的需求是让 &lt;a href=&#34;/zh/docs/pgsql/svc/#primary服务&#34;&gt;Primary服务&lt;/a&gt; 与 &lt;a href=&#34;/zh/docs/pgsql/svc/#replica服务&#34;&gt;Replica服务&lt;/a&gt; 绕过Pgbouncer连接池，直接访问 PostgreSQL 数据库。&lt;/p&gt;
&lt;p&gt;为了实现这一点，你可以将 &lt;a href=&#34;/zh/docs/reference/param#pg_default_service_dest&#34;&gt;&lt;code&gt;pg_default_service_dest&lt;/code&gt;&lt;/a&gt; 更改为 &lt;code&gt;postgres&lt;/code&gt;，这样所有服务定义中 &lt;code&gt;svc.dest=&#39;default&#39;&lt;/code&gt; 的服务都会使用 &lt;code&gt;postgres&lt;/code&gt; 而不是默认的 &lt;code&gt;pgbouncer&lt;/code&gt; 作为目标。&lt;/p&gt;
&lt;p&gt;如果您已经将 &lt;a href=&#34;/zh/docs/pgsql/svc/#primary服务&#34;&gt;Primary服务&lt;/a&gt; 指向了 PostgreSQL，那么 &lt;a href=&#34;/zh/docs/pgsql/svc/#default服务&#34;&gt;default服务&lt;/a&gt; 就会比较多余，可以考虑移除。&lt;/p&gt;
&lt;p&gt;如果您不需要区分个人交互式查询，分析/ETL慢查询，可以考虑从默认服务列表 &lt;a href=&#34;/zh/docs/reference/param#pg_default_services&#34;&gt;&lt;code&gt;pg_default_services&lt;/code&gt;&lt;/a&gt; 中移除&lt;a href=&#34;/zh/docs/pgsql/svc/#offline服务&#34;&gt;Offline服务&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果您不需要只读从库来分担在线只读流量，也可以从默认服务列表中移除 &lt;a href=&#34;/zh/docs/pgsql/svc/#replica服务&#34;&gt;Replica服务&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;委托服务&#34;&gt;委托服务&lt;/h2&gt;
&lt;p&gt;Pigsty 通过节点上的 haproxy 暴露 PostgreSQL 服务。整个集群中的所有 haproxy 实例都使用相同的&lt;a href=&#34;/zh/docs/pgsql/svc/#定义服务&#34;&gt;服务定义&lt;/a&gt;进行配置。&lt;/p&gt;
&lt;p&gt;但是，你可以将 pg 服务委托给特定的节点分组（例如，专门的 haproxy 负载均衡器集群），而不是 PostgreSQL 集群成员上的 haproxy。&lt;/p&gt;
&lt;p&gt;为此，你需要使用 &lt;a href=&#34;/zh/docs/reference/param#pg_default_services&#34;&gt;&lt;code&gt;pg_default_services&lt;/code&gt;&lt;/a&gt; 覆盖默认的服务定义，并将 &lt;a href=&#34;/zh/docs/reference/param#pg_service_provider&#34;&gt;&lt;code&gt;pg_service_provider&lt;/code&gt;&lt;/a&gt; 设置为代理组名称。&lt;/p&gt;
&lt;p&gt;例如，此配置将在端口 10013 的 &lt;code&gt;proxy&lt;/code&gt; haproxy 节点组上公开 pg 集群的主服务。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_service_provider&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;proxy      &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 使用端口 10013 上的 `proxy` 组的负载均衡器&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_default_services&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: primary ,port: 10013 ,dest: postgres  ,check: /primary   ,selector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;[]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;用户需要确保每个委托服务的端口，在代理集群中都是&lt;strong&gt;唯一&lt;/strong&gt;的。&lt;/p&gt;
&lt;p&gt;在 43 节点生产环境仿真&lt;a href=&#34;/zh/docs/setup/provision#%E6%B2%99%E7%AE%B1%E7%8E%AF%E5%A2%83&#34;&gt;沙箱&lt;/a&gt;中提供了一个使用专用负载均衡器集群的例子：&lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/conf/prod.yml#L111&#34;&gt;prod.yml&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 服务接入</title>
      <link>/zh/docs/concept/svc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zh/docs/concept/svc/</guid>
      <description>
        
        
        &lt;blockquote&gt;
&lt;p&gt;分离读写操作，正确路由流量，稳定可靠地交付 PostgreSQL 集群提供的能力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;/zh/docs/concept/svc/#服务概述&#34;&gt;服务&lt;/a&gt;是一种抽象：它是数据库集群对外提供能力的形式，并封装了底层集群的细节。&lt;/p&gt;
&lt;p&gt;服务对于生产环境中的&lt;a href=&#34;/zh/docs/concept/svc/#接入服务&#34;&gt;稳定接入&lt;/a&gt;至关重要，在&lt;a href=&#34;/zh/docs/concept/ha&#34;&gt;高可用&lt;/a&gt;集群自动故障时方显其价值，&lt;a href=&#34;%E5%8D%95%E6%9C%BA%E7%94%A8%E6%88%B7&#34;&gt;单机用户&lt;/a&gt;通常不需要操心这个概念。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;单机用户&#34;&gt;单机用户&lt;/h2&gt;
&lt;p&gt;“服务” 的概念是给生产环境用的，个人用户/单机集群可以不折腾，直接拿实例名/IP地址访问数据库。&lt;/p&gt;
&lt;p&gt;例如，Pigsty 默认的单节点 &lt;code&gt;pg-meta&lt;/code&gt;.&lt;code&gt;meta&lt;/code&gt; 数据库，就可以直接用下面三个不同的用户连接上去。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql postgres://dbuser_dba:DBUser.DBA@10.10.10.10/meta     &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 直接用 DBA 超级用户连上去&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql postgres://dbuser_meta:DBUser.Meta@10.10.10.10/meta   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 用默认的业务管理员用户连上去&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql postgres://dbuser_view:DBUser.View@pg-meta/meta       &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 用默认的只读用户走实例域名连上去&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;服务概述&#34;&gt;服务概述&lt;/h2&gt;
&lt;p&gt;在真实世界生产环境中，我们会使用基于复制的主从数据库集群。集群中有且仅有一个实例作为领导者（&lt;a href=&#34;/zh/docs/pgsql/config#%E8%AF%BB%E5%86%99%E4%B8%BB%E5%BA%93&#34;&gt;主库&lt;/a&gt;）可以接受写入。
而其他实例（&lt;a href=&#34;/zh/docs/pgsql/config#%E5%8F%AA%E8%AF%BB%E4%BB%8E%E5%BA%93&#34;&gt;从库&lt;/a&gt;）则会从持续从集群领导者获取变更日志，与领导者保持一致。同时，从库还可以承载只读请求，在读多写少的场景下可以显著分担主库的负担，
因此对集群的写入请求与只读请求进行区分，是一种十分常见的实践。&lt;/p&gt;
&lt;p&gt;此外对于高频短连接的生产环境，我们还会通过连接池中间件（Pgbouncer）对请求进行池化，减少连接与后端进程的创建开销。但对于ETL与变更执行等场景，我们又需要绕过连接池，直接访问数据库。
同时，高可用集群在故障时会出现故障切换（Failover），故障切换会导致集群的领导者出现变更。因此高可用的数据库方案要求写入流量可以自动适配集群的领导者变化。
这些不同的访问需求（读写分离，池化与直连，故障切换自动适配）最终抽象出 &lt;strong&gt;服务&lt;/strong&gt; （Service）的概念。&lt;/p&gt;
&lt;p&gt;通常来说，数据库集群都必须提供这种最基础的服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;读写服务（primary）&lt;/strong&gt; ：可以读写数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于生产数据库集群，至少应当提供这两种服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;读写服务（primary）&lt;/strong&gt; ：写入数据：只能由主库所承载。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;只读服务（replica）&lt;/strong&gt; ：读取数据：可以由从库承载，没有从库时也可由主库承载&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，根据具体的业务场景，可能还会有其他的服务，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;默认直连服务（default）&lt;/strong&gt; ：允许（管理）用户，绕过连接池直接访问数据库的服务&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;离线从库服务（offline）&lt;/strong&gt; ：不承接线上只读流量的专用从库，用于ETL与分析查询&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;同步从库服务（standby）&lt;/strong&gt; ：没有复制延迟的只读服务，由&lt;a href=&#34;/zh/docs/pgsql/config#%E5%90%8C%E6%AD%A5%E5%A4%87%E5%BA%93&#34;&gt;同步备库&lt;/a&gt;/主库处理只读查询&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;延迟从库服务（delayed）&lt;/strong&gt; ：访问同一个集群在一段时间之前的旧数据，由&lt;a href=&#34;/zh/docs/pgsql/config#%E5%BB%B6%E8%BF%9F%E9%9B%86%E7%BE%A4&#34;&gt;延迟从库&lt;/a&gt;来处理&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;接入服务&#34;&gt;接入服务&lt;/h2&gt;
&lt;p&gt;Pigsty的服务交付边界止步于集群的HAProxy，用户可以用各种手段访问这些负载均衡器。&lt;/p&gt;
&lt;p&gt;典型的做法是使用 DNS 或 VIP 接入，将其绑定在集群所有或任意数量的负载均衡器上。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pigsty-access.jpg&#34; src=&#34;/img/pigsty/access.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;你可以使用不同的 主机 &amp;amp; 端口 组合，它们以不同的方式提供 PostgreSQL 服务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主机&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;样例&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;集群域名&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pg-test&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;通过集群域名访问（由 dnsmasq @ infra 节点解析）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;集群 VIP 地址&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10.10.10.3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;通过由 &lt;code&gt;vip-manager&lt;/code&gt; 管理的 L2 VIP 地址访问，绑定到主节点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;实例主机名&lt;/td&gt;
&lt;td&gt;&lt;code&gt;pg-test-1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;通过任何实例主机名访问（由 dnsmasq @ infra 节点解析）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;实例 IP 地址&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10.10.10.11&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;访问任何实例的 IP 地址&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;端口&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pigsty 使用不同的 &lt;strong&gt;端口&lt;/strong&gt; 来区分 &lt;a href=&#34;/zh/docs/concept/svc/#服务概述&#34;&gt;pg services&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;端口&lt;/th&gt;
&lt;th&gt;服务&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;5432&lt;/td&gt;
&lt;td&gt;postgres&lt;/td&gt;
&lt;td&gt;数据库&lt;/td&gt;
&lt;td&gt;直接访问 postgres 服务器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6432&lt;/td&gt;
&lt;td&gt;pgbouncer&lt;/td&gt;
&lt;td&gt;中间件&lt;/td&gt;
&lt;td&gt;访问 postgres 前先通过连接池中间件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5433&lt;/td&gt;
&lt;td&gt;primary&lt;/td&gt;
&lt;td&gt;服务&lt;/td&gt;
&lt;td&gt;访问主 pgbouncer (或 postgres)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5434&lt;/td&gt;
&lt;td&gt;replica&lt;/td&gt;
&lt;td&gt;服务&lt;/td&gt;
&lt;td&gt;访问备份 pgbouncer (或 postgres)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5436&lt;/td&gt;
&lt;td&gt;default&lt;/td&gt;
&lt;td&gt;服务&lt;/td&gt;
&lt;td&gt;访问主 postgres&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5438&lt;/td&gt;
&lt;td&gt;offline&lt;/td&gt;
&lt;td&gt;服务&lt;/td&gt;
&lt;td&gt;访问离线 postgres&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;组合&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 通过集群域名访问&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test:5432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; L2 VIP -&amp;gt; 主直接连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test:6432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; L2 VIP -&amp;gt; 主连接池 -&amp;gt; 主&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test:5433/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; L2 VIP -&amp;gt; HAProxy -&amp;gt; 主连接池 -&amp;gt; 主&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test:5434/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; L2 VIP -&amp;gt; HAProxy -&amp;gt; 备份连接池 -&amp;gt; 备份&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_dba@pg-test:5436/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; L2 VIP -&amp;gt; HAProxy -&amp;gt; 主直接连接 (用于管理员)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_stats@pg-test:5438/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; L2 VIP -&amp;gt; HAProxy -&amp;gt; 离线直接连接 (用于 ETL/个人查询)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 通过集群 VIP 直接访问&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.3:5432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# L2 VIP -&amp;gt; 主直接访问&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.3:6432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# L2 VIP -&amp;gt; 主连接池 -&amp;gt; 主&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.3:5433/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# L2 VIP -&amp;gt; HAProxy -&amp;gt; 主连接池 -&amp;gt; 主&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.3:5434/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# L2 VIP -&amp;gt; HAProxy -&amp;gt; 备份连接池 -&amp;gt; 备份&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_dba@10.10.10.3:5436/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# L2 VIP -&amp;gt; HAProxy -&amp;gt; 主直接连接 (用于管理员)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_stats@10.10.10.3::5438/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# L2 VIP -&amp;gt; HAProxy -&amp;gt; 离线直接连接 (用于 ETL/个人查询)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 直接指定任何集群实例名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test-1:5432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; 数据库实例直接连接 (单例访问)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test-1:6432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; 连接池 -&amp;gt; 数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test-1:5433/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; HAProxy -&amp;gt; 连接池 -&amp;gt; 数据库读/写&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@pg-test-1:5434/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; HAProxy -&amp;gt; 连接池 -&amp;gt; 数据库只读&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_dba@pg-test-1:5436/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; HAProxy -&amp;gt; 数据库直接连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_stats@pg-test-1:5438/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# DNS -&amp;gt; HAProxy -&amp;gt; 数据库离线读/写&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 直接指定任何集群实例 IP 访问&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.11:5432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 数据库实例直接连接 (直接指定实例, 没有自动流量分配)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.11:6432/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 连接池 -&amp;gt; 数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.11:5433/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# HAProxy -&amp;gt; 连接池 -&amp;gt; 数据库读/写&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.11:5434/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# HAProxy -&amp;gt; 连接池 -&amp;gt; 数据库只读&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_dba@10.10.10.11:5436/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# HAProxy -&amp;gt; 数据库直接连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://dbuser_stats@10.10.10.11:5438/test &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# HAProxy -&amp;gt; 数据库离线读-写&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 智能客户端：通过URL读写分离&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.11:6432,10.10.10.12:6432,10.10.10.13:6432/test?target_session_attrs&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;primary
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres://test@10.10.10.11:6432,10.10.10.12:6432,10.10.10.13:6432/test?target_session_attrs&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;prefer-standby
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
