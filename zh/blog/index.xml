<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pigsty – Pigsty 博客文章</title>
    <link>/zh/blog/</link>
    <description>Recent content in Pigsty 博客文章 on Pigsty</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    
	  <atom:link href="/zh/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: PostgreSQL 逻辑复制详解</title>
      <link>/zh/blog/admin/logical-replication/</link>
      <pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/admin/logical-replication/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/admin/logical-replication/featured_hu76ac8ac756b7fe0410eeca64c24b3005_373332_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;hr&gt;
&lt;h2 id=&#34;逻辑复制&#34;&gt;逻辑复制&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;逻辑复制（Logical Replication）&lt;/strong&gt;，是一种根据数据对象的 &lt;a href=&#34;/zh/blog/admin/replica-identity/&#34;&gt;&lt;strong&gt;复制标识&lt;/strong&gt;&lt;/a&gt;（Replica Identity）（通常是主键）复制数据对象及其变化的方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;逻辑复制&lt;/strong&gt; 这个术语与 &lt;strong&gt;物理复制&lt;/strong&gt;相对应，物理复制使用精确的块地址与逐字节复制，而逻辑复制则允许对复制过程进行精细的控制。&lt;/p&gt;
&lt;p&gt;逻辑复制基于 &lt;strong&gt;发布（Publication）&lt;/strong&gt; 与 &lt;strong&gt;订阅&lt;/strong&gt;（&lt;strong&gt;Subscription&lt;/strong&gt;）模型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个 &lt;strong&gt;发布者（Publisher）&lt;/strong&gt; 上可以有多个&lt;strong&gt;发布&lt;/strong&gt;，一个 &lt;strong&gt;订阅者（Subscriber）&lt;/strong&gt; 上可以有多个 &lt;strong&gt;订阅&lt;/strong&gt; 。&lt;/li&gt;
&lt;li&gt;一个发布可被多个订阅者订阅，一个订阅只能订阅一个&lt;strong&gt;发布者&lt;/strong&gt;，但可订阅同发布者上的多个不同发布。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;针对一张表的逻辑复制通常是这样的：订阅者获取发布者数据库上的一个快照，并拷贝表中的存量数据。一旦完成数据拷贝，发布者上的&lt;strong&gt;变更&lt;/strong&gt;（增删改清）就会实时发送到订阅者上。订阅者会按照相同的顺序应用这些变更，因此可以保证逻辑复制的事务一致性。这种方式有时候又称为 &lt;strong&gt;事务性复制（transactional  replication）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;逻辑复制的典型用途是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;迁移，跨PostgreSQL大版本，跨操作系统平台进行复制。&lt;/li&gt;
&lt;li&gt;CDC，收集数据库（或数据库的一个子集）中的增量变更，在订阅者上为增量变更触发触发器执行定制逻辑。&lt;/li&gt;
&lt;li&gt;分拆，将多个数据库集成为一个，或者将一个数据库拆分为多个，进行精细的分拆集成与访问控制。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逻辑订阅者的行为就是一个普通的PostgreSQL实例（主库），逻辑订阅者也可以创建自己的发布，拥有自己的订阅者。&lt;/p&gt;
&lt;p&gt;如果逻辑订阅者只读，那么不会有&lt;strong&gt;冲突&lt;/strong&gt;。如果会写入逻辑订阅者的订阅集，那么就可能会出现冲突。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;发布&#34;&gt;发布&lt;/h2&gt;
&lt;p&gt;一个 &lt;strong&gt;发布（Publication）&lt;/strong&gt; 可以在物理复制&lt;strong&gt;主库&lt;/strong&gt; 上定义。创建发布的节点被称为 &lt;strong&gt;发布者（Publisher）&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;一个 &lt;strong&gt;发布&lt;/strong&gt; 是 &lt;strong&gt;由一组表构成的变更集合&lt;/strong&gt;。也可以被视作一个 &lt;strong&gt;变更集（change set）&lt;/strong&gt; 或 &lt;strong&gt;复制集（Replication Set）&lt;/strong&gt; 。每个发布都只能在一个 &lt;strong&gt;数据库（Database）&lt;/strong&gt; 中存在。&lt;/p&gt;
&lt;p&gt;发布不同于&lt;strong&gt;模式（Schema）&lt;/strong&gt;，不会影响表的访问方式。（表纳不纳入发布，自身访问不受影响）&lt;/p&gt;
&lt;p&gt;发布目前只能包含&lt;strong&gt;表&lt;/strong&gt;（即：索引，序列号，物化视图这些不会被发布），每个表可以添加到多个发布中。&lt;/p&gt;
&lt;p&gt;除非针对&lt;code&gt;ALL TABLES&lt;/code&gt;创建发布，否则发布中的对象（表）只能（通过&lt;code&gt;ALTER PUBLICATION ADD TABLE&lt;/code&gt;）被&lt;strong&gt;显式添加&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;发布可以筛选所需的变更类型：包括&lt;code&gt;INSERT&lt;/code&gt;、&lt;code&gt;UPDATE&lt;/code&gt;、&lt;code&gt;DELETE&lt;/code&gt; 和&lt;code&gt;TRUNCATE&lt;/code&gt;的任意组合，类似触发器事件，默认所有变更都会被发布。&lt;/p&gt;
&lt;h3 id=&#34;复制标识&#34;&gt;复制标识&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/admin/replica-identity&#34;&gt;复制标识&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个被纳入发布中的表，必须带有 &lt;strong&gt;复制标识（Replica Identity）&lt;/strong&gt;，只有这样才可以在订阅者一侧定位到需要更新的行，完成&lt;code&gt;UPDATE&lt;/code&gt;与&lt;code&gt;DELETE&lt;/code&gt;操作的复制。&lt;/p&gt;
&lt;p&gt;默认情况下，&lt;strong&gt;主键&lt;/strong&gt; （Primary Key）是表的复制标识，&lt;strong&gt;非空列上的唯一索引&lt;/strong&gt; （UNIQUE NOT NULL）也可以用作复制标识。&lt;/p&gt;
&lt;p&gt;如果没有任何复制标识，可以将复制标识设置为&lt;code&gt;FULL&lt;/code&gt;，也就是把整个行当作复制标识。（一种有趣的情况，表中存在多条完全相同的记录，也可以被正确处理，见后续案例）使用&lt;code&gt;FULL&lt;/code&gt;模式的复制标识效率很低（因为每一行修改都需要在订阅者上执行全表扫描，很容易把订阅者拖垮），所以这种配置只能是保底方案。使用&lt;code&gt;FULL&lt;/code&gt;模式的复制标识还有一个限制，订阅端的表上的复制身份所包含的列，要么与发布者一致，要么比发布者更少。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;INSERT&lt;/code&gt;操作总是可以无视 复制标识 直接进行（因为插入一条新记录，在订阅者上并不需要定位任何现有记录；而删除和更新则需要通过&lt;strong&gt;复制标识&lt;/strong&gt; 定位到需要操作的记录）。如果一个没有 复制标识 的表被加入到带有&lt;code&gt;UPDATE&lt;/code&gt;和&lt;code&gt;DELETE&lt;/code&gt;的发布中，后续的&lt;code&gt;UPDATE&lt;/code&gt;和&lt;code&gt;DELETE&lt;/code&gt;会导致发布者上报错。&lt;/p&gt;
&lt;p&gt;表的复制标识模式可以查阅&lt;code&gt;pg_class.relreplident&lt;/code&gt;获取，可以通过&lt;code&gt;ALTER TABLE&lt;/code&gt;进行修改。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tbl&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;REPLICA&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IDENTITY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DEFAULT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;USING&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;index_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FULL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NOTHING&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;尽管各种排列组合都是可能的，然而在实际使用中，只有三种可行的情况。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表上有主键，使用默认的 &lt;code&gt;default&lt;/code&gt; 复制标识&lt;/li&gt;
&lt;li&gt;表上没有主键，但是有非空唯一索引，显式配置 &lt;code&gt;index&lt;/code&gt; 复制标识&lt;/li&gt;
&lt;li&gt;表上既没有主键，也没有非空唯一索引，显式配置&lt;code&gt;full&lt;/code&gt;复制标识（运行效率非常低，仅能作为兜底方案）&lt;/li&gt;
&lt;li&gt;其他所有情况，都无法正常完成逻辑复制功能。输出的信息不足，可能会报错，也可能不会。&lt;/li&gt;
&lt;li&gt;特别需要注意：如果&lt;code&gt;nothing&lt;/code&gt;复制标识的表纳入到逻辑复制中，对其进行删改会导致发布端报错！&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;复制身份模式\表上的约束&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;主键(p)&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;非空唯一索引(u)&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;两者皆无(n)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;d&lt;/strong&gt;efault&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;有效&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;i&lt;/strong&gt;ndex&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;有效&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;f&lt;/strong&gt;ull&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;低效&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;低效&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;低效&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;n&lt;/strong&gt;othing&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;xxxx&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;xxxx&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;xxxx&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;管理发布&#34;&gt;管理发布&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;CREATE PUBLICATION&lt;/code&gt;用于创建发布，&lt;code&gt;DROP PUBLICATION&lt;/code&gt;用于移除发布，&lt;code&gt;ALTER PUBLICATION&lt;/code&gt;用于修改发布。&lt;/p&gt;
&lt;p&gt;发布创建之后，可以通过&lt;code&gt;ALTER PUBLICATION&lt;/code&gt;动态地向发布中添加或移除表，这些操作都是事务性的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FOR&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ONLY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FOR&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TABLES&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;publication_parameter&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ADD&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ONLY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ONLY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ONLY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;publication_parameter&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;OWNER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TO&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;new_owner&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CURRENT_USER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SESSION_USER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RENAME&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TO&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;new_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IF&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXISTS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...];&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;publication_parameter&lt;/code&gt; 主要包括两个选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;publish&lt;/code&gt;：定义要发布的变更操作类型，逗号分隔的字符串，默认为&lt;code&gt;insert, update, delete, truncate&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;publish_via_partition_root&lt;/code&gt;：13后的新选项，如果为真，分区表将使用根分区的复制标识进行逻辑复制。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;查询发布&#34;&gt;查询发布&lt;/h3&gt;
&lt;p&gt;发布可以使用psql元命令&lt;code&gt;\dRp&lt;/code&gt;查询。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# \dRp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Owner   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; All tables &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Inserts &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Updates &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Deletes &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Truncates &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Via root
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;----------+------------+---------+---------+---------+-----------+----------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; postgres &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; t          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; t       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; t       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; t       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; t         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; f
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;pg_publication-发布定义表&#34;&gt;&lt;code&gt;pg_publication&lt;/code&gt; 发布定义表&lt;/h3&gt;
&lt;p&gt;``pg_publication` 包含了发布的原始定义，每一条记录对应一个发布。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# table pg_publication;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;oid          | 20453
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pubname      | pg_meta_pub
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pubowner     | 10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;puballtables | t
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pubinsert    | t
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pubupdate    | t
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pubdelete    | t
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pubtruncate  | t
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pubviaroot   | f
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;puballtables&lt;/code&gt;：是否包含所有的表&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pubinsert|update|delete|truncate&lt;/code&gt; 是否发布这些操作&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pubviaroot&lt;/code&gt;：如果设置了该选项，任何分区表（叶表）都会使用最顶层的（被）分区表的&lt;strong&gt;复制身份&lt;/strong&gt;。所以可以把整个分区表当成一个表，而不是一系列表进行发布。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pg_publication_tables-发布内容表&#34;&gt;&lt;code&gt;pg_publication_tables&lt;/code&gt; 发布内容表&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pg_publication_tables&lt;/code&gt;是由&lt;code&gt;pg_publication&lt;/code&gt;，&lt;code&gt;pg_class&lt;/code&gt;和&lt;code&gt;pg_namespace&lt;/code&gt;拼合而成的视图，记录了发布中包含的表信息。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres@meta:5432/meta&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# table pg_publication_tables;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   pubname   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; schemaname &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;    tablename
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-------------+------------+-----------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; pg_meta_pub &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; public     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; spatial_ref_sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; pg_meta_pub &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; public     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; t_normal
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; pg_meta_pub &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; public     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; t_unique
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; pg_meta_pub &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; public     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; t_tricky
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;pg_get_publication_tables&lt;/code&gt;可以根据订阅的名字获取订阅表的OID&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_get_publication_tables&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;pg_meta_pub&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pubname&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;       &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nspname&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;schemaname&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;       &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;relname&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tablename&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_publication&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LATERAL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_get_publication_tables&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pubname&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;gpt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;relid&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_class&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;         &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;JOIN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_namespace&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;oid&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;relnamespace&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;oid&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;gpt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;relid&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同时，&lt;code&gt;pg_publication_rel&lt;/code&gt; 也提供类似的信息，但采用的是多对多的OID对应视角，包含的是原始数据。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  oid  | prpubid | prrelid
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-------+---------+---------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 20414 |   20413 |   20397
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 20415 |   20413 |   20400
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 20416 |   20413 |   20391
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 20417 |   20413 |   20394
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这两者的区别特别需要注意：当针对&lt;code&gt;ALL TABLES&lt;/code&gt;发布时，&lt;code&gt;pg_publication_rel&lt;/code&gt;中不会有具体表的OID，但是在&lt;code&gt;pg_publication_tables&lt;/code&gt;中可以查询到实际纳入逻辑复制的表列表。所以通常应当以&lt;code&gt;pg_publication_tables&lt;/code&gt;为准。&lt;/p&gt;
&lt;p&gt;创建订阅时，数据库会先修改&lt;code&gt;pg_publication&lt;/code&gt;目录，然后将发布表的信息填入&lt;code&gt;pg_publication_rel&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;订阅&#34;&gt;订阅&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;订阅（Subscription）&lt;/strong&gt; 是逻辑复制的下游。定义订阅的节点被称为 &lt;strong&gt;订阅者（Subscriber）&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;订阅定义了：如何&lt;strong&gt;连接&lt;/strong&gt;到另一个数据库，以及需要订阅目标发布者上的哪些&lt;strong&gt;发布&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;逻辑订阅者的行为与一个普通的PostgreSQL实例（主库）无异，逻辑订阅者也可以创建自己的发布，拥有自己的订阅者。&lt;/p&gt;
&lt;p&gt;每个订阅者，都会通过一个 &lt;strong&gt;复制槽（Replication）&lt;/strong&gt; 来接收变更，在初始数据复制阶段，可能会需要更多的临时复制槽。&lt;/p&gt;
&lt;p&gt;逻辑复制订阅可以作为同步复制的备库，备库的名字默认就是订阅的名字，也可以通过在连接信息中设置&lt;code&gt;application_name&lt;/code&gt;来使用别的名字。&lt;/p&gt;
&lt;p&gt;只有超级用户才可以用&lt;code&gt;pg_dump&lt;/code&gt;转储订阅的定义，因为只有超级用户才可以访问&lt;code&gt;pg_subscription&lt;/code&gt;视图，普通用户尝试转储时会跳过并打印警告信息。&lt;/p&gt;
&lt;p&gt;逻辑复制不会复制DDL变更，因此发布集中的表必须&lt;strong&gt;已经存在&lt;/strong&gt;于订阅端上。只有&lt;strong&gt;普通表&lt;/strong&gt;上的变更会被复制，视图、物化视图、序列号，索引这些都不会被复制。&lt;/p&gt;
&lt;p&gt;发布与订阅端的表是通过完整限定名（如&lt;code&gt;public.table&lt;/code&gt;）进行匹配的，不支持把变更复制到一个名称不同的表上。&lt;/p&gt;
&lt;p&gt;发布与订阅端的表的列也是通过&lt;strong&gt;名称&lt;/strong&gt;匹配的。列的顺序无关紧要，数据类型也不一定非得一致，只要两个列的&lt;strong&gt;文本表示&lt;/strong&gt;兼容即可，即数据的文本表示可以转换为目标列的类型。订阅端的表可以包含有发布端没有的列，这些新列都会使用默认值填充。&lt;/p&gt;
&lt;h3 id=&#34;管理订阅&#34;&gt;管理订阅&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;CREATE SUBSCRIPTION&lt;/code&gt;用于创建订阅，&lt;code&gt;DROP SUBSCRIPTION&lt;/code&gt;用于移除订阅，&lt;code&gt;ALTER SUBSCRIPTION&lt;/code&gt;用于修改订阅。&lt;/p&gt;
&lt;p&gt;订阅创建之后，可以通过&lt;code&gt;ALTER SUBSCRIPTION&lt;/code&gt; 随时&lt;strong&gt;暂停&lt;/strong&gt;与&lt;strong&gt;恢复&lt;/strong&gt;订阅。&lt;/p&gt;
&lt;p&gt;移除并重建订阅会导致&lt;strong&gt;同步信息丢失&lt;/strong&gt;，这意味着相关数据需要重新进行同步。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBSCRIPTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;subscription_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CONNECTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;conninfo&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;publication_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;subscription_parameter&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBSCRIPTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CONNECTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;conninfo&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBSCRIPTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;publication_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;set_publication_option&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBSCRIPTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;REFRESH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WITH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;refresh_option&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBSCRIPTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ENABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBSCRIPTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DISABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBSCRIPTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;subscription_parameter&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBSCRIPTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;OWNER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TO&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;new_owner&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CURRENT_USER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SESSION_USER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBSCRIPTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RENAME&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TO&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;new_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBSCRIPTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IF&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXISTS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;subscription_parameter&lt;/code&gt;定义了订阅的一些选项，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;copy_data(bool)&lt;/code&gt;：复制开始后，是否拷贝数据，默认为真&lt;/li&gt;
&lt;li&gt;&lt;code&gt;create_slot(bool)&lt;/code&gt;：是否在发布者上创建复制槽，默认为真&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enabled(bool)&lt;/code&gt;：是否启用该订阅，默认为真&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connect(bool)&lt;/code&gt;：是否尝试连接到发布者，默认为真，置为假会把上面几个选项强制设置为假。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;synchronous_commit(bool)&lt;/code&gt;：是否启用同步提交，向主库上报自己的进度信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slot_name&lt;/code&gt;：订阅所关联的复制槽名称，设置为空会取消订阅与复制槽的关联。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;管理复制槽&#34;&gt;管理复制槽&lt;/h3&gt;
&lt;p&gt;每个活跃的订阅都会通过&lt;strong&gt;复制槽&lt;/strong&gt; 从远程发布者接受变更。&lt;/p&gt;
&lt;p&gt;通常这个远端的&lt;strong&gt;复制槽&lt;/strong&gt;是自动管理的，在&lt;code&gt;CREATE SUBSCRIPTION&lt;/code&gt;时自动创建，在&lt;code&gt;DROP SUBSCRIPTION&lt;/code&gt;时自动删除。&lt;/p&gt;
&lt;p&gt;在特定场景下，可能需要分别操作订阅与底层的复制槽：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;创建订阅时，所需的复制槽已经存在。则可以通过&lt;code&gt;create_slot = false&lt;/code&gt;关联已有复制槽。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建订阅时，远端不可达或状态不明朗，则可以通过&lt;code&gt;connect = false&lt;/code&gt;不访问远程主机，&lt;code&gt;pg_dump&lt;/code&gt;就是这么做的。这种情况下，您必须在远端手工创建复制槽后，才能在本地启用该订阅。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;移除订阅时，需要保留复制槽。这种情况通常是订阅者要搬到另一台机器上去，希望在那里重新开始订阅。这种情况下需要先通过&lt;code&gt;ALTER SUBSCRIPTION&lt;/code&gt;解除订阅与复制槽点关联&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;移除订阅时，远端不可达。这种情况下，需要在删除订阅之前使用&lt;code&gt;ALTER SUBSCRIPTION&lt;/code&gt;解除复制槽与订阅的关联。&lt;/p&gt;
&lt;p&gt;如果远端实例不再使用那么没事，然而如果远端实例只是暂时不可达，那就应该手动删除其上的复制槽；否则它将继续保留WAL，并可能导致磁盘撑爆。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;订阅查询&#34;&gt;订阅查询&lt;/h3&gt;
&lt;p&gt;订阅可以使用psql元命令&lt;code&gt;\dRs&lt;/code&gt;查询。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# \dRs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Name     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  Owner   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Enabled &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  Publication
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--------------+----------+---------+----------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; pg_bench_sub &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; postgres &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; t       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;pg_bench_pub&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;pg_subscription-订阅定义表&#34;&gt;&lt;code&gt;pg_subscription&lt;/code&gt; 订阅定义表&lt;/h3&gt;
&lt;p&gt;每一个逻辑订阅都会有一条记录，注意这个视图是跨数据库集簇范畴的，每个数据库中都可以看到整个集簇中的订阅信息。&lt;/p&gt;
&lt;p&gt;只有超级用户才可以访问此视图，因为里面包含有明文密码（连接信息）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;oid&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;             &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20421&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;subdbid&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;         &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;19356&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;subname&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;         &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_test_sub&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;subowner&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;subenabled&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;t&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;subconninfo&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;replicator&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;password&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DBUser&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Replicator&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbname&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;meta&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;subslotname&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_test_sub&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;subsynccommit&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;off&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;subpublications&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_meta_pub&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;subenabled&lt;/code&gt;：订阅是否启用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subconninfo&lt;/code&gt; ：因为包含敏感信息，会针对普通用户进行隐藏。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subslotname&lt;/code&gt;：订阅使用的复制槽名称，也会被用作逻辑复制的&lt;strong&gt;源名称（Origin Name）&lt;/strong&gt;，用于除重。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subpublications&lt;/code&gt;：订阅的发布名称列表。&lt;/li&gt;
&lt;li&gt;其他状态信息：是否启用同步提交等等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pg_subscription_rel-订阅内容表&#34;&gt;&lt;code&gt;pg_subscription_rel&lt;/code&gt; 订阅内容表&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pg_subscription_rel&lt;/code&gt; 记录了每张处于订阅中的表的相关信息，包括状态与进度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;srrelid&lt;/code&gt; 订阅中关系的OID&lt;/li&gt;
&lt;li&gt;&lt;code&gt;srsubstate&lt;/code&gt;，订阅中关系的状态：&lt;code&gt;i&lt;/code&gt; 初始化中，&lt;code&gt;d&lt;/code&gt; 拷贝数据中，&lt;code&gt;s&lt;/code&gt; 同步已完成，&lt;code&gt;r&lt;/code&gt; 正常复制中。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;srsublsn&lt;/code&gt;，当处于&lt;code&gt;i|d&lt;/code&gt;状态时为空，当处于&lt;code&gt;s|r&lt;/code&gt;状态时，远端的LSN位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;创建订阅时&#34;&gt;创建订阅时&lt;/h3&gt;
&lt;p&gt;当一个新的订阅创建时，会依次执行以下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将发布的信息存入 &lt;code&gt;pg_subscription&lt;/code&gt; 目录中，包括连接信息，复制槽，发布名称，一些配置选项等。&lt;/li&gt;
&lt;li&gt;连接至发布者，检查复制权限，（注意这里&lt;strong&gt;不会检查对应发布是否存在&lt;/strong&gt;），&lt;/li&gt;
&lt;li&gt;创建逻辑复制槽：&lt;code&gt;pg_create_logical_replication_slot(name, &#39;pgoutput&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将复制集中的表注册到订阅端的 &lt;code&gt;pg_subscription_rel&lt;/code&gt; 目录中。&lt;/li&gt;
&lt;li&gt;执行初始快照同步，注意订阅测表中的原有数据不会被删除。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;复制冲突&#34;&gt;复制冲突&lt;/h2&gt;
&lt;p&gt;逻辑复制的行为类似于正常的DML操作，即使数据在用户节点上的本地发生了变化，数据也会被更新。如果复制来的数据违反了任何约束，复制就会停止，这种现象被称为 &lt;strong&gt;冲突（Conflict）&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;当复制&lt;code&gt;UPDATE&lt;/code&gt;或&lt;code&gt;DELETE&lt;/code&gt;操作时，缺失数据（即要更新/删除的数据已经不存在）不会产生冲突，此类操作直接跳过。&lt;/p&gt;
&lt;p&gt;冲突会导致错误，并中止逻辑复制，逻辑复制管理进程会以5秒为间隔不断重试。冲突不会阻塞订阅端对复制集中表上的SQL。关于冲突的细节可以在用户的服务器日志中找到，&lt;strong&gt;冲突必须由用户手动解决&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;日志中可能出现的冲突&#34;&gt;日志中可能出现的冲突&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;冲突模式&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;复制进程&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;输出日志&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;缺少UPDATE/DELETE对象&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;继续&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;不输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;表/行锁等待&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;等待&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;不输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;违背主键/唯一/Check约束&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;中止&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;目标表不存在/目标列不存在&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;中止&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;输出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;无法将数据转换为目标列类型&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;中止&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;输出&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;解决冲突的方法，可以是改变订阅侧的数据，使其不与进入的变更相冲突，或者跳过与现有数据冲突的事务。&lt;/p&gt;
&lt;p&gt;使用订阅对应的&lt;code&gt;node_name&lt;/code&gt;与LSN位置调用函数&lt;code&gt;pg_replication_origin_advance()&lt;/code&gt;可以跳过事务，&lt;code&gt;pg_replication_origin_status&lt;/code&gt;系统视图中可以看到当前ORIGIN的位置。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;局限性&#34;&gt;局限性&lt;/h2&gt;
&lt;p&gt;逻辑复制目前有以下限制，或者说功能缺失。这些问题可能会在未来的版本中解决。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据库模式和DDL命令不会被复制&lt;/strong&gt;。存量模式可以通过&lt;code&gt;pg_dump --schema-only&lt;/code&gt;手动复制，增量模式变更需要手动保持同步（发布订阅两边的模式不需要绝对相同不需要两边的模式绝对相同)。逻辑复制对于对在线DDL变更仍然可靠：在发布数据库中执行DDL变更后，复制的数据到达订阅者但因为表模式不匹配而导致复制出错停止，订阅者的模式更新后复制会继续。在许多情况下，先在订阅者上执行变更可以避免中间的错误。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;序列号数据不会被复制&lt;/strong&gt;。&lt;strong&gt;序列号&lt;/strong&gt;所服务的标识列与&lt;code&gt;SERIAL&lt;/code&gt;类型里面的数据作为表的一部分当然会被复制，但序列号本身仍会在订阅者上保持为初始值。如果订阅者被当成只读库使用，那么通常没事。然而如果打算进行某种形式的切换或Failover到订阅者数据库，那么需要将序列号更新为最新的值，要么通过从发布者复制当前数据（也许可以使用&lt;code&gt;pg_dump -t *seq*&lt;/code&gt;），要么从表本身的数据内容确定一个足够高的值（例如&lt;code&gt;max(id)+1000000&lt;/code&gt;）。否则如果在新库执行获取序列号作为身份的操作时，很可能会产生冲突。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;逻辑复制支持复制&lt;code&gt;TRUNCATE&lt;/code&gt;命令&lt;/strong&gt;，但是在&lt;code&gt;TRUNCATE&lt;/code&gt;由外键关联的一组表时需要特别小心。当执行&lt;code&gt;TRUNCATE&lt;/code&gt;操作时，发布者上与之关联的一组表（通过显式列举或级连关联）都会被&lt;code&gt;TRUNCATE&lt;/code&gt;，但是在订阅者上，不在订阅集中的表不会被&lt;code&gt;TRUNCATE&lt;/code&gt;。这样的操作在逻辑上是合理的，因为逻辑复制不应该影响到复制集之外的表。但如果有一些不在订阅集中的表通过外键引用订阅集中被&lt;code&gt;TRUNCATE&lt;/code&gt;的表，那么&lt;code&gt;TRUNCATE&lt;/code&gt;操作就会失败。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;大对象不会被复制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;只有表能被复制（包括分区表）&lt;/strong&gt;，尝试复制其他类型的表会导致错误（视图，物化视图，外部表，Unlogged表）。具体来说，只有在&lt;code&gt;pg_class.relkind = &#39;r&#39;&lt;/code&gt;的表才可以参与逻辑复制。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;复制分区表时默认按子表进行复制&lt;/strong&gt;。默认情况下，变更是按照分区表的叶子分区触发的，这意味着发布上的每一个分区子表都需要在订阅上存在（当然，订阅者上的这个分区子表不一定是一个分区子表，也可能本身就是一个分区母表，或者一个普通表）。发布可以声明要不要使用分区根表上的复制标识取代分区叶表上的复制标识，这是PG13提供的新功能，可以在创建发布时通过&lt;code&gt;publish_via_partition_root&lt;/code&gt; 选项指定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;触发器的行为表现有所不同&lt;/strong&gt;。&lt;strong&gt;行级触发器&lt;/strong&gt;会触发，但&lt;code&gt;UPDATE OF cols&lt;/code&gt;类型的触发器不触发。而语句级触发器只会在初始数据拷贝时触发。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;日志行为不同&lt;/strong&gt;。即使设置&lt;code&gt;log_statement = &#39;all&#39;&lt;/code&gt;，日志中也不会记录由复制产生的SQL语句。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;双向复制需要极其小心&lt;/strong&gt;：互为发布与订阅是可行的，只要两遍的表集合不相交即可。但一旦出现表的交集，就会出现WAL无限循环。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同一实例内的复制&lt;/strong&gt;：同一个实例内的逻辑复制需要特别小心，必须&lt;strong&gt;手工创建逻辑复制槽&lt;/strong&gt;，并在创建订阅时使用已有的逻辑复制槽，否则会卡死。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;只能在主库上进行&lt;/strong&gt;：目前不支持从物理复制的从库上进行逻辑解码，也无法在从库上创建复制槽，所以从库无法作为发布者。但这个问题可能会在未来解决。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;架构&#34;&gt;架构&lt;/h2&gt;
&lt;p&gt;逻辑复制始于获取发布者数据库上的快照，基于此快照拷贝表上的存量数据。一旦拷贝完成，发布者上的&lt;strong&gt;变更&lt;/strong&gt;（增删改等）就会实时发送到订阅者上。&lt;/p&gt;
&lt;p&gt;逻辑复制采用与物理复制类似的架构，是通过一个&lt;code&gt;walsender&lt;/code&gt;和&lt;code&gt;apply&lt;/code&gt;进程实现的。发布端端&lt;code&gt;walsender&lt;/code&gt;进程会加载逻辑解码插件（&lt;code&gt;pgoutput&lt;/code&gt;），并开始逻辑解码WAL日志。&lt;strong&gt;逻辑解码插件（Logical Decoding Plugin）&lt;/strong&gt; 会读取WAL中的变更，按照&lt;strong&gt;发布&lt;/strong&gt;的定义筛选变更，将变更转变为特定的形式，以逻辑复制协议传输出去。数据会按照流复制协议传输至订阅者一侧的&lt;code&gt;apply&lt;/code&gt;进程，该进程会在接收到变更时，将变更映射至本地表上，然后按照事务顺序重新应用这些变更。&lt;/p&gt;
&lt;h3 id=&#34;初始快照&#34;&gt;初始快照&lt;/h3&gt;
&lt;p&gt;订阅侧的表在初始化与拷贝数据期间，会由一种特殊的&lt;code&gt;apply&lt;/code&gt;进程负责。这个进程会创建它自己的&lt;strong&gt;临时复制槽&lt;/strong&gt;，并拷贝表中的存量数据。&lt;/p&gt;
&lt;p&gt;一旦数据拷贝完成，这张表会进入到同步模式（&lt;code&gt;pg_subscription_rel.srsubstate = &#39;s&#39;&lt;/code&gt;），同步模式确保了 &lt;strong&gt;主apply进程&lt;/strong&gt; 可以使用标准的逻辑复制方式应用拷贝数据期间发生的变更。一旦完成同步，表复制的控制权会转交回 &lt;strong&gt;主apply进程&lt;/strong&gt;，恢复正常的复制模式。&lt;/p&gt;
&lt;h3 id=&#34;进程结构&#34;&gt;进程结构&lt;/h3&gt;
&lt;p&gt;逻辑复制的发布端会针对来自订阅端端每一条连接，创建一个对应的 &lt;code&gt;walsender&lt;/code&gt; 进程，发送解码的WAL日志。在订阅测，则会&lt;/p&gt;
&lt;h3 id=&#34;复制槽&#34;&gt;复制槽&lt;/h3&gt;
&lt;p&gt;当创建订阅时，&lt;/p&gt;
&lt;p&gt;一条逻辑复制&lt;/p&gt;
&lt;h3 id=&#34;逻辑解码&#34;&gt;逻辑解码&lt;/h3&gt;
&lt;h3 id=&#34;同步提交&#34;&gt;同步提交&lt;/h3&gt;
&lt;p&gt;逻辑复制的同步提交是通过Backend与Walsender之间的SIGUSR1通信完成的。&lt;/p&gt;
&lt;h3 id=&#34;临时数据&#34;&gt;临时数据&lt;/h3&gt;
&lt;p&gt;逻辑解码的临时数据会落盘为本地日志快照。当walsender接收到walwriter发送的&lt;code&gt;SIGUSR1&lt;/code&gt;信号时，就会读取WAL日志并生成相应的逻辑解码快照。当传输结束时会删除这些快照。&lt;/p&gt;
&lt;p&gt;文件地址为：&lt;code&gt;$PGDATA/pg_logical/snapshots/{LSN Upper}-{LSN Lower}.snap&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;监控&#34;&gt;监控&lt;/h2&gt;
&lt;p&gt;逻辑复制采用与物理流复制类似的架构，所以监控一个逻辑复制的&lt;strong&gt;发布者节点&lt;/strong&gt;与监控一个物理复制主库差别不大。&lt;/p&gt;
&lt;p&gt;订阅者的监控信息可以通过&lt;code&gt;pg_stat_subscription&lt;/code&gt;视图获取。&lt;/p&gt;
&lt;h3 id=&#34;pg_stat_subscription-订阅统计表&#34;&gt;&lt;code&gt;pg_stat_subscription&lt;/code&gt; 订阅统计表&lt;/h3&gt;
&lt;p&gt;每个&lt;strong&gt;活跃订阅&lt;/strong&gt;都会在这个视图中有&lt;strong&gt;至少一条&lt;/strong&gt; 记录，即Main Worker（负责应用逻辑日志）。&lt;/p&gt;
&lt;p&gt;Main Worker的&lt;code&gt;relid = NULL&lt;/code&gt;，如果有负责初始数据拷贝的进程，也会在这里有一行记录，&lt;code&gt;relid&lt;/code&gt;为负责拷贝数据的表。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;subid                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20421&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;subname               &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; pg_test_sub
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pid                   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5261&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;relid                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; NULL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;received_lsn          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 0/2A4F6B8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;last_msg_send_time    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 2021-02-22 17:05:06.578574+08
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;last_msg_receipt_time &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 2021-02-22 17:05:06.583326+08
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;latest_end_lsn        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 0/2A4F6B8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;latest_end_time       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 2021-02-22 17:05:06.578574+08
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;received_lsn&lt;/code&gt; ：最近&lt;strong&gt;收到&lt;/strong&gt;的日志位置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lastest_end_lsn&lt;/code&gt;：最后向walsender回报的LSN位置，即主库上的&lt;code&gt;confirmed_flush_lsn&lt;/code&gt;。不过这个值更新不太勤快，&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常情况下一个活跃的订阅会有一个apply进程在运行，被禁用的订阅或崩溃的订阅则在此视图中没有记录。在初始同步期间，被同步的表会有额外的工作进程记录。&lt;/p&gt;
&lt;h3 id=&#34;pg_replication_slot-复制槽&#34;&gt;&lt;code&gt;pg_replication_slot&lt;/code&gt; 复制槽&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;postgres@meta:5432/meta&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# table pg_replication_slots ;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt; RECORD &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;-------+------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;slot_name           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; pg_test_sub
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plugin              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; pgoutput
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;slot_type           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; logical
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;datoid              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;19355&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;database            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; meta
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;temporary           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; f
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;active              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; t
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;active_pid          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;89367&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xmin                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; NULL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;catalog_xmin        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1524&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;restart_lsn         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 0/2A08D40
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;confirmed_flush_lsn &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 0/2A097F8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wal_status          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; reserved
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;safe_wal_size       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; NULL
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;复制槽视图中同时包含了逻辑复制槽与物理复制槽。逻辑复制槽点主要特点是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;plugin&lt;/code&gt;字段不为空，标识了使用的逻辑解码插件，逻辑复制默认使用&lt;code&gt;pgoutput&lt;/code&gt;插件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slot_type = logical&lt;/code&gt;，物理复制的槽类型为&lt;code&gt;physical&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;datoid&lt;/code&gt;与&lt;code&gt;database&lt;/code&gt;字段不为空，因为物理复制与集簇关联，而逻辑复制与数据库关联。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逻辑订阅者也会作为一个标准的 &lt;strong&gt;复制从库&lt;/strong&gt; ，出现于 &lt;code&gt;pg_stat_replication&lt;/code&gt; 视图中。&lt;/p&gt;
&lt;h3 id=&#34;pg_replication_origin-复制源&#34;&gt;&lt;code&gt;pg_replication_origin&lt;/code&gt; 复制源&lt;/h3&gt;
&lt;p&gt;复制源&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_replication_origin_status&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;RECORD&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-----------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;local_id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;external_id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_19378&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;remote_lsn&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;local_lsn&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BB53640&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;local_id&lt;/code&gt;：复制源在本地的ID，2字节高效表示。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;external_id&lt;/code&gt;：复制源的ID，可以跨节点引用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;remote_lsn&lt;/code&gt;：源端最近的&lt;strong&gt;提交位点&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;local_lsn&lt;/code&gt;：本地已经持久化提交记录的LSN&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;检测复制冲突&#34;&gt;检测复制冲突&lt;/h3&gt;
&lt;p&gt;最稳妥的检测方法总是从发布与订阅两侧的日志中检测。当出现复制冲突时，发布测上可以看见复制连接中断&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LOG&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;terminating walsender process due to replication timeout&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LOG&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;starting logical decoding for slot &amp;#34;pg_test_sub&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DETAIL&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;streaming transactions committing after 0/xxxxx, reading WAL from 0/xxxx&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而订阅端则可以看到复制冲突的具体原因，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;logical&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;replication&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;worker&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PID&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4585&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;exited&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;exit&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;code&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;ERROR&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;duplicate&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;violates&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;unique&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;constraint&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;pgbench_tellers_pkey&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Key (tid)=(9) already exists.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,,,,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;COPY pgbench_tellers, line 31&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,,,,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;logical replication worker&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此外，一些监控指标也可以反映逻辑复制的状态：&lt;/p&gt;
&lt;p&gt;例如：&lt;code&gt;pg_replication_slots.confirmed_flush_lsn&lt;/code&gt; 长期落后于&lt;code&gt;pg_cureent_wal_lsn&lt;/code&gt;。或者&lt;code&gt;pg_stat_replication.flush_ag/write_lag&lt;/code&gt; 有显著增长。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;安全&#34;&gt;安全&lt;/h2&gt;
&lt;p&gt;参与订阅的表，其Ownership与Trigger权限必须控制在超级用户所信任的角色手中（否则修改这些表可能导致逻辑复制中断）。&lt;/p&gt;
&lt;p&gt;在发布节点上，如果不受信任的用户具有建表权限，那么创建发布时应当显式指定表名而非通配&lt;code&gt;ALL TABLES&lt;/code&gt;。也就是说，只有当超级用户信任所有 可以在发布或订阅侧具有建表（非临时表）权限的用户时，才可以使用&lt;code&gt;FOR ALL TABLES&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;用于复制连接的用户必须具有&lt;code&gt;REPLICATION&lt;/code&gt;权限（或者为SUPERUSER）。如果该角色缺少&lt;code&gt;SUPERUSER&lt;/code&gt;与&lt;code&gt;BYPASSRLS&lt;/code&gt;，发布者上的行安全策略可能会被执行。如果表的属主在复制启动之后设置了行级安全策略，这个配置可能会导致复制直接中断，而不是策略生效。该用户必须拥有LOGIN权限，而且HBA规则允许其访问。&lt;/p&gt;
&lt;p&gt;为了能够复制初始表数据，用于复制连接的角色必须在已发布的表上拥有&lt;code&gt;SELECT&lt;/code&gt;权限（或者属于超级用户）。&lt;/p&gt;
&lt;p&gt;创建发布，需要在数据库中的&lt;code&gt;CREATE&lt;/code&gt;权限，创建一个&lt;code&gt;FOR ALL TABLES&lt;/code&gt;的发布，需要超级用户权限。&lt;/p&gt;
&lt;p&gt;将表加入到发布中，用户需要具有表的&lt;strong&gt;属主&lt;/strong&gt;权限。&lt;/p&gt;
&lt;p&gt;创建订阅需要超级用户权限，因为订阅的apply进程在本地数据库中以超级用户的权限运行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;权限只会在建立复制连接时检查&lt;/strong&gt;，不会在发布端读取每条变更记录时重复检查，也不会在订阅端应用每条记录时检查。&lt;/p&gt;
&lt;h2 id=&#34;配置选项&#34;&gt;配置选项&lt;/h2&gt;
&lt;p&gt;逻辑复制需要一些配置选项才能正常工作。&lt;/p&gt;
&lt;p&gt;在发布者一侧，&lt;code&gt;wal_level&lt;/code&gt; 必须设置为&lt;code&gt;logical&lt;/code&gt;，&lt;code&gt;max_replication_slots&lt;/code&gt;最少需要设为 订阅的数量+用于表数据同步的数量。&lt;code&gt;max_wal_senders&lt;/code&gt;最少需要设置为&lt;code&gt;max_replication_slots&lt;/code&gt; + 为物理复制保留的数量，&lt;/p&gt;
&lt;p&gt;在订阅者一侧，也需要设置&lt;code&gt;max_replication_slots&lt;/code&gt;，&lt;code&gt;max_replication_slots&lt;/code&gt;，最少需要设为订阅数。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;max_logical_replication_workers&lt;/code&gt;最少需要配置为订阅的数量，再加上一些用于数据同步的工作进程数。&lt;/p&gt;
&lt;p&gt;此外，&lt;code&gt;max_worker_processes&lt;/code&gt;需要相应调整，至少应当为&lt;code&gt;max_logical_replication_worker&lt;/code&gt; + 1。注意一些扩展插件和并行查询也会从工作进程的池子中获取连接使用。&lt;/p&gt;
&lt;h3 id=&#34;配置参数样例&#34;&gt;配置参数样例&lt;/h3&gt;
&lt;p&gt;64核机器，1～2个发布与订阅，最多6个同步工作进程，最多8个物理从库的场景，一种样例配置如下所示：&lt;/p&gt;
&lt;p&gt;首先决定Slot数量，2个订阅，6个同步工作进程，8个物理从库，所以配置为16。Sender = Slot + Physical Replica = 24。&lt;/p&gt;
&lt;p&gt;同步工作进程限制为6，2个订阅，所以逻辑复制的总工作进程设置为8。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;wal_level: logical                      # logical	&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;max_worker_processes: 64                # default 8 -&amp;gt; 64, set to CPU CORE 64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;max_parallel_workers: 32                # default 8 -&amp;gt; 32, limit by max_worker_processes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;max_parallel_maintenance_workers: 16    # default 2 -&amp;gt; 16, limit by parallel worker&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;max_parallel_workers_per_gather: 0      # default 2 -&amp;gt; 0,  disable parallel query on OLTP instance&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# max_parallel_workers_per_gather: 16   # default 2 -&amp;gt; 16, enable parallel query on OLAP instance&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;max_wal_senders: 24                     # 10 -&amp;gt; 24&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;max_replication_slots: 16               # 10 -&amp;gt; 16 &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;max_logical_replication_workers: 8      # 4 -&amp;gt; 8, 6 sync worker + 1~2 apply worker&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;max_sync_workers_per_subscription: 6    # 2 -&amp;gt; 6, 6 sync worker&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;快速配置&#34;&gt;快速配置&lt;/h2&gt;
&lt;p&gt;首先设置发布侧的配置选项 &lt;code&gt;wal_level = logical&lt;/code&gt;，该参数需要重启方可生效，其他参数的默认值都不影响使用。&lt;/p&gt;
&lt;p&gt;然后创建复制用户，添加&lt;code&gt;pg_hba.conf&lt;/code&gt;配置项，允许外部访问，一种典型配置是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;USER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;replicator&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;REPLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BYPASSRLS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PASSWORD&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;DBUser.Replicator&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意，逻辑复制的用户需要具有&lt;code&gt;SELECT&lt;/code&gt;权限，在Pigsty中&lt;code&gt;replicator&lt;/code&gt;已经被授予了&lt;code&gt;dbrole_readonly&lt;/code&gt;角色。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;host     all          replicator     0.0.0.0/0     md5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;host     replicator   replicator     0.0.0.0/0     md5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在发布侧的数据库中执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mypub&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FOR&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tablename&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在订阅测数据库中执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBSCRIPTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mysub&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CONNECTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;dbname=&amp;lt;pub_db&amp;gt; host=&amp;lt;pub_host&amp;gt; user=replicator&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mypub&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以上配置即会开始复制，首先复制表的初始数据，然后开始同步增量变更。&lt;/p&gt;
&lt;h3 id=&#34;沙箱样例&#34;&gt;沙箱样例&lt;/h3&gt;
&lt;p&gt;以Pigsty标准4节点两集群沙箱为例，有两套数据库集群&lt;code&gt;pg-meta&lt;/code&gt;与&lt;code&gt;pg-test&lt;/code&gt;。现在将&lt;code&gt;pg-meta-1&lt;/code&gt;作为发布者，&lt;code&gt;pg-test-1&lt;/code&gt;作为订阅者。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGSRC&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;postgres://dbuser_admin@meta-1/meta&amp;#39;&lt;/span&gt;           &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 发布者&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGDST&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;postgres://dbuser_admin@node-1/test&amp;#39;&lt;/span&gt;           &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 订阅者&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pgbench -is100 &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGSRC&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;                               &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 在发布端初始化Pgbench&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pg_dump -Oscx -t pgbench* -s &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGSRC&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; psql &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGDST&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 在订阅端同步表结构&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 在发布者上创建**发布**，将默认的`pgbench`相关表加入到发布集中。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGSRC&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; -AXwt &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;CREATE PUBLICATION &amp;#34;pg_meta_pub&amp;#34; FOR TABLE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  pgbench_accounts,pgbench_branches,pgbench_history,pgbench_tellers;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 在订阅者上创建**订阅**，订阅发布者上的发布。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGDST&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;CREATE SUBSCRIPTION pg_test_sub
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  CONNECTION &amp;#39;host=10.10.10.10 dbname=meta user=replicator&amp;#39; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  PUBLICATION pg_meta_pub;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;复制流程&#34;&gt;复制流程&lt;/h2&gt;
&lt;p&gt;逻辑复制的订阅创建后，如果一切正常，逻辑复制会自动开始，针对&lt;strong&gt;每张订阅中的表&lt;/strong&gt;执行复制状态机逻辑。&lt;/p&gt;
&lt;p&gt;如下图所示。&lt;/p&gt;
&lt;div class=&#34;mermaid&#34;&gt;
stateDiagram-v2
    [*] --&gt; init : 表被加入到订阅集中
    init --&gt; data : 开始同步表的初始快照
    data --&gt; sync : 存量数据同步完成
    sync --&gt; ready : 同步期间的增量变更应用完毕，进入就绪状态
&lt;/div&gt;
&lt;p&gt;当所有的表都完成复制，进入&lt;code&gt;r&lt;/code&gt;（ready）状态时，逻辑复制的存量同步阶段便完成了，发布端与订阅端整体进入同步状态。&lt;/p&gt;
&lt;p&gt;因此从逻辑上讲，存在两种状态机：&lt;strong&gt;表级复制小状态机&lt;/strong&gt;与&lt;strong&gt;全局复制大状态机&lt;/strong&gt;。每一个Sync Worker负责一张表上的小状态机，而一个Apply Worker负责一条逻辑复制的大状态机。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;逻辑复制状态机&#34;&gt;逻辑复制状态机&lt;/h2&gt;
&lt;p&gt;逻辑复制有两种Worker：Sync与Apply。Sync&lt;/p&gt;
&lt;p&gt;因此，逻辑复制在逻辑上分为两个部分：&lt;strong&gt;每张表独自进行复制&lt;/strong&gt;，当复制进度追赶至最新位置时，由&lt;/p&gt;
&lt;p&gt;当创建或刷新订阅时，表会被加入到 订阅集 中，每一张订阅集中的表都会在&lt;code&gt;pg_subscription_rel&lt;/code&gt;视图中有一条对应纪录，展示这张表当前的复制状态。刚加入订阅集的表初始状态为&lt;code&gt;i&lt;/code&gt;，即&lt;code&gt;initialize&lt;/code&gt;，&lt;strong&gt;初始状态&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果订阅的&lt;code&gt;copy_data&lt;/code&gt;选项为真（默认情况），且工作进程池中有空闲的Worker，PostgreSQL会为这张表分配一个同步工作进程，同步这张表上的存量数据，此时表的状态进入&lt;code&gt;d&lt;/code&gt;，即&lt;strong&gt;拷贝数据中&lt;/strong&gt;。对表做数据同步类似于对数据库集群进行&lt;code&gt;basebackup&lt;/code&gt;，Sync Worker会在发布端创建临时的复制槽，获取表上的快照并通过COPY完成基础数据同步。&lt;/p&gt;
&lt;p&gt;当表上的基础数据拷贝完成后，表会进入&lt;code&gt;sync&lt;/code&gt;模式，即&lt;strong&gt;数据同步&lt;/strong&gt;，同步进程会追赶同步过程中发生的增量变更。当追赶完成时，同步进程会将这张表标记为&lt;code&gt;r&lt;/code&gt;（ready）状态，转交逻辑复制主Apply进程管理变更，表示这张表已经处于正常复制中。&lt;/p&gt;
&lt;h3 id=&#34;24-等待逻辑复制同步&#34;&gt;2.4 等待逻辑复制同步&lt;/h3&gt;
&lt;p&gt;创建订阅后，首先必须监控 发布端与订阅端两侧的数据库日志，&lt;strong&gt;确保没有错误产生&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;241-逻辑复制状态机&#34;&gt;2.4.1 逻辑复制状态机&lt;/h4&gt;
&lt;h4 id=&#34;242-同步进度跟踪&#34;&gt;2.4.2 同步进度跟踪&lt;/h4&gt;
&lt;p&gt;数据同步（&lt;code&gt;d&lt;/code&gt;）阶段可能需要花费一些时间，取决于网卡，网络，磁盘，表的大小与分布，逻辑复制的同步worker数量等因素。&lt;/p&gt;
&lt;p&gt;作为参考，1TB的数据库，20张表，包含有250GB的大表，双万兆网卡，在6个数据同步worker的负责下大约需要6~8小时完成复制。&lt;/p&gt;
&lt;p&gt;在数据同步过程中，每个表同步任务都会源端库上创建临时的复制槽。请确保逻辑复制初始同步期间不要给源端主库施加过大的不必要写入压力，以免WAL撑爆磁盘。&lt;/p&gt;
&lt;p&gt;发布侧的 &lt;code&gt;pg_stat_replication&lt;/code&gt;，&lt;code&gt;pg_replication_slots&lt;/code&gt;，订阅端的&lt;code&gt;pg_stat_subscription&lt;/code&gt;，&lt;code&gt;pg_subscription_rel&lt;/code&gt;提供了逻辑复制状态的相关信息，需要关注。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;psql&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGDST&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Xxw&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;EOF&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;subname&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;json_object_agg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;srsubstate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;cnt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_subscription&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;JOIN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;srsubid&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;srsubstate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;cnt&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_subscription_rel&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;       &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GROUP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;srsubid&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;srsubstate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sr&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;oid&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;srsubid&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GROUP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;subname&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;EOF&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以使用以下SQL确认订阅中表的状态，如果所有表的状态都显示为&lt;code&gt;r&lt;/code&gt;，则表示逻辑复制已经成功建立，订阅端可以用于切换。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   subname   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; json_object_agg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-------------+-----------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; pg_test_sub &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然，最好的方式始终是通过监控系统来跟踪复制状态。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;沙箱样例-1&#34;&gt;沙箱样例&lt;/h2&gt;
&lt;p&gt;以Pigsty标准4节点两集群沙箱为例，有两套数据库集群&lt;code&gt;pg-meta&lt;/code&gt;与&lt;code&gt;pg-test&lt;/code&gt;。现在将&lt;code&gt;pg-meta-1&lt;/code&gt;作为发布者，&lt;code&gt;pg-test-1&lt;/code&gt;作为订阅者。&lt;/p&gt;
&lt;p&gt;通常逻辑复制的前提是，发布者上设置有&lt;code&gt;wal_level = logical&lt;/code&gt;，并且有一个可以正常访问，具有正确权限的复制用户。&lt;/p&gt;
&lt;p&gt;Pigsty的默认配置已经符合要求，且带有满足条件的复制用户&lt;code&gt;replicator&lt;/code&gt;，以下命令均从元节点以&lt;code&gt;postgres&lt;/code&gt;用户发起，数据库用户&lt;code&gt;dbuser_admin&lt;/code&gt;，带有&lt;code&gt;SUPERUSER&lt;/code&gt;权限。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGSRC&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;postgres://dbuser_admin@meta-1/meta&amp;#39;&lt;/span&gt;        &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 发布者&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGDST&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;postgres://dbuser_admin@node-1/test&amp;#39;&lt;/span&gt;        &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 订阅者&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;准备逻辑复制&#34;&gt;准备逻辑复制&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;pgbench&lt;/code&gt;工具，在&lt;code&gt;pg-meta&lt;/code&gt;集群的&lt;code&gt;meta&lt;/code&gt;数据库中初始化表结构。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pgbench -is100 &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGSRC&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;pg_dump&lt;/code&gt;与&lt;code&gt;psql&lt;/code&gt;  &lt;strong&gt;同步&lt;/strong&gt; &lt;code&gt;pgbench*&lt;/code&gt; 相关表的定义。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pg_dump -Oscx -t pgbench* -s &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGSRC&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; psql &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGDST&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;创建发布订阅&#34;&gt;创建发布订阅&lt;/h3&gt;
&lt;p&gt;在发布者上创建&lt;strong&gt;发布&lt;/strong&gt;，将默认的&lt;code&gt;pgbench&lt;/code&gt;相关表加入到发布集中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGSRC&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; -AXwt &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;CREATE PUBLICATION &amp;#34;pg_meta_pub&amp;#34; FOR TABLE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  pgbench_accounts,pgbench_branches,pgbench_history,pgbench_tellers;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在订阅者上创建&lt;strong&gt;订阅&lt;/strong&gt;，订阅发布者上的发布。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGDST&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;CREATE SUBSCRIPTION pg_test_sub
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  CONNECTION &amp;#39;host=10.10.10.10 dbname=meta user=replicator&amp;#39; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  PUBLICATION pg_meta_pub;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;观察复制状态&#34;&gt;观察复制状态&lt;/h3&gt;
&lt;p&gt;当&lt;code&gt;pg_subscription_rel.srsubstate&lt;/code&gt;全部变为&lt;code&gt;r&lt;/code&gt; （准备就绪）状态后，逻辑复制就建立起来了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ psql &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGDST&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; -c &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;TABLE pg_subscription_rel;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; srsubid &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; srrelid &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; srsubstate &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  srsublsn
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---------+---------+------------+------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20451&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20433&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; d          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; NULL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20451&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20442&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; r          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 0/4ECCDB78
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20451&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20436&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; r          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 0/4ECCDB78
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20451&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20439&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; r          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; 0/4ECCDBB0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;校验复制数据&#34;&gt;校验复制数据&lt;/h3&gt;
&lt;p&gt;可以简单地比较发布与订阅端两侧的表记录条数，与复制标识列的最大最小值来校验数据是否完整地复制。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; compare_relation&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#204a87&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;relname&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#204a87&#34;&gt;local&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;identity&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	psql &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGPUB&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}}&lt;/span&gt; -AXtwc &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;SELECT count(*) AS cnt, max(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$identity&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;) AS max, min(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$identity&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;) AS min FROM &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;relname&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	psql &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGSUB&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}}&lt;/span&gt; -AXtwc &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;SELECT count(*) AS cnt, max(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$identity&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;) AS max, min(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$identity&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;) AS min FROM &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;relname&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;compare_relation pgbench_accounts aid
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;compare_relation pgbench_branches bid
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;compare_relation pgbench_history  tid
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;compare_relation pgbench_tellers  tid
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更近一步的验证可以通过在发布者上手工创建一条记录，再从订阅者上读取出来。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ psql &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGPUB&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; -AXtwc &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;INSERT INTO pgbench_accounts(aid,bid,abalance) VALUES (99999999,1,0);&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;INSERT &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ psql &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PGSUB&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt; -AXtwc &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;SELECT * FROM pgbench_accounts WHERE aid = 99999999;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;99999999&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;1&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;0&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在已经拥有一个正常工作的逻辑复制了。下面让我们来通过一系列实验来掌握逻辑复制的使用与管理，探索可能遇到的各种离奇问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;逻辑复制实验&#34;&gt;逻辑复制实验&lt;/h2&gt;
&lt;h3 id=&#34;将表加入已有发布&#34;&gt;将表加入已有发布&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;t_normal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BIGSERIAL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRIMARY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 常规表，带有主键
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_meta_pub&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ADD&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;t_normal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 将新创建的表加入到发布中
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果这张表在订阅端已经存在，那么即可进入正常的逻辑复制流程：&lt;code&gt;i -&amp;gt; d -&amp;gt; s -&amp;gt; r&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果向发布加入一张订阅端不存在的表？那么新订阅将会&lt;strong&gt;无法创建&lt;/strong&gt;。&lt;strong&gt;已有订阅无法刷新&lt;/strong&gt;，但可以保持原有复制继续进行。&lt;/p&gt;
&lt;p&gt;如果订阅&lt;strong&gt;还不存在&lt;/strong&gt;，那么创建的时候会报错无法进行：在订阅端找不到这张表。如果订阅&lt;strong&gt;已经存在&lt;/strong&gt;，无法执行刷新命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SUBSCRIPTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_test_sub&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;REFRESH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果新加入的表没有任何写入，已有的复制关系不会发生变化，一旦新加入的表发生变更，会立即产生&lt;strong&gt;复制冲突&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;将表从发布中移除&#34;&gt;将表从发布中移除&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PUBLICATION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_meta_pub&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ADD&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;t_normal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从发布移除后，订阅端不会有影响。效果上就是这张表的变更似乎消失了。执行订阅刷新后，这张表会从订阅集中被移除。&lt;/p&gt;
&lt;p&gt;另一种情况是&lt;strong&gt;重命名&lt;/strong&gt;发布/订阅中的表，在发布端执行表重命名时，发布端的发布集会立刻随之更新。尽管订阅集中的表名不会立刻更新，但只要重命名后的表发生任何变更，而订阅端没有对应的表，那么会立刻出现&lt;strong&gt;复制冲突&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;同理，在订阅端重命名表时，订阅的关系集也会刷新，但因为发布端的表没有对应物了。如果这张表没有变更，那么一切照旧，一旦发生变更，立刻出现&lt;strong&gt;复制冲突&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;直接在发布端&lt;code&gt;DROP&lt;/code&gt;此表，会顺带&lt;strong&gt;将该表从发布中移除&lt;/strong&gt;，不会有报错或影响。但直接在订阅端&lt;code&gt;DROP&lt;/code&gt;表则可能出现&lt;strong&gt;问题&lt;/strong&gt;，&lt;code&gt;DROP TABLE&lt;/code&gt;时该表也会从订阅集中被移除。如果发布端此时这张表上仍有变更产生，则会导致&lt;strong&gt;复制冲突&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以，删表应当先在发布端进行，再在订阅端进行。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;两端列定义不一致&#34;&gt;两端列定义不一致&lt;/h3&gt;
&lt;p&gt;发布与订阅端的表的列通过&lt;strong&gt;名称&lt;/strong&gt;匹配，列的顺序无关紧要。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;订阅端表的列更多，通常不会有什么影响&lt;/strong&gt;。多出来的列会被填充为默认值（通常是&lt;code&gt;NULL&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;特别需要注意的是，如果要为多出来的列添加&lt;code&gt;NOT NULL&lt;/code&gt;约束，那么一定要配置一个默认值，否则变更发生时违反约束会导致复制冲突。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;订阅端如果列要比发布端更少，会产生复制冲突&lt;/strong&gt;。在发布端添加一个新列并不会&lt;strong&gt;立刻&lt;/strong&gt;导致复制冲突，随后的第一条变更将导致复制冲突。&lt;/p&gt;
&lt;p&gt;所以在执行加列DDL变更时，可以先在订阅者上先执行，然后在发布端进行。&lt;/p&gt;
&lt;p&gt;列的&lt;strong&gt;数据类型不需要完全一致&lt;/strong&gt;，只要两个列的&lt;strong&gt;文本表示&lt;/strong&gt;兼容即可，即数据的文本表示可以转换为目标列的类型。&lt;/p&gt;
&lt;p&gt;这意味着任何类型都能转换成TEXT类型，&lt;code&gt;BIGINT&lt;/code&gt; 只要不出错，也可以转换成&lt;code&gt;INT&lt;/code&gt;，不过一旦溢出，还是会出现&lt;strong&gt;复制冲突&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;复制身份与索引的正确配置&#34;&gt;复制身份与索引的正确配置&lt;/h3&gt;
&lt;p&gt;表上的复制标识配置，与表上有没有索引是两件独立的事。尽管各种排列组合都是可能的，然而在实际使用中只有三种可行的情况，其他情况都无法正常完成逻辑复制的功能（如果不报错，通常也是侥幸）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表上有主键，使用默认的 &lt;code&gt;default&lt;/code&gt; 复制标识，不需要额外配置。&lt;/li&gt;
&lt;li&gt;表上没有主键，但是有非空唯一索引，显式配置 &lt;code&gt;index&lt;/code&gt; 复制标识。&lt;/li&gt;
&lt;li&gt;表上既没有主键也没有非空唯一索引，显式配置&lt;code&gt;full&lt;/code&gt;复制标识（运行效率低，仅作为兜底方案）&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;复制身份模式\表上的约束&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;主键(p)&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;非空唯一索引(u)&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;两者皆无(n)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;d&lt;/strong&gt;efault&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;有效&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;i&lt;/strong&gt;ndex&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;有效&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;f&lt;/strong&gt;ull&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;低效&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;低效&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;低效&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;n&lt;/strong&gt;othing&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;在所有情况下，&lt;code&gt;INSERT&lt;/code&gt;都可以被正常复制。&lt;code&gt;x&lt;/code&gt;代表&lt;code&gt;DELETE|UPDATE&lt;/code&gt;所需关键信息缺失无法正常完成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最好的方式当然是事前修复，为所有的表指定主键，以下查询可以用于找出缺失主键或非空唯一索引的表：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;quote_ident&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nspname&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;||&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;||&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;quote_ident&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;relname&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;con&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ri&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;keys&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;       &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CASE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;relreplident&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHEN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;THEN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHEN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;THEN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;nothing&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHEN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;THEN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;full&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHEN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;THEN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;END&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;replica_identity&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_class&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;JOIN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_namespace&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;relnamespace&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;oid&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LATERAL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;array_agg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;contype&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ri&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_constraint&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;conrelid&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;oid&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;con&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;relkind&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nspname&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NOT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;pg_catalog&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;information_schema&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;monitor&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;repack&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;pg_toast&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意，复制身份为&lt;code&gt;nothing&lt;/code&gt;的表可以加入到发布中，但在发布者上对其执行&lt;code&gt;UPDATE|DELETE&lt;/code&gt;会直接导致报错。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;其他问题&#34;&gt;其他问题&lt;/h2&gt;
&lt;h3 id=&#34;q逻辑复制准备工作&#34;&gt;Q：逻辑复制准备工作&lt;/h3&gt;
&lt;h3 id=&#34;q什么样的表可以逻辑复制&#34;&gt;Q：什么样的表可以逻辑复制？&lt;/h3&gt;
&lt;h3 id=&#34;q监控逻辑复制状态&#34;&gt;Q：监控逻辑复制状态&lt;/h3&gt;
&lt;h3 id=&#34;q将新表加入发布&#34;&gt;Q：将新表加入发布&lt;/h3&gt;
&lt;h3 id=&#34;q没有主键的表加入发布&#34;&gt;Q：没有主键的表加入发布？&lt;/h3&gt;
&lt;h3 id=&#34;q没有复制身份的表如何处理&#34;&gt;Q：没有复制身份的表如何处理？&lt;/h3&gt;
&lt;h3 id=&#34;qalter-pub的生效方式&#34;&gt;Q：ALTER PUB的生效方式&lt;/h3&gt;
&lt;h3 id=&#34;q在同一对-发布者-订阅者-上如果存在多对订阅且发布包含的表重叠&#34;&gt;Q：在同一对 发布者-订阅者 上如果存在多对订阅，且发布包含的表重叠？&lt;/h3&gt;
&lt;h3 id=&#34;q订阅者和发布者的表定义有什么限制&#34;&gt;Q：订阅者和发布者的表定义有什么限制？&lt;/h3&gt;
&lt;h3 id=&#34;qpg_dump是如何处理订阅的&#34;&gt;Q：pg_dump是如何处理订阅的&lt;/h3&gt;
&lt;h3 id=&#34;q什么情况下需要手工管理订阅复制槽&#34;&gt;Q：什么情况下需要手工管理订阅复制槽？&lt;/h3&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: OpenAI全球宕机复盘：K8S循环依赖</title>
      <link>/zh/blog/cloud/openai-failure/</link>
      <pubDate>Sat, 14 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/openai-failure/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/openai-failure/featured_hu02aa61ae1d9de35cbe238d2676170cb9_136909_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;p&gt;12月11日，OpenAI 出现了全球范围内的不可用故障，影响了 ChatGPT，API，Sora，Playground 和 Labs 等服务。影响范围从 12 月 11 日下午 3:16 至晚上 7:38 期间，持续时间超过四个小时，产生显著影响。&lt;/p&gt;
&lt;p&gt;根据 OpenIA 在事后发布的&lt;a href=&#34;https://status.openai.com/incidents/ctrsv3lwd797&#34;&gt;故障报告&lt;/a&gt;，此次故障的直接原因是新部署了一套监控，压垮了 Kubernetes 控制面。然后因为控制面故障导致无法直接回滚，进一步放大的故障影响，导致了长时间的不可用。&lt;/p&gt;
&lt;p&gt;其实这个故障和去年双十一  &lt;a href=&#34;https://mp.weixin.qq.com/s/OIlR0rolEQff9YfCpj3wIQ&#34;&gt;阿里云全球史诗故障&lt;/a&gt;  非常类似。都是全球控制面不可用，根因都是循环依赖（以及测试/发布灰度不足）。无非是阿里云是 OSS 和 IAM 之间循环依赖，OpenAI 是 DNS 和 K8S 的循环依赖。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;循环依赖是架构设计中的大忌，就像在基础设施中放了炸药包，容易被一些临时性偶发性故障点爆。这次故障再次为我们敲响警钟。当然这次故障的原因还可以进一步深挖，比如测试/灰度不足，以及 架构杂耍：&lt;/p&gt;
&lt;p&gt;比如 K8S 官方建议的 &lt;a href=&#34;https://kubernetes.io/docs/setup/best-practices/cluster-large/&#34;&gt;最大集群规模是 5000 节点&lt;/a&gt;，而我还清晰记得 OpenAI 发表过一篇吹牛文章：《&lt;a href=&#34;https://newsletter.betterstack.com/p/how-openai-scaled-kubernetes-to-7500&#34;&gt;我们是如何通过移除一个组件来让K8S跑到7500节点的&lt;/a&gt;》
—— 不仅不留冗余，还要超载压榨50%，最终，这次还真就在集群规模上翻了大车。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;OpenAI 是 AI 领域的当红炸子鸡，其产品的实力与受欢迎程度毋庸置疑。这是依然无法掩盖其在基础设施上的薄弱 —— 基础设施想要搞好确实不容易，这也是为什么 AWS 和 DataDog 这样的公司赚得钵满盆翻的核心原因。&lt;/p&gt;
&lt;p&gt;OpenAI 在去年在 &lt;a href=&#34;https://community.openai.com/t/postmortem-feb-20-2023-openai-suffered-a-major-db-outage/73068&#34;&gt;PostgreSQL 数据库与 pgBouncer 连接池&lt;/a&gt; 上也翻过大车。这两年来的在基础设施可靠性上的表现也说不上亮眼。这次故障再次说明，即使是万亿级独角兽，在非专业领域上，也照样是个草台班子。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;参考阅读&#34;&gt;&lt;strong&gt;参考阅读&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/OIlR0rolEQff9YfCpj3wIQ&#34;&gt;我们能从阿里云史诗级故障中学到什么&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/PgduTGIvWSUgHZhVfnb7Bg&#34;&gt;腾讯云：颜面尽失的草台班子&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/35ScjtPjC1GNGKaSArJhcA&#34;&gt;黑暗森林：打爆AWS云账单，只需要S3桶名&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/eH5HBbL7cQhjQY8rm1gFLQ&#34;&gt;无双删库：Google云爆破了大基金的整个云账户&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/s7i7bSYzNY8mrcpfkHPjOg&#34;&gt;全球Windows蓝屏：甲乙双方都是草台班子&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/rXwEayprvDKCgba4m-naoQ&#34;&gt;阿里云：高可用容灾神话的破灭&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/kOIw8uPjZUZ0-QisC1TBOA&#34;&gt;草台班子唱大戏，阿里云RDS翻车记&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/OxhhJ4U1P43di_eaE1uGPw&#34;&gt;互联网故障背后的草台班子们&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/4a8Qy4O80xqsnytC4l9lRg&#34;&gt;数据库应该放入K8S里吗？&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;故障复盘原文&#34;&gt;故障复盘原文&lt;/h2&gt;
&lt;h3 id=&#34;apichatgpt-和-sora-出现问题&#34;&gt;API、ChatGPT 和 Sora 出现问题&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://status.openai.com/incidents/ctrsv3lwd797&#34;&gt;https://status.openai.com/incidents/ctrsv3lwd797&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;openai故障报告复盘&#34;&gt;OpenAI故障报告复盘&lt;/h4&gt;
&lt;p&gt;本文详细记录了 2024 年 12 月 11 日发生的一次故障，当时所有 OpenAI 服务均出现了严重的停机问题。根源在于我们部署了新的遥测服务（telemetry service），意外导致 Kubernetes 控制平面负载过重，从而引发关键系统的连锁故障。我们将深入解析故障根本原因，概述故障处理的具体步骤，并分享我们为防止类似事件再次发生而采取的改进措施。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;影响&#34;&gt;影响&lt;/h3&gt;
&lt;p&gt;在太平洋时间 2024 年 12 月 11 日下午 3:16 至晚上 7:38 之间，所有 OpenAI 服务均出现了严重降级或完全不可用。这起事故源于我们在所有集群中推出的新遥测服务配置，&lt;strong&gt;并非&lt;/strong&gt;由安全漏洞或近期产品发布所致。从下午 3:16 开始，各产品性能均出现大幅下降。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ChatGPT：&lt;/strong&gt; 在下午 5:45 左右开始大幅恢复，并于晚上 7:01 完全恢复。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API：&lt;/strong&gt; 在下午 5:36 左右开始大幅恢复，于晚上 7:38 所有模型全部恢复正常。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sora：&lt;/strong&gt; 于晚上 7:01 完全恢复。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;根因&#34;&gt;根因&lt;/h3&gt;
&lt;p&gt;OpenAI 在全球范围内运营着数百个 Kubernetes 集群。Kubernetes 的控制平面主要负责集群管理，而数据平面则实际运行工作负载（如模型推理服务）。&lt;/p&gt;
&lt;p&gt;为提升组织整体可靠性，我们一直在加强集群级别的可观测性工具，以加深对系统运行状态的可见度。太平洋时间下午 3:12，我们在所有集群部署了一项新的遥测服务，用于收集 Kubernetes 控制平面的详细指标。&lt;/p&gt;
&lt;p&gt;由于遥测服务会涉及非常广泛的操作范围，这项新服务的配置无意间让每个集群中的所有节点都执行了高成本的 Kubernetes API 操作，并且该操作成本会随着集群规模的扩大而成倍增加。数千个节点同时发起这些高负载请求，导致 Kubernetes API 服务器不堪重负，进而瘫痪了大型集群的控制平面。该问题在规模最大的集群中最为严重，因此在测试环境并未检测到；另一方面，DNS 缓存也使问题在正式环境中的可见度降低，直到问题在整个集群开始全面扩散后才逐渐显现。&lt;/p&gt;
&lt;p&gt;尽管 Kubernetes 数据平面大部分情况下可独立于控制平面运行，但数据平面的 DNS 解析依赖控制平面——如果控制平面瘫痪，服务之间便无法通过 DNS 相互通信。&lt;/p&gt;
&lt;p&gt;简而言之，新遥测服务的配置在大型集群中意外地生成了巨大的 Kubernetes API 负载，导致控制平面瘫痪，进而使 DNS 服务发现功能中断。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;测试与部署&#34;&gt;测试与部署&lt;/h3&gt;
&lt;p&gt;我们在一个预发布（staging）集群中对变更进行了测试，当时并未发现任何问题。该故障主要对超过一定规模的集群产生影响；再加上每个节点的 DNS 缓存延迟了故障的可见时间，使得变更在正式环境被大范围部署之前并没有暴露出任何明显异常。&lt;/p&gt;
&lt;p&gt;在部署之前，我们最关注的是这项新遥测服务本身对系统资源（CPU/内存）的消耗。在部署前也对所有集群的资源使用情况进行了评估，确保新部署不会干扰正在运行的服务。虽然我们针对不同集群调优了资源请求，但并未考虑 Kubernetes API 服务器的负载问题。与此同时，此次变更的监控流程主要关注了服务自身的健康状态，并没有完善地监控集群健康（尤其是控制平面的健康）。&lt;/p&gt;
&lt;p&gt;Kubernetes 数据平面（负责处理用户请求）设计上可以在控制平面离线的情况下继续工作。然而，Kubernetes API 服务器对于 DNS 解析至关重要，而 DNS 解析对于许多服务都是核心依赖。&lt;/p&gt;
&lt;p&gt;DNS 缓存在故障早期阶段起到了暂时的缓冲作用，使得一些陈旧但可用的 DNS 记录得以继续为服务提供地址解析。但在接下来 20 分钟里，这些缓存逐步过期，依赖实时 DNS 的服务开始出现故障。这段时间差恰好在部署持续推进时才逐渐暴露问题，使得最终故障范围更为集中和明显。一旦 DNS 缓存失效，集群里的所有服务都会向 DNS 发起新请求，进一步加剧了控制平面的负载，使得故障难以在短期内得到缓解。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;故障修复&#34;&gt;故障修复&lt;/h3&gt;
&lt;p&gt;在大多数情况下，监控部署和回滚有问题的变更都相对容易，我们也有自动化工具来检测和回滚故障性部署。此次事件中，我们的检测工具确实正常工作——在客户受影响前几分钟就已经发出了警报。不过要真正修复这个问题，需要先删除导致问题的遥测服务，而这需要访问 Kubernetes 控制平面。然而，API 服务器在承受巨大负载的情况下无法正常处理管理操作，导致我们无法第一时间移除故障性服务。&lt;/p&gt;
&lt;p&gt;我们在几分钟内确认了问题，并立即启动多个工作流程，尝试不同途径迅速恢复集群：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;缩小集群规模：&lt;/strong&gt; 通过减少节点数量来降低 Kubernetes API 总负载。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阻断对 Kubernetes 管理 API 的网络访问：&lt;/strong&gt; 阻止新的高负载请求，让 API 服务器有时间恢复。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;扩容 Kubernetes API 服务器：&lt;/strong&gt; 提升可用资源以应对积压请求，从而为移除故障服务赢得操作窗口。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们同时采用这三种方法，最终恢复了对部分控制平面的访问权限，从而得以删除导致问题的遥测服务。&lt;/p&gt;
&lt;p&gt;一旦我们恢复对部分控制平面的访问权限，系统就开始迅速好转。在可能的情况下，我们将流量切换到健康的集群，同时对仍然存在问题的其他集群进行进一步修复。部分集群仍在修复过程出现资源竞争问题：很多服务同时尝试重新下载所需组件，导致资源饱和并需要人工干预。&lt;/p&gt;
&lt;p&gt;此次事故是多项系统与流程在同一时间点相互作用、同时失效的结果，主要体现在：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;测试环境未能捕捉到新配置对 Kubernetes 控制平面的影响。&lt;/li&gt;
&lt;li&gt;DNS 缓存使服务故障出现了时间延迟，从而让变更在故障完全暴露前被大范围部署。&lt;/li&gt;
&lt;li&gt;故障发生时无法访问控制平面，导致修复进程十分缓慢。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;时间线&#34;&gt;时间线&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2024 年 12 月 10 日：&lt;/strong&gt; 新的遥测服务部署到预发布集群，经测试无异常。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2024 年 12 月 11 日 下午 2:23：&lt;/strong&gt; 引入该服务的代码合并到主分支，并触发部署流水线。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下午 2:51 至 3:20：&lt;/strong&gt; 变更逐步应用到所有集群。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下午 3:13：&lt;/strong&gt; 告警触发，通知到工程师。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下午 3:16：&lt;/strong&gt; 少量客户开始受到影响。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下午 3:16：&lt;/strong&gt; 根因被确认。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下午 3:27：&lt;/strong&gt; 工程师开始把流量从受影响的集群迁移。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下午 3:40：&lt;/strong&gt; 客户影响达到最高峰。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下午 4:36：&lt;/strong&gt; 首个集群恢复。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;晚上 7:38：&lt;/strong&gt; 所有集群恢复。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;预防措施&#34;&gt;预防措施&lt;/h3&gt;
&lt;p&gt;为防止类似事故再次发生，我们正在采取如下措施：&lt;/p&gt;
&lt;h5 id=&#34;1-更健壮的分阶段部署&#34;&gt;1. 更健壮的分阶段部署&lt;/h5&gt;
&lt;p&gt;我们将继续加强基础设施变更的分阶段部署和监控机制，确保任何故障都能被迅速发现并限制在较小范围。今后所有与基础设施相关的配置变更都会采用更全面的分阶段部署流程，并在部署过程中持续监控服务工作负载以及 Kubernetes 控制平面的健康状态。&lt;/p&gt;
&lt;h5 id=&#34;2-故障注入测试&#34;&gt;2. 故障注入测试&lt;/h5&gt;
&lt;p&gt;Kubernetes 数据平面需要进一步增强在缺失控制平面的情况下的生存能力。我们将引入针对该场景的测试手段，包括在测试环境有意注入“错误配置”来验证系统检测和回滚能力。&lt;/p&gt;
&lt;h5 id=&#34;3-紧急访问-kubernetes-控制平面&#34;&gt;3. 紧急访问 Kubernetes 控制平面&lt;/h5&gt;
&lt;p&gt;当前我们还没有一套应对数据平面向控制平面施加过大压力时，依旧能访问 API 服务器的应急机制。我们计划建立“破冰”机制（break-glass），确保在任何情况下工程团队都能访问 Kubernetes API 服务器。&lt;/p&gt;
&lt;h5 id=&#34;4-进一步解耦-kubernetes-数据平面和控制平面&#34;&gt;4. 进一步解耦 Kubernetes 数据平面和控制平面&lt;/h5&gt;
&lt;p&gt;我们目前对 Kubernetes DNS 服务的依赖，使得数据平面和控制平面存在耦合关系。我们会投入更多精力，使得控制平面对关键服务和产品工作负载不再是“负载核心”，从而降低对 DNS 的单点依赖。&lt;/p&gt;
&lt;h5 id=&#34;5-更快的恢复速度&#34;&gt;5. 更快的恢复速度&lt;/h5&gt;
&lt;p&gt;我们将针对集群启动所需的关键资源引入更完善的缓存和动态限流机制，并定期进行“快速替换整个集群”的演练，以确保在最短时间内实现正确、完整的启动和恢复。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;结语&#34;&gt;结语&lt;/h3&gt;
&lt;p&gt;我们对这次事故造成的影响向所有客户表示诚挚的歉意——无论是 ChatGPT 用户、API 开发者还是依赖 OpenAI 产品的企业。此次事件没有达到我们自身对系统可靠性的期望。我们意识到向所有用户提供高度可靠的服务至关重要，接下来将优先落实上述防范措施，不断提升服务的可靠性。感谢大家在此次故障期间的耐心等待。&lt;/p&gt;
&lt;p&gt;发表于 23 小时前。2024 年 12 月 12 日 - 17:19 PST&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;已解决&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 2024 年 12 月 11 日下午 3:16 到晚上 7:38 期间，OpenAI 的服务不可用。大约在下午 5:40 开始，我们观察到 API 流量逐渐恢复；ChatGPT 和 Sora 则在下午 6:50 左右恢复。我们在晚上 7:38 排除了故障，并使所有服务重新恢复正常。&lt;/p&gt;
&lt;p&gt;OpenAI 将对本次事故进行完整的根本原因分析，并在此页面分享后续详情。&lt;/p&gt;
&lt;p&gt;2024 年 12 月 11 日 - 22:23 PST&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;监控&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;API、ChatGPT 和 Sora 的流量大体恢复。我们将继续监控，确保问题彻底解决。&lt;/p&gt;
&lt;p&gt;2024 年 12 月 11 日 - 19:53 PST&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们正持续推进修复工作。API 流量正在恢复，我们逐个地区恢复 ChatGPT 流量。Sora 已开始部分恢复。&lt;/p&gt;
&lt;p&gt;2024 年 12 月 11 日 - 18:54 PST&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们正努力修复问题。API 和 ChatGPT 已部分恢复，Sora 仍然离线。&lt;/p&gt;
&lt;p&gt;2024 年 12 月 11 日 - 17:50 PST&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们正继续研发修复方案。&lt;/p&gt;
&lt;p&gt;2024 年 12 月 11 日 - 17:03 PST&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们正继续研发修复方案。&lt;/p&gt;
&lt;p&gt;2024 年 12 月 11 日 - 16:59 PST&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们已经找到一个可行的恢复方案，并开始看到部分流量成功返回。我们将继续努力，使服务尽快恢复正常。&lt;/p&gt;
&lt;p&gt;2024 年 12 月 11 日 - 16:55 PST&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ChatGPT、Sora 和 API 依然无法使用。我们已经定位到问题，并正在部署修复方案。我们正在尽快恢复服务，对停机带来的影响深表歉意。&lt;/p&gt;
&lt;p&gt;2024 年 12 月 11 日 - 16:24 PST&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;已确认问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们接到报告称 API 调用出现错误，platform.openai.com 和 ChatGPT 的登录也出现问题。我们已经确认问题，并正在开展修复。&lt;/p&gt;
&lt;p&gt;2024 年 12 月 11 日 - 15:53 PST&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们正在继续调查此问题。&lt;/p&gt;
&lt;p&gt;2024 年 12 月 11 日 - 15:45 PST&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们正在继续调查此问题。&lt;/p&gt;
&lt;p&gt;2024 年 12 月 11 日 - 15:42 PST&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;调查中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们目前正在调查该问题，很快会提供更多更新信息。&lt;/p&gt;
&lt;p&gt;发表于 2 天前。2024 年 12 月 11 日 - 15:17 PST&lt;/p&gt;
&lt;p&gt;本次故障影响了 API、ChatGPT、Sora、Playground 以及 Labs。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 七周七数据库（2025年）</title>
      <link>/zh/blog/db/7-week-7-db/</link>
      <pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/7-week-7-db/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/7-week-7-db/featured_hu3ae2602ded94cb2afe80c634bb078249_34076_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="336"/>]]>
        
        &lt;blockquote&gt;
&lt;p&gt;作者：Matt Blewitt，原文：七周七数据库（2025年）&lt;/p&gt;
&lt;p&gt;译者：冯若航，数据库老司机，云计算泥石流&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://matt.blwt.io/post/7-databases-in-7-weeks-for-2025/&#34;&gt;https://matt.blwt.io/post/7-databases-in-7-weeks-for-2025/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;长期以来，我一直在运营数据库即服务（Databases-as-a-Service），这个领域总有新鲜事物需要跟进 —— 新技术、解决问题的不同方法，更别提大学里不断涌现的研究成果了。展望2025年，考虑花一周时间深入了解以下每项数据库技术吧。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;A line drawing of a bookshelf, with the books labelled for each database covered - PostgreSQL, SQLite, DuckDB, ClickHouse, FoundationDB, TigerBeetle and CockroachDB&#34; src=&#34;https://matt.blwt.io/7-databases-in-7-weeks-for-2025/header.webp&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;这不是 “七大最佳数据库” 之类的文章，更不是给报菜单念书名式的列表做铺垫——这里只是我认为值得你花一周左右时间认真研究的七个数据库。你可能会问，“为什么不选Neo4j、MongoDB、MySQL / Vitess 或者其他数据库呢？”答案大多是：我觉得它们没啥意思。同时，我也不会涉及 Kafka 或其他类似的流数据服务——它们确实值得你花时间学习，但不在本文讨论范围内。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/7-week-7-db/#1-postgresql&#34;&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/7-week-7-db/#2-sqlite&#34;&gt;SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/7-week-7-db/#3-duckdb&#34;&gt;DuckDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/7-week-7-db/#4-clickhouse&#34;&gt;ClickHouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/7-week-7-db/#5-foundationdb&#34;&gt;FoundationDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/7-week-7-db/#6-tigerbeetle&#34;&gt;TigerBeetle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/7-week-7-db/#7-cockroachdb&#34;&gt;CockroachDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://matt.blwt.io/post/7-databases-in-7-weeks-for-2025/#wrap-up&#34;&gt;小结&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-postgresql&#34;&gt;1. PostgreSQL&lt;/h2&gt;
&lt;h3 id=&#34;默认数据库&#34;&gt;默认数据库&lt;/h3&gt;
&lt;p&gt;“一切皆用 Postgres” 几乎成了一个梗，原因很简单。&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; 是 &lt;a href=&#34;https://boringtechnology.club/&#34;&gt;枯燥技术&lt;/a&gt; 的巅峰之作，当你需要 客户端-服务器 模型的数据库时，它应该是你的首选。PG 遵循ACID原则，拥有丰富的复制方法 —— 包括物理和逻辑复制—— 并且在所有主要供应商中都有极好的支持。&lt;/p&gt;
&lt;p&gt;然而，我最喜欢 Postgres 功能是 &lt;a href=&#34;https://wiki.postgresql.org/wiki/Extensions&#34;&gt;扩展&lt;/a&gt;。在这一点上，Postgres 展现出了其他数据库难以企及的生命力。几乎你想要的功能都有相应的扩展——&lt;a href=&#34;https://age.apache.org/&#34;&gt;AGE&lt;/a&gt;支持图数据结构和Cypher查询语言，&lt;a href=&#34;https://docs.timescale.com/self-hosted/latest/&#34;&gt;TimescaleDB&lt;/a&gt;支持时间序列工作负载，&lt;a href=&#34;https://github.com/hydradatabase/hydra/tree/main/columnar&#34;&gt;Hydra Columnar&lt;/a&gt;提供了另一种列式存储引擎，等等。如果你有兴趣亲自尝试，我最近&lt;a href=&#34;https://matt.blwt.io/post/building-a-postgresql-extension-line-by-line&#34;&gt;写了一篇关于编写扩展的文章&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;正因为如此，Postgres 作为一个优秀的 “默认” 数据库熠熠生辉，我们还看到越来越多的非 Postgres 服务使用 &lt;a href=&#34;https://www.postgresql.org/docs/current/protocol.html&#34;&gt;Postgres 线缆协议&lt;/a&gt; 作为通用的七层协议，以提供客户端兼容性。拥有丰富的生态系统、合理的默认行为，甚至可以用 &lt;a href=&#34;https://pglite.dev/&#34;&gt;Wasm&lt;/a&gt; 跑在浏览器中，这使得它成为一个值得深入理解的数据库。&lt;/p&gt;
&lt;p&gt;花一周时间了解 Postgres 的各种可能性，同时也了解它的一些限制 ——&lt;a href=&#34;https://www.geeksforgeeks.org/multiversion-concurrency-control-mvcc-in-postgresql/&#34;&gt;MVCC&lt;/a&gt; 可能有些任性。用你最喜欢的编程语言实现一个简单的CRUD应用程序，甚至可以尝试构建一个 Postgres 扩展。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-sqlite&#34;&gt;2. SQLite&lt;/h2&gt;
&lt;h3 id=&#34;本地优先数据库&#34;&gt;本地优先数据库&lt;/h3&gt;
&lt;p&gt;离开客户端-服务器模型，我们绕道进入 “嵌入式” 数据库，首先介绍 &lt;a href=&#34;https://www.sqlite.org/index.html&#34;&gt;SQLite&lt;/a&gt;。我将其称为“&lt;a href=&#34;https://www.inkandswitch.com/local-first/&#34;&gt;本地优先&lt;/a&gt;”数据库，因为SQLite数据库与应用程序直接共存。一个更著名的例子是&lt;a href=&#34;https://www.whatsapp.com/&#34;&gt;WhatsApp&lt;/a&gt;，它将聊天记录存储为设备上的本地 SQLite 数据库。&lt;a href=&#34;https://signal.org/&#34;&gt;Signal&lt;/a&gt; 也是如此。&lt;/p&gt;
&lt;p&gt;除此之外，我们开始看到更多 SQLite 的创新玩法，而不仅仅是将其当成一个本地ACID数据库。像 &lt;a href=&#34;https://litestream.io/&#34;&gt;Litestream&lt;/a&gt; 这样的工具提供了流式备份的能力， &lt;a href=&#34;https://fly.io/docs/litefs/&#34;&gt;LiteFS&lt;/a&gt; 提供了分布式访问的能力，这让我们可以设计出更有趣的拓扑架构。像&lt;a href=&#34;https://github.com/vlcn-io/cr-sqlite&#34;&gt;CR-SQLite&lt;/a&gt; 这样的扩展允许使用 &lt;a href=&#34;https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type&#34;&gt;CRDTs&lt;/a&gt;，以避免在合并变更集时需要冲突解决，正如 &lt;a href=&#34;https://github.com/superfly/corrosion&#34;&gt;Corrosion&lt;/a&gt; 的例子一样。&lt;/p&gt;
&lt;p&gt;得益于&lt;a href=&#34;https://rubyonrails.org/2024/9/27/rails-8-beta1-no-paas-required&#34;&gt;Ruby on Rails 8.0&lt;/a&gt;，SQLite也迎来了一个小型复兴 ——37signals 全面投入 SQLite，构建了一系列 Rails 模块，如 &lt;a href=&#34;https://github.com/rails/solid_queue&#34;&gt;Solid Queue&lt;/a&gt;，并通过&lt;code&gt;database.yml&lt;/code&gt;配置 Rails 以操作多个 SQLite 数据库。&lt;a href=&#34;https://newsletter.pragmaticengineer.com/p/bluesky?open=false#%C2%A7sqlite&#34;&gt;Bluesky&lt;/a&gt; 使用SQLite作为个人数据服务器 —— 每个用户都有自己的 SQLite 数据库。&lt;/p&gt;
&lt;p&gt;花一周时间使用 SQLite ，探索一下本地优先架构，你甚至可以研究下是否能将使用 Postgres 的客户端-服务器模型迁移到只使用 SQLite 的模式上。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-duckdb&#34;&gt;3. DuckDB&lt;/h2&gt;
&lt;h3 id=&#34;万能查询数据库&#34;&gt;万能查询数据库&lt;/h3&gt;
&lt;p&gt;接下来是另一个嵌入式数据库，&lt;a href=&#34;https://duckdb.org/&#34;&gt;DuckDB&lt;/a&gt;。与SQLite类似，DuckDB旨在成为一个内嵌于进程的数据库系统，但更侧重于在线分析处理（OLAP）而非在线事务处理（OLTP）。&lt;/p&gt;
&lt;p&gt;DuckDB 的亮点在于它作为一个“万能查询”数据库，使用 SQL 作为首选方言。它可以原生地从 CSV、TSV、JSON ，甚至像 Parquet 这样的格式中导入数据 —— 看看 &lt;a href=&#34;https://duckdb.org/docs/data/data_sources.html&#34;&gt;DuckDB的数据源列表&lt;/a&gt; 支持的数据源列表吧！这赋予了它极大的灵活性 —— 不妨看看 &lt;a href=&#34;https://motherduck.com/blog/how-to-extract-analytics-from-bluesky/&#34;&gt;查询Bluesky火焰管道的这个示例&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;与 Postgres 类似，DuckDB 也有 &lt;a href=&#34;https://duckdb.org/docs/extensions/overview&#34;&gt;扩展&lt;/a&gt;，尽管生态系统没有那么丰富 —— 毕竟DuckDB还相对年轻。许多社区贡献的扩展可以在&lt;a href=&#34;https://duckdb.org/community_extensions/list_of_extensions&#34;&gt;社区扩展列表&lt;/a&gt;中找到，我特别喜欢&lt;a href=&#34;https://duckdb.org/community_extensions/extensions/gsheets.html&#34;&gt;&lt;code&gt;gsheets&lt;/code&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;花一周时间使用DuckDB进行一些数据分析和处理——无论是通过 Python Notebook，还是像&lt;a href=&#34;https://evidence.dev/&#34;&gt;Evidence&lt;/a&gt;这样的工具，甚至看看它如何与SQLite的“本地优先”方法结合，将SQLite数据库的分析查询卸载到DuckDB，毕竟 DuckDB 也&lt;a href=&#34;https://duckdb.org/docs/guides/database_integration/sqlite.html&#34;&gt;可以读取SQLite数据&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-clickhouse&#34;&gt;4. ClickHouse&lt;/h2&gt;
&lt;h3 id=&#34;列式数据库&#34;&gt;列式数据库&lt;/h3&gt;
&lt;p&gt;离开嵌入式数据库领域，但继续看看分析领域，我们会遇上 &lt;a href=&#34;https://clickhouse.com/&#34;&gt;ClickHouse&lt;/a&gt;。如果我只能选择两种数据库，我会非常乐意只用 Postgres 和 ClickHouse——前者用于OLTP，后者用于OLAP。&lt;/p&gt;
&lt;p&gt;ClickHouse 专注于分析工作负载，并且通过&lt;a href=&#34;https://clickhouse.com/docs/en/architecture/horizontal-scaling&#34;&gt;横向扩展&lt;/a&gt;和分片存储，支持非常高的摄取率。它还支持&lt;a href=&#34;https://clickhouse.com/docs/en/guides/separation-storage-compute&#34;&gt;分层存储&lt;/a&gt;，允许你将“热”数据和“冷”数据分开—— &lt;a href=&#34;https://docs.gitlab.com/ee/development/database/clickhouse/tiered_storage.html&#34;&gt;GitLab&lt;/a&gt;对此有相当详尽的文档。&lt;/p&gt;
&lt;p&gt;当你需要在一个 DuckDB 吃不下的大数据集上运行分析查询，或者需要 “实时” 分析时，ClickHouse 会有优势。关于这些数据集已经有很多 “Benchmarketing”（打榜营销）了，所以我就不再赘述了。&lt;/p&gt;
&lt;p&gt;我建议你了解 ClickHouse 的另一个原因是它的操作体验极佳 —— 部署、扩展、备份等都有&lt;a href=&#34;https://clickhouse.com/docs/en/architecture/cluster-deployment&#34;&gt;详尽的文档&lt;/a&gt;——甚至包括设置 &lt;a href=&#34;https://clickhouse.com/docs/en/operations/tips&#34;&gt;合适的 CPU Governor&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;花一周时间探索一些更大的分析数据集，或者将上面 DuckDB 分析转换为 ClickHouse 部署。ClickHouse 还有一个嵌入式版本 —— &lt;a href=&#34;https://clickhouse.com/docs/en/chdb&#34;&gt;chDB&lt;/a&gt;—— 可以提供更直接的对比。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-foundationdb&#34;&gt;5. FoundationDB&lt;/h2&gt;
&lt;h3 id=&#34;分层数据库&#34;&gt;分层数据库&lt;/h3&gt;
&lt;p&gt;现在我们进入了这个列表中的 “脑洞大开” 部分，&lt;a href=&#34;https://www.foundationdb.org/&#34;&gt;FoundationDB&lt;/a&gt; 登场。可以说，FoundationDB 不是一个数据库，而是数据库的基础组件。被 Apple、Snowflake 和 &lt;a href=&#34;https://www.tigrisdata.com/blog/building-a-database-using-foundationdb/&#34;&gt;Tigris Data&lt;/a&gt; 等公司用于生产环境，FoundationDB 值得你花点时间，因为它在键值存储世界中相当独特。&lt;/p&gt;
&lt;p&gt;是的，它是一个有序的键值存储，但这并不是它有趣的点。乍看它有一些奇特的&lt;a href=&#34;https://apple.github.io/foundationdb/known-limitations.html&#34;&gt;限制&lt;/a&gt;——例如事务不能影响超过10MB 以上的数据，事务首次读取后必须在五秒内结束。但正如他们所说，限制让我们自由。通过施加这些限制，它可以在非常大的规模上实现完整的 ACID 事务—— 我知道有超过 100 TiB 的集群在运行。&lt;/p&gt;
&lt;p&gt;FoundationDB 针对特定的工作负载而设计，并使用仿真方法试进行了&lt;a href=&#34;https://apple.github.io/foundationdb/testing.html&#34;&gt;广泛地测试&lt;/a&gt;，这种测试方法被其他技术采纳，包括本列表中的另一个数据库和由一些前 FoundationDB 成员创立的 &lt;a href=&#34;https://www.antithesis.com/&#34;&gt;Antithesis&lt;/a&gt;。关于这一部分请参阅 &lt;a href=&#34;https://sled.rs/simulation.html&#34;&gt;Tyler Neely&lt;/a&gt; 和 &lt;a href=&#34;https://notes.eatonphil.com/2024-08-20-deterministic-simulation-testing.html&#34;&gt;PhilEaton&lt;/a&gt; 的相关笔记。&lt;/p&gt;
&lt;p&gt;如前所述，FoundationDB 具有一些非常特定的语义，需要一些时间来适应——他们的 &lt;a href=&#34;https://apple.github.io/foundationdb/features.html&#34;&gt;特性&lt;/a&gt; 文档和 &lt;a href=&#34;https://apple.github.io/foundationdb/anti-features.html&#34;&gt;反特性&lt;/a&gt; （不打算在数据库中提供的功能）文档值得去了解，以理解他们试图解决的问题。&lt;/p&gt;
&lt;p&gt;但为什么它是“分层”数据库？因为它提出了&lt;a href=&#34;https://apple.github.io/foundationdb/layer-concept.html&#34;&gt;分层的概念&lt;/a&gt;，而不是选择将存储引擎与数据模型耦合在一起，而是设计了一个足够灵活的存储引擎，可以将其功能重新映射到不同的层面上。&lt;a href=&#34;https://www.tigrisdata.com/blog/data-layer-foundationdb/&#34;&gt;Tigris Data&lt;/a&gt;有一篇关于构建此类层的优秀文章，FoundationDB 组织还有一些示例，如 &lt;a href=&#34;https://github.com/FoundationDB/fdb-record-layer&#34;&gt;记录层&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/FoundationDB/fdb-document-layer&#34;&gt;文档层&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;花一周时间浏览 &lt;a href=&#34;https://apple.github.io/foundationdb/tutorials.html&#34;&gt;教程&lt;/a&gt;，思考如何使用FoundationDB替代像 &lt;a href=&#34;https://rocksdb.org/&#34;&gt;RocksDB&lt;/a&gt; 这样的数据库。也许可以看看一些 &lt;a href=&#34;https://apple.github.io/foundationdb/design-recipes.html&#34;&gt;设计方案&lt;/a&gt; 并阅读 &lt;a href=&#34;https://www.foundationdb.org/files/fdb-paper.pdf&#34;&gt;论文&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;6-tigerbeetle&#34;&gt;6. TigerBeetle&lt;/h2&gt;
&lt;h3 id=&#34;极致正确数据库&#34;&gt;极致正确数据库&lt;/h3&gt;
&lt;p&gt;继确定性仿真测试之后，&lt;a href=&#34;https://tigerbeetle.com/&#34;&gt;TigerBeetle&lt;/a&gt; 打破了先前数据库的模式，因为它明确表示自己 &lt;strong&gt;不是&lt;/strong&gt;一个通用数据库 —— 它完全专注于金融事务场景。&lt;/p&gt;
&lt;p&gt;为什么值得一看？单一用途的数据库很少见，而像 TigerBeetle 这样痴迷于正确性的数据库更是稀有，尤其是考虑到它是开源的。它们包含了从 &lt;a href=&#34;https://en.wikipedia.org/wiki/The_Power_of_10:_Rules_for_Developing_Safety-Critical_Code&#34;&gt;NASA的十律&lt;/a&gt; 和 &lt;a href=&#34;https://www.usenix.org/conference/fast18/presentation/alagappan&#34;&gt;协议感知恢复&lt;/a&gt; 到严格的串行化和  Direct I/O 以避免内核页面缓存问题，这一切的一切真是 &lt;strong&gt;非常&lt;/strong&gt; 令人印象深刻——看看他们的 &lt;a href=&#34;https://github.com/tigerbeetle/tigerbeetle/blob/a43f2205f5335cb8f56d6e8bfcc6b2d99a4fc4a4/docs/about/safety.md&#34;&gt;安全文档&lt;/a&gt; 和他们称之为 Tiger Style 的&lt;a href=&#34;https://github.com/tigerbeetle/tigerbeetle/blob/a43f2205f5335cb8f56d6e8bfcc6b2d99a4fc4a4/docs/TIGER_STYLE.md&#34;&gt;编程方法&lt;/a&gt; 吧！&lt;/p&gt;
&lt;p&gt;另一个有趣的点是，TigerBeetle是用 &lt;a href=&#34;https://ziglang.org/&#34;&gt;Zig&lt;/a&gt; 编写的——这是一门相对新兴的系统编程语言，但显然与 TigerBeetle 团队的目标非常契合。&lt;/p&gt;
&lt;p&gt;花一周时间在本地部署的 TigerBeetle 中建模你的金融账户——按照 &lt;a href=&#34;https://docs.tigerbeetle.com/quick-start&#34;&gt;快速入门&lt;/a&gt; 操作，并看看&lt;a href=&#34;https://docs.tigerbeetle.com/coding/system-architecture&#34;&gt;系统架构&lt;/a&gt;文档，了解如何将其与上述更通用的数据库结合使用。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;7-cockroachdb&#34;&gt;7. CockroachDB&lt;/h2&gt;
&lt;h3 id=&#34;全球分布数据库&#34;&gt;全球分布数据库&lt;/h3&gt;
&lt;p&gt;最后，我们回到了起点。在最后一个位置上，我有点纠结。我最初的想法是 &lt;a href=&#34;https://valkey.io/&#34;&gt;Valkey&lt;/a&gt;，但 FoundationDB 已经满足了键值存储的需求。我还考虑过图数据库，或者像 &lt;a href=&#34;https://www.scylladb.com/&#34;&gt;ScyllaDB&lt;/a&gt; 或 &lt;a href=&#34;https://cassandra.apache.org/_/index.html&#34;&gt;Cassandra&lt;/a&gt; 这样的数据库。我还考虑过 &lt;a href=&#34;https://aws.amazon.com/dynamodb/&#34;&gt;DynamoDB&lt;/a&gt;，但无法本地/免费运行让我打消了这个想法。&lt;/p&gt;
&lt;p&gt;最终，我决定以一个全球分布式数据库结束 —— &lt;a href=&#34;https://www.cockroachlabs.com/&#34;&gt;CockroachDB&lt;/a&gt;。它兼容 Postgres 线缆协议，并继承了前面讨论的一些有趣特性——大规模横向扩展、强一致性——还拥有自己的一些有趣功能。&lt;/p&gt;
&lt;p&gt;CockroachDB 实现了跨多个地理区域的数据库伸缩能力，生态位与 Google &lt;a href=&#34;http://static.googleusercontent.com/media/research.google.com/en//archive/spanner-osdi2012.pdf&#34;&gt;Spanner&lt;/a&gt; 系统重叠，但 Spanner 依赖原子钟和GPS时钟进行极其精确的时间同步，然而普通硬件没有这样的奢侈配置，因此 CockroachDB 有一些&lt;a href=&#34;https://www.cockroachlabs.com/blog/living-without-atomic-clocks/#How-does-CockroachDB-choose-transaction-timestamps?&#34;&gt;巧妙的解决方案&lt;/a&gt;，通过重试或延迟读取以应对 NTP 时钟同步延迟，节点之间还会比较时钟漂移，如果超过最大偏移量则会终止成员。&lt;/p&gt;
&lt;p&gt;CockroachDB 的另一个有趣特性是如何使用&lt;a href=&#34;https://www.cockroachlabs.com/docs/stable/multiregion-overview&#34;&gt;多区域配置&lt;/a&gt;，包括&lt;a href=&#34;https://www.cockroachlabs.com/docs/stable/table-localities&#34;&gt;表的本地性&lt;/a&gt;，根据你想要的读写利弊权衡提供不同的选项。花一周时间在你选择的语言和框架中重新实现 &lt;a href=&#34;https://www.cockroachlabs.com/docs/v24.3/movr&#34;&gt;&lt;code&gt;movr&lt;/code&gt;&lt;/a&gt; 示例吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;我们探索了许多不同的数据库，这些数据库都被地球上一些最大的公司在生产环境中使用，希望这能让你接触到一些之前不熟悉的技术。带着这些知识，去解决有趣的问题吧！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;老冯评论&#34;&gt;老冯评论&lt;/h2&gt;
&lt;p&gt;在 2013 年有一本书叫《七周七数据库》。那本书介绍了当时的 7 种 “新生（或者重生）” 的数据库技术，给我留下了印象。12 年后，这个系列又开始有更新了。&lt;/p&gt;
&lt;p&gt;回头看看当年的七数据库，除了原本的 “锤子” PostgreSQL 还在，其他的数据库都已经物是人非了。而 PostgreSQL 已经从 “锤子” 成为了 “枯燥数据库之王” —— 成为了不会翻车的 “默认数据库”。&lt;/p&gt;
&lt;p&gt;在这个列表中的数据库，基本都是我已经实践过或者感兴趣/有好感的对象。当然 ClickHouse 除外，CK 不错，但我觉得 DuckDB 以及其与 PostgreSQL 的组合有潜力把 CK 给拱翻，再加上是 MySQL 协议兼容生态，所以对它确实没有什么兴趣。如果让我来设计这份名单，我大概会把 CK 换成 Supabase 或 Neon 中的一个。&lt;/p&gt;
&lt;p&gt;我认为作者非常精准的把握了数据库技术发展的趋势，我高度赞同他对数据库技术的选择。实际上在这七个数据库中，我已经深入涉猎了其中三个。Pigsty 本身是一个高可用的 PostgreSQL 发行版，里面也整合了 DuckDB，以及 DuckDB 缝合的PG扩展。Tigerbettle 我也做好了 RPM/DEB 包，作为专业版中默认下载的金融事务专用数据库。&lt;/p&gt;
&lt;p&gt;另外两个数据库，正在我的整合 TODOLIST 中，SQLite 除了 FDW，下一步就是把 ElectricSQL 给弄进来；提供本地 PG 与远端 SQLite / PGLite 的同步能力；CockroachDB 则一直在我的 TODOLIST 中，准备一有空闲就做个部署支持。FoundationDB 是我感兴趣的对象，下一个我愿意花时间深入研究的数据库不出意料会是这个。&lt;/p&gt;
&lt;p&gt;总的来说，我认为这些技术代表着领域前沿的发展趋势。如果让我设想一下十年后的格局，那么大概会是这样的： FoundationDB，TigerBeetle，CockRoachDB 能有自己的小众基本盘生态位。DuckDB 大概会在分析领域大放异彩，SQLite 会在本地优先的端侧继续攻城略地，而 PostgreSQL 会从 “默认数据库” 变成无处不在的的  “Linux 内核”，数据库领域的主旋律变成 Neon，Supabase，Vercel，RDS，Pigsty 这样 PostgreSQL 发行版竞争的战场。&lt;/p&gt;
&lt;p&gt;毕竟，PostgreSQL 吞噬数据库世界可不只是说说而已，PostgreSQL生态的公司几乎拿光了这两年资本市场数据库领域的钱，早就有无数真金白银用脚投票押注上去了。当然，未来到底如何，还是让我们拭目以待吧。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 数据库老司机：文章导航</title>
      <link>/zh/blog/db/guru/</link>
      <pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/guru/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/guru/featured_hu02aa61ae1d9de35cbe238d2676170cb9_539965_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;h3 id=&#34;国产信创篇&#34;&gt;国产信创篇&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-11-18 &lt;a href=&#34;https://mp.weixin.qq.com/s/MrRsK5lqZsCZwCUnnO1VMQ&#34;&gt;这么吹国产数据库，听的尴尬癌都要犯了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-10-25 &lt;a href=&#34;https://mp.weixin.qq.com/s/IcmXCMyflqGlAPA8vFzyyA&#34;&gt;开源皇帝Linus清洗整风&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-10-01 &lt;a href=&#34;https://mp.weixin.qq.com/s/IeYwrKHfgxLkZBBPS3Ai8A&#34;&gt;第二批数据库国测名单：国产化来了怎么办？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-07-15 &lt;a href=&#34;https://mp.weixin.qq.com/s/uccjOkAR1zgur6tftHkzMg&#34;&gt;机场出租车恶性循环与国产数据库怪圈&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-25 &lt;a href=&#34;https://mp.weixin.qq.com/s/AqcYpOgVj91JnkB1B3s4sA&#34;&gt;国产数据库到底能不能打？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-11 &lt;a href=&#34;https://mp.weixin.qq.com/s/aLXC7f2iYUfATNWsnyotkA&#34;&gt;国产数据库是大炼钢铁吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/79_PnX-a5iSfDMgz_VUx5A&#34;&gt;中国对PostgreSQL的贡献约等于零吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/vh1JE_BdaLetWtt5vvPDDw&#34;&gt;数据库真被卡脖子了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-10-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/xHG8OURTYlmnQTorFkzioA&#34;&gt;EL系操作系统发行版哪家强？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-08-31 &lt;a href=&#34;https://mp.weixin.qq.com/s/hWbcc9cMM9qTjPJ0m6G0Kg&#34;&gt;基础软件到底需要什么样的自主可控？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;行业洞察篇&#34;&gt;行业洞察篇&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-12-03 &lt;a href=&#34;https://mp.weixin.qq.com/s/d8pEo6aOoEJVbrElXc0TCQ&#34;&gt;七周七数据库 @ 2025&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-21 &lt;a href=&#34;https://mp.weixin.qq.com/s/0Y17J-opjq1fceRi8777Xg&#34;&gt;面向未来数据库的现代硬件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/E0MtNxPVMQ4PAkIFmispTw&#34;&gt;20刀好兄弟PolarDB：论数据库该卖什么价？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-13 &lt;a href=&#34;https://mp.weixin.qq.com/s/TJk9TUW7xsEglhEK_qYi-w&#34;&gt;谁整合好DuckDB，谁赢得OLAP数据库世界&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-22 &lt;a href=&#34;https://mp.weixin.qq.com/s/0eBZ4zyX6XjBQO0GqlANnw&#34;&gt;向量数据库凉了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/1OSRcBfd58s0tgZTUZHB9g&#34;&gt;重新拿回计算机硬件的红利&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-04-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/-eaCoZR9Z5srQ-1YZm1QJA&#34;&gt;分布式数据库是伪需求吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-03-29 &lt;a href=&#34;https://mp.weixin.qq.com/s/1xR92Z67kvvj2_NpUMie1Q&#34;&gt;数据库需求层次金字塔&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dbards篇&#34;&gt;DBA/RDS篇&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-09-07 &lt;a href=&#34;https://mp.weixin.qq.com/s/Yxyir8kjRDUZwkkE_dscZQ&#34;&gt;先优化碳基BIO核，再优化硅基CPU核&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-12-05 &lt;a href=&#34;https://mp.weixin.qq.com/s/4a8Qy4O80xqsnytC4l9lRg&#34;&gt;数据库应该放入K8S里吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-12-04 &lt;a href=&#34;https://mp.weixin.qq.com/s/kFftay1IokBDqyMuArqOpg&#34;&gt;把数据库放入Docker是一个好主意吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-01-30 &lt;a href=&#34;https://mp.weixin.qq.com/s/c8bpK4o3H7-EyRqVdNDndQ&#34;&gt;云数据库是不是智商税&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2022-05-16 &lt;a href=&#34;https://mp.weixin.qq.com/s/AGEW1iHQkQy4NQyYC2GonQ&#34;&gt;云RDS：从删库到跑路&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-02-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/BcsaChZ-PHDEy9u5bOmMJA&#34;&gt;DBA会被云淘汰吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-03-01 &lt;a href=&#34;https://mp.weixin.qq.com/s/CMRrqI2yBWlNbACHpNgL1g&#34;&gt;驳《再论为什么你不应该招DBA》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-01-31 &lt;a href=&#34;https://mp.weixin.qq.com/s/PqCD80H927s0yJrBr4QQqw&#34;&gt;你怎么还在招聘DBA?&lt;/a&gt; 马工&lt;/li&gt;
&lt;li&gt;2022-05-10 &lt;a href=&#34;https://mp.weixin.qq.com/s/Py3o31w3db5E9FsviAZeCA&#34;&gt;DBA还是一份好工作吗？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pg生态篇&#34;&gt;PG生态篇&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-11-30 &lt;a href=&#34;https://mp.weixin.qq.com/s/3uD9sxCg-lI1MlOg3NacvQ&#34;&gt;你为什么不用连接池？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-07-25 &lt;a href=&#34;https://mp.weixin.qq.com/s/VD_o1HIUVQHmHGcAS4UNwA&#34;&gt;StackOverflow 2024调研：PostgreSQL已经超神了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-24 &lt;a href=&#34;https://mp.weixin.qq.com/s/qNcqGHL-wVTSB7Kxko2eNw&#34;&gt;PostgreSQL会修改开源许可证吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-05-16 &lt;a href=&#34;https://mp.weixin.qq.com/s/olTWUG0p0DqJYHVOqn_wcQ&#34;&gt;为什么PostgreSQL是未来数据的基石？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-16 &lt;a href=&#34;https://mp.weixin.qq.com/s/AMQ8eMR8ivpbhAelaJgXEQ&#34;&gt;PostgreSQL is eating the database world&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-04 &lt;a href=&#34;https://mp.weixin.qq.com/s/8_uhRH93oAoHZqoC90DA6g&#34;&gt;PostgreSQL正在吞噬数据库世界&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-02-19 &lt;a href=&#34;https://mp.weixin.qq.com/s/yI06zdqnW5uWnqvKmgM-9g&#34;&gt;技术极简主义：一切皆用Postgres&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-03 &lt;a href=&#34;https://mp.weixin.qq.com/s/8FJfdxiqiWBOgpjCbk6i6A&#34;&gt;2023年度数据库：PostgreSQL (DB-Engine)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2022-08-22 &lt;a href=&#34;https://mp.weixin.qq.com/s/651zXDKGwFy8i0Owrmm-Xg&#34;&gt;PostgreSQL 到底有多强？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2022-07-12 &lt;a href=&#34;https://mp.weixin.qq.com/s/UeNibtbN8JlA1QIlio1mkw&#34;&gt;为什么PostgreSQL是最成功的数据库？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2022-06-24 &lt;a href=&#34;https://mp.weixin.qq.com/s/xcORYy2suzOw50SOaOCodw&#34;&gt;StackOverflow 2022数据库年度调查&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2021-05-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/KBypNeeM4puvzGiKFJ1FmQ&#34;&gt;为什么说PostgreSQL前途无量？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pg发布篇&#34;&gt;PG发布篇&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-11-15 &lt;a href=&#34;https://mp.weixin.qq.com/s/l1BgfLaRKNNEqHyfx33E6A&#34;&gt;不要更新！发布当日叫停：PG也躲不过大翻车&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/54eFghwJhQt_uCmRaJpF0A&#34;&gt;PostgreSQL 12 过保，PG 17 上位&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/Dv3--O0K70Fevz39r3T4Ag&#34;&gt;PostgreSQL神功大成！最全扩展仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-27 &lt;a href=&#34;https://mp.weixin.qq.com/s/oOZIP1CYj4a319YvoT7Y1w&#34;&gt;PostgreSQL 17 发布：摊牌了，我不装了！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-05 &lt;a href=&#34;https://mp.weixin.qq.com/s/cAdqXVlfsOygsyEjZuR9hw&#34;&gt;PostgreSQL 17 RC1 发布！与近期PG新闻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/kl498R4h65J13DgoyrlzdA&#34;&gt;PostgreSQL小版本更新，17beta3，12将EOL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-05-24 &lt;a href=&#34;https://mp.weixin.qq.com/s/3EBoAHWEI6zZ-T0nNQsk4Q&#34;&gt;PostgreSQL 17 Beta1 发布！牙膏管挤爆了！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/NH8UgObijvxKekmP6sXN1Q&#34;&gt;快速掌握PostgreSQL版本新特性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-05 &lt;a href=&#34;https://mp.weixin.qq.com/s/OM8xhIFB3m95T1GCAQm1Ow&#34;&gt;展望PostgreSQL的2024 (Jonathan Katz)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;创业融资篇&#34;&gt;创业融资篇&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-09-26 &lt;a href=&#34;https://mp.weixin.qq.com/s/fi_p3tTZTnwP5XDJrkVbQw&#34;&gt;PG系创业公司Supabase：$80M C轮融资&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-07-31 &lt;a href=&#34;https://mp.weixin.qq.com/s/3RuZ7ite_exxh2XOPB3HCA&#34;&gt;ClickHouse收购PeerDB：这浓眉大眼的也要来搞 PG 了？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-02-18 &lt;a href=&#34;https://mp.weixin.qq.com/s/bx2dRxlrtLcM6AD2qsplQQ&#34;&gt;PG生态新玩家ParadeDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-10-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/gfs8pBJuYjE_wfAvjcak8Q&#34;&gt;FerretDB：假扮成MongoDB的PostgreSQL？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mysql杀手篇&#34;&gt;MySQL杀手篇&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-11-05 &lt;a href=&#34;https://mp.weixin.qq.com/s/xveP91NMYF4NFlIX_JcpYA&#34;&gt;PZ：MySQL还有机会赶上PostgreSQL的势头吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-07-12 &lt;a href=&#34;https://mp.weixin.qq.com/s/LTlR65SY7ZOpPFGH0kUsVg&#34;&gt;MySQL新版恶性Bug，表太多就崩给你看！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-07-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/JgGCn9o2-DNPNqazPZXTtA&#34;&gt;MySQL安魂九霄，PostgreSQL驶向云外&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-06-26 &lt;a href=&#34;https://mp.weixin.qq.com/s/73EVmMRVGBJmGCuoMaUu4Q&#34;&gt;用PG的开发者，年薪比MySQL多赚四成？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-06-20 &lt;a href=&#34;https://mp.weixin.qq.com/s/1zlDPie_bVvP7eO6_uTkSw&#34;&gt;Oracle最终还是杀死了MySQL！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-06-19 &lt;a href=&#34;https://mp.weixin.qq.com/s/nKD00j84R-EcOU1VPL1ibA&#34;&gt;MySQL性能越来越差，Sakila将何去何从？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-12-30 &lt;a href=&#34;https://mp.weixin.qq.com/s/gQZ3Q5JKV8gaBNhc1puPcA&#34;&gt;MySQL的正确性为何如此拉垮？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-08-11 &lt;a href=&#34;https://mp.weixin.qq.com/s/tRNedHlXmp7YfCqd21e5PA&#34;&gt;如何看待 MySQL vs PGSQL 直播闹剧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-08-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/7UvQulQGt9SIhUQasxuEZw&#34;&gt;驳《MySQL：这个星球最成功的数据库》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;其他db篇&#34;&gt;其他DB篇&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-09-04 &lt;a href=&#34;https://mp.weixin.qq.com/s/I3ug7Qv9jz3-uD3x_N1jKw&#34;&gt;MongoDB没有未来：“好营销”救不了烂芒果&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-03 &lt;a href=&#34;https://mp.weixin.qq.com/s/e3_32Neoy5RVRBSozsa_7A&#34;&gt;《黑历史：Mongo》：现由PostgreSQL驱动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/c2TmMo0DflkSUli1BsLthQ&#34;&gt;PostgreSQL可以替换微软SQL Server吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-30 &lt;a href=&#34;https://mp.weixin.qq.com/s/NdeeYn10qQ0xBPL-67IXdQ&#34;&gt;ElasticSearch又重新开源了？？？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-26 &lt;a href=&#34;https://mp.weixin.qq.com/s/W5kOLxeJCIHjnWbIHc1Pzw&#34;&gt;Redis不开源是“开源”之耻，更是公有云之耻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-10-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/gfs8pBJuYjE_wfAvjcak8Q&#34;&gt;FerretDB：假扮成MongoDB的PostgreSQL？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;司机本人篇&#34;&gt;司机本人篇&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-22 &lt;a href=&#34;https://mp.weixin.qq.com/s/bGoILFWfF7ZiIf3EPNxSqw&#34;&gt;GOTC 2024 BTW采访冯若航：Pigsty作者，简化PG管理，推动PG开源社区的中国参与&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-12-31 &lt;a href=&#34;https://mp.weixin.qq.com/s/B35KlM6zeI-m9epfKD8VDQ&#34;&gt;2023总结：三十而立&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-09-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/93QZBS694UQJRTLwHnStPQ&#34;&gt;冯若航：不想当段子手的技术狂，不是一位好的开源创始人&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2022-07-07 &lt;a href=&#34;https://mp.weixin.qq.com/s/I7OA0thv9Dwvj4zoxIOhJQ&#34;&gt;90后，辞职创业，说要卷死云数据库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;数据库老司机专栏原文列表&#34;&gt;数据库老司机专栏原文列表&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2024-12-03 &lt;a href=&#34;https://mp.weixin.qq.com/s/d8pEo6aOoEJVbrElXc0TCQ&#34;&gt;七周七数据库 @ 2025&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-30 &lt;a href=&#34;https://mp.weixin.qq.com/s/3uD9sxCg-lI1MlOg3NacvQ&#34;&gt;你为什么不用连接池？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-26 &lt;a href=&#34;https://mp.weixin.qq.com/s/HJDfcSC8XFL_PkDlxHbqRQ&#34;&gt;创业出海神器 Supabase 自建指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-21 &lt;a href=&#34;https://mp.weixin.qq.com/s/0Y17J-opjq1fceRi8777Xg&#34;&gt;面向未来数据库的现代硬件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-18 &lt;a href=&#34;https://mp.weixin.qq.com/s/MrRsK5lqZsCZwCUnnO1VMQ&#34;&gt;这么吹国产数据库，听的尴尬癌都要犯了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/E0MtNxPVMQ4PAkIFmispTw&#34;&gt;20刀好兄弟PolarDB：论数据库该卖什么价？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-15 &lt;a href=&#34;https://mp.weixin.qq.com/s/l1BgfLaRKNNEqHyfx33E6A&#34;&gt;不要更新！发布当日叫停：PG也躲不过大翻车&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/54eFghwJhQt_uCmRaJpF0A&#34;&gt;PostgreSQL 12 过保，PG 17 上位&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-05 &lt;a href=&#34;https://mp.weixin.qq.com/s/xveP91NMYF4NFlIX_JcpYA&#34;&gt;PZ：MySQL还有机会赶上PostgreSQL的势头吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/Dv3--O0K70Fevz39r3T4Ag&#34;&gt;PostgreSQL神功大成！最全扩展仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-10-28 &lt;a href=&#34;https://mp.weixin.qq.com/s/9BWDCL5yOcyw6_pSn9rqmA&#34;&gt;YC教父Paul Graham：写作者与非写作者&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-10-25 &lt;a href=&#34;https://mp.weixin.qq.com/s/IcmXCMyflqGlAPA8vFzyyA&#34;&gt;开源皇帝Linus清洗整风&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-10-01 &lt;a href=&#34;https://mp.weixin.qq.com/s/IeYwrKHfgxLkZBBPS3Ai8A&#34;&gt;第二批数据库国测名单：国产化来了怎么办？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-27 &lt;a href=&#34;https://mp.weixin.qq.com/s/oOZIP1CYj4a319YvoT7Y1w&#34;&gt;PostgreSQL 17 发布：摊牌了，我不装了！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-26 &lt;a href=&#34;https://mp.weixin.qq.com/s/fi_p3tTZTnwP5XDJrkVbQw&#34;&gt;PG系创业公司Supabase：$80M C轮融资&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-07 &lt;a href=&#34;https://mp.weixin.qq.com/s/Yxyir8kjRDUZwkkE_dscZQ&#34;&gt;先优化碳基BIO核，再优化硅基CPU核&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-05 &lt;a href=&#34;https://mp.weixin.qq.com/s/cAdqXVlfsOygsyEjZuR9hw&#34;&gt;PostgreSQL 17 RC1 发布！与近期PG新闻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-04 &lt;a href=&#34;https://mp.weixin.qq.com/s/I3ug7Qv9jz3-uD3x_N1jKw&#34;&gt;MongoDB没有未来：“好营销”救不了烂芒果&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-03 &lt;a href=&#34;https://mp.weixin.qq.com/s/e3_32Neoy5RVRBSozsa_7A&#34;&gt;《黑历史：Mongo》：现由PostgreSQL驱动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/c2TmMo0DflkSUli1BsLthQ&#34;&gt;PostgreSQL可以替换微软SQL Server吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-30 &lt;a href=&#34;https://mp.weixin.qq.com/s/NdeeYn10qQ0xBPL-67IXdQ&#34;&gt;ElasticSearch又重新开源了？？？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-22 &lt;a href=&#34;https://mp.weixin.qq.com/s/bGoILFWfF7ZiIf3EPNxSqw&#34;&gt;GOTC 2024 BTW采访冯若航：Pigsty作者，简化PG管理，推动PG开源社区的中国参与&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-13 &lt;a href=&#34;https://mp.weixin.qq.com/s/TJk9TUW7xsEglhEK_qYi-w&#34;&gt;谁整合好DuckDB，谁赢得OLAP数据库世界&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/kl498R4h65J13DgoyrlzdA&#34;&gt;PostgreSQL小版本更新，17beta3，12将EOL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-06 &lt;a href=&#34;https://mp.weixin.qq.com/s/MY-ZFrc8QfsenrEvD8hz2w&#34;&gt;PG隆中对，一个PG三个核，一个好汉三百个帮&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-03 &lt;a href=&#34;https://mp.weixin.qq.com/s/bwiVnU9UUkMP5ai1NUyM4g&#34;&gt;最近在憋大招，数据库全能王真的要来了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-07-31 &lt;a href=&#34;https://mp.weixin.qq.com/s/3RuZ7ite_exxh2XOPB3HCA&#34;&gt;ClickHouse收购PeerDB：这浓眉大眼的也要来搞 PG 了？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-07-25 &lt;a href=&#34;https://mp.weixin.qq.com/s/VD_o1HIUVQHmHGcAS4UNwA&#34;&gt;StackOverflow 2024调研：PostgreSQL已经超神了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-07-15 &lt;a href=&#34;https://mp.weixin.qq.com/s/uccjOkAR1zgur6tftHkzMg&#34;&gt;机场出租车恶性循环与国产数据库怪圈&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-07-12 &lt;a href=&#34;https://mp.weixin.qq.com/s/LTlR65SY7ZOpPFGH0kUsVg&#34;&gt;MySQL新版恶性Bug，表太多就崩给你看！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-07-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/JgGCn9o2-DNPNqazPZXTtA&#34;&gt;MySQL安魂九霄，PostgreSQL驶向云外&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-06-28 &lt;a href=&#34;https://mp.weixin.qq.com/s/aVFI1vC9goekD-XYAAj0ug&#34;&gt;CentOS 7过保了，换什么OS发行版更好？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-06-26 &lt;a href=&#34;https://mp.weixin.qq.com/s/73EVmMRVGBJmGCuoMaUu4Q&#34;&gt;用PG的开发者，年薪比MySQL多赚四成？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-06-20 &lt;a href=&#34;https://mp.weixin.qq.com/s/1zlDPie_bVvP7eO6_uTkSw&#34;&gt;Oracle最终还是杀死了MySQL！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-06-19 &lt;a href=&#34;https://mp.weixin.qq.com/s/nKD00j84R-EcOU1VPL1ibA&#34;&gt;MySQL性能越来越差，Sakila将何去何从？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-06-18 &lt;a href=&#34;https://mp.weixin.qq.com/s/dW3byoQkEIR0_EzWxobrWg&#34;&gt;让PG停摆一周的大会：PGCon.Dev参会记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-05-29 &lt;a href=&#34;https://mp.weixin.qq.com/s/C0YyE52KbLLbnG1C2FqGRg&#34;&gt;PGCon.Dev 2024 温哥华扩展生态峰会小记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-05-24 &lt;a href=&#34;https://mp.weixin.qq.com/s/3EBoAHWEI6zZ-T0nNQsk4Q&#34;&gt;PostgreSQL 17 Beta1 发布！牙膏管挤爆了！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-05-16 &lt;a href=&#34;https://mp.weixin.qq.com/s/olTWUG0p0DqJYHVOqn_wcQ&#34;&gt;为什么PostgreSQL是未来数据的基石？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-25 &lt;a href=&#34;https://mp.weixin.qq.com/s/AqcYpOgVj91JnkB1B3s4sA&#34;&gt;国产数据库到底能不能打？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-28 &lt;a href=&#34;https://mp.weixin.qq.com/s/DizvD5EYT3atP3I2CdobFw&#34;&gt;PostgreSQL 主要贡献者 Simon Riggs 因坠机去世&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-26 &lt;a href=&#34;https://mp.weixin.qq.com/s/W5kOLxeJCIHjnWbIHc1Pzw&#34;&gt;Redis不开源是“开源”之耻，更是公有云之耻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-24 &lt;a href=&#34;https://mp.weixin.qq.com/s/qNcqGHL-wVTSB7Kxko2eNw&#34;&gt;PostgreSQL会修改开源许可证吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-16 &lt;a href=&#34;https://mp.weixin.qq.com/s/AMQ8eMR8ivpbhAelaJgXEQ&#34;&gt;PostgreSQL is eating the database world&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/EH7RPB6ImfMHXhOMU7P5Qg&#34;&gt;RDS阉掉了PostgreSQL的灵魂&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-04 &lt;a href=&#34;https://mp.weixin.qq.com/s/8_uhRH93oAoHZqoC90DA6g&#34;&gt;PostgreSQL正在吞噬数据库世界&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-02-19 &lt;a href=&#34;https://mp.weixin.qq.com/s/yI06zdqnW5uWnqvKmgM-9g&#34;&gt;技术极简主义：一切皆用Postgres&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-02-18 &lt;a href=&#34;https://mp.weixin.qq.com/s/bx2dRxlrtLcM6AD2qsplQQ&#34;&gt;PG生态新玩家ParadeDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-02-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/BcsaChZ-PHDEy9u5bOmMJA&#34;&gt;DBA会被云淘汰吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/NH8UgObijvxKekmP6sXN1Q&#34;&gt;快速掌握PostgreSQL版本新特性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-13 &lt;a href=&#34;https://mp.weixin.qq.com/s/iH34payWSE_GROsq-9MN8g&#34;&gt;令人惊叹的PostgreSQL可伸缩性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-11 &lt;a href=&#34;https://mp.weixin.qq.com/s/aLXC7f2iYUfATNWsnyotkA&#34;&gt;国产数据库是大炼钢铁吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/79_PnX-a5iSfDMgz_VUx5A&#34;&gt;中国对PostgreSQL的贡献约等于零吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-05 &lt;a href=&#34;https://mp.weixin.qq.com/s/OM8xhIFB3m95T1GCAQm1Ow&#34;&gt;展望PostgreSQL的2024 (Jonathan Katz)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-03 &lt;a href=&#34;https://mp.weixin.qq.com/s/8FJfdxiqiWBOgpjCbk6i6A&#34;&gt;2023年度数据库：PostgreSQL (DB-Engine)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-12-31 &lt;a href=&#34;https://mp.weixin.qq.com/s/B35KlM6zeI-m9epfKD8VDQ&#34;&gt;2023总结：三十而立&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-12-30 &lt;a href=&#34;https://mp.weixin.qq.com/s/gQZ3Q5JKV8gaBNhc1puPcA&#34;&gt;MySQL的正确性为何如此拉垮？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-12-05 &lt;a href=&#34;https://mp.weixin.qq.com/s/4a8Qy4O80xqsnytC4l9lRg&#34;&gt;数据库应该放入K8S里吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-12-04 &lt;a href=&#34;https://mp.weixin.qq.com/s/kFftay1IokBDqyMuArqOpg&#34;&gt;把数据库放入Docker是一个好主意吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-22 &lt;a href=&#34;https://mp.weixin.qq.com/s/0eBZ4zyX6XjBQO0GqlANnw&#34;&gt;向量数据库凉了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/1OSRcBfd58s0tgZTUZHB9g&#34;&gt;重新拿回计算机硬件的红利&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/vh1JE_BdaLetWtt5vvPDDw&#34;&gt;数据库真被卡脖子了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-10-26 &lt;a href=&#34;https://mp.weixin.qq.com/s/VXkpDlUdnKlK3DKtoyg2wA&#34;&gt;PG查询优化：观宏之道&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-10-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/xHG8OURTYlmnQTorFkzioA&#34;&gt;EL系操作系统发行版哪家强？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-10-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/gfs8pBJuYjE_wfAvjcak8Q&#34;&gt;FerretDB：假扮成MongoDB的PostgreSQL？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-09-27 &lt;a href=&#34;https://mp.weixin.qq.com/s/jmlzhktasg06MiA7b4huew&#34;&gt;如何用 pg_filedump 抢救数据？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-09-26 &lt;a href=&#34;https://mp.weixin.qq.com/s/y3qY9eBfOic6tQYOiErIHg&#34;&gt;PGSQL x Pigsty: 数据库全能王来了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-09-10 &lt;a href=&#34;https://mp.weixin.qq.com/s/ynwCz24bRoluVC6ILs_a8g&#34;&gt;PG先写脏页还是先写WAL？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-09-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/93QZBS694UQJRTLwHnStPQ&#34;&gt;冯若航：不想当段子手的技术狂，不是一位好的开源创始人&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-08-31 &lt;a href=&#34;https://mp.weixin.qq.com/s/hWbcc9cMM9qTjPJ0m6G0Kg&#34;&gt;基础软件到底需要什么样的自主可控？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-08-11 &lt;a href=&#34;https://mp.weixin.qq.com/s/tRNedHlXmp7YfCqd21e5PA&#34;&gt;如何看待 MySQL vs PGSQL 直播闹剧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-08-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/7UvQulQGt9SIhUQasxuEZw&#34;&gt;驳《MySQL：这个星球最成功的数据库》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-08-06 &lt;a href=&#34;https://mp.weixin.qq.com/s/BJkbtwl_SPx99GBOzPsJiA&#34;&gt;向量是新的JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-06-27 &lt;a href=&#34;https://mp.weixin.qq.com/s/TH-exGEpt4ZZrlz8fLGLLA&#34;&gt;ISD数据集：分析全球120年气候变化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-05-10 &lt;a href=&#34;https://mp.weixin.qq.com/s/R4jp1uTCiLOLGsiADZ9jxQ&#34;&gt;AI大模型与向量数据库 PGVECTOR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-05-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/Q0OtrpEhF24XN7gwMjbSRA&#34;&gt;技术反思录：正本清源 之 序章&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-05-07 &lt;a href=&#34;https://mp.weixin.qq.com/s/mEmz8pviahEAWy1-SA8vcg&#34;&gt;微服务是不是个蠢主意？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-04-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/-eaCoZR9Z5srQ-1YZm1QJA&#34;&gt;分布式数据库是伪需求吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-04-10 &lt;a href=&#34;https://mp.weixin.qq.com/s/clM2f2f2-EPa4EVBIpznfw&#34;&gt;AI 会有自我意识吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-03-29 &lt;a href=&#34;https://mp.weixin.qq.com/s/1xR92Z67kvvj2_NpUMie1Q&#34;&gt;数据库需求层次金字塔&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-03-01 &lt;a href=&#34;https://mp.weixin.qq.com/s/CMRrqI2yBWlNbACHpNgL1g&#34;&gt;驳《再论为什么你不应该招DBA》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-01-31 &lt;a href=&#34;https://mp.weixin.qq.com/s/LefEAXTcBH-KBJNhXNoc7A&#34;&gt;云数据库是不是杀猪盘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-01-31 &lt;a href=&#34;https://mp.weixin.qq.com/s/PqCD80H927s0yJrBr4QQqw&#34;&gt;你怎么还在招聘DBA?&lt;/a&gt; 马工&lt;/li&gt;
&lt;li&gt;2023-01-30 &lt;a href=&#34;https://mp.weixin.qq.com/s/c8bpK4o3H7-EyRqVdNDndQ&#34;&gt;云数据库是不是智商税&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2022-08-22 &lt;a href=&#34;https://mp.weixin.qq.com/s/651zXDKGwFy8i0Owrmm-Xg&#34;&gt;PostgreSQL 到底有多强？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2022-07-12 &lt;a href=&#34;https://mp.weixin.qq.com/s/UeNibtbN8JlA1QIlio1mkw&#34;&gt;为什么PostgreSQL是最成功的数据库？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2022-07-07 &lt;a href=&#34;https://mp.weixin.qq.com/s/I7OA0thv9Dwvj4zoxIOhJQ&#34;&gt;90后，辞职创业，说要卷死云数据库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2022-06-24 &lt;a href=&#34;https://mp.weixin.qq.com/s/xcORYy2suzOw50SOaOCodw&#34;&gt;StackOverflow 2022数据库年度调查&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2022-05-16 &lt;a href=&#34;https://mp.weixin.qq.com/s/AGEW1iHQkQy4NQyYC2GonQ&#34;&gt;云RDS：从删库到跑路&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2022-05-10 &lt;a href=&#34;https://mp.weixin.qq.com/s/Py3o31w3db5E9FsviAZeCA&#34;&gt;DBA还是一份好工作吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2021-05-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/KBypNeeM4puvzGiKFJ1FmQ&#34;&gt;为什么说PostgreSQL前途无量？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 自建Supabase：创业出海的首选数据库</title>
      <link>/zh/blog/db/supabase/</link>
      <pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/supabase/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/supabase/featured_hu02aa61ae1d9de35cbe238d2676170cb9_445979_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;p&gt;Supabase 非常棒，拥有你自己的 Supabase 那就是棒上加棒！
本文介绍了如何在本地/云端物理机/裸金属/虚拟机上自建企业级 Supabase。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/supabase/#supabase是什么&#34;&gt;Supabase是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/supabase/#为什么要自建supabase&#34;&gt;为什么要自建它？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/supabase/#单节点自建快速上手&#34;&gt;单机自建快速上手&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/supabase/#进阶主题安全加固&#34;&gt;进阶主题：安全加固&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/supabase/#进阶主题域名接入&#34;&gt;进阶主题：域名接入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/supabase/#进阶主题外部对象存储&#34;&gt;进阶主题：外部对象存储&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/supabase/#进阶主题使用smtp&#34;&gt;进阶主题：使用SMTP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/supabase/#进阶主题真高可用&#34;&gt;进阶主题：真·高可用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;supabase是什么&#34;&gt;Supabase是什么？&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://supabase.com/&#34;&gt;Supabase&lt;/a&gt; 是一个开源的 Firebase，是一个 BaaS （Backend as Service）。
Supabase 对 PostgreSQL 进行了封装，并提供了身份认证，消息传递，边缘函数，对象存储，以及基于 PG 数据库模式自动生成的 REST API 与 GraphQL API。&lt;/p&gt;
&lt;p&gt;Supabase 旨在为开发者提供一站式的后端解决方案，减少开发和维护后端基础设施的复杂性，使开发者专注于前端开发和用户体验。
用大白话来说就是：让开发者告别绝大部分后端开发的工作，只需要懂数据库设计与前端即可快速出活！&lt;/p&gt;
&lt;p&gt;目前，Supabase 是 PostgreSQL 生态人气最高的开源项目，在 GitHub 上已经有高达7万4千的Star数。
并且和 Neon，Cloudflare 一起并称为赛博菩萨 —— 因为他们都提供了非常不错的云服务免费计划。
目前，Supabase 和 Neon 已经成为许多初创企业的首选数据库 —— 用起来非常方便，起步还是免费的。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;为什么要自建supabase&#34;&gt;为什么要自建Supabase？&lt;/h2&gt;
&lt;p&gt;小微规模（4c8g）内的 Supabase 云服务&lt;a href=&#34;https://supabase.com/pricing&#34;&gt;极富性价比&lt;/a&gt;，人称赛博菩萨。那么 Supabase 云服务这么香，为什么要自建呢？&lt;/p&gt;
&lt;p&gt;最直观的原因是是我们在《&lt;a href=&#34;/zh/blog/cloud/rds&#34;&gt;云数据库是智商税吗？&lt;/a&gt;》中提到过的：当你的规模超出云计算适用光谱，成本很容易出现爆炸式增长。
而且在当下，足够可靠的&lt;a href=&#34;/zh/blog/cloud/hardware-bonus&#34;&gt;本地企业级 NVMe SSD&lt;/a&gt;在性价比上与云端存储有着三到四个数量级的优势，而自建能更好地利用这一点。&lt;/p&gt;
&lt;p&gt;另一个重要的原因是功能， Supabase 云服务的功能受限 —— &lt;a href=&#34;https://mp.weixin.qq.com/s/EH7RPB6ImfMHXhOMU7P5Qg&#34;&gt;出于与RDS相同的逻辑&lt;/a&gt;，
很多 &lt;a href=&#34;https://ext.pigsty.io/#/list&#34;&gt;&lt;strong&gt;强力PG扩展&lt;/strong&gt;&lt;/a&gt; 因为多租户安全挑战与许可证的原因无法作为云服务提供。
故而尽管PG扩展是 Supabase 的一个核心特色，在云服务上也依然只有 64 个可用扩展，而 Pigsty 提供了多达 &lt;a href=&#34;https://ext.pigsty.io/#/list&#34;&gt;&lt;strong&gt;340&lt;/strong&gt;&lt;/a&gt; 个开箱即用的 PG 扩展。&lt;/p&gt;
&lt;p&gt;此外，尽管 Supabase 虽然旨在提供一个无供应商锁定的 Google Firebase 开源替代，但实际上自建高标准企业级的 Supabase 门槛并不低：
Supabase 内置了一系列由他们自己开发维护的 PG 扩展插件，而这些扩展在 PGDG 官方仓库中并没有提供。
这实际上是某种隐性的供应商锁定，阻止了用户使用除了 supabase/postgres Docker 镜像之外的方式自建。&lt;/p&gt;
&lt;p&gt;Pigsty 解决了这些问题，我们将所有 Supabase 自研与用到的 10 个缺失的扩展打成开箱即用的 RPM/DEB 包，确保它们在所有&lt;a href=&#34;/zh/docs/reference/compatibility&#34;&gt;主流Linux操作系统发行版&lt;/a&gt;上都可用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ext.pigsty.io/#/pg_graphql&#34;&gt;pg_graphql&lt;/a&gt;：提供PG内的GraphQL支持 (RUST)，Rust扩展，由PIGSTY提供&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ext.pigsty.io/#/pg_jsonschema&#34;&gt;pg_jsonschema&lt;/a&gt;：提供JSON Schema校验能力，Rust扩展，由PIGSTY提供&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ext.pigsty.io/#/wrappers&#34;&gt;wrappers&lt;/a&gt;：Supabase提供的外部数据源包装器捆绑包,，Rust扩展，由PIGSTY提供&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ext.pigsty.io/#/index_advisor&#34;&gt;index_advisor&lt;/a&gt;：查询索引建议器，SQL扩展，由PIGSTY提供&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ext.pigsty.io/#/pg_net&#34;&gt;pg_net&lt;/a&gt;：用 SQL 进行异步非阻塞HTTP/HTTPS 请求的扩展 (supabase)，C扩展，由PIGSTY提供&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ext.pigsty.io/#/vault&#34;&gt;vault&lt;/a&gt;：在 Vault 中存储加密凭证的扩展 (supabase)，C扩展，由PIGSTY提供&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ext.pigsty.io/#/pgjwt&#34;&gt;pgjwt&lt;/a&gt;：JSON Web Token API 的PG实现 (supabase)，SQL扩展，由PIGSTY提供&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ext.pigsty.io/#/pgsodium&#34;&gt;pgsodium&lt;/a&gt;：表数据加密存储 TDE，扩展，由PIGSTY提供&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ext.pigsty.io/#/supautils&#34;&gt;supautils&lt;/a&gt;：用于在云环境中确保数据库集群的安全，C扩展，由PIGSTY提供&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ext.pigsty.io/#/plan_filter&#34;&gt;pg_plan_filter&lt;/a&gt;：使用执行计划代价过滤阻止特定查询语句，C扩展，由PIGSTY提供&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们还在 Supabase 中默认安装了以下扩展，您可以参考可用扩展列表启用更多。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- timescaledb postgis pg_graphql pg_jsonschema wrappers pg_search pg_analytics pg_parquet plv8 duckdb_fdw pg_cron pg_timetable pgqr
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- supautils pg_plan_filter passwordcheck plpgsql_check pgaudit pgsodium pg_vault pgjwt pg_ecdsa pg_session_jwt index_advisor
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- pgvector pgvectorscale pg_summarize pg_tiktoken pg_tle pg_stat_monitor hypopg pg_hint_plan pg_http pg_net pg_smtp_client pg_idkit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同时，Pigsty 还会负责好底层&lt;a href=&#34;/zh/docs/concept/ha&#34;&gt;高可用&lt;/a&gt; &lt;a href=&#34;/zh/docs/pgsql&#34;&gt;PostgreSQL&lt;/a&gt; 数据库集群，高可用 &lt;a href=&#34;/zh/docs/minio&#34;&gt;MinIO&lt;/a&gt; 对象存储集群的自动搭建，甚至是 &lt;a href=&#34;/zh/docs/docker&#34;&gt;Docker&lt;/a&gt; 容器底座的部署。
最终，您可以使用 Docker Compose 拉起任意数量的无状态 Supabase 容器集群，并使用外部由 Pigsty 托管的企业级 PostgreSQL 数据库与 MinIO 对象存储，甚至连反向代理的 Nginx 等都已经为您配置准备完毕！&lt;/p&gt;
&lt;p&gt;在这一自建部署架构中，您获得了使用不同内核的自由（PG 12-17），加装340个扩展的自由，扩容与伸缩Supabase/Postgres/MinIO的自由，免于数据库运维的自由，以及告别供应商锁定的自由。
而相比于使用 Supabase 云服务需要付出的代价，不过是准备一（几）台物理机/虚拟机 + 敲几行命令，等候十几分钟的区别。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;单节点自建快速上手&#34;&gt;单节点自建快速上手&lt;/h2&gt;
&lt;p&gt;让我们先从单节点 Supabase 部署开始，我们会在后面进一步介绍多节点高可用部署的方法。&lt;/p&gt;
&lt;p&gt;首先，使用 Pigsty &lt;a href=&#34;/zh/docs/setup/install&#34;&gt;标准安装流程&lt;/a&gt; 安装 Supabase 所需的 MinIO 与 PostgreSQL 实例；
然后额外运行 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/supabase.yml&#34;&gt;&lt;code&gt;supabase.yml&lt;/code&gt;&lt;/a&gt; 完成剩余的工作，
拉起无状态部分的 Supabase 容器，Supabase 就可以使用了（默认端口 &lt;code&gt;8000&lt;/code&gt;/&lt;code&gt;8433&lt;/code&gt;）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; curl -fsSL https://repo.pigsty.io/get &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; bash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./bootstrap          &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 环境检查，自动安装依赖：Ansible&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./configure -c supa  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 重要：请在配置文件中修改密码等关键信息！&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./install.yml        &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 安装 Pigsty，拉起 PGSQL 与 MINIO！&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./supabase.yml       &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 安装 Docker 并拉起 Supabase 无状态部分！&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请在部署 Supabase 前，根据您的实际情况，修改自动生成的 &lt;code&gt;pigsty.yml&lt;/code&gt; 配置文件中的参数（主要是密码！）
如果您只是将其用于本地开发测试，可以先不管这些，我们将在后面介绍如何通过修改配置文件来定制您的 Supabase。&lt;/p&gt;
&lt;p&gt;如果您的配置没有问题，那么大约在 10 分钟后，您就可以在本地网络通过 &lt;code&gt;http://&amp;lt;your_ip_address&amp;gt;:8000&lt;/code&gt; 访问到 Supabase Studio 管理界面了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/692194&#34;&gt;&lt;img alt=&#34;asciicast&#34; src=&#34;https://asciinema.org/a/692194.svg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;检查清单&#34;&gt;检查清单&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 硬件/软件：&lt;a href=&#34;/zh/docs/setup/prepare/&#34;&gt;准备所需的机器资源&lt;/a&gt;：Linux x86_64 服务器一台，全新安装&lt;a href=&#34;/zh/docs/reference/compatibility&#34;&gt;主流 Linux 操作系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 网络/权限：有 &lt;a href=&#34;/zh/docs/setup/prepar/#%E7%AE%A1%E7%90%86%E7%94%A8%E6%88%B7%E5%87%86%E5%A4%87&#34;&gt;ssh&lt;/a&gt; 免密登陆权限，所用用户有&lt;a href=&#34;/zh/docs/setup/prepare/#%E7%AE%A1%E7%90%86%E7%94%A8%E6%88%B7%E5%87%86%E5%A4%87&#34;&gt;免密 sudo 权限&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 确保机器有内网静态IPv4网络地址，并可以访问互联网。中国地区 DockerHub 需要翻墙，需要有可用的代理或镜像站点
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 在 &lt;code&gt;configure&lt;/code&gt; 过程中，请输入节点的内网首要 IP 地址，或直接通过 &lt;code&gt;-i &amp;lt;primary_ip&amp;gt;&lt;/code&gt; 命令行参数指定&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如果您的网络环境无法访问 DockerHub，请指定 &lt;a href=&#34;/zh/docs/docker/param#docker_registry_mirrors&#34;&gt;&lt;code&gt;docker_registry_mirrors&lt;/code&gt;&lt;/a&gt; 使用镜像站 或 &lt;a href=&#34;/zh/docs/reference/param#proxy_env&#34;&gt;&lt;code&gt;proxy_env&lt;/code&gt;&lt;/a&gt; 参数翻墙。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;确保使用了 &lt;a href=&#34;/zh/docs/conf/supa&#34;&gt;&lt;code&gt;supa&lt;/code&gt;&lt;/a&gt; 配置模板，并按需修改了参数
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 您是否修改了所有&lt;a href=&#34;/zh/docs/setup/security#%E5%AF%86%E7%A0%81&#34;&gt;与密码有关的配置参数&lt;/a&gt;？【可选】&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 您是否需要使用外部 SMTP 服务器？是否配置了 &lt;code&gt;supa_config&lt;/code&gt; 中的 SMTP 参数？【可选】&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;中国地区的用户请注意，如果您没有配置好 Docker 镜像站点或代理服务器，那么会有极大概率会翻车在 ./supabase 最后一步的镜像拉取上。我们建议您掌握科学上网技巧，参考 &lt;a href=&#34;/zh/docs/docker/faq/&#34;&gt;Docker 模块 FAQ&lt;/a&gt; 的说明配置镜像或代理。
请注意，我们提供 &lt;a href=&#34;/zh/docs/about/service&#34;&gt;Supabase 自建专门咨询服务&lt;/a&gt;，¥2000 / 例·半小时，购买附赠预制离线安装包，可以无需互联网（自然也无需翻墙）安装，将您的企业级自建 Supabase 安稳扶上马！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;离线软件包使用说明：请在执行安装前，将收到的 &lt;code&gt;pkg.tgz&lt;/code&gt; 放置于 &lt;code&gt;/tmp/pkg.tgz&lt;/code&gt;，将 &lt;code&gt;supabase&lt;/code&gt; 目录整个放置在 &lt;code&gt;/tmp/supabase&lt;/code&gt; 即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改后的配置文件，应该如下所示：&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;对默认生成的配置文件进行修改&lt;/summary&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;children&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# infra 集群，包含 Prometheus &amp;amp; Grafana 监控基础设施&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;infra&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;infra_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# etcd 集群，本例为单节点 Etcd，用于提供 PG 高可用&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;etcd&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;etcd_seq: 1 } }, vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;etcd_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;etcd } }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# minio 集群，单节点 SNSD 的 S3 兼容对象存储&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_seq: 1 } }, vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;minio } }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pg-meta， Supabase 底层实际的 PostgreSQL 数据库&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg-meta&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_seq: 1, pg_role&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;primary } }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg-meta&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_users&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase 使用的角色&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: anon           ,login&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: authenticated  ,login&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: dashboard_user ,login: false ,replication: true ,createdb: true ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: service_role   ,login: false ,bypassrls&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 【注意】如果你要修改 Supabase 业务用户的密码，请在这里统一修改所有用户的密码&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_admin             ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: true   ,roles: [ dbrole_admin ] ,superuser: true ,replication: true ,createdb: true ,createrole: true ,bypassrls&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: authenticator              ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbrole_admin, authenticated ,anon ,service_role ] }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_auth_admin        ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles: [ dbrole_admin ] ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_storage_admin     ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles: [ dbrole_admin, authenticated ,anon ,service_role ] ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_functions_admin   ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles: [ dbrole_admin ] ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_replication_admin ,password: &amp;#39;DBUser.Supa&amp;#39; ,replication: true ,roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbrole_admin ]}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_read_only_user    ,password: &amp;#39;DBUser.Supa&amp;#39; ,bypassrls: true ,roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbrole_readonly, pg_read_all_data ] }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 【注意】 这里定义了 Supabase 使用的底层 Postgres 业务数据库，&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_databases&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;baseline&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase.sql &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 这里的 files/supabase.sql 文件包含了初始化 Supabase 所必需的模式迁移脚本，非常重要！&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;owner&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase_admin  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 这里的数据库所有者，必须是上面定义的 supabase_admin，我们建议使用此用户进行模式变更。&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;comment&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase postgres database&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;schemas&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;extensions ,auth ,realtime ,storage ,graphql_public ,supabase_functions ,_analytics ,_realtime ]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;extensions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;             &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 定义在这里的扩展会默认在数据库中 “创建并启用”&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pgcrypto  ,schema&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;extensions  }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 1.3  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_net    ,schema&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;extensions  }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 0.9.2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pgjwt     ,schema&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;extensions  }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 0.2.0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: uuid-ossp ,schema&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;extensions  }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 1.1  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsodium        }               &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 3.1.9&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase_vault  }               &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 0.2.8&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_graphql      }               &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 1.5.9&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_jsonschema   }               &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 0.3.3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;wrappers        }               &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 0.4.3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http            }               &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 1.6  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_cron         }               &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 1.6  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;timescaledb     }               &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 2.17 &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_tle          }               &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 1.2  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vector          }               &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 0.8.0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 这些扩展默认需要动态加载&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_libs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;pg_stat_statements, plpgsql, plpgsql_check, pg_cron, pg_net, timescaledb, auto_explain, pg_tle, plan_filter&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果你想安装其他扩展插件，请在这里指定，但请同样添加到下面的 repo_packages 中。&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_extensions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;               &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 在这里定义 “安装” 的扩展集合，安装后您可以按需手工 “启用/创建”&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;supabase                &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Supabase 所必需的关键扩展集合，其他扩展为可选&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;timescaledb postgis pg_graphql pg_jsonschema wrappers pg_search pg_analytics pg_parquet plv8 duckdb_fdw pg_cron pg_timetable pgqr&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;supautils pg_plan_filter passwordcheck plpgsql_check pgaudit pgsodium pg_vault pgjwt pg_ecdsa pg_session_jwt index_advisor&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pgvector pgvectorscale pg_summarize pg_tiktoken pg_tle pg_stat_monitor hypopg pg_hint_plan pg_http pg_net pg_smtp_client pg_idkit&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_parameters&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cron.database_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pgsodium.enable_event_trigger&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;off&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_hba_rules&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                 &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 额外的 HBA 规则，允许 Supabase 从容器网段访问&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user: all ,db: postgres  ,addr: intra         ,auth: pwd ,title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;allow supabase access from intranet&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user: all ,db: postgres  ,addr: 172.17.0.0/16 ,auth: pwd ,title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;allow access from local docker network&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_vip_enabled&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_vip_address&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10.10.2&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/24&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_vip_interface&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;eth1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 这里定义的 Ansible 分组 supabase 包含了 Docker 与 Supabase 相关的配置，您可以使用 ./supabase.yml 剧本直接将其拉起&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supabase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# instance id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supa&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;docker_enabled&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 在 supabase 分组上启用 Docker，因为我们要用 Docker Compose 拉起无状态的部分&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 【注意】中国大陆地区的用户请指定 DockerHub 镜像站点或代理服务器，否则拉取镜像会失败&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#docker_registry_mirrors: [&amp;#39;https://docker.xxxxx.io&amp;#39;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#proxy_env:   # add [OPTIONAL] proxy env to /etc/docker/daemon.json configuration file&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#  no_proxy: &amp;#34;localhost,127.0.0.1,10.0.0.0/8,192.168.0.0/16,*.pigsty,*.aliyun.com,mirrors.*,*.myqcloud.com,*.tsinghua.edu.cn&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#  all_proxy: http://user:pass@host:port&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 下面的 Supabase 配置项会自动覆盖或追加到 /opt/supabase/.env 文件中（模板路径：app/supabase/.env ，内容详见：https://github.com/Vonng/pigsty/blob/main/app/supabase/.env）&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_config&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 【非常重要】: 请修改下面的 JWT_SECRET 以及 ANON_KEY 与 SERVICE_ROLE_KEY : https://supabase.com/docs/guides/self-hosting/docker#securing-your-services&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;jwt_secret&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;your-super-secret-jwt-token-with-at-least-32-characters-long&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;anon_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;service_role_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dashboard_username&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dashboard_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【注意】请在下面填入 PostgreSQL 链接串信息&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;postgres_host&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;postgres_port&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5436&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;             &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 使用 5436 端口，通过 haproxy 始终访问主库&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;postgres_db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;postgres_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DBUser.Supa &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果你在上面修改了 PostgreSQL 业务用户的密码，请一并修改这里的 PG 用户密码&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果您使用自定义域名，请修改下面的 domain 字段，将 supa.pigsty 替换为您自己的域名&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;site_url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http://supa.pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;api_external_url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http://supa.pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supabase_public_url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http://supa.pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【可选】指定 S3/MinIO 对象存储的配置&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_bucket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supa                      &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Supabase 使用的 S3/MinIO 桶名称&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https://sss.pigsty:9000 &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 如果您使用负载均衡器访问 MinIO，或者使用外部 S3 服务，请修改这里的端点&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_access_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase              &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 对象存储 AK / 用户名&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_secret_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;S3User.Supabase       &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 对象存储 SK / 密码&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_force_path_style&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;             &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# MinIO 要求使用 PATH 样式的 URL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_protocol&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_region&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;stub&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_domain_ip&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 因为 Docker 使用自己的静态域名解析记录，所以你需要将内部 MinIO 域名 sss.pigsty 解析指向任意安装 MinIO 的节点地址&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【可选】 指定 SMTP 服务器发送邮件&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#smtp_admin_email: admin@example.com&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#smtp_host: supabase-mail&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#smtp_port: 2500&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#smtp_user: fake_mail_user&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#smtp_pass: fake_mail_password&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#smtp_sender_name: fake_sender&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#enable_anonymous_users: false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#==============================================================#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Global Parameters&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#==============================================================#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v3.1.0                  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pigsty version string&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;admin_ip&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;             &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# admin node ip address&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;region: default                   # upstream mirror region&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;default|china|europe&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;node_tune: oltp                   # node tuning specs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;oltp,olap,tiny,crit&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_conf: oltp.yml                 # pgsql tuning specs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#000&#34;&gt;oltp,olap,tiny,crit}.yml&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;infra_portal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                     &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# domain names and upstream servers&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;home         &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h.pigsty }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;grafana      &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: g.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:3000&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, websocket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;prometheus   &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: p.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:9090&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;alertmanager &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: a.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:9093&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio        &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: m.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;10.10.10.10:9001&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, https: true, websocket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;blackbox     &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:9115&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;loki         &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:3100&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# expose supa studio UI and API via nginx&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【注意】如果您使用公网域名，那么请修改下面的 domain 字段，将 supa.pigsty 替换为您自己的域名，您可以用 key / cert 指定自己的 HTTPS 证书路径&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa         &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: supa.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;10.10.10.10:8000&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, websocket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#----------------------------------#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 【非常重要】请修改这些密码！！&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#----------------------------------#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#grafana_admin_username: admin&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;grafana_admin_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pg_admin_username: dbuser_dba&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_admin_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DBUser.DBA&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pg_monitor_username: dbuser_monitor&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_monitor_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DBUser.Monitor&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pg_replication_username: replicator&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_replication_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DBUser.Replicator&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#patroni_username: postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;patroni_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Patroni.API&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#haproxy_admin_username: admin&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;haproxy_admin_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 【MINIO】 相关参数&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_access_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;minioadmin                                                   &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【注意】 MinIO 的根用户名，默认为：`minioadmin`&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_secret_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;minioadmin                                                   &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【注意】 MinIO 的根用户密码，默认为：`minioadmin`&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_buckets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsql }, { name: supa } ]                             &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【注意】 Pigsty 默认使用本地 MinIO 上的 pgsql 桶存放PG备份，supa 桶作为对象存储&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_users&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                                                                    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【注意】 这是 MinIO 上创建的用户列表，默认创建三个业务用户&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;access_key: dba , secret_key: S3User.DBA, policy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;consoleAdmin }         &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【注意】 这是默认的业务管理员用户，目前由用户自行使用，请修改这里的密码！&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;access_key: pgbackrest , secret_key: S3User.Backup,   policy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;readwrite }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【注意】 PGSQL 使用 MinIO 的用户，如果修改这里的密码，请相应调整 pgbackrest_repo 中的密码&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;access_key: supabase   , secret_key: S3User.Supabase, policy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;readwrite }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【注意】 SUPABASE 使用 MinIO 的用户，如果修改这里的密码，请相应调整 supabase 配置文件中的密码&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https://sss.pigsty:9000                                        &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【信息】 如果你使用负载均衡器访问 MinIO，才需要修改这里的端口 &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;node_etc_hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;10.10.10.10 sss.pigsty&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                                      &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【信息】 将 MinIO 默认域名 sss.pigsty 指向任意安装 MinIO 节点的地址 &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# PostgreSQL 备份存储仓库，如果你希望将备份存储到对象存储中，请修改这两个参数&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pgbackrest_method&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;minio         &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pgbackrest 备份方法：local,minio,[其他用户定义的仓库...]，本例中将备份存储到 MinIO 上&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pgbackrest_repo:                  # pgbackrest 备份仓库&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https://pgbackrest.org/configuration.html#section-repository&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;local&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 默认的备份仓库是本地文件系统，但本例中我们【不用】这种方式&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/pg/backup             &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 本地备份目录 `/pg/backup` （你可以修改 pg_fs_bkup 来修改实际备份盘位置而无需修改这里）&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;retention_full_type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;count   &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 保留 N 个全量备份&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;retention_full&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;             &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# N = 2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【非常重要】 Pigsty 这里使用 MinIO 存储备份，请在这里根据上面 MinIO 的配置情况进行相应修改&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                             &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s3                        &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sss.pigsty         &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 【重要】 如果你上面修改了 MinIO pgBackRest 备份用户的密码，那么这里也需要修改！&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_region&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;us-east-1            &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_bucket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsql                &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgbackrest              &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_key_secret&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;S3User.Backup    &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 【重要】 如果你上面修改了 MinIO pgBackRest 备份用户的密码，那么这里也需要修改！&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_uri_style&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path              &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/pgbackrest               &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;storage_port&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9000&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;               &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;storage_ca_file&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/pg/cert/ca.crt&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#  对象存储使用的 CA 文件（如果您的对象存储使用的是自签名 CA 证书）&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;bundle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#  将小文件合并打包以减少碎片，提高上传效率&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cipher_type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;aes-256-cbc        &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#  使用 AES-256-CBC 加密备份，如果您使用远程对象存储放备份，加密是合规建议项&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cipher_pass&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgBackRest         &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#  【重要】备份 AES 加密密码，我们建议修改这个密码，否则加密无意义&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;retention_full_type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;time       &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#  保留 一段时间 内的全量备份&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;retention_full&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;               &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#  一段时间 = 14 天&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#【注意】如果你想使用其他 PG 大版本运行 Supabase，修改此变量，建议使用 15-17&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_version&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;repo_modules&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;node,pgsql,infra,docker&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;repo_packages&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;node-bootstrap, infra-package, infra-addons, node-package1, node-package2, pgsql-utility, docker ]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 【注意】如果你想安装其他扩展插件，请在这里添加到下载列表中&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;repo_extra_packages&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pgsql-main&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;supabase  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase 别名包含了所有必须的扩展，下面则是一些可选的额外扩展插件&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;timescaledb postgis pg_graphql pg_jsonschema wrappers pg_search pg_analytics pg_parquet plv8 duckdb_fdw pg_cron pg_timetable pgqr&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;supautils pg_plan_filter passwordcheck plpgsql_check pgaudit pgsodium pg_vault pgjwt pg_ecdsa pg_session_jwt index_advisor&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pgvector pgvectorscale pg_summarize pg_tiktoken pg_tle pg_stat_monitor hypopg pg_hint_plan pg_http pg_net pg_smtp_client pg_idkit&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/details&gt;
&lt;hr&gt;
&lt;h2 id=&#34;自建关键技术决策&#34;&gt;自建关键技术决策&lt;/h2&gt;
&lt;p&gt;以下是一些自建 Supabase 会涉及到的关键技术决策，供您参考：&lt;/p&gt;
&lt;p&gt;使用默认的&lt;strong&gt;单节点部署&lt;/strong&gt; Supabase 无法享受到 PostgreSQL / MinIO 的高可用能力。
尽管如此，单节点部署相比官方纯 Docker Compose 方案依然要有显著优势：
例如开箱即用的监控系统，自由安装扩展的能力，各个组件的扩缩容能力，以及数据库时间点恢复能力等。&lt;/p&gt;
&lt;p&gt;如果您只有一台服务器，Pigsty 建议您直接使用外部的 S3 作为对象存储，存放 PostgreSQL 的备份，并承载 Supabase Storage 服务。
这样的部署在故障时可以提供一个最低标准的 RTO （小时级恢复时长）/ RPO （MB级数据损失）&lt;a href=&#34;/zh/docs/concept/pitr&#34;&gt;兜底容灾水平&lt;/a&gt;。
此外，如果您选择在云上自建，我们也建议您直接使用 S3，而非默认使用的本体 MinIO ，单纯在本地 EBS 上再套一层 MinIO 转发，除了便于开发测试外，对生产实用并没有意义。&lt;/p&gt;
&lt;p&gt;在严肃的生产部署中，Pigsty 建议使用至少3～4个节点的部署策略，确保 MinIO 与 PostgreSQL 都使用满足企业级高可用要求的多节点部署。
在这种情况下，您需要相应准备更多节点与磁盘，并相应调整 &lt;code&gt;pigsty.yml&lt;/code&gt; 配置清单中的集群配置，以及 supabase 集群配置中的接入信息。&lt;/p&gt;
&lt;p&gt;部分 Supabase 的功能需要发送邮件，所以要用到 SMTP。除非单纯用于内网，否则对于严肃的生产部署，我们建议您考虑使用外部的 SMTP 服务。
自建的邮件服务器发送的邮件可能会被对方邮件服务器拒收，或者被标记为垃圾邮件。&lt;/p&gt;
&lt;p&gt;如果您的服务直接向公网暴露，我们建议您使用 Nginx 进行反向代理，使用真正的域名与 HTTPS 证书，并通过不同的域名区分不同的多个实例。&lt;/p&gt;
&lt;p&gt;接下来，我们会依次讨论这几个主题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/supabase/#安全加固&#34;&gt;进阶主题：安全加固&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;高可用的 PostgreSQL 集群部署与接入&lt;/li&gt;
&lt;li&gt;高可用的 MinIO 集群部署与接入&lt;/li&gt;
&lt;li&gt;使用 S3 服务替代 MinIO&lt;/li&gt;
&lt;li&gt;使用外部 SMTP 服务发送邮件&lt;/li&gt;
&lt;li&gt;使用真实域名，证书，通过 Nginx 反向代理&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;进阶主题安全加固&#34;&gt;进阶主题：安全加固&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Pigsty基础组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于严肃的生产部署，我们强烈建议您修改 Pigsty 基础组件的密码。因为这些默认值是公开且众所周知的，不改密码上生产无异于裸奔：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/reference/param#grafana_admin_password&#34;&gt;&lt;code&gt;grafana_admin_password&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;pigsty&lt;/code&gt;，Grafana管理员密码&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/reference/param#pg_admin_password&#34;&gt;&lt;code&gt;pg_admin_password&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;DBUser.DBA&lt;/code&gt;，PG超级用户密码&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/reference/param#pg_monitor_password&#34;&gt;&lt;code&gt;pg_monitor_password&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;DBUser.Monitor&lt;/code&gt;，PG监控用户密码&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/reference/param#pg_replication_password&#34;&gt;&lt;code&gt;pg_replication_password&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;DBUser.Replicator&lt;/code&gt;，PG复制用户密码&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/reference/param#patroni_password&#34;&gt;&lt;code&gt;patroni_password&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;Patroni.API&lt;/code&gt;，Patroni 高可用组件密码&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/reference/param#haproxy_admin_password&#34;&gt;&lt;code&gt;haproxy_admin_password&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;pigsty&lt;/code&gt;，负载均衡器管控密码&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/minio/param#grafana_admin_password&#34;&gt;&lt;code&gt;minio_access_key&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;minioadmin&lt;/code&gt;，MinIO 根用户名&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/minio/param#minio_secret_key&#34;&gt;&lt;code&gt;minio_secret_key&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;minioadmin&lt;/code&gt;，MinIO 根用户密钥&lt;/li&gt;
&lt;li&gt;此外，强烈建议您修改 Supabase 使用的 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/conf/supa.yml#L118&#34;&gt;PostgreSQL 业务用户&lt;/a&gt; 密码，默认为 &lt;code&gt;DBUser.Supa&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上密码为 Pigsty 组件模块的密码，强烈建议在安装部署前就设置完毕。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Supabase密钥&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;除了 Pigsty 组件的密码，你还需要 &lt;a href=&#34;https://supabase.com/docs/guides/self-hosting/docker#securing-your-services&#34;&gt;修改 Supabase 的密钥&lt;/a&gt;，包括&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/conf/supa.yml#L114&#34;&gt;&lt;code&gt;jwt_secret&lt;/code&gt;&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/conf/supa.yml#L115&#34;&gt;&lt;code&gt;anon_key&lt;/code&gt;&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/conf/supa.yml#L116&#34;&gt;&lt;code&gt;service_role_key&lt;/code&gt;&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/conf/supa.yml#L117&#34;&gt;&lt;code&gt;dashboard_username&lt;/code&gt;&lt;/a&gt;: Supabase Studio Web 界面的默认用户名，默认为 &lt;code&gt;supabase&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/conf/supa.yml#L128&#34;&gt;&lt;code&gt;dashboard_password&lt;/code&gt;&lt;/a&gt;: Supabase Studio Web 界面的默认密码，默认为 &lt;code&gt;pigsty&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里请您务必参照 &lt;a href=&#34;https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys&#34;&gt;Supabase教程：保护你的服务&lt;/a&gt; 里的说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成一个长度超过 40 个字符的 &lt;code&gt;jwt_secret&lt;/code&gt;，并使用教程中的工具签发 &lt;code&gt;anon_key&lt;/code&gt; 与 &lt;code&gt;service_role_key&lt;/code&gt; 两个 JWT。&lt;/li&gt;
&lt;li&gt;使用教程中提供的工具，根据 &lt;code&gt;jwt_secret&lt;/code&gt; 以及过期时间等属性，生成一个 &lt;code&gt;anon_key&lt;/code&gt; JWT，这是匿名用户的身份凭据。&lt;/li&gt;
&lt;li&gt;使用教程中提供的工具，根据 &lt;code&gt;jwt_secret&lt;/code&gt; 以及过期时间等属性，生成一个 &lt;code&gt;service_role_key&lt;/code&gt;，这是权限更高服务角色的身份凭据。&lt;/li&gt;
&lt;li&gt;如果您使用的 PostgreSQL 业务用户使用了不同于默认值的密码，请相应修改 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/conf/supa.yml#L126&#34;&gt;`postgres_password``&lt;/a&gt; 的值&lt;/li&gt;
&lt;li&gt;如果您的对象存储使用了不同于默认值的密码，请相应修改 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/conf/supa.yml#137&#34;&gt;&lt;code&gt;s3_access_key``](https://github.com/Vonng/pigsty/blob/main/conf/supa.yml#136) 与 [&lt;/code&gt;s3_secret_key``&lt;/a&gt; 的值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Supabase 部分的凭据修改后，您可以重启 Docker Compose 容器以应用新的配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; /opt/supabase&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; docker compose up
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;进阶主题域名接入&#34;&gt;进阶主题：域名接入&lt;/h2&gt;
&lt;p&gt;如果你在本机或局域网内使用 Supabase，那么可以选择 IP:Port 直连 Kong 对外暴露的 HTTP 8000 端口，当然这样并不好，我们建议您使用域名与 HTTPS 来访问。&lt;/p&gt;
&lt;p&gt;使用默认的本地域名 &lt;code&gt;supa.pigsty&lt;/code&gt; 时，您可以在浏览器本机的 &lt;code&gt;/etc/hosts&lt;/code&gt; 或局域网 DNS 里来配置它的解析，将其指向安装节点的【对外】IP地址。
Pigsty 管理节点上的 Nginx 会为此域名申请自签名的证书（浏览器显示《不安全》），并将请求转发到 8000 端口的 Kong，由 Supabase 处理。&lt;/p&gt;
&lt;p&gt;不过，更为实用与常见的用例是：Supabase 通过公网队外提供服务。在这种情况下，通常您需要进行以下准备：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;您的服务器应当有一个公网 IP 地址&lt;/li&gt;
&lt;li&gt;购买域名，使用 云/DNS/CDN 供应商提供的 DNS 解析服务，将其指向安装节点的公网 IP（下位替代：本地 &lt;code&gt;/etc/hosts&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;申请证书，使用 Let&amp;rsquo;s Encrypt 等证书颁发机构签发的免费 HTTPS 证书，用于加密通信（下位替代：默认自签名证书，手工信任）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;准备完成后，请修改 &lt;code&gt;pigsty.yml&lt;/code&gt; 配置文件中 &lt;code&gt;all.vars.infra_portal&lt;/code&gt; 部分的 &lt;code&gt;supa&lt;/code&gt; 域名，以及 &lt;code&gt;all.children.supabase.vars.supa_config&lt;/code&gt; 中的三个域名字段。&lt;/p&gt;
&lt;p&gt;这里我们假设您使用的自定义域名是： &lt;code&gt;supa.pigsty.cc&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 全局配置 &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#.....&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;infra_portal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                     &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# domain names and upstream servers&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;home         &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h.pigsty }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;grafana      &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: g.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:3000&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, websocket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;prometheus   &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: p.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:9090&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;alertmanager &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: a.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:9093&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio        &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: m.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;10.10.10.10:9001&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, https: true, websocket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;blackbox     &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:9115&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;loki         &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:3100&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#supa        : { domain: supa.pigsty ,endpoint: &amp;#34;10.10.10.10:8000&amp;#34;, websocket: true }  # 如果使用申请的 HTTPS 证书，请在这里指定证书的存放路径&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa         &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: supa.pigsty.cc ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;10.10.10.10:8000&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, websocket: true ,cert: /etc/cert/suap.pigsty.cc.crt ,key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/etc/cert/supa.pigsty.cc.key }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;children&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;           &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 集群定义&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supabase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;         &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase 分组&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;           &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase 分组集群配置&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_config&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase 配置项&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 请在这里更新 Supabase 使用的域名&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;site_url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http://supa.pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;api_external_url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http://supa.pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supabase_public_url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http://supa.pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;申请 HTTPS 证书超出了本文范畴，请您自行用 acmebot 之类的工具处理，将申请好的证书放置于指定位置即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./infra.yml    -t nginx_config,nginx_launch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./supabase.yml -t supa_config,supa_launch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用以上命令重新加载 Nginx 和 Supabase 的配置。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;进阶主题外部对象存储&#34;&gt;进阶主题：外部对象存储&lt;/h2&gt;
&lt;p&gt;您可以使用 S3 或 S3 兼容的服务，来作为 PGSQL 备份与 Supabase 使用的对象存储。这里我们使用一个 阿里云 OSS 对象存储作为例子。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pigsty 提供了一个 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/terraform/spec/aliyun-meta-s3.tf&#34;&gt;&lt;code&gt;terraform/spec/aliyun-meta-s3.tf&lt;/code&gt;&lt;/a&gt; 模板，用于在阿里云上拉起一台服务器，以及一个 OSS 存储桶。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先，我们修改 &lt;code&gt;all.children.supabase.vars.supa_config&lt;/code&gt; 中 S3 相关的配置，将其指向阿里云 OSS 存储桶：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;children&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supabase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_config&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_bucket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pigsty-oss&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https://oss-cn-beijing-internal.aliyuncs.com&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_access_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xxxxxxxxxxxxxxxx&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_secret_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xxxxxxxxxxxxxxxx&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_force_path_style&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_protocol&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_region&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;oss-cn-beijing&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同样使用以下命令重载 Supabase 配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./supabase.yml -t supa_config,supa_launch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;您同样可以使用 S3 作为 PostgreSQL 的备份仓库，在 &lt;code&gt;all.vars.pgbackrest_repo&lt;/code&gt; 新增一个 &lt;code&gt;aliyun&lt;/code&gt; 备份仓库的定义：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pgbackrest_method&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;aliyun         &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pgbackrest 备份方法：local,minio,[其他用户定义的仓库...]，本例中将备份存储到 MinIO 上&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pgbackrest_repo:                   # pgbackrest 备份仓库&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https://pgbackrest.org/configuration.html#section-repository&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;aliyun&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 定义一个新的备份仓库 aliyun&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s3                      &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 阿里云 oss 是 s3-兼容的对象存储&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;oss-cn-beijing-internal.aliyuncs.com&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_region&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;oss-cn-beijing &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_bucket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pigsty-oss&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xxxxxxxxxxxxxx&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_key_secret&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xxxxxxxx&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_uri_style&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;host&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/pgbackrest&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;bundle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cipher_type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;aes-256-cbc&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cipher_pass&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PG.${pg_cluster}  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 设置一个与集群名称绑定的加密密码&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;retention_full_type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;time &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;retention_full&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在 &lt;code&gt;all.vars.pgbackrest_mehod&lt;/code&gt; 中指定使用 &lt;code&gt;aliyun&lt;/code&gt; 备份仓库，重置 pgBackrest 备份：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./pgsql.yml -t pgbackrest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Pigsty 会将备份仓库切换到外部对象存储上。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;进阶主题备份策略&#34;&gt;进阶主题：备份策略&lt;/h2&gt;
&lt;p&gt;你可以使用操作系统的 Crontab 来设置定时备份策略，例如，向默认的 &lt;code&gt;all.children.pg-meta.vars&lt;/code&gt; 中添加 &lt;a href=&#34;/zh/docs/reference/param#node_crontab&#34;&gt;&lt;code&gt;node_crontab&lt;/code&gt;&lt;/a&gt; 参数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;children&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg-meta&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_seq: 1, pg_role&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;primary } }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg-meta &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 每天凌晨一点做个全量备份&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;node_crontab&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;00 01 * * * postgres /pg/bin/pg-backup full&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后执行以下命令，将 Crontab 配置应用到节点上：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./node.yml -t node_crontab
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更多关于备份策略的主题，请参考 &lt;a href=&#34;/zh/docs/pgsql/pitr/&#34;&gt;&lt;strong&gt;备份策略&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;进阶主题使用smtp&#34;&gt;进阶主题：使用SMTP&lt;/h2&gt;
&lt;p&gt;你可以使用 SMTP 来发送邮件，修改 supabase 配置，添加 SMTP 信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;children&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supabase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_config&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;smtp_host&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;smtpdm.aliyun.com:80&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;smtp_port&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;smtp_user&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;no_reply@mail.your.domain.com&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;smtp_pass&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;your_email_user_password&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;smtp_sender_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MySupabase&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;smtp_admin_email&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;adminxxx@mail.your.domain.com&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;enable_anonymous_users&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不要忘了使用 &lt;code&gt;supabase.yml -t supa_config,supa_launch&lt;/code&gt; 来重载配置&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;进阶主题真高可用&#34;&gt;进阶主题：真·高可用&lt;/h2&gt;
&lt;p&gt;经过上面的配置，您已经可以使用一个带有公网域名，HTTPS 证书，SMTP 邮件服务器，备份的 Supabase 了。&lt;/p&gt;
&lt;p&gt;如果您的这个节点挂了，起码外部 S3 存储中保留了备份，您可以在新的节点上重新部署 Supabase，然后从备份中恢复。
这样的部署在故障时可以提供一个最低标准的 RTO （小时级恢复时长）/ RPO （MB级数据损失）&lt;a href=&#34;/zh/docs/concept/pitr&#34;&gt;兜底容灾水平&lt;/a&gt; 兜底。&lt;/p&gt;
&lt;p&gt;但如果您想要达到 RTO &amp;lt; 30s ，零数据丢失，那么就需要用到多节点高可用集群了。多节点部署有三个维度：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/etcd&#34;&gt;ETCD&lt;/a&gt;： DCS 需要使用三个节点或以上，才能容忍一个节点的故障。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/pgsql&#34;&gt;PGSQL&lt;/a&gt;： PGSQL 同步提交不丢数据模式，建议使用至少三个节点。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/infra&#34;&gt;INFRA&lt;/a&gt;：监控基础设施故障影响稍小，但我们建议生产环境使用三副本&lt;/li&gt;
&lt;li&gt;Supabase 本身也可以是多节点的副本，实现高可用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们建议您参考 &lt;a href=&#34;/zh/docs/conf/trio&#34;&gt;trio&lt;/a&gt; 与 &lt;a href=&#34;/zh/docs/conf/safe&#34;&gt;safe&lt;/a&gt; 中的集群配置，将您的集群配置升级到三节点或以上。&lt;/p&gt;
&lt;p&gt;在这种情况下，您还需要修改 PostgreSQL 与 MinIO 的接入点，使用 DNS / L2 VIP / HAProxy 等 &lt;a href=&#34;/zh/docs/concept/svc&#34;&gt;高可用接入点&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;例如，假设您使用 L2 VIP 接入 MinIO 集群与 PostgreSQL 集群，那么就需要相应修改配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;children&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supabase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.11&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.12&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supa           &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# cluster name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_config&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;postgres_host&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10.10.2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;             &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 例如，使用 PG 集群上的 L2 VIP 接入服务&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;postgres_port&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5436&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                   &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 使用 5436 端口，始终直连主库，也可以使用 5433，通过连接池访问主库&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https://sss.pigsty:9002 &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 假如您的负载均衡器使用了 9002 端口，那么请更改这里的 Endpoint&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_domain_ip&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10.10.3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;           &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 修改此参数，将 sss.pigsty 的域名指向挂载在 MinIO 集群前面的 L2 VIP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;应用 Supabase 的配置后，您可能还需要在 Supabase 集群前套上一个负载均衡器，用于将请求分发到后端的多个节点上。&lt;/p&gt;
&lt;p&gt;以下是一个三节点的 高可用 Supabase 自建的参考配置文件：&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;3-Node HA Supabase Config Template&lt;/summary&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#==============================================================#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Clusters, Nodes, and Modules&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#==============================================================#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;children&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# infra cluster for proxy, monitor, alert, etc..&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;infra&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;infra_seq: 1 ,nodename&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;infra-1 }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.11&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;infra_seq: 2 ,nodename: infra-2, repo_enabled: false, grafana_enabled&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.12&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;infra_seq: 3 ,nodename: infra-3, repo_enabled: false, grafana_enabled&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vip_enabled&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vip_vrid&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vip_address&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10.10.3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vip_interface&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;eth1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;haproxy_services&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;minio                   &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# [REQUIRED] service name, unique&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;port&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9002&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                     &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# [REQUIRED] service port, unique&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;balance&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;leastconn            &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# [OPTIONAL] load balancer algorithm&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                       &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# [OPTIONAL] minio health check&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;option httpchk&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;option http-keep-alive&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;http-check send meth OPTIONS uri /minio/health/live&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;http-check expect status 200&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;servers&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: minio-1 ,ip: 10.10.10.10 ,port: 9000 ,options&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;check-ssl ca-file /etc/pki/ca.crt check port 9000&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: minio-2 ,ip: 10.10.10.11 ,port: 9000 ,options&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;check-ssl ca-file /etc/pki/ca.crt check port 9000&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: minio-3 ,ip: 10.10.10.12 ,port: 9000 ,options&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;check-ssl ca-file /etc/pki/ca.crt check port 9000&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;etcd&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# dcs service for postgres/patroni ha consensus&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 1 node for testing, 3 or 5 for production&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;etcd_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# etcd_seq required&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.11&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;etcd_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# assign from 1 ~ n&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.12&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;etcd_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# odd number please&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# cluster level parameter override roles/etcd&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;etcd_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;etcd &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# mark etcd cluster name etcd&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;etcd_safeguard&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# safeguard against purging&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;etcd_clean&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# purge etcd during init process&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# minio cluster 4-node&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_seq: 1 , nodename&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;minio-1 }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.11&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_seq: 2 , nodename&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;minio-2 }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.12&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_seq: 3 , nodename&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;minio-3 }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;minio&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;/data{1...4}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_buckets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsql }, { name: supa } ]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_users&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;access_key: dba , secret_key: S3User.DBA, policy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;consoleAdmin }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;access_key: pgbackrest , secret_key: S3User.Backup,   policy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;readwrite }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;access_key: supabase   , secret_key: S3User.Supabase, policy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;readwrite }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pg-meta, the underlying postgres database for supabase&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg-meta&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_seq: 1, pg_role&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;primary }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.11&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_seq: 2, pg_role&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;replica }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.12&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_seq: 3, pg_role&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;replica }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg-meta&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_users&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase roles: anon, authenticated, dashboard_user&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: anon           ,login&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: authenticated  ,login&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: dashboard_user ,login: false ,replication: true ,createdb: true ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: service_role   ,login: false ,bypassrls&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase users: please use the same password&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_admin             ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: true   ,roles: [ dbrole_admin ] ,superuser: true ,replication: true ,createdb: true ,createrole: true ,bypassrls&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: authenticator              ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbrole_admin, authenticated ,anon ,service_role ] }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_auth_admin        ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles: [ dbrole_admin ] ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_storage_admin     ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles: [ dbrole_admin, authenticated ,anon ,service_role ] ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_functions_admin   ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles: [ dbrole_admin ] ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_replication_admin ,password: &amp;#39;DBUser.Supa&amp;#39; ,replication: true ,roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbrole_admin ]}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_read_only_user    ,password: &amp;#39;DBUser.Supa&amp;#39; ,bypassrls: true ,roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbrole_readonly, pg_read_all_data ] }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_databases&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;baseline&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase.sql&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;owner&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase_admin&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;comment&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase postgres database&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;schemas&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;extensions ,auth ,realtime ,storage ,graphql_public ,supabase_functions ,_analytics ,_realtime ]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;extensions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pgcrypto  ,schema: extensions  } # 1.3   &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;cryptographic functions&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_net    ,schema: extensions  } # 0.9.2 &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;async HTTP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pgjwt     ,schema: extensions  } # 0.2.0 &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;json web token API for postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: uuid-ossp ,schema: extensions  } # 1.1   &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;generate universally unique identifiers (UUIDs)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pgsodium        }                # 3.1.9 &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsodium is a modern cryptography library for Postgres.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_vault  }                # 0.2.8 &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Supabase Vault Extension&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_graphql      }                # 1.5.9 : pg_graphql&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GraphQL support&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_jsonschema   }                # 0.3.3 : pg_jsonschema&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Validate json schema&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: wrappers        }                # 0.4.3 : wrappers&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;FDW collections&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: http            }                # 1.6   : http&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;allows web page retrieval inside the database.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_cron         }                # 1.6   : pg_cron&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Job scheduler for PostgreSQL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: timescaledb     }                # 2.17  : timescaledb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Enables scalable inserts and complex queries for time-series data&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_tle          }                # 1.2   : pg_tle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Trusted Language Extensions for PostgreSQL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: vector          }                # 0.8.0 : pgvector&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;the vector similarity search&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase required extensions&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_libs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;pg_stat_statements, plpgsql, plpgsql_check, pg_cron, pg_net, timescaledb, auto_explain, pg_tle, plan_filter&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_extensions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# extensions to be installed on this cluster&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;supabase  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# essential extensions for supabase&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;timescaledb postgis pg_graphql pg_jsonschema wrappers pg_search pg_analytics pg_parquet plv8 duckdb_fdw pg_cron pg_timetable pgqr&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;supautils pg_plan_filter passwordcheck plpgsql_check pgaudit pgsodium pg_vault pgjwt pg_ecdsa pg_session_jwt index_advisor&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pgvector pgvectorscale pg_summarize pg_tiktoken pg_tle pg_stat_monitor hypopg pg_hint_plan pg_http pg_net pg_smtp_client pg_idkit&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_parameters&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cron.database_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pgsodium.enable_event_trigger&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;off&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_hba_rules&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase hba rules, require access from docker network&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user: all ,db: postgres  ,addr: intra         ,auth: pwd ,title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;allow supabase access from intranet&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user: all ,db: postgres  ,addr: 172.17.0.0/16 ,auth: pwd ,title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;allow access from local docker network&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_vip_enabled&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_vip_address&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10.10.2&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/24&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_vip_interface&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;eth1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;node_crontab&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;00 01 * * * postgres /pg/bin/pg-backup full&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# make a full backup every 1am&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# launch supabase stateless part with docker compose: ./supabase.yml&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supabase&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# instance 1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.11&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# instance 2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.12&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_seq&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# instance 3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supa           &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# cluster name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;docker_enabled&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# enable docker&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# use these to pull docker images via proxy and mirror registries&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#docker_registry_mirrors: [&amp;#39;https://docker.xxxxx.io&amp;#39;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#proxy_env:   # add [OPTIONAL] proxy env to /etc/docker/daemon.json configuration file&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#  no_proxy: &amp;#34;localhost,127.0.0.1,10.0.0.0/8,192.168.0.0/16,*.pigsty,*.aliyun.com,mirrors.*,*.myqcloud.com,*.tsinghua.edu.cn&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#  #all_proxy: http://user:pass@host:port&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# these configuration entries will OVERWRITE or APPEND to /opt/supabase/.env file (src template: app/supabase/.env)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# check https://github.com/Vonng/pigsty/blob/main/app/supabase/.env for default values&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa_config&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# IMPORTANT: CHANGE JWT_SECRET AND REGENERATE CREDENTIAL ACCORDING!!!!!!!!!!!&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# https://supabase.com/docs/guides/self-hosting/docker#securing-your-services&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;jwt_secret&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;your-super-secret-jwt-token-with-at-least-32-characters-long&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;anon_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;service_role_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dashboard_username&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dashboard_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# postgres connection string (use the correct ip and port)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;postgres_host&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10.10.3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;       &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# use the pg_vip_address rather than single node ip&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;postgres_port&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5433&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;             &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# access via the &amp;#39;default&amp;#39; service, which always route to the primary postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;postgres_db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;postgres_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DBUser.Supa &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# password for supabase_admin and multiple supabase users&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# expose supabase via domain name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;site_url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http://supa.pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;api_external_url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http://supa.pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supabase_public_url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http://supa.pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# if using s3/minio as file storage&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_bucket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supa&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https://sss.pigsty:9002&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_access_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_secret_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;S3User.Supabase&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_force_path_style&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_protocol&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_region&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;stub&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_domain_ip&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10.10.3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# sss.pigsty domain name will resolve to this l2 vip that bind to all nodes&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# if using SMTP (optional)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#smtp_admin_email: admin@example.com&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#smtp_host: supabase-mail&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#smtp_port: 2500&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#smtp_user: fake_mail_user&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#smtp_pass: fake_mail_password&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#smtp_sender_name: fake_sender&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#enable_anonymous_users: false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#==============================================================#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Global Parameters&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#==============================================================#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v3.1.0                  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pigsty version string&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;admin_ip&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;             &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# admin node ip address&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;region: china                     # upstream mirror region&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;default|china|europe&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;node_tune: oltp                   # node tuning specs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;oltp,olap,tiny,crit&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_conf: oltp.yml                 # pgsql tuning specs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#000&#34;&gt;oltp,olap,tiny,crit}.yml&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;infra_portal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                     &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# domain names and upstream servers&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;home         &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h.pigsty }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;grafana      &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: g.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:3000&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, websocket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;prometheus   &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: p.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:9090&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;alertmanager &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: a.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:9093&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio        &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: m.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;10.10.10.10:9001&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, https: true, websocket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;blackbox     &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:9115&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;loki         &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:3100&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# expose supa studio UI and API via nginx&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;supa         &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: supa.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;10.10.10.10:8000&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, websocket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#----------------------------------#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Credential: CHANGE THESE PASSWORDS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#----------------------------------#&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#grafana_admin_username: admin&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;grafana_admin_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pg_admin_username: dbuser_dba&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_admin_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DBUser.DBA&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pg_monitor_username: dbuser_monitor&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_monitor_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DBUser.Monitor&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pg_replication_username: replicator&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_replication_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DBUser.Replicator&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#patroni_username: postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;patroni_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Patroni.API&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#haproxy_admin_username: admin&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;haproxy_admin_password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pigsty&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# use minio as supabase file storage, single node single driver mode for demonstration purpose&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_access_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;minioadmin     &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# root access key, `minioadmin` by default&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_secret_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;minioadmin     &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# root secret key, `minioadmin` by default&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_buckets&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsql }, { name: supa } ]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_users&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;access_key: dba , secret_key: S3User.DBA, policy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;consoleAdmin }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;access_key: pgbackrest , secret_key: S3User.Backup,   policy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;readwrite }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;access_key: supabase   , secret_key: S3User.Supabase, policy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;readwrite }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio_endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https://sss.pigsty:9000   &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# explicit overwrite minio endpoint with haproxy port&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;node_etc_hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;10.10.10.3 sss.pigsty&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# domain name to access minio from all nodes (required)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# use minio as default backup repo for PostgreSQL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pgbackrest_method: minio          # pgbackrest repo method&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;local,minio,[user-defined...]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pgbackrest_repo:                  # pgbackrest repo&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https://pgbackrest.org/configuration.html#section-repository&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;local&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# default pgbackrest repo with local posix fs&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/pg/backup             &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# local backup directory, `/pg/backup` by default&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;retention_full_type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;count   &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# retention full backups by count&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;retention_full&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;             &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# keep 2, at most 3 full backup when using local fs repo&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;minio&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                          &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# optional minio repo for pgbackrest&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s3                     &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# minio is s3-compatible, so s3 is used&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sss.pigsty      &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# minio endpoint domain name, `sss.pigsty` by default&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_region&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;us-east-1         &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# minio region, us-east-1 by default, useless for minio&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_bucket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsql             &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# minio bucket name, `pgsql` by default&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgbackrest           &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# minio user access key for pgbackrest&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_key_secret&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;S3User.Backup &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# minio user secret key for pgbackrest&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;s3_uri_style&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path           &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# use path style uri for minio rather than host style&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/pgbackrest            &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# minio backup path, default is `/pgbackrest`&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;storage_port&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9002&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# minio port, 9000 by default&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;storage_ca_file&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/pg/cert/ca.crt &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# minio ca file path, `/pg/cert/ca.crt` by default&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;bundle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                     &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# bundle small files into a single file&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cipher_type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;aes-256-cbc     &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# enable AES encryption for remote backup repo&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cipher_pass&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgBackRest      &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# AES encryption password, default is &amp;#39;pgBackRest&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;retention_full_type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;time    &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# retention full backup by time on minio repo&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;retention_full&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# keep full backup for last 14 days&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# download docker and supabase related extensions&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_version&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;repo_modules&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;node,pgsql,infra,docker&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;repo_packages&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;node-bootstrap, infra-package, infra-addons, node-package1, node-package2, pgsql-utility, docker ]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;repo_extra_packages&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pgsql-main&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;supabase  &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# essential extensions for supabase&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;timescaledb postgis pg_graphql pg_jsonschema wrappers pg_search pg_analytics pg_parquet plv8 duckdb_fdw pg_cron pg_timetable pgqr&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;supautils pg_plan_filter passwordcheck plpgsql_check pgaudit pgsodium pg_vault pgjwt pg_ecdsa pg_session_jwt index_advisor&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pgvector pgvectorscale pg_summarize pg_tiktoken pg_tle pg_stat_monitor hypopg pg_hint_plan pg_http pg_net pg_smtp_client pg_idkit&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/details&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;br&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: v3.1：Supabase一键自建，PG17上位，ARM与Ubuntu24支持，MinIO改进</title>
      <link>/zh/blog/releases/v3.1.0/</link>
      <pubDate>Sun, 24 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/releases/v3.1.0/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/releases/v3.1.0/featured_hu02aa61ae1d9de35cbe238d2676170cb9_353467_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;p&gt;随着前天 PostgreSQL 17.2 的发布，Pigsty 也立即跟进了 v3.1 版本。
在这个版本中，PostgreSQL 17 被提升成为默认使用的大版本，近 340 个 PG 扩展插件开箱即用。&lt;/p&gt;
&lt;p&gt;此外，Pigsty 3.1 还提供了一键 &lt;a href=&#34;/zh/docs/kernel/supabase&#34;&gt;自建 Supabase&lt;/a&gt; 的能力，改进了 &lt;a href=&#34;/zh/docs/minio&#34;&gt;MinIO&lt;/a&gt; 对象存储的使用最佳实践。
与此同时，Pigsty还提供了ARM64 架构的初步支持，并且支持了新发布的 Ubuntu 24.04 大操作系统发行版大版本。
最后，这个版本提供了一系列开箱即用的场景化模板，统一了不同操作系统发行版使用配置文件，极大简化了配置管理工作。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;自建supabase&#34;&gt;自建Supabase&lt;/h2&gt;
&lt;p&gt;Supabase 是一个开源的 Firebase 替代，对 PostgreSQL 进行了封装，并提供了认证，开箱即用的 API，边缘函数，实时订阅，对象存储，向量嵌入能力。
Supabase 的口号是：“&lt;strong&gt;花个周末写写，随便扩容至百万&lt;/strong&gt;”。在试用之后，我觉得此言不虚。
这是一个低代码的一站式后端平台，能让你几乎告别大部分后端开发的工作，只需要懂数据库设计与前端即可快速出活了！&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;supa-price.png&#34; src=&#34;/zh/blog/releases/v3.1.0/supa-price.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;小微规模（4c8g）内的 Supabase 云服务&lt;a href=&#34;https://supabase.com/pricing&#34;&gt;极有性价比&lt;/a&gt;，堪称赛博菩萨。那 Supabase 云服务这么香，为什么要自建呢？有几个原因：&lt;/p&gt;
&lt;p&gt;最直观的原因是是《&lt;a href=&#34;/zh/blog/cloud&#34;&gt;云计算泥石流&lt;/a&gt;》中说过的：云数据库服务只要稍微上一点儿规模，成本就很容易爆炸。而且考虑到当下本地 NVMe 盘的无敌性价比，自建的成本与性能优势是显而易见的。&lt;/p&gt;
&lt;p&gt;另一个重要的原因是 Supabase 云服务的功能受限 —— &lt;a href=&#34;https://mp.weixin.qq.com/s/EH7RPB6ImfMHXhOMU7P5Qg&#34;&gt;与RDS逻辑相同&lt;/a&gt;，很多强力扩展出于多租户的安全问题考虑是不太可能在云端提供的 —— supabase 云服务中有64个可用扩展，但使用 Pigsty 自建 supabase 时，你可以拥有全部 &lt;a href=&#34;https://ext.pigsty.io/#/list&#34;&gt;&lt;strong&gt;340&lt;/strong&gt;&lt;/a&gt; 个。
此外，Supabase 官方使用 PostgreSQL 15 作为底层数据库，而在 Pigsty 中，你可以使用 PG 14 - 17 的任意版本，运行在 EL / Debian / Ubuntu 主流 Linux &lt;a href=&#34;/zh/docs/reference/compatibility&#34;&gt;操作系统裸机&lt;/a&gt; 上而无需虚拟化支持，充分地利用现代硬件的性能与成本优势。&lt;/p&gt;
&lt;p&gt;我发现身边很多创业出海公司都在使用 Supabase，而其中一些的规模确实已经达到了需要自建的状态，而且有人愿意付费咨询来做这件事了。
所以 Pigsty 早在去年9月发布的 v2.4 就支持自建 Supabase （所需的 PostgreSQL）了。但那毕竟还涉及到一些手工操作，比如配置 PG 集群，拉起 Docker。
而在这个版本中，我们将体验优化到了这种状态 —— 一台新装操作系统的裸机，执行以下几条命令之后，一套新鲜的 Supabase 就出炉了！&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;supabase-selfhosting.png&#34; src=&#34;/zh/blog/releases/v3.1.0/supabase-selfhosting.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这两天我会准备一些关于 &lt;a href=&#34;/zh/docs/kernel/supabase&#34;&gt;自建 Supabase 最佳实践&lt;/a&gt; 的教程，敬请期待。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;postgresql-17&#34;&gt;PostgreSQL 17&lt;/h2&gt;
&lt;p&gt;在《&lt;a href=&#34;/zh/blog/pg/pg12-eol-pg17-up/&#34;&gt;PG12过保，PG17上位&lt;/a&gt;》中，我们已经详细介绍了 PostgreSQL 17 的新特性与改进。&lt;/p&gt;
&lt;p&gt;其中最令人欣慰的莫过于白给的性能优化了：PostgreSQL 17 据说在写入性能上有了显著提升。我找了一台物理机测试了一下，确实不错。
相比与三年前针对 PostgreSQL 14 的测试结果《&lt;a href=&#34;/zh/blog/pg/pg-performence&#34;&gt;PostgreSQL到底有多强&lt;/a&gt;》，写入确实有不小的提升。&lt;/p&gt;
&lt;p&gt;例如，以前 PG 14 在标准配置下，PG 的 WAL 写入吞吐量在 110 MB/s 附近，这是软件的瓶颈，不是硬件的。
而在 PG 17 下，这个数字能达到 180 MB/s。当然，把安全开关都关掉后性能还能翻几番，但体面评测就不玩那些作弊手段了&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;perf.png&#34; src=&#34;/zh/blog/releases/v3.1.0/perf.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pigsty 3.1 + PostgreSQL 17 的性能回归测试，详细的性能评测报告将会在最近几天发出，敬请期待。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;340个扩展插件&#34;&gt;340个扩展插件&lt;/h2&gt;
&lt;p&gt;Pigsty 3.1 版本的另一个亮点特性是，这个版本中提供了 &lt;strong&gt;340&lt;/strong&gt; 个 PostgreSQL 扩展插件。
这是一个非常恐怖的数字了，而且这是在我进行审慎精选踢出十几个“扩展”后的结果，不然按照本期规划应该能到 360 个了。&lt;/p&gt;
&lt;p&gt;为了实现这一目标，我建设了一个 YUM / APT 仓库，针对 EL 8/9, Ubuntu 22.04/24.04, Debian 12 这几个主流操作系统发行版，
以及 PG 12 - 17 这六个大版本提供开箱即用的扩展 RPM/DEB 包。目前提供 x86_64 的包，ARM64 和其他架构还在路上，目前仅对专业用户按需提供。
当然除了仓库之外，更重要的是我还维护了一个 &lt;a href=&#34;https://ext.pigsty.io&#34;&gt;扩展目录&lt;/a&gt;，详细记录了每个扩展的元数据， OS/DB 版本可用性，以及一些使用说明，方便用户找到自己需要的扩展。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;ext-repo.png&#34; src=&#34;/zh/blog/releases/v3.1.0/ext-repo.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pigsty 的扩展仓库基于原生的操作系统包管理器，公开共享，你不一定非要使用 Pigsty 才能按照这些扩展。
你完全可以在现有系统，Dockerfile中添加此仓库并通过 yum/apt install 的方式安装这些扩展。
目前我很欣慰的是有一个比较流行的开源集群部署项目 postgresql-cluster 已经默认用起了这个仓库，作为安装流程的一部分，向用户提供并分发扩展插件。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;postgresql-cluster.png&#34; src=&#34;/zh/blog/releases/v3.1.0/postgresql-cluster.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当然，更多细节，在《&lt;a href=&#34;/zh/blog/pg/pg-ext-repo/&#34;&gt;PostgreSQL神功大成，最全扩展仓库&lt;/a&gt;》中对此已经有过介绍。
目前使用 Rust + pgrx 开发扩展的新项目不少，Pigsty 收录了 &lt;strong&gt;23&lt;/strong&gt; 个 Rust 扩展。
如果你有好的扩展推荐，欢迎告诉我，我会考察测试后，尽快将其加入到仓库中。
如果你是 PostgreSQL 扩展作者，我们也欢迎将你的扩展提交到 Pigsty 仓库中，我们可以帮助您打包分发，解决最后一公里的交付问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;ubuntu-2404-支持&#34;&gt;Ubuntu 24.04 支持&lt;/h2&gt;
&lt;p&gt;Ubuntu 24.04 noble 已经发布半年了，已经开始有一些用户在生产环境中真实使用它了。
因此，Pigsty v3.1 版本也提供了对 Ubuntu 24.04 的正式支持。&lt;/p&gt;
&lt;p&gt;尽管如此，作为一个比较新的系统，Ubuntu 24.04 相比 22.04 还有一些缺陷，例如 &lt;code&gt;citus&lt;/code&gt; 和 &lt;code&gt;topn&lt;/code&gt; 扩展在整个系统上是缺位的，而 &lt;code&gt;timescaledb_toolkit&lt;/code&gt; 目前还没有提供 u24 x86_64 的支持。
但总体来说，除了这些个例外，绝大部分扩展都已经支持 Ubuntu 24.04 了。因此将其纳入 Pigsty 的主要支持范围是没有问题的。&lt;/p&gt;
&lt;p&gt;相应地，我们将 Ubuntu 20.04 focal 从 Pigsty 主力支持的操作系统中逐出，虽然 Ubuntu 20.04 在明年五月份才正式 EOL。
但是因为它的一些软件缺漏与依赖版本问题比较严重（PostGIS），我非常乐意能将其提早淘汰，踢出开源版本的支持范畴。
当然，理论上您还是可以继续在 Ubuntu 20.04 上安装并使用，而且在我们的订阅服务中也继续提供对 Ubuntu 20.04 的支持。&lt;/p&gt;
&lt;p&gt;因此，目前 Pigsty 支持的主流操作系统发行版为：EL 8/9, Ubuntu 22.04 / Ubuntu 24.04, 以及 Debian 12 这五个。
我们会针对这五个操作系统发行版提供最新的软件包，完整的扩展插件。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Code&lt;/th&gt;
&lt;th&gt;OS Distro&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;x86_64&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG17&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG16&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG15&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG14&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG13&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG12&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;code&gt;Arm64&lt;/code&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;PG17&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG16&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG15&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG14&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG13&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG12&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;EL9&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;RHEL 9 / Rocky9 / Alma9&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;el9.x86_64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-primary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;el9.arm64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-primary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;EL8&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;RHEL 8 / Rocky8 / Alma8 / Anolis8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;el8.x86_64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-primary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;el8.arm64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-primary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;U24&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Ubuntu 24.04 (&lt;code&gt;noble&lt;/code&gt;)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;u24.x86_64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-primary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;u24.arm64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-primary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;U22&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Ubuntu 22.04 (&lt;code&gt;jammy&lt;/code&gt;)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;u22.x86_64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-primary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;u22.arm64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-primary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;D12&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Debian 12 (&lt;code&gt;bookworm&lt;/code&gt;)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;d12.x86_64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-primary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;d12.arm64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-primary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;D11&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Debian 11 (&lt;code&gt;bullseye&lt;/code&gt;)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;d12.x86_64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;d11.arm64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;U20&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Ubuntu 20.04 (&lt;code&gt;focal&lt;/code&gt;)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;d12.x86_64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;u20.arm64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;EL7&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;RHEL7 / CentOS7 / UOS &amp;hellip;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;d12.x86_64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;el7.arm64&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;i class=&#34;fas fa-circle-check text-primary&#34;&gt;&lt;/i&gt; = 首要版本支持；&lt;i class=&#34;fas fa-circle-check text-secondary&#34;&gt;&lt;/i&gt; = 配置可选支持； &lt;i class=&#34;fas fa-circle-check text-danger&#34;&gt;&lt;/i&gt; = 过期版本商业支持&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;arm-支持&#34;&gt;ARM 支持&lt;/h2&gt;
&lt;p&gt;ARM 架构最近不断攻城略地，尤其是在云计算领域，ARM 服务器的市场份额正在逐渐增加。早在俩年前，就有用户提出对 ARM 架构支持的需求。
其实 Pigsty 在早先做 “国产化系统” 适配的时候，就已经有一个 ARM 支持了。但是在开源版本中提供 ARM64 架构支持，v3.1 版本是第一次。&lt;/p&gt;
&lt;p&gt;当然，目前的版本，ARM 还处在一个 Beta 状态：功能是有了，也能跑通，但是到底效果怎么样还是要跑一段时间，有了反馈才知道。&lt;/p&gt;
&lt;p&gt;目前 Pigsty 的主体功能已经都完成适配了，比如 Grafana / Prometheus  全家桶这些我也都打好了 ARM 的软件包，
尚未支持的部分主要是 PG 扩展 —— 特指由 Pigsty 维护的 140 个扩展 —— 目前还没有提供 ARM 支持，已经在做了。
不过，如果你用到的扩展都是 PGDG 中已经提供的（比如 postgis, pgvector 这种），那么没有问题。&lt;/p&gt;
&lt;p&gt;目前，ARM 版本在 EL9，Debian 12，Ubuntu 22.04 上运行状态良好。
EL8 有一些PGDG官方包缺失，Ubuntu24有个别扩展缺失，所以目前还不建议在这两个系统上使用 ARM 版本。&lt;/p&gt;
&lt;p&gt;我准备将 ARM 试点运行一两个小版本，当扩展齐全之后，我会将其标记为 GA。欢迎各位朋友试用 ARM 版本并向我提出反馈意见。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;配置简化&#34;&gt;配置简化&lt;/h2&gt;
&lt;p&gt;另一个在 Pigsty v3.1 中进行的显著改进是配置简化，如何管理不同操作系统发行版，大小版本的软件包差异一直是一个比较让人头疼的问题。&lt;/p&gt;
&lt;p&gt;比如，因为很多操作系统发行版上的包名，可用软件集合其实是有一些区别的，所以在此前的版本里，Pigsty 会根据每个操作系统发行版生成一个独立的配置文件。
但是这样很快就会出现排列组合爆炸，比如，Pigsty 默认提供十几种场景下的配置模板，如果每个模板都要针对 5 - 7 个 操作系统版本生成，那么总数就要爆炸了。&lt;/p&gt;
&lt;p&gt;但计算机科学中的任何问题都可以通过增加一个间接层来解决，而这个问题呢也也不例外。在 v3.1 版本中，Pigsty 引入了一个新的配置文件 &lt;code&gt;package_map&lt;/code&gt;，用于定义软件包的别名。
然后针对每个操作系统发行版，我们都会生成一个 &lt;code&gt;node_id/vars&lt;/code&gt; 配置文件，将固定的包别名翻译为操作系统上具体的软件包列表。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;config.png&#34; src=&#34;/zh/blog/releases/v3.1.0/config.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;比如，Supabase 自建模板中启用了几十个扩展，用户只需要提供扩展的名字就可以了，至于芯片架构，操作系统版本，PG版本，包名之类的细节差异全都在内部处理好了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pg_extensions: &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# extensions to be installed on this cluster&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- supabase   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# essential extensions for supabase&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- timescaledb postgis pg_graphql pg_jsonschema wrappers pg_search pg_analytics pg_parquet plv8 duckdb_fdw pg_cron pg_timetable pgqr
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- supautils pg_plan_filter passwordcheck plpgsql_check pgaudit pgsodium pg_vault pgjwt pg_ecdsa pg_session_jwt index_advisor
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- pgvector pgvectorscale pg_summarize pg_tiktoken pg_tle pg_stat_monitor hypopg pg_hint_plan pg_http pg_net pg_smtp_client pg_idkit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;举个例子，如果你想下载安装 PG 16 的内核与扩展，以前你需要把下载列表和安装列表里的包全换成16的版本，现在你只需要简单的修改一个 &lt;code&gt;pg_version&lt;/code&gt; 参数就行了。
最后的效果非常好，基本实现了所有操作系统发行版都能使用相同的配置文件进行安装，将不同系统的差异与管理复杂度都隐藏在了内部。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;基础设施改进&#34;&gt;基础设施改进&lt;/h2&gt;
&lt;p&gt;除了功能上的改进之外，我们还在不断改善基础设施。例如在 v3.0 引入的安装 MSSQL 兼容的 Babelfish 内核，Oracle 兼容的 IvorySQL 内核，以及国产 PolarDB 内核，都要求用户使用一个外部仓库在线安装。&lt;/p&gt;
&lt;p&gt;现在，Pigsty 官方仓库直接提供了 Babelfish，IvorySQL，PolarDB 等内核的镜像仓库，安装这些“异国风味”PG替换内核变得更加简单了 —— 现在的效果就是，不需要什么额外的配置，使用预置模板一键安装即可。&lt;/p&gt;
&lt;p&gt;此外，我们还维护着 Prometheus 与 Grafana 的 YUM/ATP x AMD/ARM 软件仓库，并实时跟进这些可观测性组件的版本。在这次升级中，Prometheus 升级到了 v3 大版本，而 VictoriaLogs 也正式发布了 v1 版本。
总的来说，如果你需要用到这些监控软件，Pigsty 的仓库也能帮到您。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;minio-改进&#34;&gt;MinIO 改进&lt;/h2&gt;
&lt;p&gt;最后我们来聊一下开源对象存储自建，MinIO。
Pigsty 将 MinIO 用作 PostgreSQL 的备份存储，与 Supabase 的底层存储服务，
并致力于将 MinIO 的部署门槛压低到有手就行 —— Deploy in minutes, Scale to millions。&lt;/p&gt;
&lt;p&gt;在我们最早内部使用 MinIO 的时候，还是 0.x 的版本，而从那时到现在 MinIO 也有了很大的进步。
当年我们用 MinIO 存 25 PB 数据，因为 MinIO 不支持在线扩容，所以只能拆出了七八个独立集群依次使用。
而现在 MinIO 虽然仍然不能在线修改磁盘/节点数量，但可以通过添加存储池 - 迁移 - 淘汰旧存储池的方式实现平滑扩容了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;minio.png&#34; src=&#34;/zh/blog/releases/v3.1.0/minio.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 Pigsty v3.1 中，我重新通读了 MinIO 的文档，并根据新版本的特性调整了 MinIO 的最佳实践配置模板与SOP。
除了之前的 MinIO 单机单盘，单机多盘，多机多盘模式，我们还支持了多存储池部署模式，并提供了 Pigsty 中 MinIO 的管理预案 ——
包括磁盘故障，节点故障的处理，集群上下线，存储扩缩容，使用 VIP 与 HAProxy 对外提供高可用接入的方案，全都有据可查，几行命令就能轻松解决。&lt;/p&gt;
&lt;p&gt;对象存储是云上的基石性服务，MinIO 作为开源对象存储的代表，其性能与功能都非常优秀，更重要的是，它是一个云中立的开源软件。&lt;/p&gt;
&lt;p&gt;您也可以使用 MinIO 来替代云上的对象存储服务，正如《&lt;a href=&#34;https://mp.weixin.qq.com/s/mknFXO5DSfxw7st8hhxjBQ&#34;&gt;DHH：下云超预期，能省一个亿&lt;/a&gt;》所述，
他们云上有 10PB 的对象存储（列表价每年300万），SavingPlan打折后每年130万美元，合 93万人民币 / PB·年。
而 1.2 PB的专用存储服务器一台十几万人民币上下，三副本冗余， 整几台套上MinIO就是对象存储了。
再加上网电运维，整个五年TCO 也超不过云上一年的折后消费，所以这里蕴含着惊人的降本增效潜力。
如果你的的业务在大量使用对象存储，那么本地 MinIO 自建 + Cloudflare 可能是非常值得考虑的一个更优解。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;服务体系&#34;&gt;服务体系&lt;/h2&gt;
&lt;p&gt;Pigsty v3.1 达到了一个我比较满意的状态，接下来我的工作重心会放在服务体系的构建上。&lt;/p&gt;
&lt;p&gt;Pigsty 是个开源免费的软件，它已经解决了 PG 运维中会遇到的绝大多数问题。如果你自己是开源老司机，真遇上疑难杂症自己也可以解决。
但是对于一些大型企业用户，特别是那些没有专职 DBA 的企业来说，还是需要有人来“兜底”的，毕竟，开源软件的核心就是 NO WARRANTY。&lt;/p&gt;
&lt;p&gt;正如《&lt;a href=&#34;https://mp.weixin.qq.com/s/E0MtNxPVMQ4PAkIFmispTw&#34;&gt;PolarDB20块好兄弟：数据库到底应该卖什么价&lt;/a&gt;》中所述，体面数据库服务其实是有市场公允价的，一般在 &lt;strong&gt;1~2万人民币 / vCPU·年&lt;/strong&gt;。
不论你是去买 Oracle 的服务支持，还是 EDB，Fujitsu 的开源PG服务，或者是 AWS 的 RDS / Aurora ，其实都是这个价位。&lt;/p&gt;
&lt;p&gt;之前我定的服务价格太低，已经引起海内外同行微词 —— 乃这不是破坏市场，低价倾销吗？你作为国内顶级PG专家定这个价还公开，让我们怎么办。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;price.png&#34; src=&#34;/zh/blog/releases/v3.1.0/price.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以这次我也重新调整了一下定价体系，基本锚定业界平均定价水平。反正这也是你情我愿的双向选择，欢迎有兴趣的朋友们选购专业服务，打钱支持！新人新办法，老客老价格。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;v310&#34;&gt;v3.1.0&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;亮点特性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL 17 现已成为默认使用的主要版本 (17.2)&lt;/li&gt;
&lt;li&gt;Ubuntu 24.04 系统支持&lt;/li&gt;
&lt;li&gt;arm 架构支持：EL9, Debian12, Ubuntu 22.04&lt;/li&gt;
&lt;li&gt;Supabase 一键自建，新的剧本 &lt;code&gt;supabase.yml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;MinIO 最佳实践改进，配置模板与 Vagrant 模板&lt;/li&gt;
&lt;li&gt;提供了一系列开箱即用的配置模板与文档说明。&lt;/li&gt;
&lt;li&gt;允许在 &lt;code&gt;configure&lt;/code&gt; 过程中使用 &lt;code&gt;-v|--version&lt;/code&gt; 指定使用的 PG 大版本。&lt;/li&gt;
&lt;li&gt;调整 PG 默认插件策略：默认安装 &lt;code&gt;pg_repack&lt;/code&gt;, &lt;code&gt;wal2json&lt;/code&gt; 以及 &lt;code&gt;pgvector&lt;/code&gt; 三个关键扩展。&lt;/li&gt;
&lt;li&gt;大幅简化 &lt;code&gt;repo_packages&lt;/code&gt; 本地软件源构建逻辑，允许在 &lt;code&gt;repo_packages&lt;/code&gt; 中使用软件包组别名&lt;/li&gt;
&lt;li&gt;提供了 WiltonDB，IvorySQL，PolarDB 的软件源镜像，简化三者的安装。&lt;/li&gt;
&lt;li&gt;默认启用数据库校验和。&lt;/li&gt;
&lt;li&gt;修复 ETCD 与 MINIO 日志面板&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;软件升级&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL 17.2, 16.6, 15.10, 14.15, 13.18, 12.22&lt;/li&gt;
&lt;li&gt;PostgreSQL 扩展版本变动请参考：https://ext.pigsty.io&lt;/li&gt;
&lt;li&gt;Patroni 4.0.4&lt;/li&gt;
&lt;li&gt;MinIO 20241107 / MCLI 20241117&lt;/li&gt;
&lt;li&gt;Rclone 1.68.2&lt;/li&gt;
&lt;li&gt;Prometheus: 2.54.0 -&amp;gt; 3.0.0&lt;/li&gt;
&lt;li&gt;VictoriaMetrics 1.102.1 -&amp;gt; 1.106.1&lt;/li&gt;
&lt;li&gt;VictoriaLogs v0.28.0 -&amp;gt; 1.0.0&lt;/li&gt;
&lt;li&gt;vslogcli 1.0.0&lt;/li&gt;
&lt;li&gt;MySQL Exporter 0.15.1 -&amp;gt; 0.16.0&lt;/li&gt;
&lt;li&gt;Redis Exporter 1.62.0 -&amp;gt; 1.66.0&lt;/li&gt;
&lt;li&gt;MongoDB Exporter 0.41.2 -&amp;gt; 0.42.0&lt;/li&gt;
&lt;li&gt;Keepalived Exporter 1.3.3 -&amp;gt; 1.4.0&lt;/li&gt;
&lt;li&gt;DuckDB 1.1.2 -&amp;gt; 1.1.3&lt;/li&gt;
&lt;li&gt;etcd 3.5.16 -&amp;gt; 3.5.17&lt;/li&gt;
&lt;li&gt;tigerbeetle 16.8 -&amp;gt; 0.16.13&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;API变更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;repo_upstream&lt;/code&gt;: 针对每个具体的操作系统发行版生成默认值：&lt;a href=&#34;https://github.com/Vonng/pigsty/tree/main/roles/node_id/vars&#34;&gt;&lt;code&gt;roles/node_id/vars&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;repo_packages&lt;/code&gt;: 允许使用 &lt;code&gt;package_map&lt;/code&gt; 中定义的别名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;repo_extra_packages&lt;/code&gt;: 新增未指定时的默认值，允许使用 &lt;code&gt;package_map&lt;/code&gt; 中定义的别名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pg_checksum&lt;/code&gt;: 默认值修改为 &lt;code&gt;true&lt;/code&gt;，默认打开。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pg_packages&lt;/code&gt;: 默认值修改为：&lt;code&gt;postgresql, wal2json pg_repack pgvector, patroni pgbouncer pgbackrest pg_exporter pgbadger vip-manager&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pg_extensions&lt;/code&gt;: 默认值修改为空数组 &lt;code&gt;[]&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;infra_portal&lt;/code&gt;: 允许为 &lt;code&gt;home&lt;/code&gt; 服务器指定 &lt;code&gt;path&lt;/code&gt;，替代默认的本地仓库路径 &lt;code&gt;nginx_home&lt;/code&gt; (&lt;code&gt;/www&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 面向未来数据库的现代硬件</title>
      <link>/zh/blog/db/future-hardware/</link>
      <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/future-hardware/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/future-hardware/featured_hu02aa61ae1d9de35cbe238d2676170cb9_248273_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;blockquote&gt;
&lt;p&gt;作者：Alex Miller 2024-11-19 @ Snowflake, Apple, Google&lt;/p&gt;
&lt;p&gt;译者：冯若航 &amp;amp; GPT o1，PG 大法师，数据库老司机，云计算泥石流&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;译者推荐：本文是一篇关于硬件发展如何影响数据库设计的综述，分别介绍了在网络，存储，计算三个领域的关键硬件进展。我一直都认为，充分利用好新硬件（而非折腾所谓分布式）才是数据库内核发展的正路。
请看《&lt;a href=&#34;https://mp.weixin.qq.com/s/1OSRcBfd58s0tgZTUZHB9g&#34;&gt;重新拿回计算机硬件的红利&lt;/a&gt;》与《&lt;a href=&#34;https://mp.weixin.qq.com/s/-eaCoZR9Z5srQ-1YZm1QJA&#34;&gt;分布式数据库是伪需求吗&lt;/a&gt;》。
而这篇文章很好地介绍了一些数据库领域的前沿软硬件结合实践，值得一读。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;https://transactional.blog/blog/2024-modern-database-hardware&#34;&gt;原文：Modern Hardware for Future Databases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们正处于一个令人兴奋的数据库时代，每个主要资源领域都在不断进步，每一项进步都有可能影响最优的数据库架构。总的来说，我希望在未来十年内，能看到数据库架构发生一些有趣的转变，但我不确定是否能有必要的硬件支持。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;网络&#34;&gt;网络&lt;/h2&gt;
&lt;p&gt;根据 &lt;a href=&#34;https://muratbuffalo.blogspot.com/2024/09/hpts24-day-1-part-1.html&#34;&gt;Stonebraker 在 HPTS 2024 的演讲&lt;/a&gt;，使用 VoltDB 的一些基准测试发现，其服务器端大约 60% 的 CPU 时间花在了 TCP/IP 协议栈上。VoltDB 本身就是一种旨在尽可能消除非查询处理工作以服务请求的数据库架构，所以这是一个极端的例子。然而，这仍然有效地指出了 TCP 的计算开销并不小，且随着网络带宽的增加，这一问题会变得更加明显。尽管这并不是新的观察结果，但已有一系列逐步升级的解决方案被提出。&lt;/p&gt;
&lt;p&gt;一种被提议的解决方案是用另一种基于 UDP 的协议替换 TCP，QUIC 就是一个常被选择的例子。然而，这种想法存在误区。&lt;a href=&#34;https://blog.apnic.net/2022/11/03/comparing-tcp-and-quic/&#34;&gt;&amp;ldquo;虽然这是一个严重不准确的简化，但在最简单的层面上，QUIC 只是将 TCP 封装并加密在 UDP 负载中。&amp;rdquo;&lt;/a&gt; TCP 和 QUIC 的 CPU 开销&lt;a href=&#34;https://www.fastly.com/blog/measuring-quic-vs-tcp-computational-efficiency&#34;&gt;也非常相似&lt;/a&gt;。要想实现显著的改进，需要进一步偏离 TCP 并针对特定环境进行专门化，例如 &lt;a href=&#34;https://networking.harshkapadia.me/files/homa/research-papers/its-time-to-replace-tcp-in-the-datacenter-v2.pdf&#34;&gt;Homa&lt;/a&gt; 这样的论文展示了在数据中心环境中的一些改进。但即使有了更好的协议，更大的优化潜力还是在于减少内核网络栈的开销。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：如果你在阅读时想知道为什么这里提到了 QUIC，那是因为我多次参与了关于 TCP 或 TLS 被指责为某些问题的讨论，而迁移到 QUIC 被建议为解决方案。QUIC 确实能帮助解决一些问题，但也有一些问题它并不能改善，甚至可能使其更糟。需要理解的是，在稳定状态下的延迟和带宽属于后者。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一种减少内核工作量的方法是将计算密集但简单的部分移至硬件。这在一段时间内已经逐步实现，例如增强了&lt;a href=&#34;https://docs.kernel.org/networking/segmentation-offloads.html&#34;&gt;将分段和校验任务卸载到网卡&lt;/a&gt;。更近期的改进是 &lt;a href=&#34;https://www.kernel.org/doc/html/v5.2/networking/tls-offload.html&#34;&gt;KTLS&lt;/a&gt;，它允许将 TLS 中的数据包加密也卸载到网卡。尝试将整个 TCP 卸载到硬件中，以 &lt;a href=&#34;https://wiki.linuxfoundation.org/networking/toe&#34;&gt;TCP 卸载引擎（TOE）&lt;/a&gt; 的形式，已被 Linux 维护者系统性地拒绝了。因此，尽管有了这些不错的改进，但 TCP 协议栈的主要部分仍然是内核的责任。&lt;/p&gt;
&lt;p&gt;因此，另一种解决方案是去除内核作为网卡和应用程序之间的中间层。像 &lt;a href=&#34;https://www.dpdk.org/&#34;&gt;数据平面开发套件（DPDK）&lt;/a&gt; 这样的框架允许用户空间轮询网卡以获取数据包，消除了中断的开销，将所有处理保留在用户空间意味着不需要进入和退出内核。DPDK 在采用方面也遇到了困难，因为它需要对网卡的独占控制。因此，每个主机需要有两个网卡，一个用于 DPDK，另一个用于操作系统和其他所有进程。Marc Richards 制作了一个不错的&lt;a href=&#34;https://talawah.io/blog/linux-kernel-vs-dpdk-http-performance-showdown/&#34;&gt;Linux 内核 vs DPDK基准测试&lt;/a&gt;，结果显示 DPDK 提供了 50% 的吞吐量提升，随后列举了为获得这 50% 增益而需要接受的一系列缺点。看来这是大多数数据库不感兴趣的权衡，甚至 ScyllaDB 也基本上放弃了对此的投入。&lt;/p&gt;
&lt;p&gt;更新的硬件提供了一个有趣的新选项：将 CPU 从网络路径中移除。&lt;a href=&#34;https://www.naddod.com/blog/easily-understand-rdma-technology&#34;&gt;RDMA（远程直接内存访问）&lt;/a&gt; 提供了 &lt;em&gt;verbs&lt;/em&gt;，一组有限的操作（主要是读、写和 8 字节的 CAS），这些操作可以完全在网卡内执行，无需 CPU 交互。切断 CPU 后，远程读取的延迟接近 1 微秒，而 TCP 的延迟则超过 100 微秒。作为 RDMA 的一部分，数据包丢失和流量控制的责任也完全下放到网卡。切断 CPU 还意味着可以在不使 CPU 成为瓶颈的情况下传输大量数据。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：为什么将丢包检测和流量控制下放到硬件对于 RDMA 是可接受的，但 Linux 维护者一直拒绝对 TCP 这样做？因为这是一个不同且受限得多的 API，减少了网卡与主机之间的复杂性。&lt;a href=&#34;https://scholar.google.com/scholar?cluster=4106138525527042387&#34;&gt;《TCP 卸载是一个愚蠢但已经到来的想法》&lt;/a&gt; 是在这个领域一篇有趣的阅读材料。（来自 2003 年！）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将 RDMA 作为低延迟和高吞吐量的网络原语，改变了人们设计数据库的方式。&lt;a href=&#34;https://www.vldb.org/pvldb/vol10/p685-zamanian.pdf/&#34;&gt;《神话的终结：分布式事务可以扩展》&lt;/a&gt; 显示了 RDMA 的低延迟使经典的 2PL+2PC 能够扩展到大型集群。&lt;a href=&#34;https://www.cidrdb.org/cidr2023/papers/p50-ziegler.pdf&#34;&gt;《云中可扩展的 OLTP 是一个已解决的问题吗？》&lt;/a&gt; 提出了在节点之间共享可写页面缓存的想法，因为低延迟使组件的更紧密耦合变得可行。RDMA 不仅适用于 OLTP 数据库；BigQuery 使用了基于 &lt;a href=&#34;https://cloud.google.com/blog/products/bigquery/in-memory-query-execution-in-google-bigquery&#34;&gt;RDMA Shuffle 的连接&lt;/a&gt;，因为其高吞吐量。改变给定吞吐量下的延迟和 CPU 利用率，改变了最佳设计的选择，或者解锁了以前被认为不可行的新设计[^3]。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：要使用 RDMA，我强烈建议使用 &lt;a href=&#34;https://ofiwg.github.io/libfabric/&#34;&gt;libfabric&lt;/a&gt;，因为它对所有不同的 RDMA 供应商和库进行了抽象。&lt;a href=&#34;https://rdmamojo.com/&#34;&gt;RDMAmojo 博客&lt;/a&gt; 有多年关于 RDMA 的专业内容，是学习 RDMA 各个方面的最佳资源之一。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最后，还有一类更新的硬件，延续了将更多计算能力放入网卡本身的趋势，即 SmartNIC 或数据处理单元（DPUs）。它们允许将任意计算下放到网卡，并可能响应其他网卡的请求而被调用。这些技术相当新颖，我建议查看 &lt;a href=&#34;https://scholar.google.com/scholar?cluster=14622696590036176289&#34;&gt;《DPDPU：使用 DPU 进行数据处理》&lt;/a&gt; 以获取概览，&lt;a href=&#34;https://scholar.google.com/scholar?cluster=12305794631120951674&#34;&gt;《DDS：DPU 优化的分布式存储》&lt;/a&gt; 了解如何将它们集成到数据库中，以及 &lt;a href=&#34;https://www.microsoft.com/en-us/research/uploads/prod/2018/03/Azure_SmartNIC_NSDI_2018.pdf&#34;&gt;《Azure 加速网络：公共云中的 SmartNIC》&lt;/a&gt; 了解部署细节。总体而言，我预计 SmartNIC 会将 RDMA 从简单的读写扩展到允许绕过 CPU 的通用 RPC（用于计算成本低的请求回复）。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;存储&#34;&gt;存储&lt;/h2&gt;
&lt;p&gt;在存储设备方面，有一些旨在降低特定用例中存储设备总拥有成本的进展。制造商巧妙地发现，可以读取比写入产生的磁化硬盘盘片的磁道宽度更小的条带，因此可以重叠磁道以达到最小宽度。于是，我们有了&lt;a href=&#34;https://www.storagereview.com/news/what-is-shingled-magnetic-recording-smr&#34;&gt;叠瓦式磁记录（SMR）&lt;/a&gt;硬盘驱动器，引入了将存储划分为&lt;strong&gt;区域&lt;/strong&gt;（zones）的概念，这些区域只支持追加或擦除。SMR HDD 针对的是像&lt;a href=&#34;https://dropbox.tech/infrastructure/four-years-of-smr-storage-what-we-love-and-whats-next&#34;&gt;对象存储&lt;/a&gt;这样访问不频繁但需要存储大量数据的用例。&lt;/p&gt;
&lt;p&gt;类似的想法已被应用到 SSD，&lt;strong&gt;分区 SSD&lt;/strong&gt;（Zoned SSDs）也已出现。在 SSD 中暴露区域意味着驱动器不需要提供闪存转换层（FTL）或复杂的垃圾回收过程。与 SMR 类似，这降低了 ZNS SSD 相对于“常规”SSD 的成本，但还特别关注应用驱动的垃圾回收效率更高，从而减少总的写放大效应并延长驱动器寿命。考虑在 SSD 上的 LSM（Log-Structured Merge Trees），它们已经通过增量追加和大擦除块进行操作。移除 LSM 和 SSD 之间的 FTL，打开了优化的机会。最近，Google 和 Meta 合作提出了&lt;a href=&#34;https://www.micron.com/about/blog/storage/innovations/eliminating-the-io-blender-promise-of-flexible-data-placement&#34;&gt;灵活数据放置（FDP）&lt;/a&gt;的提案，它更像是对具有相关生命周期的写入进行分组的提示，而不是像 ZNS 那样严格执行分区。目标是实现更容易的升级路径，使 SSD 可以忽略写请求的 FDP 部分，仍然在语义上正确，只是性能或写放大效应更差。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：如果你期待关于&lt;a href=&#34;https://pmem.io/pmdk/libpmem/&#34;&gt;持久内存&lt;/a&gt;的讨论，遗憾的是 Intel 已经终止了 &lt;a href=&#34;https://en.wikipedia.org/wiki/3D_XPoint&#34;&gt;Optane&lt;/a&gt;，所以目前这是一个死胡同。似乎还有一些公司，如 &lt;a href=&#34;https://americas.kioxia.com/en-ca/business/news/2021/memory-20210913-1.html&#34;&gt;Kioxia&lt;/a&gt; 或 &lt;a href=&#34;https://investor.everspin.com/news-releases/news-release-details/everspin-technologies-unveils-persyst-simplifying-persistent&#34;&gt;Everspin&lt;/a&gt; 继续在这方面努力，但我还没有听说过它们的实际应用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其他改进并非针对成本效率，而是提高存储设备支持的功能集。特别关注 NVMe，NVMe 添加了&lt;a href=&#34;https://www.snia.org/educational-library/towards-copy-offload-linux-nvme-2021&#34;&gt;复制命令&lt;/a&gt;，以消除读取和写入相同数据的浪费。&lt;a href=&#34;https://files.futurememorystorage.com/proceedings/2013/20130812_PreConfD_Marks.pdf#page=46&#34;&gt;融合的比较与写入命令&lt;/a&gt;允许将 CAS 操作下放到驱动器本身，从而实现诸如将&lt;a href=&#34;https://scholar.google.com/scholar?cluster=7804091931900436017&#34;&gt;乐观锁耦合&lt;/a&gt;下放到驱动器的创新设计。NVMe 从 SCSI 继承了&lt;a href=&#34;https://lwn.net/Articles/548294/&#34;&gt;数据完整性字段（DIF）&lt;/a&gt;和&lt;a href=&#34;https://oss.oracle.com/~mkp/docs/dix.pdf&#34;&gt;数据完整性扩展（DIX）&lt;/a&gt;的支持，这使得可以将页面校验和下放到驱动器中（Oracle 就显著地使用了这一点）。还有像 &lt;a href=&#34;https://blocksandfiles.com/2019/09/05/samsungs-potentially-groundbreaking-keyvalue-ssd/&#34;&gt;KV-SSD&lt;/a&gt;这样的项目，将整个数据模型从按索引存储块改变为按键存储对象，甚至走向完全取代软件存储引擎。SSD 制造商持续让 SSD 具备更多的操作能力。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：截至 2024 年 7 月 25 日，AWS 已&lt;a href=&#34;https://aws.amazon.com/blogs/storage/how-to-optimize-querying-your-data-in-amazon-s3/&#34;&gt;取消发布 S3 Select&lt;/a&gt;，可能是为了支持 &lt;a href=&#34;https://aws.amazon.com/s3/features/object-lambda/&#34;&gt;S3 Object Lambda&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作为 SSD 功能的倒数第二步，&lt;strong&gt;SmartSSD&lt;/strong&gt; 正在出现，它允许在 SSD 中集成任意计算。&lt;a href=&#34;http://pages.cs.wisc.edu/~yxy/cs764-f20/papers/SmartSSD.pdf&#34;&gt;《在 SmartSSD 上进行查询处理：机会与挑战》&lt;/a&gt; 综述了它们在查询处理任务中的应用。将过滤器下推到存储总是有利的；我经常引用之前的工作，如利用 S3 Select 的 &lt;a href=&#34;https://marcoserafini.github.io/assets/pdf/pushdown.pdf&#34;&gt;PushdownDB&lt;/a&gt;，作为分析领域的优秀案例。使用 SmartSSD，我们有像 &lt;a href=&#34;https://www.usenix.org/conference/fast20/presentation/cao-wei&#34;&gt;《POLARDB 与计算存储的融合》&lt;/a&gt; 这样的论文。即使没有专门的集成，也有人认为，即使是透明的驱动器内压缩也能在写放大方面缩小 B+ 树和 LSM 之间的差距（&lt;a href=&#34;https://www.usenix.org/conference/fast22/presentation/qiao&#34;&gt;参考&lt;/a&gt;）。利用 SmartSSD 仍然是一个新兴的研究领域，但其潜在影响巨大。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;计算&#34;&gt;计算&lt;/h2&gt;
&lt;h3 id=&#34;事务处理&#34;&gt;事务处理&lt;/h3&gt;
&lt;p&gt;在最近的 VLDB 会议上，两位数据库研究领域的权威发表了一篇立场论文：&lt;a href=&#34;https://www.vldb.org/pvldb/vol17/p2115-leis.pdf&#34;&gt;《云原生数据库系统和 Unikernels：为现代硬件重新想象操作系统抽象》&lt;/a&gt;，主张 Unikernel 允许数据库针对其确切需求定制操作系统。早期关于 &lt;a href=&#34;https://scholar.google.com/scholar?cluster=7903866005464261403&#34;&gt;VMCache&lt;/a&gt; 的工作特别强调了高效数据库缓冲区管理的挑战，在这个领域，要么接受&lt;a href=&#34;https://db.in.tum.de/~leis/papers/leanstore.pdf&#34;&gt;指针变换（pointerswizzling）&lt;/a&gt;的复杂性，要么频繁地挂钩内核并调用 &lt;code&gt;mmap()&lt;/code&gt; 相关的系统调用。&lt;/p&gt;
&lt;p&gt;两种选择都不理想，而 Unikernel 则提供了对虚拟内存原语的直接访问。随着该领域受到更多关注，开发 Unikernel 所需的努力正在减少。&lt;a href=&#34;https://jp.linkedin.com/in/akira-kurogane&#34;&gt;黑金章（Akira Kurogane）&lt;/a&gt; 通过 &lt;a href=&#34;https://unikraft.org/&#34;&gt;Unikraft&lt;/a&gt; 以极小的代价就让 &lt;a href=&#34;https://www.linkedin.com/pulse/mongodb-booted-unikernel-os-akira-kurogane-vdf7c/&#34;&gt;MongoDB 作为Unikernel 运行&lt;/a&gt;，后续的帖子显示，在没有任何 MongoDB 内部更改的情况下，性能有所提升。一直以来都有一个无休止的笑话，称数据库想要成为操作系统，因为对性能改进的渴望需要对网络、文件系统、磁盘 I/O、内存等有更多的控制，而 Unikernel 数据库正好提供了这一切，使其成为可能。&lt;/p&gt;
&lt;p&gt;为了实现超越 TLS 或磁盘加密的数据机密性，安全飞地（secure enclaves）允许执行可验证的未被篡改的代码，使所操作的数据免受被破坏的操作系统的侵害。&lt;a href=&#34;https://learn.microsoft.com/en-us/windows/security/hardware-security/tpm/tpm-fundamentals&#34;&gt;可信平台模块（TPM）&lt;/a&gt; 允许密钥在机器中安全保存，而安全飞地则扩展到任意的代码和数据。这使得构建对恶意攻击具有极高弹性的数据库成为可能，但对其设计有若干限制。微软已经发表了将&lt;a href=&#34;https://blog.acolyer.org/2018/07/05/enclavedb-a-secure-database-using-sgx/&#34;&gt;安全飞地集成到 Hekaton 中&lt;/a&gt;的研究，并已将该工作作为 &lt;a href=&#34;https://learn.microsoft.com/en-us/sql/relational-databases/security/encryption/always-encrypted-enclaves?view=sql-server-ver16&#34;&gt;SQL Server Always Encrypted&lt;/a&gt; 的一部分发布。阿里巴巴也发表了他们在为担心数据机密性的企业客户构建&lt;a href=&#34;https://vldb.org/pvldb/vol14/p1019-sun.pdf&#34;&gt;飞地原生存储引擎&lt;/a&gt;方面的努力。数据库一直以来通过&lt;a href=&#34;https://www.fortanix.com/faq/confidential-computing/how-does-confidential-computing-help-with-regulatory-compliance-requirements&#34;&gt;合规监管&lt;/a&gt;这一渠道推广安全改进，安全飞地在数据机密性方面是一个有意义的进步。&lt;/p&gt;
&lt;p&gt;自从 Spanner 引入 &lt;a href=&#34;https://sookocheff.com/post/time/truetime/&#34;&gt;TrueTime&lt;/a&gt; 以来，时钟同步在地理分布式数据库的事务排序中变得备受关注。每个主要的云提供商都有一个与原子钟或 GPS 卫星连接的 NTP 服务（&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html&#34;&gt;AWS&lt;/a&gt;、&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/virtual-machines/linux/time-sync#overview&#34;&gt;Azure&lt;/a&gt;、&lt;a href=&#34;https://developers.google.com/time/faq#whatis&#34;&gt;GCP&lt;/a&gt;）。这对任何类似的设计都非常有用，例如 CockroachDB 或 Yugabyte，它们的正确性对时钟同步至关重要，而保守的宽误差范围会降低性能。AWS 最近的 Aurora Limitless 也&lt;a href=&#34;https://www.youtube.com/watch?v=a9FfjuVJ9d8&amp;t=29m25s&#34;&gt;使用了类似 TrueTime 的设计&lt;/a&gt;。这是唯一提到的特定云的、并非完全硬件的内容，因为这是主要的云供应商向用户提供昂贵的硬件（原子钟），而用户原本不会考虑自行购买。&lt;/p&gt;
&lt;p&gt;硬件事务内存有着相当不幸的历史。&lt;a href=&#34;https://www.theregister.com/2007/08/21/sun_transactional_memory_rock/&#34;&gt;Sun 的 Rock 处理器&lt;/a&gt;具备硬件事务内存功能，直到 Sun 被收购并且 Rock 项目被终止。英特尔曾两次尝试发布它，但两次都不得不禁用。在将硬件事务内存应用于内存数据库的主题上有一些有趣的工作，但除了找到一些旧的 CPU 进行实验之外，我们都必须等待 CPU 制造商宣布他们计划再次尝试。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：第一次是由于&lt;a href=&#34;http://techreport.com/news/26911/errata-prompts-intel-to-disable-tsx-in-haswell-early-broadwell-cpus&#34;&gt;一个错误&lt;/a&gt;，第二次是由于&lt;a href=&#34;https://www.blackhat.com/docs/us-16/materials/us-16-Jang-Breaking-Kernel-Address-Space-Layout-Randomization-KASLR-With-Intel-TSX-wp.pdf&#34;&gt;一个破坏 KASLR 的侧信道攻击&lt;/a&gt;。还有一个通过&lt;a href=&#34;https://blog.ret2.io/2019/06/26/attacking-intel-tsx/&#34;&gt;误解CTF 挑战的意图&lt;/a&gt;而发现的投机执行定时攻击。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;查询处理&#34;&gt;查询处理&lt;/h3&gt;
&lt;p&gt;一直以来，不断有公司成立，试图利用专用硬件来加速查询处理，以实现比仅使用 CPU 的竞争对手更好的性能和成本效率。像 &lt;a href=&#34;https://voltrondata.com/theseus.html&#34;&gt;Voltron&lt;/a&gt;、&lt;a href=&#34;https://www.heavy.ai/&#34;&gt;HEAVY.ai&lt;/a&gt; 和 &lt;a href=&#34;https://brytlyt.io/&#34;&gt;Brytlyt&lt;/a&gt; 这样的 GPU 驱动数据库，就是朝这个方向迈出的第一步。如果英特尔或 AMD 的集成显卡在未来某个时候获得 OpenCL 支持，我不会感到太惊讶，这将为所有数据库在更广泛的硬件配置中假设一定程度的 GPU 能力打开大门。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：OpenGL 计算着色器是使用 GPU 进行任意计算的最通用和可移植的形式，而集成显卡芯片组已经支持这些。不过，我找不到任何关于使用它们的数据库相关论文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还有机会使用更高能效的硬件。最新的神经处理单元（NPU）和张量处理单元（TPU）已经在类似 &lt;a href=&#34;https://dl.acm.org/doi/pdf/10.1145/3514221.3517869&#34;&gt;《TCUDB：使用张量处理器加速数据库》&lt;/a&gt; 的工作中被证明可用于查询处理。一些公司尝试利用 FPGA。&lt;a href=&#34;https://dbdb.io/db/swarm64&#34;&gt;Swarm64&lt;/a&gt; 曾试图（但可能失败了）进入这个市场。AWS 自己也以 &lt;a href=&#34;https://aws.amazon.com/blogs/aws/new-aqua-advanced-query-accelerator-for-amazon-redshift/&#34;&gt;Redshift AQUA&lt;/a&gt; 进行了尝试。即使是最大的公司，走到 ASIC 这一步似乎也不值得，因为连 Oracle 都在 2017 年&lt;a href=&#34;https://www.hpcwire.com/2017/09/07/oracle-layoffs-reportedly-hit-sparc-solaris-hard/&#34;&gt;停止了他们的 SPARC 开发&lt;/a&gt;。我对 FPGA 到 ASIC 的前景并不十分乐观，因为内存带宽无论如何都会在某个时候成为主要瓶颈，但 &lt;a href=&#34;https://adms-conf.org/&#34;&gt;ADMS&lt;/a&gt; 是关注该领域论文的会议。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：严格来说，ADMS 是附属于 VLDB 的一个研讨会，但我不知道泛指会议、期刊和研讨会的词是什么。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;云端可用性&#34;&gt;云端可用性&lt;/h2&gt;
&lt;p&gt;最后，让我们直面这个令人沮丧的事实：如果无法获得，这些硬件进步都无关紧要。对于当今的系统，这意味着云端，而云端并未向客户提供最前沿的硬件进步。&lt;/p&gt;
&lt;p&gt;在网络方面，情况并不理想。DPDK 是相对容易获取的最先进网络技术，因为大多数云允许某些类型的实例拥有多个网卡。AWS 以 &lt;a href=&#34;https://scholar.google.com/scholar?cluster=7115577907027624509&#34;&gt;安全可靠数据报（SRD）&lt;/a&gt; 的形式提供了伪 RDMA，根据&lt;a href=&#34;https://scholar.google.com/scholar?cluster=9445549416525532418&#34;&gt;基准测试&lt;/a&gt;，其性能大约介于 TCP 和 RDMA 之间。真正的 RDMA 仅在 Azure、GCP 和 OCI 的高性能计算实例中可用。只有阿里巴巴在通用计算实例上提供了 &lt;a href=&#34;https://www.alibabacloud.com/help/en/ecs/user-guide/erdma-overview&#34;&gt;RDMA&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：尽管可能会有类似于 SRD 较差的延迟影响。阿里巴巴通过 iWARP 部署了 RDMA，速度可能会稍慢一些，但我还没有看到任何基准测试。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SmartNIC 在任何公开场合都不可用。这其中有充分的理由：微软发表的论文指出，&lt;a href=&#34;https://scholar.google.com/scholar?cluster=12305794631120951674&#34;&gt;部署 RDMA 是困难的&lt;/a&gt;。事实上，&lt;a href=&#34;https://scholar.google.com/scholar?cluster=2434531805096404846&#34;&gt;非常困难&lt;/a&gt;。即使是他们关于&lt;a href=&#34;https://scholar.google.com/scholar?cluster=6986943445603020796&#34;&gt;成功使用 RDMA&lt;/a&gt; 的论文也强调了这非常困难。距离微软开始在内部使用 RDMA 已经接近十年了，但它仍未在他们的云端提供。我无法猜测它是否或何时会出现。&lt;/p&gt;
&lt;p&gt;在存储方面，情况并没有好多少。SMR HDD 少数几次进入消费市场时，仍以支持块存储 API 的驱动器形式出现，消费者&lt;a href=&#34;https://arstechnica.com/gadgets/2020/04/caveat-emptor-smr-disks-are-being-submarined-into-unexpected-channels/&#34;&gt;对此非常反感&lt;/a&gt;。ZNS SSD 似乎同样被锁定在仅限企业采购的协议背后。有人可能认为英特尔停止了 Optane 品牌的持久内存和 SSD，这意味着它们在云端不可用，但阿里巴巴仍然提供了&lt;a href=&#34;https://www.alibabacloud.com/help/en/tair/product-overview/persistent-memory-optimized-instances&#34;&gt;持久内存优化的实例&lt;/a&gt;。&lt;a href=&#34;https://sparecores.com/&#34;&gt;Spare Cores&lt;/a&gt; 的优秀团队实际上向我提供了每个云供应商的 &lt;code&gt;nvme id-ctrl&lt;/code&gt; 输出，他们获取的 NVMe 设备都没有支持任何可选功能：复制、融合的比较和写入、数据完整性扩展，或多块原子写入。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：尽管 AWS 支持&lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/storage-twp.html&#34;&gt;防止撕裂写入&lt;/a&gt;，GCP 以前也有类似的文档。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;阿里巴巴也是唯一一家在 SmartSSD 上进行投资的云供应商，与 ScaleFlux 合作在 PolarDB 上进行了研究。这仍然意味着 SmartSSD 对公众不可用，但即使论文也承认，这是“首次在公开文献中报道的、使用计算存储驱动器的云原生数据库的实际部署”。&lt;/p&gt;
&lt;p&gt;在计算方面，情况终于有所改善。云完全允许 Unikernel，TPM 也广泛可用，但据我所知，只有 &lt;a href=&#34;https://aws.amazon.com/ec2/nitro/nitro-enclaves/&#34;&gt;AWS&lt;/a&gt; 和 &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/confidential-computing/confidential-computing-enclaves&#34;&gt;Azure&lt;/a&gt;支持安全飞地。时间同步已可用，但没有承诺的误差范围使得无法关键依赖。（硬件事务内存不可用，但这很难责怪云供应商。）AI 的爆炸式增长意味着有足够的资金支持更高效的计算资源。GPU 在所有云中都可用。AWS[^5]、Azure、IBM 和阿里巴巴提供了 FPGA 实例。（GCP 和 OCI 没有。）不幸的现实是，只有当计算成为瓶颈时，更快的计算才有意义。GPU 和 FPGA 都受到内存限制的影响，因此无法在其本地内存中维护数据库。相反，需要依赖数据的流入和流出，这意味着受到 PCIe 速度的限制。所有这些都会鼓励在本地设备中进行周到的主板布局和总线设计，但这在云中是不可行的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：理想情况下，人们希望有对等 DMA 支持，能够直接从磁盘读取数据到 FPGA 中，而至少 AWS 的 F1 不支持这一点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此，我对下一代数据库的看法是悲观的：在新硬件进步可用之前，没人能够构建严重依赖它们的数据库，但没有云供应商愿意部署无法立即使用的硬件。下一代数据库正被这种循环依赖所束缚，因为它们尚未存在。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：除了云供应商自己。最值得注意的是，微软和谷歌在内部已经拥有 RDMA 并在他们的数据库产品中广泛利用，同时不允许公众使用。我一直有一篇草稿文章的提纲，标题是“云供应商的 RDMA 竞争优势”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然而，阿里巴巴的表现令人惊讶地出色。他们始终处于让所有硬件进步可用的前沿。我很惊讶在学术界和工业界中没有经常看到使用阿里巴巴进行基准测试。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 不要更新！发布当日叫停：PG也躲不过大翻车</title>
      <link>/zh/blog/pg/pg-faint/</link>
      <pubDate>Sat, 16 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/pg-faint/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/pg-faint/featured_hubd37b89dbe404550afccd8bef7892453_753592_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;p&gt;老话说的好，不要在星期五发布代码。前天刚发布的 PostgreSQL 例行小版本虽然特意避开了星期五发布，但却给社区加了一周的活 ——  PostgreSQL 社区将于下周四发布一个非常规紧急小版本 PostgreSQL 17.2，16.6， 15.10，14.15，13.20，甚至是刚刚已经 EOL 的 PG 12 也会有 12.22…… 。&lt;/p&gt;
&lt;p&gt;在过去十年里这是第一次出现这样的情况：在 PostgreSQL 发布日的当天，新版本就因为社区发现的问题而叫停。紧急发布的原因有两个，第一是修复 CVE-2024-10978 安全漏洞，这个不是大问题，真正的原因是：PostgreSQL 新的小版本修改了 ABI，导致依赖 ABI 的扩展崩溃 —— 比如 TimescaleDB。&lt;/p&gt;
&lt;p&gt;关于 PostgreSQL 小版本 ABI 兼容性的问题，在今年六月 PGConf 2024 上，Yuri 在扩展峰会上和《&lt;a href=&#34;https://www.pgevents.ca/events/pgconfdev2024/sessions/session/14-pushing-boundaries-with-extensions-for-extensions/&#34;&gt;Pushing boundaries with extensions, for extension&lt;/a&gt;》的演讲中其实已经抛出过这个问题，但并没有得到过多的关注。结果这次结结实实的爆炸了，我猜 Yuri 看到这个新闻肯定会耸耸肩说：Told you so。&lt;/p&gt;
&lt;p&gt;总之，PG 社区强烈建议大家 &lt;strong&gt;不要&lt;/strong&gt; 在最近一周升级 PostgreSQL，Tom Lane 提出的建议是在下周四紧急发布一个非常规小版本集回滚这些变化，然后覆盖老的 17.1，16.5，…… 将这些问题版本视作 “不存在”。所以，原定于这两天的发布，默认使用最新版本的 PostgreSQL 17.1 的 Pigsty 3.1 也会相应延期一周发布。&lt;/p&gt;
&lt;p&gt;总体来看，我觉得这件事的影响是正面的。首先这并非内核核心本身质量的问题，其次因为发现的足够早，在发布当天就发现了并及时叫停，没有对用户产生实质影响 —— 不会像其他那些数据库/芯片/操作系统漏洞一发现已经爆炸一大片了。
除了极个别的狂热更新爱好者或者新装机的倒霉蛋，应该不会有多大影响。就好比上次 xz 后门事件，也是 PG 核心开发者 Peter 在PG测试中发现的，从侧面反映出了 PG 生态的活力与洞察力。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;发生了什么&#34;&gt;发生了什么&lt;/h2&gt;
&lt;p&gt;11月14号早上，PostgreSQL Hacker 邮件列表中出现了一封邮件，提到新的小版本实际上打破了 ABI 。这对于 PostgreSQL 数据库内核本身并不是什么问题，然而 ABI 的变化打破了 PG 内核与扩展插件的约定，导致像 TimescaleDB 这样的扩展无法在新的 PG 小版本上正确运行。&lt;/p&gt;
&lt;p&gt;PostgreSQL 的扩展插件是针对具体操作系统发行版上的大版本提供的。例如，PostGIS ，TimescaleDB，Citus 会针对 PG 12，13，14，15，16，17 这样每年发布的大版本号进行构建。针对 PG 16.0 构建的扩展，大家都默认可以在 PG 16.1，16.2，……  16.x 上继续使用。 这意味着你可以滚动升级 PG 内核的小版本，而不用担心扩展插件翻车。&lt;/p&gt;
&lt;p&gt;然而这并不是一个明确的承诺，而是社区的隐性默契 —— ABI 属于内部实现细节，也不应该有这样的承诺与期待，PG 只是在过去表现的太好了，而大家已经习惯了这一点，将其默认作为了工作假设，并体现在包括 PGDG 仓库包命名，安装脚本等各个方面。&lt;/p&gt;
&lt;p&gt;不过这一次，PG 17.1 以及反向移植到 16 - 12 的小版本修改了一个内部结构体的大小，这会导致 —— 针对 PG 17.0 编译的扩展插件在 17.1 上使用时，有概率发生冲突，导致非法写入或程序崩溃。请注意，这个问题对使用 PostgreSQL 内核本身的用户并没有影响，PostgreSQL 在内部有断言来检查这种情况。&lt;/p&gt;
&lt;p&gt;然而对于使用 TimscaleDB，这样扩展插件的用户来说，这意味着如果你没有使用针对当前小版本重新编译的扩展插件，将会存在这样的安全隐患。从目前 PGDG 仓库的维护逻辑上来看，扩展插件只会在新的扩展版本出来时，针对当下最新的 PG 小版本进行编译。&lt;/p&gt;
&lt;p&gt;关于 PostgreSQL ABI 的问题，来自 CrunchyData 的 Marco Slot 写了一篇详细的推文来解释。供专业读者阅读参考。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://x.com/marcoslot/status/1857403646134153438&#34;&gt;https://x.com/marcoslot/status/1857403646134153438&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;如何规避这样的问题&#34;&gt;如何规避这样的问题&lt;/h2&gt;
&lt;p&gt;正如之前我在《&lt;a href=&#34;https://mp.weixin.qq.com/s/Dv3--O0K70Fevz39r3T4Ag&#34;&gt;PG神功大成，最全PG扩展仓库&lt;/a&gt;》中所说，我针对 EL 与 Debian/Ubuntu 维护了一个包含许多 PG 扩展插件的仓库，占了整个 PG 生态近一半的扩展。&lt;/p&gt;
&lt;p&gt;PostgreSQL ABI 的问题，其实 Yuri 之前提到过。只要你的扩展插件是针对当前使用小版本的 PostgreSQL 编译的，就不会有问题。所以每当新的小版本发布时，我都会重新编译打包这些扩展插件。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;上个月，我刚刚针对 17.0 编译完了所有的扩展插件，这几天正在针对编译 17.1 的版本启动更新，结果看上去不用做了，17.2 回滚 ABI 变化，虽然意味着 17.0 上编译的扩展可以继续用，但我还是会在 17.2 后释出后，重新针对 PG 17.2 与其他主版本重新编译打包。&lt;/p&gt;
&lt;p&gt;如果你是习惯于从互联网在线安装 PostgreSQL 与扩展插件，并且没有及时升级小版本的习惯，那么确实会有这样的安全隐患  —— 即你新安装的扩展并非针对老版本的内核编译，遇到 ABI 冲突而翻车。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;老实说，我很早就在真实世界见到过这个问题，这也是为什么我在开发 Pigsty 这个开箱即用的 PostgreSQL 发行版时，从 Day 1 就选择了先将所有所需软件包及其依赖下载到本地，构建一个本地软件源，然后给环境中所有需要的节点提供 Yum/Apt 仓库的方式进行安装。这样做能够确保：整个环境中所有的节点安装的都是同样的版本，而且是一个一致性快照 —— 扩展的版本与内核的版本是匹配的。&lt;/p&gt;
&lt;p&gt;而且，这样做还可以实现“自主可控”的需求，这意味着当你的部署上线之后，你不会遇到这种SB事情 —— 原本的软件源关停或者挪窝了，或者仅仅是上游仓库发布了一个不兼容的新版本或者新依赖，就会导致你新装机器/实例的时候遇到大翻车卡在这里。这意味着你有进行复制/扩容的完整软件副本，有能力让你的服务运行到地老天荒，而不用担心被人 “真·卡了脖子”。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;比如最近 17.1 发布的时候，RedHat 赶在两天前更新了 LLVM 默认的版本，从 17 到 18，而且好死不死的只更新了 EL8 没有更新 EL9，如果用户选择在这个时候从互联网上游安装，就会直接失败。我给 Devrim 提了这个问题后，他花了两个小时修复，把 LLVM-18 加入到 EL9 专用补丁Fix仓库。&lt;/p&gt;
&lt;p&gt;PS：如果你不知道这个独立的仓库，那你大概在修复后也会继续遇到翻车，直到 RetHat 自己修复这个问题，但 Pigsty 就会替你处理好所有这些肮脏的细节。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;有人说我用 Docker 也能解决这样的版本问题，确实没错。只不过 &lt;a href=&#34;https://mp.weixin.qq.com/s/kFftay1IokBDqyMuArqOpg&#34;&gt;用 Docker 跑数据库还会有其他的问题&lt;/a&gt;，而且，这些 Docker 镜像容器里其实本质上也是在 Dockerfile 里用操作系统的包管理器，从官方软件源给你下载 RPM/DEB 包来安装的。说到底，这些活总是要有人来做的 ……。&lt;/p&gt;
&lt;p&gt;当然，适配不同操作系统意味着很大的维护工作量。例如，我维护了 143 个 EL 和 144 个 Debian 中的 PG 扩展插件，每个扩展插件都要针对 10 个操作系统大版本（el 8/9，Ubuntu 22/24，Debian 12，五个大系统，amd64 与 arm64），与 6 个数据库大版本（PG 17-12）进行编译，这些要素的排列组合意味着总共将近有一万个软件包需要构建/测试/分发，其中还有二十个一编译就半小时过去的 Rust 扩展……。不过老实说，反正都是半自动化流水线，从一年跑一次变成3个月跑一次，也不是不能接受。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;附关于-abi-的问题的解释&#34;&gt;附：关于 ABI 的问题的解释&lt;/h2&gt;
&lt;p&gt;关于最新补丁版本（17.1、16.5 等）中的 PostgreSQL 扩展 ABI 问题&lt;/p&gt;
&lt;p&gt;PostgreSQL 扩展的 C 代码会包含来自 PostgreSQL 本身的头文件。当扩展被编译时，头文件中的函数在二进制文件中表示为抽象符号。这些符号在扩展加载时根据函数名链接到实际的函数实现。这样，一个针对 PostgreSQL 17.0 编译的扩展通常仍然可以加载到 PostgreSQL 17.1 中，只要头文件中的函数名和签名没有改变（即应用程序二进制接口或 &amp;ldquo;ABI&amp;rdquo; 是稳定的）。&lt;/p&gt;
&lt;p&gt;头文件还声明了传递给函数的结构体（以指针形式）。严格来说，结构体的定义也是 ABI 的一部分，但其中有更多的细微之处。编译后，结构体主要由其大小和字段的偏移量定义，因此例如名称的改变不会影响 ABI（虽然会影响 API）。大小的改变会稍微影响 ABI。大多数情况下，PostgreSQL 使用一个宏（&amp;ldquo;makeNode&amp;rdquo;）在堆上分配结构体，它会查看结构体的编译时大小，并将字节初始化为 0。&lt;/p&gt;
&lt;p&gt;在 17.1 中出现的差异是，向 &lt;code&gt;ResultRelInfo&lt;/code&gt; 结构体中添加了一个新的布尔值，这增加了其大小。接下来发生的事情取决于谁调用了 &lt;code&gt;makeNode&lt;/code&gt;。如果是 PostgreSQL 17.1 的代码，那么它会使用新的大小。如果是一个针对 17.0 编译的扩展，那么它会使用旧的大小。当它使用旧大小分配的指针调用 PostgreSQL 函数时，PostgreSQL 函数仍然假定新的大小，并可能写入超出已分配块的区域。一般来说，这是相当有问题的。它可能导致字节被写入不相关的内存区域，或者程序崩溃。&lt;/p&gt;
&lt;p&gt;在运行测试时，PostgreSQL 有内部检查（断言）来检测这种情况并抛出警告。然而，PostgreSQL 使用自己的分配器，总是将分配的字节数向上取整到 2 的幂次方。&lt;code&gt;ResultRelInfo&lt;/code&gt; 结构体是 376 字节（在我的笔记本电脑上），因此它会向上取整到 512 字节，变更后也是如此（384 字节在我的笔记本电脑上）。因此，通常这个特定的结构体改变实际上并不影响分配大小。可能存在未初始化的字节，但通常通过调用 &lt;code&gt;InitResultRelInfo&lt;/code&gt; 来解决。&lt;/p&gt;
&lt;p&gt;这个问题主要在扩展中分配 &lt;code&gt;ResultRelInfo&lt;/code&gt; 的测试或启用断言的构建中引发警告，特别是在使用针对旧 PostgreSQL 版本编译的扩展二进制文件运行这些测试时。不幸的是，故事并未就此结束。TimescaleDB 是 &lt;code&gt;ResultRelInfo&lt;/code&gt; 的重度用户，并且确实遇到了大小变化带来的问题。例如，在其某个代码路径中，它需要在一个 &lt;code&gt;ResultRelInfo&lt;/code&gt; 指针数组中找到索引，为此它进行了指针运算。这个数组是由 PostgreSQL 分配的（384 字节），但 Timescale 二进制文件假定为 376 字节，结果是一个无意义的数字，进而触发断言失败或段错误。 &lt;a href=&#34;https://t.co/f1vzxwF9l7&#34;&gt;https://github.com/timescale/timescaledb/blob/2.17.2/src/nodes/hypertable_modify.c#L1245…&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里的代码实际上并没有错误，但与 PostgreSQL 的契约并非如预期的那样。这对我们所有人都是一个有趣的教训。其他扩展中也可能存在类似的问题，尽管没有多少扩展像 Timescale 这样高级。另一个高级扩展是 Citus，但我进行了验证，发现 Citus 是安全的。它确实会显示断言警告。建议大家保持谨慎。最安全的做法是确保扩展使用您正在运行的 PostgreSQL 版本的头文件进行编译。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: PostgreSQL 12 过保，PG 17 上位</title>
      <link>/zh/blog/pg/pg12-eol-pg17-up/</link>
      <pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/pg12-eol-pg17-up/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/pg12-eol-pg17-up/featured_hu02aa61ae1d9de35cbe238d2676170cb9_926138_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;p&gt;根据 PostgreSQL 的 &lt;a href=&#34;https://www.postgresql.org/support/versioning/&#34;&gt;&lt;strong&gt;版本策略&lt;/strong&gt;&lt;/a&gt;，在 2019 年发布的 PostgreSQL12 将于今日（2024-11-14）正式脱离支持生命周期。&lt;/p&gt;
&lt;p&gt;PG 12 最后一个小版本为 2024-11-14 发布的 12.21，而这将是 PG 12 的最终版本，而新发布的 PostgreSQL 17.1 则将成为当下合适的新业务选择。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Current minor&lt;/th&gt;
&lt;th&gt;Supported&lt;/th&gt;
&lt;th&gt;First Release&lt;/th&gt;
&lt;th&gt;Final Release&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;17.1&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;September 26, 2024&lt;/td&gt;
&lt;td&gt;November 8, 2029&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;16.5&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;September 14, 2023&lt;/td&gt;
&lt;td&gt;November 9, 2028&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;15.9&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;October 13, 2022&lt;/td&gt;
&lt;td&gt;November 11, 2027&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;14.14&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;September 30, 2021&lt;/td&gt;
&lt;td&gt;November 12, 2026&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;13.17&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;September 24, 2020&lt;/td&gt;
&lt;td&gt;November 13, 2025&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;12.21&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;October 3, 2019&lt;/td&gt;
&lt;td&gt;November 14, 2024&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pg12下台&#34;&gt;PG12下台&lt;/h2&gt;
&lt;p&gt;在过去五年中，PG 12 的上一个小版本 PostgreSQL 12.20 相对于五年前发布的 PostgreSQL 12.0  修复了 34 个安全问题，936 个 Bug。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;eol.png&#34; src=&#34;/zh/blog/pg/pg12-eol-pg17-up/eol.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这次发布的停产版本 12.1 修复了四个 CVE 安全漏洞，并进行了 17 项 Bug 修复，从此之后，PostgreSQL 12 就停产了，不再提供安全和错误修复&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/CVE-2024-10976/&#34;&gt;CVE-2024-10976&lt;/a&gt;：以下 PostgreSQL 行安全性（例如子查询）忽略了用户 ID 更改&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/CVE-2024-10977/&#34;&gt;CVE-2024-10977&lt;/a&gt;：PostgreSQL libpq 保留了来自中间人的错误消息&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/CVE-2024-10978/&#34;&gt;CVE-2024-10978&lt;/a&gt;：PostgreSQL SET ROLE、SET SESSION AUTHORIZATION 重置为错误的用户 ID&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/support/security/CVE-2024-10979/&#34;&gt;CVE-2024-10979&lt;/a&gt;：PostgreSQL PL/Perl 环境变量更改执行任意代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;随着时间推移，运行老版本带来的风险将会持续上升， 请仍然在生产环境中使用 PG 12 或更早版本的用户制定升级计划，升级到到受支持的大版本（13-17）&lt;/p&gt;
&lt;p&gt;PostgreSQL 12 是五年前发布的版本，我认为是继 PG 10 之后的一个具有里程碑意义的版本。主要是 PG 12 引入了可插拔存储引擎的接口，允许第三方开发新的存储引擎。此外，还有一些重要的可观测性/易用性改进也发生在这个版本 —— 例如实时报告各种任务的进度，使用csvlog格式便于处理分析；此外，分区表也有了显著的性能改善，趋于成熟。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;version-map.png&#34; src=&#34;/zh/blog/pg/pg12-eol-pg17-up/version-map.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当然，我对 PG 12 印象比较深刻的原因是，当我做 &lt;a href=&#34;https://pigsty.cc/zh/&#34;&gt;Pigsty&lt;/a&gt; 这个开箱即用的 PostgreSQL 数据库发行版时。第一个公开发布支持的大版本就是 PostgreSQL 12。现在一眨眼五年过去了，当时的从 PG 11 适配 PG 12 新特性的回忆还历历在目。&lt;/p&gt;
&lt;p&gt;在这五年里，Pigsty 从一个自己用的PG监控系统/测试沙箱，变成了一个被广泛使用的开源项目，在全球社区都有了知名度。回头看看，不禁有些感慨。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pg17上位&#34;&gt;PG17上位&lt;/h2&gt;
&lt;p&gt;一个版本的死去也对应着另一个版本的新生。按照 PG 版本策略，今天的例行季度小版本发布，将会发布 17.1 。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;featured.jpg&#34; src=&#34;/zh/blog/pg/pg12-eol-pg17-up/featured.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;我的朋友 Qunar 帅龙喜欢在 PG 新版本出来时立刻跟进升级，我自己的习惯则是在大版本出来后，额外观察等待一个小版本。&lt;/p&gt;
&lt;p&gt;因为通常来说，新的大版本发布后，大量小瑕疵小修小补都会在 x.1 中得到解决，二来三个月的缓冲区，足够让 PG 生态中的扩展插件跟进并完成适配，对新的大版本提供支持，而这对于 PG 生态用户来说是非常重要的。&lt;/p&gt;
&lt;p&gt;从 PG 12 到现在的 PG 17，PG 社区添加了 48 项新功能特性，并提出了 130 项性能改进。特别是 PostgreSQL 17 的写入吞吐，按照官方的说法在一些场景下，相比先前版本有高达两倍的提升，还是很值得升级的。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pg17-qps.png&#34; src=&#34;/zh/blog/pg/pg12-eol-pg17-up/pg17-qps.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://smalldatum.blogspot.com/2024/09/postgres-17rc1-vs-sysbench-on-small.html&#34;&gt;https://smalldatum.blogspot.com/2024/09/postgres-17rc1-vs-sysbench-on-small.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;之前我对 PostgreSQL 14 进行过一次全方位的 &lt;a href=&#34;/zh/blog/pg/pg-performence&#34;&gt;&lt;strong&gt;性能评测&lt;/strong&gt;&lt;/a&gt;，但那已经是三年前了，所以我准备针对最新的 PostgreSQL 17.1 重新进行一次评测。&lt;/p&gt;
&lt;p&gt;最近我整了台非常牛逼的物理机，128C 256G，配四块 3.2 T Gen4 NVMe SSD 加一块硬件 NVMe RAID 加速卡，准备看看 PostgreSQL，pgvector，以及一系列 OLAP 扩展插件能在这台性能怪兽上表现出什么样的性能，结果敬请期待。&lt;/p&gt;
&lt;p&gt;总的来说，我认为 17.1 的推出将会是一个合适的升级时机，我也准备在未来几天里发布 Pigsty v3.1 ，在里面将 PG 17 升级为 Pigsty 默认使用的主要大版本，取代原本的 PG16。&lt;/p&gt;
&lt;p&gt;考虑到 PostgreSQL 在 10.0 之后提供了逻辑复制的功能特性，而 Pigsty 提供了使用逻辑复制进行不停机的蓝绿部署升级的完整方案 —— PG 大版本升级的难度早已今非昔比。我也将会在近期推出一个不停机大版本升级教程，帮助用户将现有的 PostgreSQL 16 或更低版本无缝升级到 PG 17&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pg17扩展&#34;&gt;PG17扩展&lt;/h2&gt;
&lt;p&gt;让我很欣慰的一点是，相比于从 PG 15 到 PG 16 的升级，这一次 PostgreSQL 扩展生态的跟进速度相当之快，体现出了强大的活力。&lt;/p&gt;
&lt;p&gt;例如，去年 PG 16 在九月中旬发布，但是主要的扩展插件要到半年后才基本齐全 —— 比如 PG 生态的一个核心扩展 TimescaleDB 就等到二月初的 2.13 才完成 PG 16 支持， 其他的扩展也大体类似。&lt;/p&gt;
&lt;p&gt;因此在 PG 16 发布半年后，才到达了一个基本令人满意的状态。Pigsty 也是在那时将 PG 16 提升为 Pigsty 首要使用的默认大版本，替代 PG 15。&lt;/p&gt;
&lt;p&gt;而这一次从 PG 16 到 PG 17 的替换，生态适配的速度显著加快了，三个月不到就完成了之前需要半年的活计，比 PG 15 到 16 的速度快了近一倍。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;版本&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;发布时间&lt;/th&gt;
&lt;th&gt;摘要&lt;/th&gt;
&lt;th&gt;地址&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v3.1.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2024-11-20&lt;/td&gt;
&lt;td&gt;PG 17 作为默认大版本，配置简化，Ubuntu 24 与 ARM 支持&lt;/td&gt;
&lt;td&gt;WIP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v3.0.4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2024-10-30&lt;/td&gt;
&lt;td&gt;PG 17 扩展，OLAP 全家桶，pg_duckdb&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v3.0.4&#34;&gt;v3.0.4&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v3.0.3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2024-09-27&lt;/td&gt;
&lt;td&gt;PostgreSQL 17，Etcd 运维优化，IvorySQL 3.4，PostGIS 3.5&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v3.0.3&#34;&gt;v3.0.3&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v3.0.2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2024-09-07&lt;/td&gt;
&lt;td&gt;精简安装模式，PolarDB 15支持，监控视图更新&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v3.0.2&#34;&gt;v3.0.2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v3.0.1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2024-08-31&lt;/td&gt;
&lt;td&gt;例行问题修复，Patroni 4支持，Oracle兼容性改进&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v3.0.1&#34;&gt;v3.0.1&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v3.0.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2024-08-25&lt;/td&gt;
&lt;td&gt;333个扩展插件，可插拔内核，MSSQL，Oracle，PolarDB 兼容性&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v3.0.0&#34;&gt;v3.0.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v2.7.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2024-05-20&lt;/td&gt;
&lt;td&gt;扩展大爆炸，新增20+强力扩展插件，与多款Docker应用&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v2.7.0&#34;&gt;v2.7.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v2.6.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2024-02-28&lt;/td&gt;
&lt;td&gt;PG 16 作为默认大版本，引入 ParadeDB 与 DuckDB 等扩展&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v2.6.0&#34;&gt;v2.6.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v2.5.1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2023-12-01&lt;/td&gt;
&lt;td&gt;例行小版本更新，PG16重要扩展支持&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v2.5.1&#34;&gt;v2.5.1&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v2.5.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2023-09-24&lt;/td&gt;
&lt;td&gt;Ubuntu/Debian支持：bullseye, bookworm, jammy, focal&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v2.5.0&#34;&gt;v2.5.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v2.4.1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2023-09-24&lt;/td&gt;
&lt;td&gt;Supabase/PostgresML支持与各种新扩展：graphql, jwt, pg_net, vault&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v2.4.1&#34;&gt;v2.4.1&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v2.4.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2023-09-14&lt;/td&gt;
&lt;td&gt;PG16，监控RDS，服务咨询支持，新扩展：中文分词全文检索/图/HTTP/嵌入等&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v2.4.0&#34;&gt;v2.4.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v2.3.1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2023-09-01&lt;/td&gt;
&lt;td&gt;带HNSW的PGVector，PG 16 RC1, 文档翻新，中文文档，例行问题修复&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v2.3.1&#34;&gt;v2.3.1&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v2.3.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2023-08-20&lt;/td&gt;
&lt;td&gt;主机VIP, ferretdb, nocodb, MySQL存根, CVE修复&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v2.3.0&#34;&gt;v2.3.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v2.2.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2023-08-04&lt;/td&gt;
&lt;td&gt;仪表盘 &amp;amp; 置备重做，UOS 兼容性&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v2.2.0&#34;&gt;v2.2.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v2.1.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2023-06-10&lt;/td&gt;
&lt;td&gt;支持 PostgreSQL 12 ~ 16beta&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v2.1.0&#34;&gt;v2.1.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v2.0.2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2023-03-31&lt;/td&gt;
&lt;td&gt;新增 pgvector 支持，修复 MinIO CVE&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v2.0.2&#34;&gt;v2.0.2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v2.0.1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2023-03-21&lt;/td&gt;
&lt;td&gt;v2 错误修复，安全增强，升级 Grafana 版本&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v2.0.1&#34;&gt;v2.0.1&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;v2.0.0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2023-02-28&lt;/td&gt;
&lt;td&gt;架构大升级，兼容性、安全性、可维护性显著增强&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/releases/tag/v2.0.0&#34;&gt;v2.0.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;/zh/docs/releasenote&#34;&gt;Pigsty Release Note&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而这一次从 PG 16 - PG 17，生态适配的速度显著加快了，这才三个月不到，就完成了之前需要半年的活计。在这一点上，我很自豪地说，我还是做了不少工作的。
比如在《&lt;a href=&#34;https://mp.weixin.qq.com/s/Dv3--O0K70Fevz39r3T4Ag&#34;&gt;PostgreSQL神功大成！最全扩展仓库&lt;/a&gt;》中介绍过的 &lt;a href=&#34;https://ext.pigsty.io&#34;&gt;https://ext.pigsty.io&lt;/a&gt; ，这里维护了 PG 生态超过一半的扩展插件。&lt;/p&gt;
&lt;p&gt;而我也是在最近刚刚完成这件大活，把自己维护的一百四十个多个扩展针对 PG 17 进行了构建（当然还做了 Ubuntu 24.04 和部分 ARM 支持），并且自己修复或者提请扩展作者修复了几十个有兼容问题的扩展插件。
目前实现的效果是：在 EL 系统上， 334 个可用扩展有 301 个已经在 PG 17 可用，而在 Debian 系统上，326 个扩展也已经有 302 个在 PG 17 上可用。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Entry / Filter&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;All&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PGDG&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PIGSTY&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;CONTRIB&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;MISC&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;MISS&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;strong&gt;PG17&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG16&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG15&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG14&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG13&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG12&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;RPM Extension&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;334&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;115&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;143&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;301&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;330&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;333&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;319&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;307&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;294&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DEB Extension&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;326&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;104&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;144&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;14&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;302&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;322&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;325&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;316&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;303&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;293&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;https://ext.pigsty.io&#34;&gt;&lt;img alt=&#34;extension.png&#34; src=&#34;/zh/blog/pg/pg12-eol-pg17-up/extension.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pigsty 实现了 PostgreSQL 扩展生态的大对齐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;目前主要的扩展中，还有分布式扩展 Citus 和列存扩展 Hydra 缺位，图数据库扩展 AGE，PGML 也依然还没有提供 PG 17 的支持，不过其他的强力扩展目前均已实现 PG 17 Ready，
其中，特别要强调一下最近在 PG 生态如火如荼的 OLAP DuckDB 扩展缝合大赛，包括 ParadeDB 的 &lt;code&gt;pg_analytics&lt;/code&gt;，国内个人开发者李红艳编写的 &lt;code&gt;duckdb_fdw&lt;/code&gt;，CrunchyData 的 &lt;code&gt;pg_parquet&lt;/code&gt;，MooncakeLab 的 &lt;code&gt;pg_mooncake&lt;/code&gt;，
Hydra 和 DuckDB 原厂 MotherDuck 亲自下场搞的 &lt;code&gt;pg_duckdb&lt;/code&gt;，全部都已经实现了 PG 17 支持，并且在 Pigsty 扩展仓库中可用。&lt;/p&gt;
&lt;p&gt;考虑到分布式的 Citus 用户并不多，列存 Hydra 已经有大把全新的 DuckDB 扩展可以替代，我认为 PG17 在扩展生态上已经达到了一个令人满意的状态，可以作为生产环境的首要大版本使用了。而在 PG17 上实现这一点的用时，比 PG 16 快了近一倍&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;关于-pigsty-v31&#34;&gt;关于 Pigsty v3.1&lt;/h2&gt;
&lt;p&gt;Pigsty 是一个开源免费，开箱即用的 PostgreSQL 数据库发行版，可以在本地一键拉起企业级 RDS 云数据库服务，帮助用户用好世界上最先进的开源数据库 —— PostgreSQL。&lt;/p&gt;
&lt;p&gt;PostgreSQL 已经毫无疑问地即将成为数据库领域的 Linux 内核，而 Pigsty 旨在成为 Linux 内核的 Debian 发行版。我们的 PostgreSQL 数据库发行版有六条关键价值主张：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供 PostgreSQL 生态中最全面的扩展插件支持&lt;/li&gt;
&lt;li&gt;提供 PostgreSQL 生态中最强大全面的监控系统&lt;/li&gt;
&lt;li&gt;提供开箱即用，简单易用的工具集合以及最佳实践&lt;/li&gt;
&lt;li&gt;提供故障自愈，免运维的丝滑高可用/PITR体验&lt;/li&gt;
&lt;li&gt;提供无需容器，直接运行在裸OS上的可靠部署&lt;/li&gt;
&lt;li&gt;无供应商锁定，民主化的 RDS 体验，自主可控&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;顺便一提，我们在 Pigsty v3 中增加了 PG 系内核替换能力，您可以使用衍生版 PG 内核，获取一些独特的能力与特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;微软 SQL Server 兼容的 &lt;a href=&#34;/zh/docs/kernel/babelfish&#34;&gt;Babelfish&lt;/a&gt; 内核支持&lt;/li&gt;
&lt;li&gt;Oracle 兼容的 &lt;a href=&#34;/zh/docs/kernel/ivorysql&#34;&gt;IvorySQL&lt;/a&gt; 3.4 内核支持&lt;/li&gt;
&lt;li&gt;阿里云 &lt;a href=&#34;/zh/docs/kernel/polardb&#34;&gt;PolarDB&lt;/a&gt; for PostgreSQL / Oracle 国产化信创内核支持&lt;/li&gt;
&lt;li&gt;允许用户更方便地自建 &lt;a href=&#34;/zh/docs/kernel/supabase&#34;&gt;Supabase&lt;/a&gt; —— 开源 Firebase，一站式后端平台&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果您希望使用原汁原味的 PostgreSQL 体验，欢迎使用我们的发行版，开源免费，没有供应商锁定；同时我们也提供商业咨询支持，为您解决疑难杂症兜底的需求与烦恼。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 云计算泥石流：文章导航</title>
      <link>/zh/blog/cloud/exit/</link>
      <pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/exit/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/exit/featured_hu02aa61ae1d9de35cbe238d2676170cb9_787877_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;div style=&#34;text-align: center;&#34;&gt;&lt;p&gt;
世人常道云上好，托管服务烦恼少。我言云乃杀猪盘，溢价百倍实厚颜。
&lt;p&gt;赛博地主搞垄断，坐地起价剥血汗。运维外包嫖开源，租赁电脑炒概念。&lt;/p&gt;
&lt;p&gt;世人皆趋云上游，不觉开销似水流。云租天价难为持，开源自建更稳实。&lt;/p&gt;
&lt;p&gt;下云先锋把路趟，引领潮流一肩扛。不畏浮云遮望眼，只缘身在最前线。&lt;/p&gt;
&lt;/p&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;曾几何时，“&lt;strong&gt;上云&lt;/strong&gt;“近乎成为技术圈的政治正确，整整一代应用开发者的视野被云遮蔽。就让我们用实打实的数据分析与亲身经历，讲清楚公有云租赁模式的价值与陷阱 —— 在这个降本增效的时代中，供您借鉴与参考。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;下云案例篇&#34;&gt;&lt;strong&gt;下云案例篇&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/mknFXO5DSfxw7st8hhxjBQ&#34;&gt;DHH：下云超预期，能省一个亿&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/CicctyvV1xk5B-AsKfzPjw&#34;&gt;下云奥德赛：是时候放弃云计算了吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/yIVal-9U6_TXX-dZpVtjBg&#34;&gt;拒绝用复杂度自慰，下云也保稳定运行&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/xaa079P4DRCz0hzNovGoOA&#34;&gt;半年下云省千万：DHH下云FAQ答疑&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/csQmMrSGg5ukDgS06h8xXw&#34;&gt;Ahrefs不上云，省下四亿美元&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/kOIw8uPjZUZ0-QisC1TBOA&#34;&gt;草台班子唱大戏，阿里云RDS翻车记&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;人仰马翻篇&#34;&gt;&lt;strong&gt;人仰马翻篇&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/OIlR0rolEQff9YfCpj3wIQ&#34;&gt;我们能从阿里云史诗级故障中学到什么&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/PgduTGIvWSUgHZhVfnb7Bg&#34;&gt;腾讯云：颜面尽失的草台班子&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/35ScjtPjC1GNGKaSArJhcA&#34;&gt;黑暗森林：打爆AWS云账单，只需要S3桶名&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/eH5HBbL7cQhjQY8rm1gFLQ&#34;&gt;无双删库：Google云爆破了大基金的整个云账户&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/s7i7bSYzNY8mrcpfkHPjOg&#34;&gt;全球Windows蓝屏：甲乙双方都是草台班子&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;基础资源篇&#34;&gt;&lt;strong&gt;基础资源篇&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/rp8Dtvyo9cItBJSsvfrKjw&#34;&gt;剖析云上算力真实成本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/HathxpQ_KUuqxyrtyCDzWw&#34;&gt;扒皮对象存储：从降本到杀猪&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/UxjiUBTpb1pRUfGtR9V3ag&#34;&gt;云盘是不是杀猪盘？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/LefEAXTcBH-KBJNhXNoc7A&#34;&gt;云数据库是不是智商税&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ANFnbDXwuhKI99fgYRZ9ug&#34;&gt;垃圾腾讯云CDN：从入门到放弃&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/0Wnv1B80Tk4J03X3uAm4Ww&#34;&gt;记一次阿里云 DCDN 加速仅 32 秒就欠了 1600 的问题处理（扯皮）&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;商业模式篇&#34;&gt;&lt;strong&gt;商业模式篇&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/W1hwbl3qmjC4Dcmadc8uSg&#34;&gt;DBA 会被云淘汰吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Yp_PU8nmyK-NVq0clD98RQ&#34;&gt;FinOps终点是下云&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/2w0bLJI7TvUNp1tzLYbvsA&#34;&gt;本土云计算为啥还没挖沙子赚钱？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/LC5jAhuVObRcrTLxI1FUQA&#34;&gt;云SLA是不是安慰剂？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Yp6L0hh4b4HuJQRPD3aJYw&#34;&gt;范式转移：从云到本地优先&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;rds批判篇&#34;&gt;&lt;strong&gt;RDS批判篇&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/LefEAXTcBH-KBJNhXNoc7A&#34;&gt;云数据库是不是杀猪盘&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/rXwEayprvDKCgba4m-naoQ&#34;&gt;高可用容灾神话的破灭&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/EH7RPB6ImfMHXhOMU7P5Qg&#34;&gt;RDS阉掉了PostgreSQL的灵魂&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/AGEW1iHQkQy4NQyYC2GonQ&#34;&gt;云RDS：从删库到跑路&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/CMRrqI2yBWlNbACHpNgL1g&#34;&gt;驳《再论为什么你不应该招DBA》&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;滑稽肖像篇&#34;&gt;&lt;strong&gt;滑稽肖像篇&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/qAnEmtLz3EpSophz1TbFGA&#34;&gt;性学家，化学家，软件行业里的废话文学家&lt;/a&gt; 【转载】&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/XZqe4tbJ9lgf8a6PWj7vjw&#34;&gt;牙膏云？您可别吹捧云厂商了&lt;/a&gt;【转载】&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/8ZffsCgchv8LH5ujv0lRGQ&#34;&gt;互联网技术大师速成班 &lt;/a&gt;【转载】&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/OxhhJ4U1P43di_eaE1uGPw&#34;&gt;互联网故障背后的草台班子们&lt;/a&gt;【转载】&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/y9IradwxTxOsUGcOHia1XQ&#34;&gt;云厂商眼中的客户：又穷又闲又缺爱&lt;/a&gt;【转载】&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;商业评论篇&#34;&gt;&lt;strong&gt;商业评论篇&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/BYu8nZjqAQbWc2yT8K_pFQ&#34;&gt;阿里云降价背后折射出的绝望&lt;/a&gt;【转载】&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/qSTEf9txjHNTHeEFv3NkWg&#34;&gt;门内的国企如何看门外的云厂商&lt;/a&gt;【转载】&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/1dse1KSCq2xG-QaL1JzZ8Q&#34;&gt;卡在政企客户门口的阿里云&lt;/a&gt;【转载】&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/_ijL2OXAQJQrmWiE-KKzdw&#34;&gt;公有云厂商卖的云计算到底是什么玩意？&lt;/a&gt;【转载】&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/mMvDiTiMOt6eiTTYbHvbbQ&#34;&gt;腾讯云阿里云做的真的是云计算吗?&lt;/a&gt;【转载】&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;主题分类&#34;&gt;主题分类&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;亚马逊&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2024-05-23 &lt;a href=&#34;https://mp.weixin.qq.com/s/csQmMrSGg5ukDgS06h8xXw&#34;&gt;Ahrefs不上云，省下四亿美元&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-30 &lt;a href=&#34;https://mp.weixin.qq.com/s/35ScjtPjC1GNGKaSArJhcA&#34;&gt;云上黑暗森林：打爆云账单，只需要S3桶名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-26 &lt;a href=&#34;https://mp.weixin.qq.com/s/W5kOLxeJCIHjnWbIHc1Pzw&#34;&gt;Redis不开源是“开源”之耻，更是公有云之耻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/EH7RPB6ImfMHXhOMU7P5Qg&#34;&gt;RDS阉掉了PostgreSQL的灵魂&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-12-27 &lt;a href=&#34;https://mp.weixin.qq.com/s/HathxpQ_KUuqxyrtyCDzWw&#34;&gt;扒皮对象存储：从降本到杀猪&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/1OSRcBfd58s0tgZTUZHB9g&#34;&gt;重新拿回计算机硬件的红利&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-10-29 &lt;a href=&#34;https://mp.weixin.qq.com/s/CicctyvV1xk5B-AsKfzPjw&#34;&gt;是时候放弃云计算了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-07-07 &lt;a href=&#34;https://mp.weixin.qq.com/s/H2S3TV-AsqS43A5Hh-XMhQ&#34;&gt;下云奥德赛&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;阿里云&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2024-11-11 &lt;a href=&#34;https://mp.weixin.qq.com/s/D2XmL2YYN2kqHtwFN4FVGQ&#34;&gt;支付宝崩了？双十一整活王又来了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-10-07 &lt;a href=&#34;https://mp.weixin.qq.com/s/0Wnv1B80Tk4J03X3uAm4Ww&#34;&gt;记一次阿里云 DCDN 加速仅 32 秒就欠了 1600 的问题处理（扯皮）&lt;/a&gt; 转&lt;/li&gt;
&lt;li&gt;2024-09-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/rXwEayprvDKCgba4m-naoQ&#34;&gt;阿里云：高可用容灾神话的破灭&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-15 &lt;a href=&#34;https://mp.weixin.qq.com/s/G41IN2y8DrC002FQ_BXtXw&#34;&gt;阿里云故障预报：本次事故将持续至20年后？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-10 &lt;a href=&#34;https://mp.weixin.qq.com/s/EDRmP7ninfSx-CgNDb8mpg&#34;&gt;阿里云新加坡可用区C故障，网传机房着火&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-20 &lt;a href=&#34;https://mp.weixin.qq.com/s/kOIw8uPjZUZ0-QisC1TBOA&#34;&gt;草台班子唱大戏，阿里云RDS翻车记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-07-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/cb2Lh56uINxacM2uUaB6Vw&#34;&gt;阿里云又挂了，这次是光缆被挖断了？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-22 &lt;a href=&#34;https://mp.weixin.qq.com/s/jYIqj94B07oTu9KC85bjtQ&#34;&gt;云计算：菜就是一种原罪&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-20 &lt;a href=&#34;https://mp.weixin.qq.com/s/-ntsNfdEq3b4qs5tKP7tfQ&#34;&gt;taobao.com 证书过期&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/XZqe4tbJ9lgf8a6PWj7vjw&#34;&gt;牙膏云？您可别吹捧云厂商了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-01 &lt;a href=&#34;https://mp.weixin.qq.com/s/s_MCdaCByDBuocXkY1tvKw&#34;&gt;罗永浩救不了牙膏云&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-21 &lt;a href=&#34;https://mp.weixin.qq.com/s/w7YzdxSrAsIqk2gXBks9CA&#34;&gt;迷失在阿里云的年轻人&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-10 &lt;a href=&#34;https://mp.weixin.qq.com/s/rp8Dtvyo9cItBJSsvfrKjw&#34;&gt;剖析云算力成本，阿里云真的降价了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-29 &lt;a href=&#34;https://mp.weixin.qq.com/s/FIOB_Oqefx1oez1iu7AGGg&#34;&gt;从降本增笑到真的降本增效&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-27 &lt;a href=&#34;https://mp.weixin.qq.com/s/3F1ud-tWB3eymu1-dxSHMA&#34;&gt;阿里云周爆：云数据库管控又挂了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/OIlR0rolEQff9YfCpj3wIQ&#34;&gt;我们能从阿里云史诗级故障中学到什么&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-12 &lt;a href=&#34;https://mp.weixin.qq.com/s/cTge3xOlIQCALQc8Mi-P8w&#34;&gt;【阿里】云计算史诗级大翻车来了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/Nh28VahZkQMdR8fDoi0_rQ&#34;&gt;阿里云的羊毛抓紧薅，五千的云服务器三百拿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-06 &lt;a href=&#34;https://mp.weixin.qq.com/s/y9IradwxTxOsUGcOHia1XQ&#34;&gt;云厂商眼中的客户：又穷又闲又缺爱&lt;/a&gt; 马工&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;腾讯云&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2024-04-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/v0vbsy_OXIDNrbBvUUMV9Q&#34;&gt;腾讯真的走通云原生之路了吗？&lt;/a&gt; 马工&lt;/li&gt;
&lt;li&gt;2024-04-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/SpxKyjSb1luCrJ8xIFjylg&#34;&gt;我们能从腾讯云故障复盘中学到什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-12 &lt;a href=&#34;https://mp.weixin.qq.com/s/mgkOybNeEH3LO0gRa1rQBQ&#34;&gt;云SLA是安慰剂还是厕纸合同？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/PgduTGIvWSUgHZhVfnb7Bg&#34;&gt;腾讯云：颜面尽失的草台班子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/5F2YgVtfpXoe7A1MoSoKLg&#34;&gt;【腾讯】云计算史诗级二翻车来了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-03-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/ANFnbDXwuhKI99fgYRZ9ug&#34;&gt;垃圾腾讯云CDN：从入门到放弃&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2024-04-23 &lt;a href=&#34;https://mp.weixin.qq.com/s/jU418HAlObe1nWgzEsLrJQ&#34;&gt;赛博菩萨Cloudflare圆桌访谈与问答录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-03 &lt;a href=&#34;https://mp.weixin.qq.com/s/i4wk9ebyUK7irNSwuT3NWQ&#34;&gt;吊打公有云的赛博佛祖 Cloudflare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Google&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2024-05-11 &lt;a href=&#34;https://mp.weixin.qq.com/s/eH5HBbL7cQhjQY8rm1gFLQ&#34;&gt;删库：Google云爆破了大基金的整个云账户&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Microsoft&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2024-07-23 &lt;a href=&#34;https://mp.weixin.qq.com/s/s7i7bSYzNY8mrcpfkHPjOg&#34;&gt;全球Windows蓝屏：甲乙双方都是草台班子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2024-12-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/ze4y9x7VpPmibitH7tAGMQ&#34;&gt;OpenAI全球宕机复盘：K8S循环依赖&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-10 &lt;a href=&#34;https://mp.weixin.qq.com/s/eawgZ3hE63b3fRfrJ1sqfw&#34;&gt;草台回旋镖：Apple Music证书过期服务中断&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-10-04 &lt;a href=&#34;https://mp.weixin.qq.com/s/dQrlBnlQO1mcZkg1wQESiA&#34;&gt;沸沸扬扬！！！某国内互联网公司，信息泄露导致国外用卡被盗刷。。。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-10-03 &lt;a href=&#34;https://mp.weixin.qq.com/s/z-hQ57BaSNPC6GkvqNAafw&#34;&gt;本号收到美团投诉：美团没有存储外卡CVV等敏感信息&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-10-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/ShArrg1xidfDgniF9jS7Yg&#34;&gt;某平台CVV泄露：你的信用卡被盗刷了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-21 &lt;a href=&#34;https://mp.weixin.qq.com/s/BLHaiMYGpUTjMhP7msGHhA&#34;&gt;这次轮到WPS崩了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-19 &lt;a href=&#34;https://mp.weixin.qq.com/s/tmlP1ol9qP2SIxB9VbvpEg&#34;&gt;我们能从网易云音乐故障中学到什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-15 &lt;a href=&#34;https://mp.weixin.qq.com/s/nOzSFkULOJeuQ4NChGxE5w&#34;&gt;GitHub全站故障，又是数据库上翻的车？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;DHH&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2024-10-19 &lt;a href=&#34;https://mp.weixin.qq.com/s/mknFXO5DSfxw7st8hhxjBQ&#34;&gt;DHH：下云超预期，能省一个亿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-07 &lt;a href=&#34;https://mp.weixin.qq.com/s/Yxyir8kjRDUZwkkE_dscZQ&#34;&gt;先优化碳基BIO核，再优化硅基CPU核&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-16 &lt;a href=&#34;https://mp.weixin.qq.com/s/jKv9l_ro6rWei4QnXck-zw&#34;&gt;单租户时代：SaaS范式转移&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-10 &lt;a href=&#34;https://mp.weixin.qq.com/s/yIVal-9U6_TXX-dZpVtjBg&#34;&gt;拒绝用复杂度自慰，下云也保稳定运行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-12-22 &lt;a href=&#34;https://mp.weixin.qq.com/s/xaa079P4DRCz0hzNovGoOA&#34;&gt;半年下云省千万：DHH下云FAQ答疑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-10-29 &lt;a href=&#34;https://mp.weixin.qq.com/s/CicctyvV1xk5B-AsKfzPjw&#34;&gt;是时候放弃云计算了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-07-07 &lt;a href=&#34;https://mp.weixin.qq.com/s/H2S3TV-AsqS43A5Hh-XMhQ&#34;&gt;下云奥德赛&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;DBA vs RDS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2024-08-20 &lt;a href=&#34;https://mp.weixin.qq.com/s/kOIw8uPjZUZ0-QisC1TBOA&#34;&gt;草台班子唱大戏，阿里云RDS翻车记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/EH7RPB6ImfMHXhOMU7P5Qg&#34;&gt;RDS阉掉了PostgreSQL的灵魂&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-02-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/BcsaChZ-PHDEy9u5bOmMJA&#34;&gt;DBA会被云淘汰吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-03-01 &lt;a href=&#34;https://mp.weixin.qq.com/s/CMRrqI2yBWlNbACHpNgL1g&#34;&gt;驳《再论为什么你不应该招DBA》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-02-03 &lt;a href=&#34;https://mp.weixin.qq.com/s/Yp6L0hh4b4HuJQRPD3aJYw&#34;&gt;范式转移：从云到本地优先&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-01-31 &lt;a href=&#34;https://mp.weixin.qq.com/s/LefEAXTcBH-KBJNhXNoc7A&#34;&gt;云数据库是不是杀猪盘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-01-31 &lt;a href=&#34;https://mp.weixin.qq.com/s/PqCD80H927s0yJrBr4QQqw&#34;&gt;你怎么还在招聘DBA?&lt;/a&gt; 马工&lt;/li&gt;
&lt;li&gt;2022-05-16 &lt;a href=&#34;https://mp.weixin.qq.com/s/AGEW1iHQkQy4NQyYC2GonQ&#34;&gt;云RDS：从删库到跑路&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;开源软件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2024-10-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/tNeqnBUjWhk8Vu_tIABMjg&#34;&gt;WordPress社区内战：论共同体划界问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-30 &lt;a href=&#34;https://mp.weixin.qq.com/s/NdeeYn10qQ0xBPL-67IXdQ&#34;&gt;ElasticSearch又重新开源了？？？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-26 &lt;a href=&#34;https://mp.weixin.qq.com/s/W5kOLxeJCIHjnWbIHc1Pzw&#34;&gt;Redis不开源是“开源”之耻，更是公有云之耻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-02-03 &lt;a href=&#34;https://mp.weixin.qq.com/s/Yp6L0hh4b4HuJQRPD3aJYw&#34;&gt;范式转移：从云到本地优先&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;云计算泥石流专栏原文&#34;&gt;云计算泥石流专栏原文&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2024-12-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/ze4y9x7VpPmibitH7tAGMQ&#34;&gt;OpenAI全球宕机复盘：K8S循环依赖&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-11 &lt;a href=&#34;https://mp.weixin.qq.com/s/D2XmL2YYN2kqHtwFN4FVGQ&#34;&gt;支付宝崩了？双十一整活王又来了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-11-10 &lt;a href=&#34;https://mp.weixin.qq.com/s/eawgZ3hE63b3fRfrJ1sqfw&#34;&gt;草台回旋镖：Apple Music证书过期服务中断&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-10-19 &lt;a href=&#34;https://mp.weixin.qq.com/s/mknFXO5DSfxw7st8hhxjBQ&#34;&gt;DHH：下云超预期，能省一个亿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-10-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/tNeqnBUjWhk8Vu_tIABMjg&#34;&gt;WordPress社区内战：论共同体划界问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-10-07 &lt;a href=&#34;https://mp.weixin.qq.com/s/0Wnv1B80Tk4J03X3uAm4Ww&#34;&gt;记一次阿里云 DCDN 加速仅 32 秒就欠了 1600 的问题处理（扯皮）&lt;/a&gt; 转&lt;/li&gt;
&lt;li&gt;2024-09-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/rXwEayprvDKCgba4m-naoQ&#34;&gt;阿里云：高可用容灾神话的破灭&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-15 &lt;a href=&#34;https://mp.weixin.qq.com/s/G41IN2y8DrC002FQ_BXtXw&#34;&gt;阿里云故障预报：本次事故将持续至20年后？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/C7XGgGmzvMjKJGbBGVmrzw&#34;&gt;阿里云盘灾难级BUG：能看别人照片？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-10 &lt;a href=&#34;https://mp.weixin.qq.com/s/EDRmP7ninfSx-CgNDb8mpg&#34;&gt;阿里云新加坡可用区C故障，网传机房着火&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-21 &lt;a href=&#34;https://mp.weixin.qq.com/s/BLHaiMYGpUTjMhP7msGHhA&#34;&gt;这次轮到WPS崩了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-20 &lt;a href=&#34;https://mp.weixin.qq.com/s/kOIw8uPjZUZ0-QisC1TBOA&#34;&gt;草台班子唱大戏，阿里云RDS翻车记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-09-19 &lt;a href=&#34;https://mp.weixin.qq.com/s/tmlP1ol9qP2SIxB9VbvpEg&#34;&gt;我们能从网易云音乐故障中学到什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-08-15 &lt;a href=&#34;https://mp.weixin.qq.com/s/nOzSFkULOJeuQ4NChGxE5w&#34;&gt;GitHub全站故障，又是数据库上翻的车？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-07-23 &lt;a href=&#34;https://mp.weixin.qq.com/s/s7i7bSYzNY8mrcpfkHPjOg&#34;&gt;全球Windows蓝屏：甲乙双方都是草台班子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-07-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/cb2Lh56uINxacM2uUaB6Vw&#34;&gt;阿里云又挂了，这次是光缆被挖断了？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-06-22 &lt;a href=&#34;https://mp.weixin.qq.com/s/qAnEmtLz3EpSophz1TbFGA&#34;&gt;性学家，化学家，软件行业里的废话文学家&lt;/a&gt; 马工&lt;/li&gt;
&lt;li&gt;2024-05-23 &lt;a href=&#34;https://mp.weixin.qq.com/s/csQmMrSGg5ukDgS06h8xXw&#34;&gt;Ahrefs不上云，省下四亿美元&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-05-11 &lt;a href=&#34;https://mp.weixin.qq.com/s/eH5HBbL7cQhjQY8rm1gFLQ&#34;&gt;删库：Google云爆破了大基金的整个云账户&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-30 &lt;a href=&#34;https://mp.weixin.qq.com/s/35ScjtPjC1GNGKaSArJhcA&#34;&gt;云上黑暗森林：打爆云账单，只需要S3桶名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-23 &lt;a href=&#34;https://mp.weixin.qq.com/s/jU418HAlObe1nWgzEsLrJQ&#34;&gt;赛博菩萨Cloudflare圆桌访谈与问答录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-22 &lt;a href=&#34;https://mp.weixin.qq.com/s/jYIqj94B07oTu9KC85bjtQ&#34;&gt;云计算：菜就是一种原罪&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-20 &lt;a href=&#34;https://mp.weixin.qq.com/s/-ntsNfdEq3b4qs5tKP7tfQ&#34;&gt;taobao.com证书过期&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/v0vbsy_OXIDNrbBvUUMV9Q&#34;&gt;腾讯真的走通云原生之路了吗？&lt;/a&gt; 马工&lt;/li&gt;
&lt;li&gt;2024-04-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/SpxKyjSb1luCrJ8xIFjylg&#34;&gt;我们能从腾讯云故障复盘中学到什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-12 &lt;a href=&#34;https://mp.weixin.qq.com/s/mgkOybNeEH3LO0gRa1rQBQ&#34;&gt;云SLA是安慰剂还是厕纸合同？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/PgduTGIvWSUgHZhVfnb7Bg&#34;&gt;腾讯云：颜面尽失的草台班子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/5F2YgVtfpXoe7A1MoSoKLg&#34;&gt;【腾讯】云计算史诗级二翻车来了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-03 &lt;a href=&#34;https://mp.weixin.qq.com/s/i4wk9ebyUK7irNSwuT3NWQ&#34;&gt;吊打公有云的赛博佛祖 Cloudflare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/XZqe4tbJ9lgf8a6PWj7vjw&#34;&gt;牙膏云？您可别吹捧云厂商了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-04-01 &lt;a href=&#34;https://mp.weixin.qq.com/s/s_MCdaCByDBuocXkY1tvKw&#34;&gt;罗永浩救不了牙膏云&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-26 &lt;a href=&#34;https://mp.weixin.qq.com/s/W5kOLxeJCIHjnWbIHc1Pzw&#34;&gt;Redis不开源是“开源”之耻，更是公有云之耻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-25 &lt;a href=&#34;https://mp.weixin.qq.com/s/_ijL2OXAQJQrmWiE-KKzdw&#34;&gt;公有云厂商卖的云计算到底是什么玩意？&lt;/a&gt; 马工&lt;/li&gt;
&lt;li&gt;2024-03-21 &lt;a href=&#34;https://mp.weixin.qq.com/s/w7YzdxSrAsIqk2gXBks9CA&#34;&gt;迷失在阿里云的年轻人&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/EH7RPB6ImfMHXhOMU7P5Qg&#34;&gt;RDS阉掉了PostgreSQL的灵魂&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-13 &lt;a href=&#34;https://mp.weixin.qq.com/s/Fit7MtSDQdp9IcedmWdYQg&#34;&gt;云计算反叛军联盟&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-03-10 &lt;a href=&#34;https://mp.weixin.qq.com/s/rp8Dtvyo9cItBJSsvfrKjw&#34;&gt;剖析云算力成本，阿里云真的降价了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-02-02 &lt;a href=&#34;https://mp.weixin.qq.com/s/BcsaChZ-PHDEy9u5bOmMJA&#34;&gt;DBA会被云淘汰吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-16 &lt;a href=&#34;https://mp.weixin.qq.com/s/jKv9l_ro6rWei4QnXck-zw&#34;&gt;单租户时代：SaaS范式转移&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/8ZffsCgchv8LH5ujv0lRGQ&#34;&gt;互联网技术大师速成班&lt;/a&gt; 马工&lt;/li&gt;
&lt;li&gt;2024-01-04 &lt;a href=&#34;https://mp.weixin.qq.com/s/qSTEf9txjHNTHeEFv3NkWg&#34;&gt;门内的国企如何看门外的云厂商&lt;/a&gt; Leo&lt;/li&gt;
&lt;li&gt;2023-12-29 &lt;a href=&#34;https://mp.weixin.qq.com/s/gPdeaWqFDRe131c78UBkSA&#34;&gt;卡在政企客户门口的阿里云&lt;/a&gt; 马工&lt;/li&gt;
&lt;li&gt;2024-01-12 &lt;a href=&#34;https://mp.weixin.qq.com/s/YrDngnKQc_0juN1B3SPnNg&#34;&gt;云计算泥石流&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2024-01-10 &lt;a href=&#34;https://mp.weixin.qq.com/s/yIVal-9U6_TXX-dZpVtjBg&#34;&gt;拒绝用复杂度自慰，下云也保稳定运行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-12-27 &lt;a href=&#34;https://mp.weixin.qq.com/s/HathxpQ_KUuqxyrtyCDzWw&#34;&gt;扒皮对象存储：从降本到杀猪&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-12-22 &lt;a href=&#34;https://mp.weixin.qq.com/s/xaa079P4DRCz0hzNovGoOA&#34;&gt;半年下云省千万：DHH下云FAQ答疑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-12-06 &lt;a href=&#34;https://mp.weixin.qq.com/s/OxhhJ4U1P43di_eaE1uGPw&#34;&gt;互联网故障背后的草台班子们&lt;/a&gt; 马工&lt;/li&gt;
&lt;li&gt;2023-11-29 &lt;a href=&#34;https://mp.weixin.qq.com/s/FIOB_Oqefx1oez1iu7AGGg&#34;&gt;从降本增笑到真的降本增效&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-27 &lt;a href=&#34;https://mp.weixin.qq.com/s/3F1ud-tWB3eymu1-dxSHMA&#34;&gt;阿里云周爆：云数据库管控又挂了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-17 &lt;a href=&#34;https://mp.weixin.qq.com/s/1OSRcBfd58s0tgZTUZHB9g&#34;&gt;重新拿回计算机硬件的红利&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/OIlR0rolEQff9YfCpj3wIQ&#34;&gt;我们能从阿里云史诗级故障中学到什么&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-12 &lt;a href=&#34;https://mp.weixin.qq.com/s/cTge3xOlIQCALQc8Mi-P8w&#34;&gt;【阿里】云计算史诗级大翻车来了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-09 &lt;a href=&#34;https://mp.weixin.qq.com/s/Nh28VahZkQMdR8fDoi0_rQ&#34;&gt;阿里云的羊毛抓紧薅，五千的云服务器三百拿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-11-06 &lt;a href=&#34;https://mp.weixin.qq.com/s/y9IradwxTxOsUGcOHia1XQ&#34;&gt;云厂商眼中的客户：又穷又闲又缺爱&lt;/a&gt; 马工&lt;/li&gt;
&lt;li&gt;2023-10-29 &lt;a href=&#34;https://mp.weixin.qq.com/s/CicctyvV1xk5B-AsKfzPjw&#34;&gt;是时候放弃云计算了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-07-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/eag0CqfUTeNPbIB6TZqFVg&#34;&gt;云计算泥石流合集 —— 用数据解构公有云&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-07-07 &lt;a href=&#34;https://mp.weixin.qq.com/s/H2S3TV-AsqS43A5Hh-XMhQ&#34;&gt;下云奥德赛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-07-06 &lt;a href=&#34;https://mp.weixin.qq.com/s/Yp_PU8nmyK-NVq0clD98RQ&#34;&gt;FinOps终点是下云&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-06-14 &lt;a href=&#34;https://mp.weixin.qq.com/s/2w0bLJI7TvUNp1tzLYbvsA&#34;&gt;云计算为啥还没挖沙子赚钱？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-06-12 &lt;a href=&#34;https://mp.weixin.qq.com/s/LC5jAhuVObRcrTLxI1FUQA&#34;&gt;云SLA是不是安慰剂？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-04-28 &lt;a href=&#34;https://mp.weixin.qq.com/s/TksQ108v_nGaW11-87Es3A&#34;&gt;杀猪盘真的降价了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-03-15 &lt;a href=&#34;https://mp.weixin.qq.com/s/UxjiUBTpb1pRUfGtR9V3ag&#34;&gt;公有云是不是杀猪盘？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-03-08 &lt;a href=&#34;https://mp.weixin.qq.com/s/ANFnbDXwuhKI99fgYRZ9ug&#34;&gt;垃圾腾讯云CDN：从入门到放弃&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-03-01 &lt;a href=&#34;https://mp.weixin.qq.com/s/CMRrqI2yBWlNbACHpNgL1g&#34;&gt;驳《再论为什么你不应该招DBA》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-02-03 &lt;a href=&#34;https://mp.weixin.qq.com/s/Yp6L0hh4b4HuJQRPD3aJYw&#34;&gt;范式转移：从云到本地优先&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-01-31 &lt;a href=&#34;https://mp.weixin.qq.com/s/LefEAXTcBH-KBJNhXNoc7A&#34;&gt;云数据库是不是杀猪盘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2023-01-31 &lt;a href=&#34;https://mp.weixin.qq.com/s/PqCD80H927s0yJrBr4QQqw&#34;&gt;你怎么还在招聘DBA?&lt;/a&gt; 马工&lt;/li&gt;
&lt;li&gt;2023-01-30 &lt;a href=&#34;https://mp.weixin.qq.com/s/c8bpK4o3H7-EyRqVdNDndQ&#34;&gt;云数据库是不是智商税&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2022-05-16 &lt;a href=&#34;https://mp.weixin.qq.com/s/AGEW1iHQkQy4NQyYC2GonQ&#34;&gt;云RDS：从删库到跑路&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;下云之歌&#34;&gt;下云之歌&lt;/h2&gt;
&lt;p&gt;甜美朋克：https://app.suno.ai/song/98f03bcd-5b4d-428f-a3f1-f581910d2e56&lt;/p&gt;
&lt;p&gt;滑稽上口：https://app.suno.ai/song/308069a2-9d97-41c0-b1a9-ce14eb137ffe&lt;/p&gt;
&lt;p&gt;新纪元：https://app.suno.ai/song/81e1b275-4652-4442-aa47-3127171d874d&lt;/p&gt;
&lt;p&gt;死亡摇滚：https://app.suno.ai/song/6c203c72-0ce7-4b63-a447-a63b31080776&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: PZ：MySQL还有机会赶上PostgreSQL的势头吗？</title>
      <link>/zh/blog/db/can-mysql-catchup/</link>
      <pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/can-mysql-catchup/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/can-mysql-catchup/featured_hu02aa61ae1d9de35cbe238d2676170cb9_143736_640x0_resize_q75_catmullrom.jpg" width="640" height="321"/>]]>
        
        &lt;p&gt;Percona 的老板 Peter Zaitsev最近发表一篇博客，讨论了MySQL是否还能跟上PostgreSQL的脚步。&lt;/p&gt;
&lt;p&gt;Percona 作为MySQL 生态扛旗者，Percona 开发了知名的PT系列工具，MySQL备份工具，监控工具与发行版。他们的看法在相当程度上代表了 MySQL 社区的想法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：&lt;a href=&#34;https://www.percona.com/blog/author/pz&#34;&gt;Peter Zaitsev&lt;/a&gt;，Percona 老板，原文：&lt;a href=&#34;https://www.percona.com/blog/how-can-mysql-catch-up-with-postgresqls-momentum/&#34;&gt;How Can MySQL Catch Up with PostgreSQL’s Momentum?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href=&#34;https://vonng.com/en&#34;&gt;冯若航&lt;/a&gt;，Vonng，&lt;a href=&#34;https://pigsty.io&#34;&gt;Pigsty&lt;/a&gt; 作者，PostgreSQL 大法师，数据库老司机，云计算泥石流。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;mysql还能跟上postgresql的步伐吗&#34;&gt;MySQL还能跟上PostgreSQL的步伐吗？&lt;/h2&gt;
&lt;p&gt;当我与MySQL社区的老前辈交谈时，我经常听到这样的问题：“&lt;em&gt;为什么MySQL如此出色，依然比PostgreSQL更受欢迎（至少根据DB-Engines的统计方法），但它的地位却在不断下降，而PostgreSQL的受欢迎程度却在不可阻挡地增长？&lt;/em&gt;” 在MySQL 生态能做些什么扭转这一趋势吗？让我们来深入探讨一下！&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-engine.png&#34; src=&#34;/zh/blog/db/can-mysql-catchup/db-engine.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;让我们看看为什么PostgreSQL一直表现如此强劲，而MySQL却在走下坡路。我认为这归结为所有权与治理、许可证、社区、架构以及开源产品的势能。&lt;/p&gt;
&lt;h2 id=&#34;所有权和治理&#34;&gt;所有权和治理&lt;/h2&gt;
&lt;p&gt;MySQL 从未像 PostgreSQL 那样是“社区驱动”的。然而，当 MySQL 由瑞典小公司 MySQL AB 拥有，且由终身仁慈独裁者（BDFL）Michael “Monty” Widenius掌舵时，它获得了大量的社区信任，更重要的是，大公司并没有将其视为特别的威胁。&lt;/p&gt;
&lt;p&gt;现在情况不同了——Oracle 拥有 MySQL，业界的许多大公司，特别是云厂商，将 Oracle 视为竞争对手。显然它们没有理由去贡献代码与营销，为你的竞争对手创造价值。此外，拥有 MySQL 商标的 Oracle 在 MySQL 上总是会有额外的优先权。&lt;/p&gt;
&lt;p&gt;相比之下，PostgreSQL 由社区运营，领域内的每个商业供应商都站在同一起跑线上—— 像 EDB 这样的大公司与PostgreSQL 生态系统中的小公司相比，没有特殊的优待。&lt;/p&gt;
&lt;p&gt;这意味着大公司更愿意贡献并推荐 PostgreSQL 作为首选，因为这不会为他们的竞争对手创造价值，而且他们对PostgreSQL 项目的方向有更大的影响力。数百家小公司通过本地“草根”社区的开发和营销努力，使 PostgreSQL 在全球无处不在。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL社区能做些什么来解决这个问题？&lt;/strong&gt; &lt;strong&gt;MySQL 社区能做的很少&lt;/strong&gt;——这完全掌握在 Oracle 手中。正如我在&lt;a href=&#34;https://mp.weixin.qq.com/s/1zlDPie_bVvP7eO6_uTkSw&#34;&gt;《Oracle能拯救MySQL吗？》&lt;/a&gt;中所写，将 MySQL 移交给一个中立的基金会（如 Linux 或 Kubernetes 项目）将提供与 PostgreSQL 竞争的机会。不过，我并不抱太大希望，因为我认为Oracle此刻更感兴趣的是“硬性”变现，而不是扩大采用率。&lt;/p&gt;
&lt;h2 id=&#34;许可证&#34;&gt;许可证&lt;/h2&gt;
&lt;p&gt;MySQL 采用双许可证模式： GPLv2 和可从 Oracle 购买的商业许可证，而PostgreSQL则采用非常宽松的 PostgreSQL 许可证。&lt;/p&gt;
&lt;p&gt;这实际上意味着您可以轻松创建使用商业许可的 &lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_derived_databases&#34;&gt;PostgreSQL衍生版本&lt;/a&gt;，或将其嵌入到商业许可的项目中，而无需任何“变通方法”。构建此类产品的人们当然是在支持和推广 PostgreSQL。&lt;/p&gt;
&lt;p&gt;MySQL 确实允许云供应商创建自己的商业分支，具有MySQL兼容性的 Amazon Aurora 是最知名和最成功的此类分支，但在软件发行时这样做是不允许的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL社区能做什么？&lt;/strong&gt;  &lt;strong&gt;还是那句话，能做的不多&lt;/strong&gt; ——唯一能在宽松许可证下重新授权MySQL的公司是Oracle，而我没有理由相信他们会想要放松控制，尽管“开放核心”和“仅限云”的版本通常与宽松许可的“核心”软件配合良好。&lt;/p&gt;
&lt;h2 id=&#34;社区&#34;&gt;社区&lt;/h2&gt;
&lt;p&gt;我认为，当我们考虑开源社区时，最好考虑 &lt;a href=&#34;https://peterzaitsev.com/there-are-three-open-source-communities-not-just-one/&#34;&gt;三个不同的社区&lt;/a&gt;，而不仅仅是一个。&lt;/p&gt;
&lt;p&gt;首先，&lt;strong&gt;用户社区&lt;/strong&gt;。MySQL在这方面仍然表现不错，尽管 PostgreSQL 正日益成为新应用的首选数据库。然而，用户社区往往是其他几个社区工作的成果。&lt;/p&gt;
&lt;p&gt;其次，&lt;strong&gt;贡献者社区&lt;/strong&gt;。PostgreSQL 有着更强大的贡献者社区，这并不奇怪，因为它是由众多组织而非单一组织驱动的。我们举办了针对贡献者的活动，还编写了关于如何为 PostgreSQL 作出贡献的书籍。PostgreSQL 的可扩展架构也有助于轻松扩展 PostgreSQL，并公开分享工作成果。&lt;/p&gt;
&lt;p&gt;最后，&lt;strong&gt;供应商社区&lt;/strong&gt;。我认为这正是主要问题所在，没有那么多公司有兴趣推广 MySQL，因为这样做可能只是为Oracle 创造价值。你可能会问，这难道不会鼓励所有 Oracle 的“合作伙伴”去推广 MySQL 吗？可能会，在全球范围内也确实有一些合作伙伴支持的MySQL活动，但这些与供应商对 PostgreSQL 的支持相比，简直微不足道，因为这是 “属于他们的项目”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL社区能做什么？&lt;/strong&gt; 这里社区还是可以发挥一点作用的 —— 尽管当前的状况使得工作更困难，回报更少，但我们仍然可以做很多事情。如果你关心 MySQL 的未来，我鼓励你组织与参与各种活动，尤其是在狭窄的 MySQL生态之外，去撰写文章、录制视频、出版书籍。在社交媒体上推广它们，并将它们提交到 Hacker News。&lt;/p&gt;
&lt;p&gt;特别是，不要错过&lt;a href=&#34;https://www.mysqlandfriends.eu/&#34;&gt; FOSDEM 2025 MySQL Devroom &lt;/a&gt;的征稿！&lt;/p&gt;
&lt;p&gt;这也是 Oracle 可以参与的部分，它们可以在不减少盈利的情况下参与这些活动，并与潜在的贡献者互动 —— 举办一些外部贡献者可以参与的活动，与他们分享计划，支持他们的贡献 —— 至少在他们与你的“MySQL社区”蓝图一致的情况下。&lt;/p&gt;
&lt;h2 id=&#34;架构&#34;&gt;架构&lt;/h2&gt;
&lt;p&gt;一些 PostgreSQL 同行认为，PostgreSQL 发展势头更好的原因源于更好的架构和更干净的代码库。我认为这可能是一个因素，但并非主要原因，这里的原因值得讨论。&lt;/p&gt;
&lt;p&gt;PostgreSQL 的设计高度可扩展，而且已经实现有大量强大的扩展插件，而 MySQL 的扩展可能性则非常有限。一个显著例外是存储引擎接口 —— MySQL支持多种不同的存储引擎，而 PostgreSQL 只有一个（尽管像 &lt;a href=&#34;https://neon.tech/&#34;&gt;Neon&lt;/a&gt; 或 &lt;a href=&#34;https://www.orioledb.com/&#34;&gt;OrioleDB&lt;/a&gt; 这样的分叉可以通过打补丁来改变这一点）。&lt;/p&gt;
&lt;p&gt;这种可扩展性使得在 PostgreSQL 上进行创新更加容易，（特别是PG还有着一个更强大的贡献者社区支持），而无需将新功能纳入核心代码库中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL社区能做些什么？&lt;/strong&gt; 我认为即使 MySQL 的可扩展性很有限，我们仍然可以通过MySQL已经支持的&lt;a href=&#34;https://dev.mysql.com/doc/extending-mysql/8.0/en/plugin-types.html&#34;&gt;各种类型的插件&lt;/a&gt;和&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.4/en/components.html&#34;&gt;“组件”&lt;/a&gt;来实现很多功能。&lt;/p&gt;
&lt;p&gt;我们首先需要为MySQL建立一个“社区插件市场”，这将鼓励开发者构建更多插件并让它们得到更多曝光。我们还需要Oracle的支持 —— 承诺扩展MySQL的插件架构，赋能开发者构建插件 —— 即使这会与Oracle的产品产生一些竞争。例如，如果 MySQL 有插件可以创建自定义数据类型和可插拔索引，或许我们已经会看到 MySQL 的 PGVector替代品了。&lt;/p&gt;
&lt;h2 id=&#34;开源产品的势头&#34;&gt;开源产品的势头&lt;/h2&gt;
&lt;p&gt;选择数据库是一个长期的赌注，因为更换数据库并不容易。去问问那些几十年前选择了 Oracle 而现在被其束缚的人吧。这意味着在选择数据库时，你需要考虑未来，不仅要考虑这些数据库在十年后是否依然存在，而且要考虑随着时间的发展，它是否还能满足未来的技术需求。&lt;/p&gt;
&lt;p&gt;正如我在文章 &lt;a href=&#34;https://mp.weixin.qq.com/s/1zlDPie_bVvP7eO6_uTkSw&#34;&gt;《Oracle最终还是杀死了MySQL！》&lt;/a&gt; 中所写到的，我认为Oracle已经将大量开发重心转移到专有商业版和云专属的 MySQL 版本上 —— 几乎放弃了 MySQL 社区版。虽然今日的 MySQL 仍然在许多应用中表现出色，但它确实正在落后过气中，MySQL 社区中的许多人都在质疑它是还有未来。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL社区能做什么？&lt;/strong&gt; 还是那句话，决定权在 Oracle 手中，因为他们是唯一能决定 MySQL 官方路线的人。你可能会问，那么我们的 &lt;a href=&#34;https://www.percona.com/mysql/software/percona-server-for-mysql&#34;&gt;Percona Server for MySQL&lt;/a&gt; 呢？我相信在Percona，我们确实提供了一个领先的 Oracle MySQL的开源替代品，但因为我们专注于完整的 MySQL 兼容性，所以必须谨慎对待对 MySQL 所做的变更，以避免破坏这种兼容性或使上游合并成本过高。&lt;a href=&#34;https://mariadb.org/&#34;&gt;MariaDB&lt;/a&gt; 做出了不同的利弊权衡；不受限制的创新使其与MySQL 的兼容性越来越差，而且每个新版本都离 MySQL 越来越远。&lt;/p&gt;
&lt;h2 id=&#34;mariadb&#34;&gt;MariaDB&lt;/h2&gt;
&lt;p&gt;既然提到了MariaDB，你可能会问，MariaDB 不是已经尽可能地解决了所有这些问题吗？—— 毕竟 MariaDB 不是由 MariaDB基金会等机构管理的吗？别急，我认为MariaDB是 &lt;a href=&#34;https://www.percona.com/blog/open-source-and-flawed-foundations/&#34;&gt;一个有缺陷的基金会&lt;/a&gt;，它并不拥有所有的知识产权，&lt;strong&gt;尤其是商标&lt;/strong&gt;，无法为所有供应商提供公平的竞争环境。它仍然存在商标垄断问题，因为只有一家公司可以提供所有 “MariaDB” 相关的服务，地位高于其他所有公司。&lt;/p&gt;
&lt;p&gt;然而，MariaDB 可能有一个机会窗口；随着 MariaDB（公司）刚刚被&lt;a href=&#34;https://k1.com/k1-acquires-mariadb/&#34;&gt;K1收购&lt;/a&gt;，MariaDB的治理和商标所有权有机会向 PostgreSQL 的模式靠近。&lt;strong&gt;不过，我并不抱太大希望&lt;/strong&gt;，因为放松对商标知识产权的控制并不是私募股权公司所惯常做的。&lt;/p&gt;
&lt;p&gt;当然，MariaDB 基金会也可以选择通过将项目更名为 SomethingElseDB 来获得对商标的完全控制，但这意味着MariaDB 将失去所有的品牌知名度；这也不太可能发生。&lt;/p&gt;
&lt;p&gt;MariaDB 也已经与 MySQL 有了显著的分歧，调和这些差异将需要多年的努力，但我认为如果有足够的资源和社区意愿，这也许是一个可以解决的问题。&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;
&lt;p&gt;正如你所看到的，由于 MySQL 的所有权和治理方式，MySQL 社区在其能做的事情上受到限制。从长远来看，我认为 MySQL 社区唯一能与 PostgreSQL 竞争的方法是所有重要的参与者联合起来（就像&lt;a href=&#34;https://valkey.io/&#34;&gt;Valkey项目&lt;/a&gt;那样），在不同的品牌下创建一个 MySQL 的替代品 —— 这可以解决上述大部分问题。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: PostgreSQL神功大成！最全扩展仓库来了！</title>
      <link>/zh/blog/pg/pg-ext-repo/</link>
      <pubDate>Sat, 02 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/pg-ext-repo/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/pg-ext-repo/featured_hua49e85834b344fe1b85a922a5102032f_362146_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;p&gt;最近没怎么更新，因为在憋大招。最近功成出关，遂发此文为贺 —— 我做了一个收录PG生态所有能打的340个扩展的&lt;a href=&#34;https://ext.pigsty.io&#34;&gt;仓库&lt;/a&gt;，让 PostgreSQL 在成为数据库全能王的道路上又往前迈出了坚实的一步！&lt;/p&gt;
&lt;p&gt;自从我在 《&lt;a href=&#34;/zh/blog/pg/pg-eat-db-world&#34;&gt;&lt;strong&gt;PostgreSQL正在吞噬数据库世界&lt;/strong&gt;&lt;/a&gt;》 一文中指出 &lt;strong&gt;可扩展性&lt;/strong&gt; 对于 PostgreSQL 的重要性以来，PG 社区对此进行了&lt;a href=&#34;/zh/blog/pg/pgcondev-2024&#34;&gt;&lt;strong&gt;热烈的讨论&lt;/strong&gt;&lt;/a&gt;，并且达成了共识。
最终体现在《&lt;a href=&#34;/zh/blog/pg/pg-17&#34;&gt;&lt;strong&gt;PostgreSQL 17 发布注记！&lt;/strong&gt;&lt;/a&gt;》中。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/pg/pg-eat-deb-world&#34;&gt;&lt;img src=&#34;/img/pigsty/ecosystem.jpg&#34; style=&#34;max-width: 1000px; max-height: 1000px; width: 100%; height: auto;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;但真正重要的事情不是认识世界，而是改变世界。既然大家都已经认清了扩展很重要，&lt;strong&gt;那么我们应该做什么，怎么做&lt;/strong&gt;，就成了真正关键的问题。&lt;/p&gt;
&lt;p&gt;那么什么是 PostgreSQL 扩展最关键的问题？在我看来，扩展用得上用不上，是 PG 扩展生态的首要问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pg-扩展分发现状&#34;&gt;PG 扩展分发现状&lt;/h2&gt;
&lt;p&gt;大家知道 PG 生态有很多扩展插件，但这些扩展插件如何安装使用？这第一道门槛就成了许多用户的拦路虎。怎么解决这个问题？
PGXN 说，用我的办法，我可以现场下载编译扩展；
Tembo 说，我提前帮你打好 docker 镜像；
StackGres 和 Omnigres 说，我们可以在线下载编译好的 So 文件；
八仙过海，各显神通。&lt;/p&gt;
&lt;p&gt;大家都有很多好想法，唯独没仔细考虑绝大多数用户到底是如何安装扩展的。
作为前 DBA，我只能说什么现场编译，OCI镜像，下载so文件，在实战中都有些离谱了 —— &lt;strong&gt;使用最广泛且最可靠的扩展安装方式，依然是用操作系统的包管理器安装签名二进制包&lt;/strong&gt;。
而 yum / dnf / apt 在解决这个问题上已经做的足够好了！所以真的问题其实是，谁来把这几百个扩展插件打成开箱即用的软件包？&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ext.pigsty.io/#/time&#34;&gt;&lt;strong&gt;TIME&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/timescaledb&#34;&gt;&lt;code&gt;timescaledb&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/timescaledb_toolkit&#34;&gt;&lt;code&gt;timescaledb_toolkit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/timeseries&#34;&gt;&lt;code&gt;timeseries&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/periods&#34;&gt;&lt;code&gt;periods&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/temporal_tables&#34;&gt;&lt;code&gt;temporal_tables&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/emaj&#34;&gt;&lt;code&gt;emaj&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/table_version&#34;&gt;&lt;code&gt;table_version&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_cron&#34;&gt;&lt;code&gt;pg_cron&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_later&#34;&gt;&lt;code&gt;pg_later&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_background&#34;&gt;&lt;code&gt;pg_background&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/gis&#34;&gt;&lt;strong&gt;GIS&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/postgis&#34;&gt;&lt;code&gt;postgis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/postgis_topology&#34;&gt;&lt;code&gt;postgis_topology&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/postgis_raster&#34;&gt;&lt;code&gt;postgis_raster&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/postgis_sfcgal&#34;&gt;&lt;code&gt;postgis_sfcgal&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/postgis_tiger_geocoder&#34;&gt;&lt;code&gt;postgis_tiger_geocoder&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/address_standardizer&#34;&gt;&lt;code&gt;address_standardizer&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/address_standardizer_data_us&#34;&gt;&lt;code&gt;address_standardizer_data_us&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgrouting&#34;&gt;&lt;code&gt;pgrouting&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pointcloud&#34;&gt;&lt;code&gt;pointcloud&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pointcloud_postgis&#34;&gt;&lt;code&gt;pointcloud_postgis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/h3&#34;&gt;&lt;code&gt;h3&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/h3_postgis&#34;&gt;&lt;code&gt;h3_postgis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/q3c&#34;&gt;&lt;code&gt;q3c&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/ogr_fdw&#34;&gt;&lt;code&gt;ogr_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/geoip&#34;&gt;&lt;code&gt;geoip&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_polyline&#34;&gt;&lt;code&gt;pg_polyline&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_geohash&#34;&gt;&lt;code&gt;pg_geohash&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/mobilitydb&#34;&gt;&lt;code&gt;mobilitydb&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/earthdistance&#34;&gt;&lt;code&gt;earthdistance&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/rag&#34;&gt;&lt;strong&gt;RAG&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/vector&#34;&gt;&lt;code&gt;vector&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/vectorscale&#34;&gt;&lt;code&gt;vectorscale&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/vectorize&#34;&gt;&lt;code&gt;vectorize&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_similarity&#34;&gt;&lt;code&gt;pg_similarity&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/smlar&#34;&gt;&lt;code&gt;smlar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_summarize&#34;&gt;&lt;code&gt;pg_summarize&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_tiktoken&#34;&gt;&lt;code&gt;pg_tiktoken&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgml&#34;&gt;&lt;code&gt;pgml&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg4ml&#34;&gt;&lt;code&gt;pg4ml&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/fts&#34;&gt;&lt;strong&gt;FTS&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/pg_search&#34;&gt;&lt;code&gt;pg_search&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_bigm&#34;&gt;&lt;code&gt;pg_bigm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/zhparser&#34;&gt;&lt;code&gt;zhparser&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_cs_cz&#34;&gt;&lt;code&gt;hunspell_cs_cz&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_de_de&#34;&gt;&lt;code&gt;hunspell_de_de&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_en_us&#34;&gt;&lt;code&gt;hunspell_en_us&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_fr&#34;&gt;&lt;code&gt;hunspell_fr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_ne_np&#34;&gt;&lt;code&gt;hunspell_ne_np&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_nl_nl&#34;&gt;&lt;code&gt;hunspell_nl_nl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_nn_no&#34;&gt;&lt;code&gt;hunspell_nn_no&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_pt_pt&#34;&gt;&lt;code&gt;hunspell_pt_pt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_ru_ru&#34;&gt;&lt;code&gt;hunspell_ru_ru&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hunspell_ru_ru_aot&#34;&gt;&lt;code&gt;hunspell_ru_ru_aot&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/fuzzystrmatch&#34;&gt;&lt;code&gt;fuzzystrmatch&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_trgm&#34;&gt;&lt;code&gt;pg_trgm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/olap&#34;&gt;&lt;strong&gt;OLAP&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/citus&#34;&gt;&lt;code&gt;citus&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/citus_columnar&#34;&gt;&lt;code&gt;citus_columnar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/columnar&#34;&gt;&lt;code&gt;columnar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_analytics&#34;&gt;&lt;code&gt;pg_analytics&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_duckdb&#34;&gt;&lt;code&gt;pg_duckdb&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_mooncake&#34;&gt;&lt;code&gt;pg_mooncake&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/duckdb_fdw&#34;&gt;&lt;code&gt;duckdb_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_parquet&#34;&gt;&lt;code&gt;pg_parquet&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_fkpart&#34;&gt;&lt;code&gt;pg_fkpart&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_partman&#34;&gt;&lt;code&gt;pg_partman&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plproxy&#34;&gt;&lt;code&gt;plproxy&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_strom&#34;&gt;&lt;code&gt;pg_strom&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/tablefunc&#34;&gt;&lt;code&gt;tablefunc&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/feat&#34;&gt;&lt;strong&gt;FEAT&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/age&#34;&gt;&lt;code&gt;age&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hll&#34;&gt;&lt;code&gt;hll&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/rum&#34;&gt;&lt;code&gt;rum&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_graphql&#34;&gt;&lt;code&gt;pg_graphql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_jsonschema&#34;&gt;&lt;code&gt;pg_jsonschema&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/jsquery&#34;&gt;&lt;code&gt;jsquery&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_hint_plan&#34;&gt;&lt;code&gt;pg_hint_plan&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hypopg&#34;&gt;&lt;code&gt;hypopg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/index_advisor&#34;&gt;&lt;code&gt;index_advisor&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plan_filter&#34;&gt;&lt;code&gt;plan_filter&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/imgsmlr&#34;&gt;&lt;code&gt;imgsmlr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_ivm&#34;&gt;&lt;code&gt;pg_ivm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgmq&#34;&gt;&lt;code&gt;pgmq&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgq&#34;&gt;&lt;code&gt;pgq&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_cardano&#34;&gt;&lt;code&gt;pg_cardano&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/rdkit&#34;&gt;&lt;code&gt;rdkit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/bloom&#34;&gt;&lt;code&gt;bloom&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/lang&#34;&gt;&lt;strong&gt;LANG&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/pg_tle&#34;&gt;&lt;code&gt;pg_tle&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plv8&#34;&gt;&lt;code&gt;plv8&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pllua&#34;&gt;&lt;code&gt;pllua&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hstore_pllua&#34;&gt;&lt;code&gt;hstore_pllua&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plluau&#34;&gt;&lt;code&gt;plluau&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hstore_plluau&#34;&gt;&lt;code&gt;hstore_plluau&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plprql&#34;&gt;&lt;code&gt;plprql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pldbgapi&#34;&gt;&lt;code&gt;pldbgapi&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plpgsql_check&#34;&gt;&lt;code&gt;plpgsql_check&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plprofiler&#34;&gt;&lt;code&gt;plprofiler&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plsh&#34;&gt;&lt;code&gt;plsh&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pljava&#34;&gt;&lt;code&gt;pljava&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plr&#34;&gt;&lt;code&gt;plr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgtap&#34;&gt;&lt;code&gt;pgtap&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/faker&#34;&gt;&lt;code&gt;faker&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/dbt2&#34;&gt;&lt;code&gt;dbt2&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pltcl&#34;&gt;&lt;code&gt;pltcl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pltclu&#34;&gt;&lt;code&gt;pltclu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plperl&#34;&gt;&lt;code&gt;plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/bool_plperl&#34;&gt;&lt;code&gt;bool_plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hstore_plperl&#34;&gt;&lt;code&gt;hstore_plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/jsonb_plperl&#34;&gt;&lt;code&gt;jsonb_plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plperlu&#34;&gt;&lt;code&gt;plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/bool_plperlu&#34;&gt;&lt;code&gt;bool_plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/jsonb_plperlu&#34;&gt;&lt;code&gt;jsonb_plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hstore_plperlu&#34;&gt;&lt;code&gt;hstore_plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plpgsql&#34;&gt;&lt;code&gt;plpgsql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/plpython3u&#34;&gt;&lt;code&gt;plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/jsonb_plpython3u&#34;&gt;&lt;code&gt;jsonb_plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/ltree_plpython3u&#34;&gt;&lt;code&gt;ltree_plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hstore_plpython3u&#34;&gt;&lt;code&gt;hstore_plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/type&#34;&gt;&lt;strong&gt;TYPE&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/prefix&#34;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/semver&#34;&gt;&lt;code&gt;semver&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/unit&#34;&gt;&lt;code&gt;unit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/md5hash&#34;&gt;&lt;code&gt;md5hash&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/asn1oid&#34;&gt;&lt;code&gt;asn1oid&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/roaringbitmap&#34;&gt;&lt;code&gt;roaringbitmap&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgfaceting&#34;&gt;&lt;code&gt;pgfaceting&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_sphere&#34;&gt;&lt;code&gt;pg_sphere&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/country&#34;&gt;&lt;code&gt;country&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/currency&#34;&gt;&lt;code&gt;currency&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgmp&#34;&gt;&lt;code&gt;pgmp&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/numeral&#34;&gt;&lt;code&gt;numeral&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_rational&#34;&gt;&lt;code&gt;pg_rational&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/uint&#34;&gt;&lt;code&gt;uint&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/uint128&#34;&gt;&lt;code&gt;uint128&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/ip4r&#34;&gt;&lt;code&gt;ip4r&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/uri&#34;&gt;&lt;code&gt;uri&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgemailaddr&#34;&gt;&lt;code&gt;pgemailaddr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/acl&#34;&gt;&lt;code&gt;acl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/debversion&#34;&gt;&lt;code&gt;debversion&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_rrule&#34;&gt;&lt;code&gt;pg_rrule&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/timestamp9&#34;&gt;&lt;code&gt;timestamp9&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/chkpass&#34;&gt;&lt;code&gt;chkpass&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/isn&#34;&gt;&lt;code&gt;isn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/seg&#34;&gt;&lt;code&gt;seg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/cube&#34;&gt;&lt;code&gt;cube&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/ltree&#34;&gt;&lt;code&gt;ltree&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hstore&#34;&gt;&lt;code&gt;hstore&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/citext&#34;&gt;&lt;code&gt;citext&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/xml2&#34;&gt;&lt;code&gt;xml2&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/func&#34;&gt;&lt;strong&gt;FUNC&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/topn&#34;&gt;&lt;code&gt;topn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/gzip&#34;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/zstd&#34;&gt;&lt;code&gt;zstd&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/http&#34;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_net&#34;&gt;&lt;code&gt;pg_net&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_smtp_client&#34;&gt;&lt;code&gt;pg_smtp_client&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_html5_email_address&#34;&gt;&lt;code&gt;pg_html5_email_address&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgsql_tweaks&#34;&gt;&lt;code&gt;pgsql_tweaks&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_extra_time&#34;&gt;&lt;code&gt;pg_extra_time&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/timeit&#34;&gt;&lt;code&gt;timeit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/count_distinct&#34;&gt;&lt;code&gt;count_distinct&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/extra_window_functions&#34;&gt;&lt;code&gt;extra_window_functions&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/first_last_agg&#34;&gt;&lt;code&gt;first_last_agg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/tdigest&#34;&gt;&lt;code&gt;tdigest&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/aggs_for_vecs&#34;&gt;&lt;code&gt;aggs_for_vecs&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/aggs_for_arrays&#34;&gt;&lt;code&gt;aggs_for_arrays&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/arraymath&#34;&gt;&lt;code&gt;arraymath&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/quantile&#34;&gt;&lt;code&gt;quantile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/lower_quantile&#34;&gt;&lt;code&gt;lower_quantile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_idkit&#34;&gt;&lt;code&gt;pg_idkit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_uuidv7&#34;&gt;&lt;code&gt;pg_uuidv7&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/permuteseq&#34;&gt;&lt;code&gt;permuteseq&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_hashids&#34;&gt;&lt;code&gt;pg_hashids&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sequential_uuids&#34;&gt;&lt;code&gt;sequential_uuids&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_math&#34;&gt;&lt;code&gt;pg_math&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/random&#34;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/base36&#34;&gt;&lt;code&gt;base36&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/base62&#34;&gt;&lt;code&gt;base62&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_base58&#34;&gt;&lt;code&gt;pg_base58&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/floatvec&#34;&gt;&lt;code&gt;floatvec&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/financial&#34;&gt;&lt;code&gt;financial&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgjwt&#34;&gt;&lt;code&gt;pgjwt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_hashlib&#34;&gt;&lt;code&gt;pg_hashlib&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/shacrypt&#34;&gt;&lt;code&gt;shacrypt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/cryptint&#34;&gt;&lt;code&gt;cryptint&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pguecc&#34;&gt;&lt;code&gt;pguecc&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgpcre&#34;&gt;&lt;code&gt;pgpcre&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/icu_ext&#34;&gt;&lt;code&gt;icu_ext&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgqr&#34;&gt;&lt;code&gt;pgqr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/envvar&#34;&gt;&lt;code&gt;envvar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_protobuf&#34;&gt;&lt;code&gt;pg_protobuf&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/url_encode&#34;&gt;&lt;code&gt;url_encode&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/refint&#34;&gt;&lt;code&gt;refint&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/autoinc&#34;&gt;&lt;code&gt;autoinc&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/insert_username&#34;&gt;&lt;code&gt;insert_username&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/moddatetime&#34;&gt;&lt;code&gt;moddatetime&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/tsm_system_time&#34;&gt;&lt;code&gt;tsm_system_time&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/dict_xsyn&#34;&gt;&lt;code&gt;dict_xsyn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/tsm_system_rows&#34;&gt;&lt;code&gt;tsm_system_rows&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/tcn&#34;&gt;&lt;code&gt;tcn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/uuid-ossp&#34;&gt;&lt;code&gt;uuid-ossp&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/btree_gist&#34;&gt;&lt;code&gt;btree_gist&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/btree_gin&#34;&gt;&lt;code&gt;btree_gin&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/intarray&#34;&gt;&lt;code&gt;intarray&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/intagg&#34;&gt;&lt;code&gt;intagg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/dict_int&#34;&gt;&lt;code&gt;dict_int&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/unaccent&#34;&gt;&lt;code&gt;unaccent&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/admin&#34;&gt;&lt;strong&gt;ADMIN&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/pg_repack&#34;&gt;&lt;code&gt;pg_repack&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_squeeze&#34;&gt;&lt;code&gt;pg_squeeze&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_dirtyread&#34;&gt;&lt;code&gt;pg_dirtyread&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgfincore&#34;&gt;&lt;code&gt;pgfincore&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgdd&#34;&gt;&lt;code&gt;pgdd&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/ddlx&#34;&gt;&lt;code&gt;ddlx&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/prioritize&#34;&gt;&lt;code&gt;prioritize&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_checksums&#34;&gt;&lt;code&gt;pg_checksums&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_readonly&#34;&gt;&lt;code&gt;pg_readonly&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/safeupdate&#34;&gt;&lt;code&gt;safeupdate&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_permissions&#34;&gt;&lt;code&gt;pg_permissions&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgautofailover&#34;&gt;&lt;code&gt;pgautofailover&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_catcheck&#34;&gt;&lt;code&gt;pg_catcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pre_prepare&#34;&gt;&lt;code&gt;pre_prepare&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgcozy&#34;&gt;&lt;code&gt;pgcozy&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_orphaned&#34;&gt;&lt;code&gt;pg_orphaned&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_crash&#34;&gt;&lt;code&gt;pg_crash&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_cheat_funcs&#34;&gt;&lt;code&gt;pg_cheat_funcs&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_savior&#34;&gt;&lt;code&gt;pg_savior&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/table_log&#34;&gt;&lt;code&gt;table_log&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_fio&#34;&gt;&lt;code&gt;pg_fio&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgpool_adm&#34;&gt;&lt;code&gt;pgpool_adm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgpool_recovery&#34;&gt;&lt;code&gt;pgpool_recovery&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgpool_regclass&#34;&gt;&lt;code&gt;pgpool_regclass&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgagent&#34;&gt;&lt;code&gt;pgagent&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/vacuumlo&#34;&gt;&lt;code&gt;vacuumlo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_prewarm&#34;&gt;&lt;code&gt;pg_prewarm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/oid2name&#34;&gt;&lt;code&gt;oid2name&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/lo&#34;&gt;&lt;code&gt;lo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/basic_archive&#34;&gt;&lt;code&gt;basic_archive&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/basebackup_to_shell&#34;&gt;&lt;code&gt;basebackup_to_shell&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/old_snapshot&#34;&gt;&lt;code&gt;old_snapshot&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/adminpack&#34;&gt;&lt;code&gt;adminpack&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/amcheck&#34;&gt;&lt;code&gt;amcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_surgery&#34;&gt;&lt;code&gt;pg_surgery&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/stat&#34;&gt;&lt;strong&gt;STAT&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/pg_profile&#34;&gt;&lt;code&gt;pg_profile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_show_plans&#34;&gt;&lt;code&gt;pg_show_plans&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_stat_kcache&#34;&gt;&lt;code&gt;pg_stat_kcache&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_stat_monitor&#34;&gt;&lt;code&gt;pg_stat_monitor&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_qualstats&#34;&gt;&lt;code&gt;pg_qualstats&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_store_plans&#34;&gt;&lt;code&gt;pg_store_plans&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_track_settings&#34;&gt;&lt;code&gt;pg_track_settings&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_wait_sampling&#34;&gt;&lt;code&gt;pg_wait_sampling&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/system_stats&#34;&gt;&lt;code&gt;system_stats&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/meta&#34;&gt;&lt;code&gt;meta&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgnodemx&#34;&gt;&lt;code&gt;pgnodemx&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_proctab&#34;&gt;&lt;code&gt;pg_proctab&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_sqlog&#34;&gt;&lt;code&gt;pg_sqlog&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/bgw_replstatus&#34;&gt;&lt;code&gt;bgw_replstatus&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgmeminfo&#34;&gt;&lt;code&gt;pgmeminfo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/toastinfo&#34;&gt;&lt;code&gt;toastinfo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/explain_ui&#34;&gt;&lt;code&gt;explain_ui&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_relusage&#34;&gt;&lt;code&gt;pg_relusage&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_top&#34;&gt;&lt;code&gt;pg_top&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pagevis&#34;&gt;&lt;code&gt;pagevis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/powa&#34;&gt;&lt;code&gt;powa&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pageinspect&#34;&gt;&lt;code&gt;pageinspect&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgrowlocks&#34;&gt;&lt;code&gt;pgrowlocks&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sslinfo&#34;&gt;&lt;code&gt;sslinfo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_buffercache&#34;&gt;&lt;code&gt;pg_buffercache&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_walinspect&#34;&gt;&lt;code&gt;pg_walinspect&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_freespacemap&#34;&gt;&lt;code&gt;pg_freespacemap&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_visibility&#34;&gt;&lt;code&gt;pg_visibility&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgstattuple&#34;&gt;&lt;code&gt;pgstattuple&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/auto_explain&#34;&gt;&lt;code&gt;auto_explain&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_stat_statements&#34;&gt;&lt;code&gt;pg_stat_statements&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sec&#34;&gt;&lt;strong&gt;SEC&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/passwordcheck_cracklib&#34;&gt;&lt;code&gt;passwordcheck_cracklib&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/supautils&#34;&gt;&lt;code&gt;supautils&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgsodium&#34;&gt;&lt;code&gt;pgsodium&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/supabase_vault&#34;&gt;&lt;code&gt;supabase_vault&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_session_jwt&#34;&gt;&lt;code&gt;pg_session_jwt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/anon&#34;&gt;&lt;code&gt;anon&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_tde&#34;&gt;&lt;code&gt;pg_tde&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgsmcrypto&#34;&gt;&lt;code&gt;pgsmcrypto&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgaudit&#34;&gt;&lt;code&gt;pgaudit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgauditlogtofile&#34;&gt;&lt;code&gt;pgauditlogtofile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_auth_mon&#34;&gt;&lt;code&gt;pg_auth_mon&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/credcheck&#34;&gt;&lt;code&gt;credcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgcryptokey&#34;&gt;&lt;code&gt;pgcryptokey&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_jobmon&#34;&gt;&lt;code&gt;pg_jobmon&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/logerrors&#34;&gt;&lt;code&gt;logerrors&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/login_hook&#34;&gt;&lt;code&gt;login_hook&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/set_user&#34;&gt;&lt;code&gt;set_user&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_snakeoil&#34;&gt;&lt;code&gt;pg_snakeoil&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgextwlist&#34;&gt;&lt;code&gt;pgextwlist&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_auditor&#34;&gt;&lt;code&gt;pg_auditor&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sslutils&#34;&gt;&lt;code&gt;sslutils&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/noset&#34;&gt;&lt;code&gt;noset&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sepgsql&#34;&gt;&lt;code&gt;sepgsql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/auth_delay&#34;&gt;&lt;code&gt;auth_delay&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgcrypto&#34;&gt;&lt;code&gt;pgcrypto&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/passwordcheck&#34;&gt;&lt;code&gt;passwordcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/fdw&#34;&gt;&lt;strong&gt;FDW&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/wrappers&#34;&gt;&lt;code&gt;wrappers&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/multicorn&#34;&gt;&lt;code&gt;multicorn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/odbc_fdw&#34;&gt;&lt;code&gt;odbc_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/jdbc_fdw&#34;&gt;&lt;code&gt;jdbc_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/mysql_fdw&#34;&gt;&lt;code&gt;mysql_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/oracle_fdw&#34;&gt;&lt;code&gt;oracle_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/tds_fdw&#34;&gt;&lt;code&gt;tds_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/db2_fdw&#34;&gt;&lt;code&gt;db2_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sqlite_fdw&#34;&gt;&lt;code&gt;sqlite_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgbouncer_fdw&#34;&gt;&lt;code&gt;pgbouncer_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/mongo_fdw&#34;&gt;&lt;code&gt;mongo_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/redis_fdw&#34;&gt;&lt;code&gt;redis_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/redis&#34;&gt;&lt;code&gt;redis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/kafka_fdw&#34;&gt;&lt;code&gt;kafka_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/hdfs_fdw&#34;&gt;&lt;code&gt;hdfs_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/firebird_fdw&#34;&gt;&lt;code&gt;firebird_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/aws_s3&#34;&gt;&lt;code&gt;aws_s3&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/log_fdw&#34;&gt;&lt;code&gt;log_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/dblink&#34;&gt;&lt;code&gt;dblink&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/file_fdw&#34;&gt;&lt;code&gt;file_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/postgres_fdw&#34;&gt;&lt;code&gt;postgres_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/sim&#34;&gt;&lt;strong&gt;SIM&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/orafce&#34;&gt;&lt;code&gt;orafce&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgtt&#34;&gt;&lt;code&gt;pgtt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/session_variable&#34;&gt;&lt;code&gt;session_variable&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_statement_rollback&#34;&gt;&lt;code&gt;pg_statement_rollback&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_dbms_metadata&#34;&gt;&lt;code&gt;pg_dbms_metadata&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_dbms_lock&#34;&gt;&lt;code&gt;pg_dbms_lock&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_dbms_job&#34;&gt;&lt;code&gt;pg_dbms_job&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/babelfishpg_common&#34;&gt;&lt;code&gt;babelfishpg_common&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/babelfishpg_tsql&#34;&gt;&lt;code&gt;babelfishpg_tsql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/babelfishpg_tds&#34;&gt;&lt;code&gt;babelfishpg_tds&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/babelfishpg_money&#34;&gt;&lt;code&gt;babelfishpg_money&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgmemcache&#34;&gt;&lt;code&gt;pgmemcache&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/etl&#34;&gt;&lt;strong&gt;ETL&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;https://ext.pigsty.io/#/pglogical&#34;&gt;&lt;code&gt;pglogical&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pglogical_origin&#34;&gt;&lt;code&gt;pglogical_origin&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pglogical_ticker&#34;&gt;&lt;code&gt;pglogical_ticker&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pgl_ddl_deploy&#34;&gt;&lt;code&gt;pgl_ddl_deploy&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_failover_slots&#34;&gt;&lt;code&gt;pg_failover_slots&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/wal2json&#34;&gt;&lt;code&gt;wal2json&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/wal2mongo&#34;&gt;&lt;code&gt;wal2mongo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/decoderbufs&#34;&gt;&lt;code&gt;decoderbufs&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/decoder_raw&#34;&gt;&lt;code&gt;decoder_raw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/test_decoding&#34;&gt;&lt;code&gt;test_decoding&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/mimeo&#34;&gt;&lt;code&gt;mimeo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/repmgr&#34;&gt;&lt;code&gt;repmgr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_fact_loader&#34;&gt;&lt;code&gt;pg_fact_loader&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;https://ext.pigsty.io/#/pg_bulkload&#34;&gt;&lt;code&gt;pg_bulkload&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PostgreSQL 的 PGDG 官方仓库中，提供了大约 &lt;strong&gt;100&lt;/strong&gt; 个左右的扩展，但存在各种问题：有的扩展在 Debian/Ubuntu 的 APT 仓库里有，在 EL 系统的 YUM 仓库里没有；
有的扩展在 EL8 上有，EL9 没有；有的扩展在 Ubuntu 22 上有，在 24 上没有；有的扩展针对 PostgreSQL 12 - 15 提供，PG 16，17 不提供；有的扩展只有 x86_64 架构，没有 arm 架构；有时候碰上这种问题确实蛮让人头疼。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;怎么办我行我上&#34;&gt;怎么办？我行我上！&lt;/h2&gt;
&lt;p&gt;作为一个 PostgreSQL 发行版维护者，我曾经寄希望于 PG 生态的其他人来解决这个问题。
每当我看见 PGDG 仓库有出现错漏缺失，我都会第一时间反馈给仓库维护者 Devrim 和 Cris 。&lt;/p&gt;
&lt;p&gt;有的时候这种模式挺管用，比如去年当我发现 pgvector 这个强力向量数据库扩展还没有二进制软件包制成品时，我第一时间&lt;a href=&#34;https://github.com/pgvector/pgvector/issues/76&#34;&gt;提给 Devrim&lt;/a&gt; ，
&lt;a href=&#34;/zh/blog/pg/vector-json-pg/#%E8%AF%91%E8%80%85%E8%AF%84%E8%AE%BA&#34;&gt;将其放入 PGDG 仓库&lt;/a&gt;，然后 pgvector 遂成为 PG 生态中的向量数据库事实标准，进入到各家云厂商 RDS 中。&lt;/p&gt;
&lt;p&gt;但有的时候，事情并不能总能如意。例如，&lt;strong&gt;Devrim&lt;/strong&gt; 表示，他绝对不会接受任何 Rust 扩展插件进入 PGDG YUM 仓库。
但我确实有二十多个用 Rust 编写的 PostgreSQL 扩展需要分发（例如自建 Supabase 就需要 pg_graphql, pg_jsonschema, wrappers 三个 Rust 扩展），怎么办呢？&lt;/p&gt;
&lt;p&gt;再比如说，最近 PG 生态非常火热的 &lt;a href=&#34;/zh/blog/pg/pg-duckdb&#34;&gt;DuckDB 缝合大赛&lt;/a&gt;，大家都在密集地更新跟进 DuckDB 系扩展 ，这些扩展插件我第一时间 &lt;a href=&#34;https://ext.pigsty.io/#/olap&#34;&gt;打好了 RPM/DEB 包&lt;/a&gt;，但是如何分发呢？&lt;/p&gt;
&lt;p&gt;思来想去，我决定还是我行我上，自己维护一个 PostgreSQL 扩展插件的 APT / YUM 仓库，分发 PG 扩展。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ext.pigsty.io&#34;&gt;&lt;img src=&#34;ext-website.png&#34; style=&#34;max-width: 800px; width: 100%; height: auto;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pg-扩展大全&#34;&gt;PG 扩展大全&lt;/h2&gt;
&lt;p&gt;在过去的半年中，我的工作重心放在 PG 扩展生态的整合上。而最近，这项工作终于达到了一个让我自己感到满意的里程碑。我建设了一个 PG Yum/APT 仓库，收录了 340 个可用 PG 扩展的元数据，以及二进制制成品。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Entry / Filter&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;All&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PGDG&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PIGSTY&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;CONTRIB&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;MISC&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;MISS&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG17&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG16&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG15&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG14&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG13&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;PG12&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;RPM Extension&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;334&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;119&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;139&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;301&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;330&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;333&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;319&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;307&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;294&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DEB Extension&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;326&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;104&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;143&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;14&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;302&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;322&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;325&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;316&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;303&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;293&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;RPM Package&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;251&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;107&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;138&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;220&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;247&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;250&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;239&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;229&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;216&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DEB Package&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;241&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;90&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;142&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;218&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;237&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;240&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;234&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;223&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;213&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以上是这个仓库的一些统计数字：总共有 340 个可用 Extension，去除 PG 自带的 70 个，总共 270 个第三方扩展插件。这 270 个扩展插件中，有小一半是 PGDG 官方仓库维护的（126个RPM扩展，102个DEB扩展），另外的大一半（131个RPM，143个DEB）都是由我维护，修复，编译，打包，测试，分发的。&lt;/p&gt;
&lt;p&gt;每一个扩展，我都针对最新的 PostgreSQL 12 - 17 这六个生命周期大版本分别打包构建，针对 EL8，EL9，Ubuntu 22.04，Ubuntu 24.04，以及 Debian 12 这五个绝对主流 Linux 发行版构建。此外也对 EL7，Debian 11， Ubuntu 20.04 这些过保系统提供部分有限支持。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ext.pigsty.io&#34;&gt;&lt;img src=&#34;usage.png&#34; style=&#34;max-width: 800px; max-height: 800px; width: 100%; height: auto;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个仓库还解决了扩展对齐的问题，例如，原本在 APT 和 YUM 仓库中的扩展，APT 有一小半几十个扩展 YUM 仓库没有，YUM 仓库有一小半 APT 仓库没有。我把两者独有的扩展都尽可能移植到另一个操作系统生态中，现在只有 7 个 APT 扩展在 YUM 仓库中缺失，16 个扩展在 APT 仓库缺失，只占总数的 6%。很多 PGDG 扩展版本缺失的问题，也在这里得到了一并修复。&lt;/p&gt;
&lt;p&gt;我提供了一个完整的目录，列出了支持的扩展，并且对每一个扩展，都给出了详情，依赖安装说明与注意事项。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ext.pigsty.io/#/postgis&#34;&gt;&lt;img src=&#34;postgis.png&#34; style=&#34;max-width: 1200px; width: 100%; height: auto;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我想，用户吭哧吭哧抱怨扩展编译失败的问题，应该能在这里得到最终的解决。&lt;/p&gt;
&lt;p&gt;当然题外话是广告时间，安装这些扩展，使用这个仓库的最简单的方式是什么？当然是开箱即用的 PostgreSQL 数据库发行版 —— &lt;strong&gt;Pigsty&lt;/strong&gt; —— &lt;strong&gt;但这并非必选项&lt;/strong&gt;。
你依然可以用简单的一行 shell 在任何 EL/Debian/Ubuntu 系统上启用此仓库。&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;使用Pigsty一次性配置好并拉起用于自建Supabase的PostgreSQL集群，只要简单地声明要安装哪些扩展插件即可！&lt;/summary&gt;&lt;br&gt;
&lt;p&gt;一键自建 Supabase 所需的 PostgreSQL 集群，请参考样例配置文件： &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/main/conf/supa.yml&#34;&gt;&lt;code&gt;conf/dbms/supabase.yml&lt;/code&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# pg-meta, the underlying postgres database for supabase&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg-meta&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_seq: 1, pg_role&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;primary } }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg-meta&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_users&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase roles: anon, authenticated, dashboard_user&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: anon           ,login&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: authenticated  ,login&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: dashboard_user ,login: false ,replication: true ,createdb: true ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: service_role   ,login: false ,bypassrls&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase users: please use the same password&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_admin             ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: true   ,roles: [ dbrole_admin ] ,superuser: true ,replication: true ,createdb: true ,createrole: true ,bypassrls&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: authenticator              ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbrole_admin, authenticated ,anon ,service_role ] }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_auth_admin        ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles: [ dbrole_admin ] ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_storage_admin     ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles: [ dbrole_admin, authenticated ,anon ,service_role ] ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_functions_admin   ,password: &amp;#39;DBUser.Supa&amp;#39; ,pgbouncer: true ,inherit: false  ,roles: [ dbrole_admin ] ,createrole&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_replication_admin ,password: &amp;#39;DBUser.Supa&amp;#39; ,replication: true ,roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbrole_admin ]}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_read_only_user    ,password: &amp;#39;DBUser.Supa&amp;#39; ,bypassrls: true ,roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbrole_readonly, pg_read_all_data ] }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_databases&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;baseline&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase.sql&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;owner&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase_admin&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;comment&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supabase postgres database&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;schemas&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;extensions ,auth ,realtime ,storage ,graphql_public ,supabase_functions ,_analytics ,_realtime ]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;extensions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pgcrypto  ,schema: extensions  } # 1.3   &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;cryptographic functions&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_net    ,schema: extensions  } # 0.9.2 &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;async HTTP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pgjwt     ,schema: extensions  } # 0.2.0 &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;json web token API for postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: uuid-ossp ,schema: extensions  } # 1.1   &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;generate universally unique identifiers (UUIDs)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pgsodium        }                # 3.1.9 &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgsodium is a modern cryptography library for Postgres.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: supabase_vault  }                # 0.2.8 &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Supabase Vault Extension&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_graphql      }                # 1.5.9 : pg_graphql&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GraphQL support&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_jsonschema   }                # 0.3.3 : pg_jsonschema&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Validate json schema&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: wrappers        }                # 0.4.3 : wrappers&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;FDW collections&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: http            }                # 1.6   : http&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;allows web page retrieval inside the database.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_cron         }                # 1.6   : pg_cron&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Job scheduler for PostgreSQL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: timescaledb     }                # 2.17  : timescaledb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Enables scalable inserts and complex queries for time-series data&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: pg_tle          }                # 1.2   : pg_tle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Trusted Language Extensions for PostgreSQL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase required extensions&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_libs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;pg_stat_statements, pgaudit, plpgsql, plpgsql_check, pg_cron, pg_net, timescaledb, auto_explain, pg_tle, plan_filter&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_extensions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# extensions to be installed on this cluster&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;supa-stack&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;timescaledb pg_cron pg_timetable&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;postgis pg_geohash&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pgvector pgvectorscale pg_similarity smlar pg_summarize pg_tiktoken&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_search pg_bigm zhparser hunspell&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_analytics pg_parquet pg_duckdb&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_hint_plan hll rum pg_graphql pg_jsonschema index_advisor pg_plan_filter hypopg pg_ivm pgmq pg_cardano&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_tle plv8 plpgsql_check&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pljava&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pgunit md5hash asn1oid roaringbitmap pgfaceting pgsphere pg_country pg_currency pgmp numeral pg_rational pguint pg_uint128 ip4r pg_uri pgemailaddr acl timestamp9&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_gzip pg_zstd pg_http pg_net pg_html5_email_address pgsql_tweaks pg_extra_time pg_timeit count_distinct extra_window_functions first_last_agg tdigest aggs_for_arrays aggs_for_vecs pg_arraymath quantile lower_quantile&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_idkit pg_uuidv7 permuteseq pg_hashids sequential_uuids pg_math pg_random pg_base36 pg_base62 pg_base58 floatvec pg_financial pgjwt pg_hashlib shacrypt cryptint pg_ecdsa pgpcre icu_ext pgqr envvar pg_protobuf url_encode&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_repack pg_squeeze pg_dirtyread ddlx pg_readonly safeupdate pg_permissions pg_savior pg_fio&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_profile pg_show_plans pg_stat_kcache pg_stat_monitor pg_qualstats pg_track_settings system_stats pg_meta pgnodemx pg_sqlog bgw_replstatus toastinfo pg_explain_ui pg_relusage&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;passwordcheck supautils pgsodium pg_vault anonymizer pgsmcrypto pgaudit pgauditlogtofile pg_auth_mon credcheck logerrors login_hook set_user pgextwlist pg_auditor sslutils noset&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;wrappers mysql_fdw redis_fdw pg_redis_pubsub aws_s3 log_fdw&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pglogical wal2json decoder_raw pg_fact_loader&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_parameters&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cron.database_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;postgres&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pgsodium.enable_event_trigger&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;off&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_hba_rules&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# supabase hba rules, require access from docker network&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user: all ,db: postgres  ,addr: intra         ,auth: pwd ,title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;allow supabase access from intranet&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- {&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user: all ,db: postgres  ,addr: 172.17.0.0/16 ,auth: pwd ,title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;allow access from local docker network&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_vip_enabled&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_vip_address&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10.10.10.2&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;/24&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_vip_interface&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;eth1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/details&gt;
&lt;hr&gt;
&lt;h2 id=&#34;这个仓库里有什么&#34;&gt;这个仓库里有什么？&lt;/h2&gt;
&lt;p&gt;在 Pigsty 的扩展仓库中，所有的扩展都已经被预先分为了十五类之一：TIME，GIS，RAG，FTS，OLAP，FEAT，LANG，TYPE，FUNC，ADMIN，STAT，SEC，FDW，SIM，ETL，如下所示。&lt;/p&gt;
&lt;p&gt;请移步 &lt;a href=&#34;https://ext.pigsty.io&#34;&gt;ext.pigsty.io&lt;/a&gt; 查看完整详情。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/time&#34;&gt;&lt;strong&gt;TIME&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/timescaledb&#34;&gt;&lt;code&gt;timescaledb&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/timescaledb_toolkit&#34;&gt;&lt;code&gt;timescaledb_toolkit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/timeseries&#34;&gt;&lt;code&gt;timeseries&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/periods&#34;&gt;&lt;code&gt;periods&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/temporal_tables&#34;&gt;&lt;code&gt;temporal_tables&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/emaj&#34;&gt;&lt;code&gt;emaj&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/table_version&#34;&gt;&lt;code&gt;table_version&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_cron&#34;&gt;&lt;code&gt;pg_cron&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_later&#34;&gt;&lt;code&gt;pg_later&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_background&#34;&gt;&lt;code&gt;pg_background&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/gis&#34;&gt;&lt;strong&gt;GIS&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/postgis&#34;&gt;&lt;code&gt;postgis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/postgis_topology&#34;&gt;&lt;code&gt;postgis_topology&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/postgis_raster&#34;&gt;&lt;code&gt;postgis_raster&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/postgis_sfcgal&#34;&gt;&lt;code&gt;postgis_sfcgal&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/postgis_tiger_geocoder&#34;&gt;&lt;code&gt;postgis_tiger_geocoder&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/address_standardizer&#34;&gt;&lt;code&gt;address_standardizer&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/address_standardizer_data_us&#34;&gt;&lt;code&gt;address_standardizer_data_us&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgrouting&#34;&gt;&lt;code&gt;pgrouting&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pointcloud&#34;&gt;&lt;code&gt;pointcloud&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pointcloud_postgis&#34;&gt;&lt;code&gt;pointcloud_postgis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/h3&#34;&gt;&lt;code&gt;h3&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/h3_postgis&#34;&gt;&lt;code&gt;h3_postgis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/q3c&#34;&gt;&lt;code&gt;q3c&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/ogr_fdw&#34;&gt;&lt;code&gt;ogr_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/geoip&#34;&gt;&lt;code&gt;geoip&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_polyline&#34;&gt;&lt;code&gt;pg_polyline&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_geohash&#34;&gt;&lt;code&gt;pg_geohash&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/mobilitydb&#34;&gt;&lt;code&gt;mobilitydb&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/earthdistance&#34;&gt;&lt;code&gt;earthdistance&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/rag&#34;&gt;&lt;strong&gt;RAG&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/vector&#34;&gt;&lt;code&gt;vector&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/vectorscale&#34;&gt;&lt;code&gt;vectorscale&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/vectorize&#34;&gt;&lt;code&gt;vectorize&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_similarity&#34;&gt;&lt;code&gt;pg_similarity&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/smlar&#34;&gt;&lt;code&gt;smlar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_summarize&#34;&gt;&lt;code&gt;pg_summarize&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_tiktoken&#34;&gt;&lt;code&gt;pg_tiktoken&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgml&#34;&gt;&lt;code&gt;pgml&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg4ml&#34;&gt;&lt;code&gt;pg4ml&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/fts&#34;&gt;&lt;strong&gt;FTS&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/pg_search&#34;&gt;&lt;code&gt;pg_search&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_bigm&#34;&gt;&lt;code&gt;pg_bigm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/zhparser&#34;&gt;&lt;code&gt;zhparser&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_cs_cz&#34;&gt;&lt;code&gt;hunspell_cs_cz&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_de_de&#34;&gt;&lt;code&gt;hunspell_de_de&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_en_us&#34;&gt;&lt;code&gt;hunspell_en_us&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_fr&#34;&gt;&lt;code&gt;hunspell_fr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_ne_np&#34;&gt;&lt;code&gt;hunspell_ne_np&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_nl_nl&#34;&gt;&lt;code&gt;hunspell_nl_nl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_nn_no&#34;&gt;&lt;code&gt;hunspell_nn_no&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_pt_pt&#34;&gt;&lt;code&gt;hunspell_pt_pt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_ru_ru&#34;&gt;&lt;code&gt;hunspell_ru_ru&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hunspell_ru_ru_aot&#34;&gt;&lt;code&gt;hunspell_ru_ru_aot&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/fuzzystrmatch&#34;&gt;&lt;code&gt;fuzzystrmatch&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_trgm&#34;&gt;&lt;code&gt;pg_trgm&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/olap&#34;&gt;&lt;strong&gt;OLAP&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/citus&#34;&gt;&lt;code&gt;citus&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/citus_columnar&#34;&gt;&lt;code&gt;citus_columnar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/columnar&#34;&gt;&lt;code&gt;columnar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_analytics&#34;&gt;&lt;code&gt;pg_analytics&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_duckdb&#34;&gt;&lt;code&gt;pg_duckdb&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_mooncake&#34;&gt;&lt;code&gt;pg_mooncake&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/duckdb_fdw&#34;&gt;&lt;code&gt;duckdb_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_parquet&#34;&gt;&lt;code&gt;pg_parquet&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_fkpart&#34;&gt;&lt;code&gt;pg_fkpart&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_partman&#34;&gt;&lt;code&gt;pg_partman&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plproxy&#34;&gt;&lt;code&gt;plproxy&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_strom&#34;&gt;&lt;code&gt;pg_strom&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/tablefunc&#34;&gt;&lt;code&gt;tablefunc&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/feat&#34;&gt;&lt;strong&gt;FEAT&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/age&#34;&gt;&lt;code&gt;age&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hll&#34;&gt;&lt;code&gt;hll&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/rum&#34;&gt;&lt;code&gt;rum&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_graphql&#34;&gt;&lt;code&gt;pg_graphql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_jsonschema&#34;&gt;&lt;code&gt;pg_jsonschema&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/jsquery&#34;&gt;&lt;code&gt;jsquery&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_hint_plan&#34;&gt;&lt;code&gt;pg_hint_plan&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hypopg&#34;&gt;&lt;code&gt;hypopg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/index_advisor&#34;&gt;&lt;code&gt;index_advisor&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plan_filter&#34;&gt;&lt;code&gt;plan_filter&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/imgsmlr&#34;&gt;&lt;code&gt;imgsmlr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_ivm&#34;&gt;&lt;code&gt;pg_ivm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgmq&#34;&gt;&lt;code&gt;pgmq&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgq&#34;&gt;&lt;code&gt;pgq&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_cardano&#34;&gt;&lt;code&gt;pg_cardano&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/rdkit&#34;&gt;&lt;code&gt;rdkit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/bloom&#34;&gt;&lt;code&gt;bloom&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/lang&#34;&gt;&lt;strong&gt;LANG&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/pg_tle&#34;&gt;&lt;code&gt;pg_tle&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plv8&#34;&gt;&lt;code&gt;plv8&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pllua&#34;&gt;&lt;code&gt;pllua&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hstore_pllua&#34;&gt;&lt;code&gt;hstore_pllua&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plluau&#34;&gt;&lt;code&gt;plluau&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hstore_plluau&#34;&gt;&lt;code&gt;hstore_plluau&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plprql&#34;&gt;&lt;code&gt;plprql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pldbgapi&#34;&gt;&lt;code&gt;pldbgapi&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plpgsql_check&#34;&gt;&lt;code&gt;plpgsql_check&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plprofiler&#34;&gt;&lt;code&gt;plprofiler&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plsh&#34;&gt;&lt;code&gt;plsh&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pljava&#34;&gt;&lt;code&gt;pljava&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plr&#34;&gt;&lt;code&gt;plr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgtap&#34;&gt;&lt;code&gt;pgtap&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/faker&#34;&gt;&lt;code&gt;faker&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/dbt2&#34;&gt;&lt;code&gt;dbt2&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pltcl&#34;&gt;&lt;code&gt;pltcl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pltclu&#34;&gt;&lt;code&gt;pltclu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plperl&#34;&gt;&lt;code&gt;plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/bool_plperl&#34;&gt;&lt;code&gt;bool_plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hstore_plperl&#34;&gt;&lt;code&gt;hstore_plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/jsonb_plperl&#34;&gt;&lt;code&gt;jsonb_plperl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plperlu&#34;&gt;&lt;code&gt;plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/bool_plperlu&#34;&gt;&lt;code&gt;bool_plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/jsonb_plperlu&#34;&gt;&lt;code&gt;jsonb_plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hstore_plperlu&#34;&gt;&lt;code&gt;hstore_plperlu&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plpgsql&#34;&gt;&lt;code&gt;plpgsql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/plpython3u&#34;&gt;&lt;code&gt;plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/jsonb_plpython3u&#34;&gt;&lt;code&gt;jsonb_plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/ltree_plpython3u&#34;&gt;&lt;code&gt;ltree_plpython3u&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hstore_plpython3u&#34;&gt;&lt;code&gt;hstore_plpython3u&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/type&#34;&gt;&lt;strong&gt;TYPE&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/prefix&#34;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/semver&#34;&gt;&lt;code&gt;semver&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/unit&#34;&gt;&lt;code&gt;unit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/md5hash&#34;&gt;&lt;code&gt;md5hash&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/asn1oid&#34;&gt;&lt;code&gt;asn1oid&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/roaringbitmap&#34;&gt;&lt;code&gt;roaringbitmap&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgfaceting&#34;&gt;&lt;code&gt;pgfaceting&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_sphere&#34;&gt;&lt;code&gt;pg_sphere&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/country&#34;&gt;&lt;code&gt;country&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/currency&#34;&gt;&lt;code&gt;currency&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgmp&#34;&gt;&lt;code&gt;pgmp&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/numeral&#34;&gt;&lt;code&gt;numeral&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_rational&#34;&gt;&lt;code&gt;pg_rational&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/uint&#34;&gt;&lt;code&gt;uint&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/uint128&#34;&gt;&lt;code&gt;uint128&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/ip4r&#34;&gt;&lt;code&gt;ip4r&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/uri&#34;&gt;&lt;code&gt;uri&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgemailaddr&#34;&gt;&lt;code&gt;pgemailaddr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/acl&#34;&gt;&lt;code&gt;acl&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/debversion&#34;&gt;&lt;code&gt;debversion&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_rrule&#34;&gt;&lt;code&gt;pg_rrule&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/timestamp9&#34;&gt;&lt;code&gt;timestamp9&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/chkpass&#34;&gt;&lt;code&gt;chkpass&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/isn&#34;&gt;&lt;code&gt;isn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/seg&#34;&gt;&lt;code&gt;seg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/cube&#34;&gt;&lt;code&gt;cube&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/ltree&#34;&gt;&lt;code&gt;ltree&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hstore&#34;&gt;&lt;code&gt;hstore&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/citext&#34;&gt;&lt;code&gt;citext&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/xml2&#34;&gt;&lt;code&gt;xml2&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/func&#34;&gt;&lt;strong&gt;FUNC&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/topn&#34;&gt;&lt;code&gt;topn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/gzip&#34;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/zstd&#34;&gt;&lt;code&gt;zstd&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/http&#34;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_net&#34;&gt;&lt;code&gt;pg_net&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_smtp_client&#34;&gt;&lt;code&gt;pg_smtp_client&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_html5_email_address&#34;&gt;&lt;code&gt;pg_html5_email_address&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgsql_tweaks&#34;&gt;&lt;code&gt;pgsql_tweaks&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_extra_time&#34;&gt;&lt;code&gt;pg_extra_time&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/timeit&#34;&gt;&lt;code&gt;timeit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/count_distinct&#34;&gt;&lt;code&gt;count_distinct&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/extra_window_functions&#34;&gt;&lt;code&gt;extra_window_functions&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/first_last_agg&#34;&gt;&lt;code&gt;first_last_agg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/tdigest&#34;&gt;&lt;code&gt;tdigest&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/aggs_for_vecs&#34;&gt;&lt;code&gt;aggs_for_vecs&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/aggs_for_arrays&#34;&gt;&lt;code&gt;aggs_for_arrays&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/arraymath&#34;&gt;&lt;code&gt;arraymath&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/quantile&#34;&gt;&lt;code&gt;quantile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/lower_quantile&#34;&gt;&lt;code&gt;lower_quantile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_idkit&#34;&gt;&lt;code&gt;pg_idkit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_uuidv7&#34;&gt;&lt;code&gt;pg_uuidv7&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/permuteseq&#34;&gt;&lt;code&gt;permuteseq&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_hashids&#34;&gt;&lt;code&gt;pg_hashids&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/sequential_uuids&#34;&gt;&lt;code&gt;sequential_uuids&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_math&#34;&gt;&lt;code&gt;pg_math&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/random&#34;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/base36&#34;&gt;&lt;code&gt;base36&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/base62&#34;&gt;&lt;code&gt;base62&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_base58&#34;&gt;&lt;code&gt;pg_base58&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/floatvec&#34;&gt;&lt;code&gt;floatvec&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/financial&#34;&gt;&lt;code&gt;financial&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgjwt&#34;&gt;&lt;code&gt;pgjwt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_hashlib&#34;&gt;&lt;code&gt;pg_hashlib&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/shacrypt&#34;&gt;&lt;code&gt;shacrypt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/cryptint&#34;&gt;&lt;code&gt;cryptint&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pguecc&#34;&gt;&lt;code&gt;pguecc&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgpcre&#34;&gt;&lt;code&gt;pgpcre&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/icu_ext&#34;&gt;&lt;code&gt;icu_ext&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgqr&#34;&gt;&lt;code&gt;pgqr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/envvar&#34;&gt;&lt;code&gt;envvar&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_protobuf&#34;&gt;&lt;code&gt;pg_protobuf&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/url_encode&#34;&gt;&lt;code&gt;url_encode&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/refint&#34;&gt;&lt;code&gt;refint&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/autoinc&#34;&gt;&lt;code&gt;autoinc&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/insert_username&#34;&gt;&lt;code&gt;insert_username&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/moddatetime&#34;&gt;&lt;code&gt;moddatetime&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/tsm_system_time&#34;&gt;&lt;code&gt;tsm_system_time&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/dict_xsyn&#34;&gt;&lt;code&gt;dict_xsyn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/tsm_system_rows&#34;&gt;&lt;code&gt;tsm_system_rows&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/tcn&#34;&gt;&lt;code&gt;tcn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/uuid-ossp&#34;&gt;&lt;code&gt;uuid-ossp&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/btree_gist&#34;&gt;&lt;code&gt;btree_gist&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/btree_gin&#34;&gt;&lt;code&gt;btree_gin&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/intarray&#34;&gt;&lt;code&gt;intarray&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/intagg&#34;&gt;&lt;code&gt;intagg&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/dict_int&#34;&gt;&lt;code&gt;dict_int&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/unaccent&#34;&gt;&lt;code&gt;unaccent&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/admin&#34;&gt;&lt;strong&gt;ADMIN&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/pg_repack&#34;&gt;&lt;code&gt;pg_repack&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_squeeze&#34;&gt;&lt;code&gt;pg_squeeze&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_dirtyread&#34;&gt;&lt;code&gt;pg_dirtyread&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgfincore&#34;&gt;&lt;code&gt;pgfincore&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgdd&#34;&gt;&lt;code&gt;pgdd&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/ddlx&#34;&gt;&lt;code&gt;ddlx&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/prioritize&#34;&gt;&lt;code&gt;prioritize&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_checksums&#34;&gt;&lt;code&gt;pg_checksums&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_readonly&#34;&gt;&lt;code&gt;pg_readonly&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/safeupdate&#34;&gt;&lt;code&gt;safeupdate&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_permissions&#34;&gt;&lt;code&gt;pg_permissions&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgautofailover&#34;&gt;&lt;code&gt;pgautofailover&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_catcheck&#34;&gt;&lt;code&gt;pg_catcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pre_prepare&#34;&gt;&lt;code&gt;pre_prepare&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgcozy&#34;&gt;&lt;code&gt;pgcozy&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_orphaned&#34;&gt;&lt;code&gt;pg_orphaned&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_crash&#34;&gt;&lt;code&gt;pg_crash&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_cheat_funcs&#34;&gt;&lt;code&gt;pg_cheat_funcs&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_savior&#34;&gt;&lt;code&gt;pg_savior&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/table_log&#34;&gt;&lt;code&gt;table_log&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_fio&#34;&gt;&lt;code&gt;pg_fio&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgpool_adm&#34;&gt;&lt;code&gt;pgpool_adm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgpool_recovery&#34;&gt;&lt;code&gt;pgpool_recovery&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgpool_regclass&#34;&gt;&lt;code&gt;pgpool_regclass&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgagent&#34;&gt;&lt;code&gt;pgagent&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/vacuumlo&#34;&gt;&lt;code&gt;vacuumlo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_prewarm&#34;&gt;&lt;code&gt;pg_prewarm&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/oid2name&#34;&gt;&lt;code&gt;oid2name&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/lo&#34;&gt;&lt;code&gt;lo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/basic_archive&#34;&gt;&lt;code&gt;basic_archive&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/basebackup_to_shell&#34;&gt;&lt;code&gt;basebackup_to_shell&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/old_snapshot&#34;&gt;&lt;code&gt;old_snapshot&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/adminpack&#34;&gt;&lt;code&gt;adminpack&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/amcheck&#34;&gt;&lt;code&gt;amcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_surgery&#34;&gt;&lt;code&gt;pg_surgery&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/stat&#34;&gt;&lt;strong&gt;STAT&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/pg_profile&#34;&gt;&lt;code&gt;pg_profile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_show_plans&#34;&gt;&lt;code&gt;pg_show_plans&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_stat_kcache&#34;&gt;&lt;code&gt;pg_stat_kcache&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_stat_monitor&#34;&gt;&lt;code&gt;pg_stat_monitor&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_qualstats&#34;&gt;&lt;code&gt;pg_qualstats&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_store_plans&#34;&gt;&lt;code&gt;pg_store_plans&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_track_settings&#34;&gt;&lt;code&gt;pg_track_settings&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_wait_sampling&#34;&gt;&lt;code&gt;pg_wait_sampling&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/system_stats&#34;&gt;&lt;code&gt;system_stats&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/meta&#34;&gt;&lt;code&gt;meta&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgnodemx&#34;&gt;&lt;code&gt;pgnodemx&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_proctab&#34;&gt;&lt;code&gt;pg_proctab&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_sqlog&#34;&gt;&lt;code&gt;pg_sqlog&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/bgw_replstatus&#34;&gt;&lt;code&gt;bgw_replstatus&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgmeminfo&#34;&gt;&lt;code&gt;pgmeminfo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/toastinfo&#34;&gt;&lt;code&gt;toastinfo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/explain_ui&#34;&gt;&lt;code&gt;explain_ui&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_relusage&#34;&gt;&lt;code&gt;pg_relusage&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_top&#34;&gt;&lt;code&gt;pg_top&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pagevis&#34;&gt;&lt;code&gt;pagevis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/powa&#34;&gt;&lt;code&gt;powa&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pageinspect&#34;&gt;&lt;code&gt;pageinspect&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgrowlocks&#34;&gt;&lt;code&gt;pgrowlocks&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/sslinfo&#34;&gt;&lt;code&gt;sslinfo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_buffercache&#34;&gt;&lt;code&gt;pg_buffercache&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_walinspect&#34;&gt;&lt;code&gt;pg_walinspect&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_freespacemap&#34;&gt;&lt;code&gt;pg_freespacemap&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_visibility&#34;&gt;&lt;code&gt;pg_visibility&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgstattuple&#34;&gt;&lt;code&gt;pgstattuple&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/auto_explain&#34;&gt;&lt;code&gt;auto_explain&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_stat_statements&#34;&gt;&lt;code&gt;pg_stat_statements&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/sec&#34;&gt;&lt;strong&gt;SEC&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/passwordcheck_cracklib&#34;&gt;&lt;code&gt;passwordcheck_cracklib&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/supautils&#34;&gt;&lt;code&gt;supautils&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgsodium&#34;&gt;&lt;code&gt;pgsodium&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/supabase_vault&#34;&gt;&lt;code&gt;supabase_vault&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_session_jwt&#34;&gt;&lt;code&gt;pg_session_jwt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/anon&#34;&gt;&lt;code&gt;anon&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_tde&#34;&gt;&lt;code&gt;pg_tde&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgsmcrypto&#34;&gt;&lt;code&gt;pgsmcrypto&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgaudit&#34;&gt;&lt;code&gt;pgaudit&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgauditlogtofile&#34;&gt;&lt;code&gt;pgauditlogtofile&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_auth_mon&#34;&gt;&lt;code&gt;pg_auth_mon&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/credcheck&#34;&gt;&lt;code&gt;credcheck&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgcryptokey&#34;&gt;&lt;code&gt;pgcryptokey&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_jobmon&#34;&gt;&lt;code&gt;pg_jobmon&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/logerrors&#34;&gt;&lt;code&gt;logerrors&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/login_hook&#34;&gt;&lt;code&gt;login_hook&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/set_user&#34;&gt;&lt;code&gt;set_user&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_snakeoil&#34;&gt;&lt;code&gt;pg_snakeoil&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgextwlist&#34;&gt;&lt;code&gt;pgextwlist&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_auditor&#34;&gt;&lt;code&gt;pg_auditor&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/sslutils&#34;&gt;&lt;code&gt;sslutils&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/noset&#34;&gt;&lt;code&gt;noset&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/sepgsql&#34;&gt;&lt;code&gt;sepgsql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/auth_delay&#34;&gt;&lt;code&gt;auth_delay&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgcrypto&#34;&gt;&lt;code&gt;pgcrypto&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/passwordcheck&#34;&gt;&lt;code&gt;passwordcheck&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/fdw&#34;&gt;&lt;strong&gt;FDW&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/wrappers&#34;&gt;&lt;code&gt;wrappers&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/multicorn&#34;&gt;&lt;code&gt;multicorn&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/odbc_fdw&#34;&gt;&lt;code&gt;odbc_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/jdbc_fdw&#34;&gt;&lt;code&gt;jdbc_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/mysql_fdw&#34;&gt;&lt;code&gt;mysql_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/oracle_fdw&#34;&gt;&lt;code&gt;oracle_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/tds_fdw&#34;&gt;&lt;code&gt;tds_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/db2_fdw&#34;&gt;&lt;code&gt;db2_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/sqlite_fdw&#34;&gt;&lt;code&gt;sqlite_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgbouncer_fdw&#34;&gt;&lt;code&gt;pgbouncer_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/mongo_fdw&#34;&gt;&lt;code&gt;mongo_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/redis_fdw&#34;&gt;&lt;code&gt;redis_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/redis&#34;&gt;&lt;code&gt;redis&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/kafka_fdw&#34;&gt;&lt;code&gt;kafka_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/hdfs_fdw&#34;&gt;&lt;code&gt;hdfs_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/firebird_fdw&#34;&gt;&lt;code&gt;firebird_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/aws_s3&#34;&gt;&lt;code&gt;aws_s3&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/log_fdw&#34;&gt;&lt;code&gt;log_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/dblink&#34;&gt;&lt;code&gt;dblink&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/file_fdw&#34;&gt;&lt;code&gt;file_fdw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/postgres_fdw&#34;&gt;&lt;code&gt;postgres_fdw&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/sim&#34;&gt;&lt;strong&gt;SIM&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/orafce&#34;&gt;&lt;code&gt;orafce&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgtt&#34;&gt;&lt;code&gt;pgtt&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/session_variable&#34;&gt;&lt;code&gt;session_variable&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_statement_rollback&#34;&gt;&lt;code&gt;pg_statement_rollback&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_dbms_metadata&#34;&gt;&lt;code&gt;pg_dbms_metadata&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_dbms_lock&#34;&gt;&lt;code&gt;pg_dbms_lock&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_dbms_job&#34;&gt;&lt;code&gt;pg_dbms_job&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/babelfishpg_common&#34;&gt;&lt;code&gt;babelfishpg_common&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/babelfishpg_tsql&#34;&gt;&lt;code&gt;babelfishpg_tsql&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/babelfishpg_tds&#34;&gt;&lt;code&gt;babelfishpg_tds&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/babelfishpg_money&#34;&gt;&lt;code&gt;babelfishpg_money&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgmemcache&#34;&gt;&lt;code&gt;pgmemcache&lt;/code&gt;&lt;/a&gt;
&lt;a href=&#34;/etl&#34;&gt;&lt;strong&gt;ETL&lt;/strong&gt;&lt;/a&gt;: &lt;a href=&#34;/pglogical&#34;&gt;&lt;code&gt;pglogical&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pglogical_origin&#34;&gt;&lt;code&gt;pglogical_origin&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pglogical_ticker&#34;&gt;&lt;code&gt;pglogical_ticker&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pgl_ddl_deploy&#34;&gt;&lt;code&gt;pgl_ddl_deploy&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_failover_slots&#34;&gt;&lt;code&gt;pg_failover_slots&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/wal2json&#34;&gt;&lt;code&gt;wal2json&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/wal2mongo&#34;&gt;&lt;code&gt;wal2mongo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/decoderbufs&#34;&gt;&lt;code&gt;decoderbufs&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/decoder_raw&#34;&gt;&lt;code&gt;decoder_raw&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/test_decoding&#34;&gt;&lt;code&gt;test_decoding&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/mimeo&#34;&gt;&lt;code&gt;mimeo&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/repmgr&#34;&gt;&lt;code&gt;repmgr&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_fact_loader&#34;&gt;&lt;code&gt;pg_fact_loader&lt;/code&gt;&lt;/a&gt; &lt;a href=&#34;/pg_bulkload&#34;&gt;&lt;code&gt;pg_bulkload&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一些感想与体会&#34;&gt;一些感想与体会&lt;/h2&gt;
&lt;p&gt;PG 每个大版本都会引入一些变动，因此维护一百多个扩展插件并不是一件轻松的事情。特别是一些扩展的作者都好几年没动静了，那还真就只能自己上。我自己修复了十几个扩展插件，提供了最新的 PG 大版本支持。能联系上作者的，我也提交了一堆 PR 或者 Issue，推动解决。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Vonng&#34;&gt;&lt;img src=&#34;github-contrib.png&#34; style=&#34;max-width: 800px; width: 100%; height: auto;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在这个过程中，我和许多扩展作者都建立了联系。例如，我手把手帮助 ParadeDB 的老板与作者 &lt;a href=&#34;https://github.com/paradedb/paradedb/issues/1116&#34;&gt;解决了&lt;/a&gt; RPM / DEB 包打包与分发的问题。我说动了 duckdb_fdw 的作者使用一个单独的 libduckdb，并发布了 v1.0.0 ，我给一些PG扩展的作者发邮件/Issue，国产机器学习框架 PG4ML 的作者也找到了我希望能够通过这个渠道进行分发。&lt;/p&gt;
&lt;p&gt;再比如说，最近 PG 生态 OLAP 缝合 DuckDB 的竞赛如火如荼，但不管是ParadeDB 的 pg_analytics，国内个人开发者李红艳编写的 duckdb_fdw，CrunchyData 的 pg_parquet，MooncakeLab 的 pg_mooncake， Hydra 和 DuckDB 原厂 MotherDuck 亲自下场搞的 pg_duckdb ，都被我在第一时间编译打包收录整合其中，做到了 —— 你卷你的，反正我全都要。&lt;/p&gt;
&lt;p&gt;言归正传，&lt;strong&gt;我希望这个仓库能设立起 PostgreSQL 扩展安装分发的标准，解决让人头大的分发难题&lt;/strong&gt;。目前最让我感到高兴的进展是，流行的开源 PostgreSQL高可用集群搭建项目 &lt;a href=&#34;https://postgresql-cluster.org/&#34;&gt;&lt;code&gt;postgresql_cluster&lt;/code&gt;&lt;/a&gt; 的作者 Vitaliy Kukharik 已经将这个仓库作为默认启用的仓库来安装 PostgreSQL 扩展。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://x.com/VKukharik/status/1853012121623155117&#34;&gt;&lt;img src=&#34;pg-clusters.png&#34; style=&#34;max-width: 800px; width: 100%; height: auto;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前这个仓库 (repo.pigsty.io) 托管在 Cloudflare 上，所以没有什么流量成本。国内有一个镜像站点 repo.pigsty.cc，方便墙内用户使用，每个有小几百块流量费，不是什么大问题。两个仓库加起来，过去一个月的下载流量大概 200GB ，考虑到扩展平均几十KB到几MB的大小，总下载量小几十万是有了。&lt;/p&gt;
&lt;p&gt;因为&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487240&amp;idx=1&amp;sn=ba535fd0c1026bc2482ea6ad1e1fb8bf&amp;chksm=fe4b3ad3c93cb3c50bfeaed64963cce25c49bee80364d3a8ca78b87d7c9f19fd4d79d3c62ddc&amp;scene=21#wechat_redirect&#34;&gt;赛博菩萨 Cloudflare &lt;/a&gt;不收流量费，所以总的来说，我觉得做一个永久免费的声明与承诺并不困难，所以 So be it。我承诺这个仓库将持续维护并永久免费。如果有国内开源软件站点的朋友愿意赞助或提供镜像服务，欢迎联系我。&lt;/p&gt;
&lt;p&gt;我相信我的工作可以帮助到全球PG用户，并对 PostgreSQL 生态的繁荣贡献一份力量。我也希望我的工作可以帮到您，&lt;strong&gt;Enjoy PostgreSQL&lt;/strong&gt;！&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 开源“暴君”Linus清洗整风</title>
      <link>/zh/blog/db/linus-ban-ru/</link>
      <pubDate>Fri, 25 Oct 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/linus-ban-ru/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/linus-ban-ru/featured_hub1a1e51bfed37467f24c9ef4b4af9860_655646_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;p&gt;最近Linus在项目中&lt;a href=&#34;https://lore.kernel.org/all/CAHk-=whNGNVnYHHSXUAsWds_MoZ-iEgRMQMxZZ0z-jY4uHT+Gg@mail.gmail.com/&#34;&gt;&lt;strong&gt;踢出了几位俄罗斯籍开发者&lt;/strong&gt;&lt;/a&gt;，引发开源世界中的一片哀嚎声。但其实很多人都忘记了，Linux 是 Linus 的个人项目，三十年前是，现在也依然是。Linus 本人始终亲自掌握着开源项目的最高权力 —— Linux 的发布权。Linux 社区本质是帝制的 —— 而 Linus 本人就是最早且最成功的技术独裁者。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ok, lots of Russian trolls out and about.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s entirely clear why the change was done, it&amp;rsquo;s not getting reverted, and using multiple random anonymous accounts to try to &amp;ldquo;grass root&amp;rdquo; it by Russian troll factories isn&amp;rsquo;t going to change anything. And FYI for the actual innocent bystanders who aren&amp;rsquo;t troll farm accounts - the &amp;ldquo;various compliance requirements&amp;rdquo; are not just a US thing.&lt;/p&gt;
&lt;p&gt;If you haven&amp;rsquo;t heard of Russian sanctions yet, you should try to read the news some day.  And by &amp;ldquo;news&amp;rdquo;, I don&amp;rsquo;t mean Russian state-sponsored spam.&lt;/p&gt;
&lt;p&gt;As to sending me a revert patch - please use whatever mush you call brains. I&amp;rsquo;m Finnish. Did you think I&amp;rsquo;d be &lt;em&gt;supporting&lt;/em&gt; Russian aggression? Apparently it&amp;rsquo;s not just lack of real news, it&amp;rsquo;s lack of history knowledge too.&lt;/p&gt;
&lt;p&gt;Linus&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在开源/自由软件社区，有 &lt;strong&gt;BDFL&lt;/strong&gt;（&amp;ldquo;Benevolent Dictator for Life&amp;rdquo;，译为“仁慈的终身独裁者”）的说法。例如 Python 之父 Guido van Rossum，与 Linux 之父 Linus Torvalds。当然在很多人眼中，Linus 算不上 “仁君”，而是一个“暴君”，比如，Linus 经常使用直白粗俗的语言，公开斥责羞辱批评其他技术，参与者，厂商。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;fuck-nvidia.jpg&#34; src=&#34;/zh/blog/db/linus-ban-ru/fuck-nvidia.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;但这个 “暴君” 几十年如一日地在挖土，并且把自己的劳动毫无保留的贡献给别人，无数操作系统公司籍此赚的钵满盆翻。而正所谓 “升米恩，斗米仇” —— 时间一长，大家习惯了他的慷慨，却忘记了这个项目从头到尾，都是 Linus 本人的 “&lt;strong&gt;兴趣&lt;/strong&gt;” 。在 Linus 自传的书名《Just for Fun》中，这一点体现的淋漓尽致 —— &lt;strong&gt;Linus 项目只是 Linux 本人的 Hobby&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;biography.jpg&#34; src=&#34;/zh/blog/db/linus-ban-ru/biography.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;能够约束 Linus 本人的，也就只有 Linux 项目使用的 GPL 协议 —— 他既没有成立公司搞商业化，也没有阻止其他人复制它。开源社区就是这样，太平洋也没加盖，代码都放在那里，你行你就上，搞个 fork 分叉呗？我一点儿也不怀疑，如果 Linus 本人哪天薨了，Linux 项目很快就会散作满天星，分叉满天飞了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/db/linus-ban-ru/featured.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;按照开源社区的习惯法，如果有人对此感到不满，完全可以自己做个 Fork 和上游比拼生产力，发起一场斯巴达克斯式的造反运动。例如 GCC 之前由于理念不同也分裂过，后来支线干的比主线好，更受开发者欢迎，这个支线（EGCS）就成新主线了。正所谓：“Talk is cheap, show me the code”, &amp;ldquo;You can you up, no can no BB&amp;rdquo; —— 而不是逼逼叨跟怨妇似的高呼：“ Linus 大王你变了” 或者 “Linus 大傻逼”，并指望天降正义。&lt;/p&gt;
&lt;p&gt;当然，在我看来，Linus 这次做法并不好，但不是因为他把老毛子开发者给踢了。而是因为他没有用光明正大，堂堂正正的方式踢掉老毛子。而是由二号位采取比较遮掩，含糊的形式做了这件事，然后 Linus 合并，&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247488531&amp;idx=1&amp;sn=76cd7b9329dbaedde7b70e78cc253f5f&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;并在事后用胡扯蛋式的回复&lt;/strong&gt;&lt;/a&gt;来回应，留下了一些破坏开源社区习惯法的污点瑕疵。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;reply.png&#34; src=&#34;/zh/blog/db/linus-ban-ru/reply.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;他要是光明正大的说：“我收到米帝的制裁禁令，要干老毛子”。或者干脆就两手一摊 “老子爱咋样咋样，你们管不着” —— Which is fact —— 说不定就没这么多事了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;老冯评论&#34;&gt;&lt;strong&gt;老冯评论&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;全球化的时代过去了，逆全球化的风雨已经吹进了开源社区中。上古竞于道德的时代过去了，而当今争于气力。在从全球化走向区域化的大趋势中，一定会发生的事情就是 “共同体（社区）边界的重新划定”，或者干脆就是老的全球性大社区分裂成几个新的小社区。&lt;/p&gt;
&lt;p&gt;而在这个划界过程中，必然会出现“他者”与“敌人”。有实质内容的理想，必然会制造出敌人 —— &lt;strong&gt;没有敌人，说明你的社区理念没有实质内容，也就不会有真正的支持者&lt;/strong&gt;。理想是权力欲望的最高形态，而邪恶是权力的内在本质，理想和邪恶不可分离，犹如爱情和嫉妒不可分离一样。&lt;/p&gt;
&lt;p&gt;Linus 很明显已经划出了一道新的边界，将老毛子划出了社区边界之外 —— 一场 “清洗整风” 运动，尽管被许多人认为这是“邪恶”的，然而这正是其权力意志与“主权”的体现，嘴炮与谴责在实力面前太过廉价，改变不了什么。&lt;/p&gt;
&lt;p&gt;而被划除在社区边界之外的老毛子，以及有较大概率步其后尘的老中，确实应该好好思考一下以后的道路该怎么走了。&lt;/p&gt;
&lt;h2 id=&#34;参考阅读&#34;&gt;&lt;strong&gt;参考阅读&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486379&amp;idx=1&amp;sn=b751c51a2b73e43e61487abfdc073da3&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;数据库真被卡脖子了吗？&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247488531&amp;idx=1&amp;sn=76cd7b9329dbaedde7b70e78cc253f5f&amp;chksm=fe4b21c8c93ca8de98e0167656e07f25577f3d6cc4ec9456335ff290834979b26f67cd72cee2&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;Linus关于踢出毛子维护者的解释&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247488488&amp;idx=1&amp;sn=191ee82363bf58abc33ba11ce2e1463f&amp;chksm=fe4b2633c93caf25ca32cb29ae631a1a8af72424fb56b1fe9719912fddc7ca43ee9c9a45bf87&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;WordPress社区内战：论共同体划界问题&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247488427&amp;idx=1&amp;sn=2706b76f318760c5c4f09f9bc240d4a2&amp;chksm=fe4b2670c93caf663649a450820ad137d09ce4cf71ee6b9f4f5f1d1e35adb2b3d7202f5ab9fd&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;第二批数据库国测名单：国产化来了怎么办？&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487513&amp;idx=1&amp;sn=d51ad679e75833d1d71437ed35e21693&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;国产数据库到底能不能打？&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486804&amp;idx=1&amp;sn=069c7655d0b38b0e7421e847cc7d5576&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;国产数据库是大炼钢铁吗？&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486763&amp;idx=1&amp;sn=d05db7200faa6b23f61ca51328439833&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;中国对PostgreSQL的贡献约等于零吗？&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247488022&amp;idx=1&amp;sn=5a76f6a0200f3afb7c1a2edcbb38799e&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;机场出租车恶性循环与国产数据库怪圈&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486256&amp;idx=1&amp;sn=15dd3001e9890e11144b42a84636d2e9&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;EL系操作系统发行版哪家强？&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486061&amp;idx=1&amp;sn=a1452dfa864f702d40bf612839a4e9e4&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;基础软件到底需要什么样的自主可控？&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485549&amp;idx=1&amp;sn=7c34439d82431129c57aba211202b5ca&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;分布式数据库是伪需求吗？&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: WordPress社区内战：论共同体划界问题</title>
      <link>/zh/blog/cloud/wordpress-drama/</link>
      <pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/wordpress-drama/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/wordpress-drama/featured_hu02aa61ae1d9de35cbe238d2676170cb9_831609_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;p&gt;“&lt;strong&gt;我想直率地说：多年来，我们就像个傻子一样，他们拿着我们开发的东西大赚了一笔&lt;/strong&gt;”。 —— Redis Labs 首席执行官 Ofer Bengal 的这句名言，成为 WordPress 社区内战，以及开源社区与商业利益之间的冲突的生动注脚。&lt;/p&gt;
&lt;p&gt;我认为这个事件非常有代表性和启发意义 —— 当开源理想与商业利益出现冲突时，应该怎么做？一个开源项目的创始人，应当用什么样的方式来保护自己的利益，并维护社区的健康与可持续发展？这对 PostgreSQL 社区和其他开源软件社区与云厂商之间的冲突又能带来什么启示？&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;前因后果&#34;&gt;前因后果&lt;/h2&gt;
&lt;p&gt;最近，WordPress 风波沸沸扬扬，已经有不少文章报道过了。简单来说就是两家 WordPress 社区的两家主要公司发生了公开冲突。一方是 Automattic，另一方是 WP Engine，这俩公司都卖 WP 托管服务，年营收都是五亿美元左右。不过，A 公司的老板 Matt Mullenweg 是 WordPress 项目的联合创始人。&lt;/p&gt;
&lt;p&gt;事情的导火索是 WordPress 联合创始人兼 Automattic CEO Matt Mullenweg 在最近的 WordCamp 大会上公开批评 WP Engine ，将 WP Engine 形容为社区的 “癌症”，质疑其对 WordPress 生态系统的贡献。他指出 WP Engine 和 Automattic 每年的收入均约为 5 亿美元，但 WP Engine 每周仅贡献 40 小时的开发资源，而 Automattic 则每周贡献了 3,988 小时。Mullenweg 认为，WP Engine 通过修改版的 GPL 代码盈利，却未能充分回馈社区。&lt;/p&gt;
&lt;p&gt;然后，嘴炮很快升级成为了法律纠纷，双方都向对方发出了律师函；然后威吓又进一步升级为行动：Automattic 控制着 Word Press 网站，基础设施，包括扩展插件的 Registry，所以直接把 WP Engine （收购）的一个扩展插件截胡了。更具体来说，是 WP Engine 收购的一个 WP 扩展插件，ACF，有两百多万活跃安装用户，A 公司把这个扩展分叉了，然后占用了 WP 上老扩展的名字。&lt;/p&gt;
&lt;p&gt;最后，在各路社交媒体上，都出现了两遍公司的骂战，这我就不放了，反正各种 Drama 满天飞。这里面最有名的要数下云先锋， Ruby on Rails 作者 DHH 得两篇博客了，以下是 DHH 两篇博客原文：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://world.hey.com/dhh/automattic-is-doing-open-source-dirty-b95cf128&#34;&gt;Automattic is doing open source dirty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;dhh1.png&#34; src=&#34;/zh/blog/cloud/wordpress-drama/dhh1.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://world.hey.com/dhh/open-source-royalty-and-mad-kings-a8f79d16&#34;&gt;Open source royalty and mad kings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;dhh2.png&#34; src=&#34;/zh/blog/cloud/wordpress-drama/dhh2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后是当事人 Mullenweg 的两篇博客回应&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ma.tt/2024/10/on-dhh/&#34;&gt;Response to DHH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;matt1.png&#34; src=&#34;/zh/blog/cloud/wordpress-drama/matt1.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ma.tt/2024/10/other-lawsuits/&#34;&gt;Those Other Lawsuits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;matt2.png&#34; src=&#34;/zh/blog/cloud/wordpress-drama/matt2.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;老冯评论&#34;&gt;老冯评论&lt;/h2&gt;
&lt;p&gt;我跟 WordPress 没啥利益关系，但作为一个开源社区的创始人，参与者，维护者，我在感情上是同情 Automattic 和其老板 —— WP 项目创始人 Matt Mullenweg ，我能理解他的愤怒沮丧心情，但确实没法苟同他在收到律师函之后的失智冲动举动。&lt;/p&gt;
&lt;p&gt;从道德层面来说，WP Engine 白嫖社区却鲜有贡献合不合情理？不合情理。但从法律上来说，你用的 GPL 协议，按这个协议，别人在遵守开源协议的前提下，通过托管服务赚大钱是不是合法的？你向别人收取什一税，截胡插件有什么法律依据？没有！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那么问题在哪里呢？开源本质上是一种礼物馈赠，赠与者不应该对受赠人的回报有什么期待。如果你预期到，受赠人会拿着你送的礼物大赚一笔让你自己心里失衡，或者受赠人干脆用你的礼物回头抢你自己的生意，&lt;strong&gt;那你在第一天就不应该送给他&lt;/strong&gt;。然而问题在于，传统的开源模型中没有办法实现这一点，&lt;strong&gt;即歧视性划界问题&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;开源软件作为一个礼物，默认的赠送范围是 —— 整个人类世界，Public Domain！因为开源“不允许”歧视性条款。&lt;strong&gt;但你只想把你的软件礼物赠送给用户，而不是商业竞争对手&lt;/strong&gt;，在传统开源协议下有什么办法呢？没有什么好办法，你写了一个很好的软件，使用 Apache 2.0 协议，很好，云厂商和竞争对手把你的软件装到他们的服务器上卖给用户大赚一笔，而你这个开发者得到了商业对手的鼓励（嘲讽） —— &lt;strong&gt;请再接再厉，继续给我们打白工吧。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;上古竞于道德，中世逐于智谋，当今争于气力。在上古时代，开源软件的参与者基本上都属于所谓的 “Pro-sumer”（产消合一者）。每个人都从其他人的贡献中获益，参与者也基本上都属于少部分没有经济压力的精英阶层，所以这种模式可以玩得转。繁荣健康的开源软件社区可以容得下一批纯消费者，并期待他们最终会有一部分成为产消合一者。&lt;/p&gt;
&lt;p&gt;但以经典公有云厂商为代表的托管服务，通过掌控最终的交付环节，攫取捕获了开源生态的大部分价值。如果他们愿意成为体面的开源社区参与者积极回馈，这个模式还可以勉强继续运转下去，否则就会失衡 —— 社区秩序的消费者超出生产者的能力，开源模式就会面临危机。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;怎么解决这个问题呢？开源社区其实已经给出了自己的答案。在 &lt;a href=&#34;https://mp.weixin.qq.com/s/W5kOLxeJCIHjnWbIHc1Pzw&#34;&gt;Redis不开源是“开源”之耻，更是公有云之耻&lt;/a&gt; 中我已经详细分析过了 —— 例如在数据库领域，不难发现近几年头部的数据库公司/社区与云厂商之间的关系都在进一步紧张升级中。 &lt;a href=&#34;https://mp.weixin.qq.com/s/W5kOLxeJCIHjnWbIHc1Pzw&#34;&gt;Redis 修改开源协议为 RSAL/SSPL&lt;/a&gt;，&lt;a href=&#34;https://mp.weixin.qq.com/s/NdeeYn10qQ0xBPL-67IXdQ&#34;&gt;ElasticSearch 修改协议为 AGPLv3&lt;/a&gt;，&lt;a href=&#34;https://mp.weixin.qq.com/s/I3ug7Qv9jz3-uD3x_N1jKw&#34;&gt;MongoDB 使用更严苛的 SSPL&lt;/a&gt;，MinIO 和 Grafana 也转换到了更严苛的 AGPLv3 上来。&lt;a href=&#34;https://mp.weixin.qq.com/s/1zlDPie_bVvP7eO6_uTkSw&#34;&gt;Oracle 在 MySQL 开源版上摆烂&lt;/a&gt;，包括&lt;a href=&#34;https://mp.weixin.qq.com/s/qNcqGHL-wVTSB7Kxko2eNw&#34;&gt;最为友善的 PostgreSQL 生态，也开始出现了不一样的声音&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我们要知道，开源许可证对于开源社区来说，就像章程一样。切换开源许可证本质上来说，就是一种重新划分社区共同体边界的行为。通过 AGPLv3 / SSPL 或者其他更严苛开源协议中的 “隐性歧视条款”，将不符合开源社区价值观的参与者，通过法律排除在外。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;共同体边界的问题，是所有开源社区面临的&lt;strong&gt;最重要的问题&lt;/strong&gt; —— 它的重要性甚至在 “是否开源” 和 “独裁还是民主” 之上。很多“开源软件”社区/公司非常愿意为更深度地歧视与划界需求，而丧失 “开源” 的名分 —— 例如使用不被 OSI 认定为开源的 “SSPL“ 等协议。&lt;/p&gt;
&lt;p&gt;“谁是我们？谁是我们的朋友，谁是我们的敌人？”  这是构建社区，建立秩序的基本问题。为开源软件做贡献的贡献者显然是核心，使用、消费软件的用户可以是社区主体；而架空，白嫖，吸血远大于贡献的竞争对手与“云托管服务”供应商，显然会是社区的敌人。&lt;/p&gt;
&lt;p&gt;当然，开源社区/公司应该更精准地划分敌友，扩大自己的朋友圈，孤立自己的敌人：卖服务器的Dell浪潮，提供托管服务器的 Hentzer，Linode，DigitalOcean，世纪互联，甚至是公有云  IaaS 部门，提供接入/CDN 服务的  Cloudflare / Akamai 都可以是朋友，而把社区吭哧吭哧开发的开源软件拿去卖而不做对等回馈的公有云 PaaS 部门 / 团队 / 甚至具体的小组，那显然是竞争对手。让亲者快而仇者痛，这是有效运营的的基本原则。&lt;/p&gt;
&lt;p&gt;WordPress 社区内战的例子给了我们一个很好的启示 ——  Automattic 本来是占据了情理和大义名分的。但他没有在架构社区立法的阶段处理解决好“开放世界中的敌人” 的问题。反而在商业竞争中公器私用，使用了违法开源社区基本原则的不当手段，导致自己陷入现在这个尴尬的局面中 —— 这就跟肿瘤患者没有及早预防癌症的出现，一怒之下用刀剜开自己的肿瘤一样痛苦。&lt;/p&gt;
&lt;p&gt;我相信，开源软件的社区/公司运营者一定能从这个案例学习到不少经验与教训。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: PostgreSQL 规约（2024版）</title>
      <link>/zh/blog/pg/pg-convention/</link>
      <pubDate>Wed, 09 Oct 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/pg-convention/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/pg-convention/featured_hu02aa61ae1d9de35cbe238d2676170cb9_117728_640x0_resize_q75_catmullrom.jpg" width="640" height="640"/>]]>
        
        &lt;hr&gt;
&lt;h2 id=&#34;0x00背景&#34;&gt;0x00背景&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;没有规矩，不成方圆。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PostgreSQL的功能非常强大，但是要把PostgreSQL用好，需要后端、运维、DBA的协力配合。&lt;/p&gt;
&lt;p&gt;本文针对PostgreSQL数据库原理与特性，整理了一份开发/运维规约，希望可以减少大家在使用PostgreSQL数据库过程中遇到的困惑：你好我也好，大家都好。&lt;/p&gt;
&lt;p&gt;本文&lt;a href=&#34;/zh/blog/dev/pg-convention&#34;&gt;第一版&lt;/a&gt;主要针对 PostgreSQL 9.4 - PostgreSQL 10 版本 ，当前最新版本针对 PostgreSQL 15/16/17 进行更新与调整。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;0x01-命名规范&#34;&gt;0x01 命名规范&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;计算机科学只存在两个难题：缓存失效和&lt;strong&gt;命名&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;通用命名规则&lt;/strong&gt;（Generic）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本规则适用于所有&lt;strong&gt;数据库内&lt;/strong&gt;对象，包括：库名、表名、索引名、列名、函数名、视图名、序列号名、别名等。&lt;/li&gt;
&lt;li&gt;对象名务必只使用小写字母，下划线，数字，其中首字母必须为小写字母。&lt;/li&gt;
&lt;li&gt;对象名长度不得超过63个字符，命名统一采用 &lt;code&gt;snake_case&lt;/code&gt; 风格。&lt;/li&gt;
&lt;li&gt;禁止使用SQL保留字，使用&lt;code&gt;select pg_get_keywords();&lt;/code&gt; 获取保留关键字列表。&lt;/li&gt;
&lt;li&gt;禁止出现美元符号 &lt;code&gt;$&lt;/code&gt; ，禁止使用中文，不要以 &lt;code&gt;pg&lt;/code&gt; 开头。&lt;/li&gt;
&lt;li&gt;提高用词品味，做到信达雅；不要使用拼音，不要使用生僻冷词，不要使用小众缩写。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;集群命名规则&lt;/strong&gt; （Cluster）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL 集群的命名将作为集群资源的命名空间，必须为有效的 DNS 域名，不包含任何点号与下划线。&lt;/li&gt;
&lt;li&gt;集群名应当由小写字母开头，仅包含小写字母、数字、减号，符合正则表达式：&lt;code&gt;[a-z][a-z0-9-]*&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;PostgreSQL 数据库集群命名通常以三段式结构：&lt;code&gt;pg-&amp;lt;biz&amp;gt;-&amp;lt;tld&amp;gt;&lt;/code&gt;。数据库类型 / 业务名称 / 业务线或环境&lt;/li&gt;
&lt;li&gt;&lt;code&gt;biz&lt;/code&gt; 为最能代表业务特征的英文词语，应当仅由小写字母与数字组成，不得包含连字符 &lt;code&gt;-&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用备份集群搭建某一个现有集群的延迟从库时，&lt;code&gt;biz&lt;/code&gt; 名应当为 &lt;code&gt;&amp;lt;biz&amp;gt;delay&lt;/code&gt;，例如 &lt;code&gt;pg-testdelay&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;分支一个现有集群时，可以在 &lt;code&gt;biz&lt;/code&gt; 尾部添加数字：例如从 &lt;code&gt;pg-user1&lt;/code&gt; 可以分支出 &lt;code&gt;pg-user2&lt;/code&gt;，&lt;code&gt;pg-user3&lt;/code&gt; 等&lt;/li&gt;
&lt;li&gt;水平分片集群，&lt;code&gt;biz&lt;/code&gt;命名中应当包含 &lt;code&gt;shard&lt;/code&gt;，并缀以分片号，例如 &lt;code&gt;pg-testshard1&lt;/code&gt;，&lt;code&gt;pg-testshard2&lt;/code&gt;，……&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;tld&amp;gt;&lt;/code&gt; 为顶层业务线，也可用于区分不同环境：例如 &lt;code&gt;-tt&lt;/code&gt;，&lt;code&gt;-dev&lt;/code&gt;，&lt;code&gt;-uat&lt;/code&gt;，&lt;code&gt;-prod&lt;/code&gt; 等。无此需要可以省略。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;服务命名规则&lt;/strong&gt;（Service）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每一套 PostgreSQL 集群会对外提供 2～6 种不等的服务，这些默认使用固定命名规则。&lt;/li&gt;
&lt;li&gt;服务名以集群名作为前缀，服务类型作为后缀，例如 &lt;code&gt;pg-test-primary&lt;/code&gt;，&lt;code&gt;pg-test-replica&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;读写服务统一以 &lt;code&gt;primary&lt;/code&gt; 后缀命名，只读服务统一以 &lt;code&gt;replica&lt;/code&gt; 后缀命名，这两个为必选服务。&lt;/li&gt;
&lt;li&gt;ETL拉取/个人用户查询以 &lt;code&gt;offline&lt;/code&gt; 后缀命名，直连主库/ETL写入以 &lt;code&gt;default&lt;/code&gt; 后缀命名，为选配服务。&lt;/li&gt;
&lt;li&gt;同步读取服务以 &lt;code&gt;standby&lt;/code&gt; 后缀命名，延迟从库服务以 &lt;code&gt;delayed&lt;/code&gt; 后缀命名，少量核心库可提供此服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实例命名规则&lt;/strong&gt;（Instance）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一套 PostgreSQL 集群由至少一个实例组成，每个实例都有集群内从零或一开始唯一分配的实例号。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实例名&lt;/strong&gt;由集群名 + 实例号通过连字符 &lt;code&gt;-&lt;/code&gt; 拼接而成，例如： &lt;code&gt;pg-test-1&lt;/code&gt;，&lt;code&gt;pg-test-2&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;实例号一经分配不得修改，持续到实例下线销毁，不得重新分配使用。&lt;/li&gt;
&lt;li&gt;实例名将作为监控系统数据的 &lt;code&gt;ins&lt;/code&gt; 标签，附加到该实例的所有数据上。&lt;/li&gt;
&lt;li&gt;如果是用主机/数据库 1:1 独占式部署，节点 Hostname 可以使用数据库实例名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数据库命名规则&lt;/strong&gt;（Database）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据库库名应当与集群、应用保持一致，必须为具有高区分度的英文单词。&lt;/li&gt;
&lt;li&gt;命名以 &lt;code&gt;&amp;lt;tld&amp;gt;_&amp;lt;biz&amp;gt;&lt;/code&gt; 的形式构建，&lt;code&gt;&amp;lt;tld&amp;gt;&lt;/code&gt; 为顶层业务线，也可用于区分不同环境，不用可以省略。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;biz&amp;gt;&lt;/code&gt;为具体业务名称，例如 &lt;code&gt;pg-test-tt&lt;/code&gt; 集群可以使用库名 &lt;code&gt;tt_test&lt;/code&gt; 或 &lt;code&gt;test&lt;/code&gt;。这一点不强制，即允许创建不同于集群 &lt;code&gt;&amp;lt;biz&amp;gt;&lt;/code&gt; 名称的其他数据库。&lt;/li&gt;
&lt;li&gt;对于分片库，&lt;code&gt;&amp;lt;biz&amp;gt;&lt;/code&gt; 部分必须以&lt;code&gt;shard&lt;/code&gt;结尾，但&lt;strong&gt;不应当&lt;/strong&gt;包含分片号，例如 &lt;code&gt;pg-testshard1&lt;/code&gt;，&lt;code&gt;pg-testshard2&lt;/code&gt; 都用 &lt;code&gt;testshard&lt;/code&gt; 即可。&lt;/li&gt;
&lt;li&gt;多个部分使用&lt;code&gt;-&lt;/code&gt;连接。例如：&lt;code&gt;&amp;lt;biz&amp;gt;-chat-shard&lt;/code&gt;，&lt;code&gt;&amp;lt;biz&amp;gt;-payment&lt;/code&gt;等，总共不超过三段。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;角色命名规范&lt;/strong&gt;（Role/User）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据库超级用户 &lt;code&gt;dbsu&lt;/code&gt; 有且仅有一个：&lt;code&gt;postgres&lt;/code&gt;，用于流复制的用户命名为&lt;code&gt;replicator&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;用于监控的用户统一命名为 &lt;code&gt;dbuser_monitor&lt;/code&gt;，用于日常管理的超级用户为：&lt;code&gt;dbuser_dba&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;程序/服务使用的业务用户默认使用 &lt;code&gt;dbuser_&amp;lt;biz&amp;gt;&lt;/code&gt; 作为用户名，例如 &lt;code&gt;dbuser_test&lt;/code&gt;。来自不同服务的访问应当使用独立的业务用户区分访问。&lt;/li&gt;
&lt;li&gt;个人用户申请的数据库用户同意使用 &lt;code&gt;dbp_&amp;lt;name&amp;gt;&lt;/code&gt;，其中 &lt;code&gt;name&lt;/code&gt; 为 LDAP 中的标准用户名。&lt;/li&gt;
&lt;li&gt;默认权限组命名固定为： &lt;code&gt;dbrole_readonly&lt;/code&gt;，&lt;code&gt;dbrole_readwrite&lt;/code&gt;，&lt;code&gt;dbrole_admin&lt;/code&gt;，&lt;code&gt;dbrole_offline&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;模式命名规则&lt;/strong&gt;（Schema）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;业务统一使用一个全局的 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 作为模式名，尽可能简短，默认设置为&lt;code&gt;search_path&lt;/code&gt; 首位元素。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 不得使用 &lt;code&gt;public&lt;/code&gt;，&lt;code&gt;monitor&lt;/code&gt; ，不得与任何 PostgreSQL 扩展使用的模式名冲突，例如： &lt;code&gt;timescaledb&lt;/code&gt;，&lt;code&gt;citus&lt;/code&gt;，&lt;code&gt;repack&lt;/code&gt;，&lt;code&gt;graphql&lt;/code&gt;，&lt;code&gt;net&lt;/code&gt;，&lt;code&gt;cron&lt;/code&gt;，…… 不宜使用特殊名称：&lt;code&gt;dba&lt;/code&gt;，&lt;code&gt;trash&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;分片模式命名规则采用：&lt;code&gt;rel_&amp;lt;partition_total_num&amp;gt;_&amp;lt;partition_index&amp;gt;&lt;/code&gt;。中间为总分片数，目前固定使用 8192 ，后缀是分片号，从0开始计数。如 &lt;code&gt;rel_8192_0&lt;/code&gt;，…… ，&lt;code&gt;rel_8192_11&lt;/code&gt;，等等。&lt;/li&gt;
&lt;li&gt;创建额外的模式，或者使用 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 之外的模式名需要由研发解释其必要性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;关系命名规则&lt;/strong&gt;（Relation）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关系命名以表意清晰为第一要义，不要使用含混的缩写，也不应过分冗长，遵循通用命名规则。&lt;/li&gt;
&lt;li&gt;表名应当使用&lt;strong&gt;复数名词&lt;/strong&gt;，并与历史惯例保持一致，应尽量避免带有不规则复数形式的单词。&lt;/li&gt;
&lt;li&gt;视图以&lt;code&gt;v_&lt;/code&gt;作为命名前缀，物化视图使用&lt;code&gt;mv_&lt;/code&gt;作为命名前缀，临时表以&lt;code&gt;tmp_&lt;/code&gt;作为命名前缀。&lt;/li&gt;
&lt;li&gt;继承或分区表应当以父表表名作为前缀，并以子表特性（规则，分片范围等）作为后缀。&lt;/li&gt;
&lt;li&gt;时间范围分区使用起始区间作为命名后缀，首个分区如果无上界则由研发指定一个足够久远的时间点：年级分区：&lt;code&gt;tbl_2023&lt;/code&gt;，月级分区 &lt;code&gt;tbl_202304&lt;/code&gt;，天级分区 &lt;code&gt;tbl_20230405&lt;/code&gt;，小时级分区 &lt;code&gt;tbl_2023040518&lt;/code&gt; ，默认分区以 &lt;code&gt;_default&lt;/code&gt; 结尾。&lt;/li&gt;
&lt;li&gt;哈希分区命名以余数作为分区表名的后缀，列表分区由研发手工指定与列表项对应的合理分区表名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;索引命名规则&lt;/strong&gt;（Index）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建索引时，应当&lt;strong&gt;显式指定&lt;/strong&gt;索引名称，并与PostgreSQL默认命名规则保持一致。&lt;/li&gt;
&lt;li&gt;索引名称以表名作为前缀，主键索引以 &lt;code&gt;_pkey&lt;/code&gt; 结尾，唯一索引以 &lt;code&gt;_key&lt;/code&gt; 结尾，普通索引以 &lt;code&gt;_idx&lt;/code&gt; 结尾，用于&lt;code&gt;EXCLUDED&lt;/code&gt;约束的索引以&lt;code&gt;_excl&lt;/code&gt;结尾。&lt;/li&gt;
&lt;li&gt;使用条件索引/函数索引时，应当在索引名称中体现使用的函数与条件内容。例如 &lt;code&gt;tbl_md5_title_idx&lt;/code&gt;，&lt;code&gt;tbl_ts_ge_2023_idx&lt;/code&gt;，但不可超出长度限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;字段命名规则&lt;/strong&gt;（Attribute）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;禁止使用系统列保留字段名：&lt;code&gt;oid&lt;/code&gt;， &lt;code&gt;xmin&lt;/code&gt;， &lt;code&gt;xmax&lt;/code&gt;，&lt;code&gt;cmin&lt;/code&gt;，&lt;code&gt;cmax&lt;/code&gt;，&lt;code&gt;ctid&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;主键列通常命名为&lt;code&gt;id&lt;/code&gt;，或以&lt;code&gt;id&lt;/code&gt;作为后缀。&lt;/li&gt;
&lt;li&gt;创建时间字段惯用名为&lt;code&gt;created_time&lt;/code&gt;，最后修改时间惯用名为 &lt;code&gt;updated_time&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;布尔型字段建议使用&lt;code&gt;is_&lt;/code&gt;，&lt;code&gt;has_&lt;/code&gt; 等作为前缀。&lt;/li&gt;
&lt;li&gt;额外的灵活 JSONB 字段固定使用 &lt;code&gt;extra&lt;/code&gt; 作为列名。&lt;/li&gt;
&lt;li&gt;其余各字段名需与已有表命名惯例保持一致，任何打破惯例的字段命名都应当做出书面设计说明与解释。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;枚举项命名&lt;/strong&gt; （Enum）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;枚举项默认应当使用 &lt;code&gt;camelCase&lt;/code&gt;，但也允许其他风格。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;函数命名规则&lt;/strong&gt;（Function）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;函数命名以动词起头： &lt;code&gt;select&lt;/code&gt;，&lt;code&gt;insert&lt;/code&gt;，&lt;code&gt;delete&lt;/code&gt;，&lt;code&gt;update&lt;/code&gt;，&lt;code&gt;upsert&lt;/code&gt;，&lt;code&gt;create&lt;/code&gt; ，……。&lt;/li&gt;
&lt;li&gt;重要参数可以通过&lt;code&gt;_by_ids&lt;/code&gt;，&lt;code&gt;_by_user_ids&lt;/code&gt;的后缀在函数名中体现。&lt;/li&gt;
&lt;li&gt;避免函数重载，同名函数尽量只保留一个。&lt;/li&gt;
&lt;li&gt;禁止通过 &lt;code&gt;BIGINT/INTEGER/SMALLINT&lt;/code&gt; 等整型进行函数签名重载，调用时可能产生歧义。&lt;/li&gt;
&lt;li&gt;存储过程与函数中的变量使用命名参数，避免位置参数（&lt;code&gt;$1&lt;/code&gt;，&lt;code&gt;$2&lt;/code&gt;，…）。&lt;/li&gt;
&lt;li&gt;如果参数名与对象名出现冲突，在参数前添加 &lt;code&gt;_&lt;/code&gt;，例如&lt;code&gt;_user_id&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注释规范&lt;/strong&gt;（Comment）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽最大可能为各种对象提供注释（&lt;code&gt;COMMENT&lt;/code&gt;），注释使用英文，言简意赅，一行为宜。&lt;/li&gt;
&lt;li&gt;对象的模式或内容语义发生变更时，请务必一并更新注释，并与实际情况保持同步。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;0x02-设计规范&#34;&gt;0x02 设计规范&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Suum cuique&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;建表注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建表 DDL 语句需要使用标准格式，SQL 关键词大写，其他小写。&lt;/li&gt;
&lt;li&gt;在字段名/表名/别名中统一使用小写，尽量不要区分大小写。如果遇到大小写混用的情况，或者与 SQL 关键词冲突的名称，需要使用双引号扩起进行引用。&lt;/li&gt;
&lt;li&gt;能使用专有类型的，不使用字符串。（数值，枚举，网络地址，货币，JSON，UUID等）：使用正确的数据类型，能显著提高数据存储，查询，索引，计算的效率，并提高可维护性。&lt;/li&gt;
&lt;li&gt;优化列的布局，对齐类型可以有额外的性能/存储空间收益。&lt;/li&gt;
&lt;li&gt;唯一约束须由数据库保证，任何唯一列须有对应的唯一约束。&lt;code&gt;EXCLUDE&lt;/code&gt;约束是泛化的唯一约束，可以在低频更新场景下用于保证数据完整性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;分区表注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果单表超过百TB量级，或者每月增量数据超过十几GB量级，可以考虑进行表分区。&lt;/li&gt;
&lt;li&gt;分区的指导原则是，让每个分区的大小尽可能落在 1GB ～ 64GB 的舒适范围内。&lt;/li&gt;
&lt;li&gt;有条件按照时间范围分区的表优先按时间范围分区，通常使用的粒度包括： decade，year，month，day，hour，应当至少提前三个月创建好未来所需的分区。&lt;/li&gt;
&lt;li&gt;对于极端倾斜的数据分布，可以组合使用不同的时间粒度，例如： 1900 - 2000 一个大分区，2000 - 2020 按年分区，2020 后按月分区。使用时间分区时，表名使用分区下限界的值（无穷大则选用一个足够久远的值）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;宽表注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;宽表（例如有几十个字段的表）可以考虑进行纵向拆分，通过相同的主键与主表相互引用。&lt;/li&gt;
&lt;li&gt;因为PostgreSQL MVCC机制，宽表的写放大现象更为明显，减少对宽表的频繁更新。&lt;/li&gt;
&lt;li&gt;互联网场景中，允许适当降低规范化等级，减少多表连接以提高性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;主键注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个表都&lt;strong&gt;必须&lt;/strong&gt;有&lt;strong&gt;身份列&lt;/strong&gt;，原则上必须有主键，最低要求为拥有&lt;strong&gt;非空唯一约束&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;身份列用于唯一标识表中的任一元组，逻辑复制与诸多三方工具有赖于此。&lt;/li&gt;
&lt;li&gt;主键如果包含多列，应当在建表DDL的字段列表之后，使用 &lt;code&gt;PRIMARY KEY(a,b,...)&lt;/code&gt; 单列指定。&lt;/li&gt;
&lt;li&gt;主键原则上建议使用整型，可以谨慎使用 &lt;code&gt;UUID&lt;/code&gt; 与长度受限的文本类型，使用其他类型需要显式说明与评估。&lt;/li&gt;
&lt;li&gt;主键通常使用单一整型列，原则上建议使用 &lt;code&gt;BIGINT&lt;/code&gt;，审慎使用 &lt;code&gt;INTEGER&lt;/code&gt;，不允许使用 &lt;code&gt;SMALLINT&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;主键应使用 &lt;code&gt;GENERATED ALWAYS AS IDENTITY&lt;/code&gt; 生成唯一主键；&lt;code&gt;SERIAL&lt;/code&gt;，&lt;code&gt;BIGSERIAL&lt;/code&gt; 仅当需要兼容 PG 10 以下版本时允许使用。&lt;/li&gt;
&lt;li&gt;主键可以使用 &lt;code&gt;UUID&lt;/code&gt; 类型作为主键，建议用 UUID v1/v7；审慎使用 UUIDv4 作为主键，随机 UUID 的局部性较差且存在碰撞概率。&lt;/li&gt;
&lt;li&gt;使用字符串列作为主键时，应当添加长度限制。通常使用 &lt;code&gt;VARCHAR(64)&lt;/code&gt;，使用更长的字符串时应当进行说明与评估。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;INSERT/UPDATE&lt;/code&gt; 时原则上禁止修改主键列的值，&lt;code&gt;INSERT RETURNING&lt;/code&gt; 可用于返回自动生成的主键值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;外键注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义外键时引用必须显式设置相应的动作：&lt;code&gt;SET NULL&lt;/code&gt;， &lt;code&gt;SET DEFAULT&lt;/code&gt;， &lt;code&gt;CASCADE&lt;/code&gt;，慎用级联操作。&lt;/li&gt;
&lt;li&gt;外键引用的列，需要为其他表/本表上的主键列。&lt;/li&gt;
&lt;li&gt;互联网类业务，特别是分区表、水平分片库慎用外键，可以在应用层解决。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;空值/默认值注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;字段语义上没有零值与空值区分的，不允许空值存在，须为列配置&lt;code&gt;NOT NULL&lt;/code&gt;约束。&lt;/li&gt;
&lt;li&gt;字段语义上带有默认值的，应当配置 &lt;code&gt;DEFAULT&lt;/code&gt; 默认值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数值类型注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常规数值字段使用 &lt;code&gt;INTEGER&lt;/code&gt; 。容量拿不准的数值列使用 &lt;code&gt;BIGINT&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;无特殊理由不要用 &lt;code&gt;SMALLINT&lt;/code&gt; ，性能与存储提升甚小，但会有很多额外的问题。&lt;/li&gt;
&lt;li&gt;注意SQL标准不提供无符号整型，超过 &lt;code&gt;INTMAX&lt;/code&gt; 但没超过 &lt;code&gt;UINTMAX&lt;/code&gt; 的值需要升格存储。不要存储超过 &lt;code&gt;INT64MAX&lt;/code&gt; 的值到 &lt;code&gt;BIGINT&lt;/code&gt; 列中，会溢出为负数，有此需求请使用 &lt;code&gt;uint&lt;/code&gt; 扩展插件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;REAL&lt;/code&gt; 表示 4 字节浮点数，&lt;code&gt;FLOAT&lt;/code&gt; 表示 8 字节浮点数。浮点数仅可用于末尾精度无所谓的场景，例如地理坐标。&lt;strong&gt;切记不要对浮点数使用等值判断，零值除外&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;精确数值类型使用 &lt;code&gt;NUMERIC&lt;/code&gt;，如果可行，请用 &lt;code&gt;NUMERIC(p)&lt;/code&gt; 与&lt;code&gt;NUMERIC(p,s)&lt;/code&gt; 设置有效数字位数以及小数部分的有效位数。例如摄氏气温（&lt;code&gt;37.0&lt;/code&gt;）可以用 &lt;code&gt;NUMERIC(3,1)&lt;/code&gt; 类型来存储3位有效数字与1位小数。&lt;/li&gt;
&lt;li&gt;货币数值类型使用 &lt;code&gt;MONEY&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;文本类型注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL的文本类型包括 &lt;code&gt;char(n)&lt;/code&gt;， &lt;code&gt;varchar(n)&lt;/code&gt;， &lt;code&gt;text&lt;/code&gt;。默认情况下，可以使用 &lt;code&gt;text&lt;/code&gt; 类型 ，不限制字符串长度，但受字段最大长度1GB限制。&lt;/li&gt;
&lt;li&gt;如果条件许可，优先使用 &lt;code&gt;varchar(n)&lt;/code&gt; 类型来设置一个最大字符串长度，这会引入极微小的额外检查开销，但能规避一些脏数据与极端情况。&lt;/li&gt;
&lt;li&gt;避免使用&lt;code&gt;char(n)&lt;/code&gt;，该类型为了与SQL标准兼容，存在不合直觉的行为表现（补齐空格与截断），且并没有存储和性能优势。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;时间类型注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时间只有两种存储方式：带时区的 &lt;code&gt;TIMESTAMPTZ&lt;/code&gt;，不带时区的 &lt;code&gt;TIMESTAMP&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;建议使用带时区的 &lt;code&gt;TIMESTAMPTZ&lt;/code&gt;，如果使用 &lt;code&gt;TIMESTAMP&lt;/code&gt; 存储，必须使用0时区标准时。&lt;/li&gt;
&lt;li&gt;生成0时区时间请使用 &lt;code&gt;now() AT TIME ZONE &#39;UTC&#39;&lt;/code&gt; ，不能直接截断时区 &lt;code&gt;now()::TIMESTAMP&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;统一使用 ISO-8601 格式输入输出时间类型：&lt;code&gt;2006-01-02 15:04:05&lt;/code&gt;，避免DMY与MDY问题。&lt;/li&gt;
&lt;li&gt;中国区域用户可以统一使用 &lt;code&gt;Asia/Hong_Kong&lt;/code&gt; +8 时区，因为上海时区缩写 &lt;code&gt;CST&lt;/code&gt; 有歧义。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;枚举类型注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;较稳定的，取值空间较小（几十到几百内）的字段应当使用枚举类型，不要使用整型与字符串表示。&lt;/li&gt;
&lt;li&gt;枚举内部使用动态整型实现，相比整型有可读性优势，相比字符串有性能、存储、可维护性上的优势。&lt;/li&gt;
&lt;li&gt;枚举项只能添加，无法删除，但是可以重命名现有枚举值。&lt;code&gt;ALTER TYPE &amp;lt;enum_name&amp;gt;&lt;/code&gt; 用于修改枚举。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;UUID类型注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请注意，全随机的 UUIDv4 用作主键时局部性太差，尽可能考虑用 UUIDv1 / v7 代替。&lt;/li&gt;
&lt;li&gt;一些 UUID 生成/处理函数需要额外的扩展插件，例如 &lt;code&gt;uuid-ossp&lt;/code&gt; ，&lt;code&gt;pg_uuidv7&lt;/code&gt;  等，有此需求请在配置时指明。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;JSON类型注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如无特殊原因，总是使用二进制存储的 &lt;code&gt;JSONB&lt;/code&gt; 类型与相关函数，而非文本版本的 &lt;code&gt;JSON&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;请注意 JSON 中的原子类型与 PostgreSQL 对应类型的细微差别：与 JSON 字符串对应的&lt;code&gt;text&lt;/code&gt; 类型中不允许出现 &lt;code&gt;\u0000&lt;/code&gt; 零字符，与 JSON 数值类型对应的 &lt;code&gt;numeric&lt;/code&gt; 中不允许出现 &lt;code&gt;NaN&lt;/code&gt; 与 &lt;code&gt;infinity&lt;/code&gt;。布尔值只接受小写的 &lt;code&gt;true&lt;/code&gt; 与 &lt;code&gt;false&lt;/code&gt; 字面值。&lt;/li&gt;
&lt;li&gt;请注意JSON标准中的&lt;code&gt;null&lt;/code&gt;对象和 SQL 标准中的空值 &lt;code&gt;NULL&lt;/code&gt;  并非同一个概念。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数组类型注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当存储元素数量较少时，可以使用数组字段代替单独。&lt;/li&gt;
&lt;li&gt;适合用于存储元素数量相对较少且变化不频繁的数据。如果数组中的元素数量非常大或经常变化，考虑使用单独的表来存储数据，并使用外键关联。&lt;/li&gt;
&lt;li&gt;高维度的浮点数组，可以考虑使用 &lt;code&gt;pgvector&lt;/code&gt; 扩展提供的专用数据类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;GIS类型注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GIS 类型默认使用 &lt;code&gt;srid=4326&lt;/code&gt; 参考坐标系。&lt;/li&gt;
&lt;li&gt;经纬度坐标点应当使用 &lt;code&gt;Geography&lt;/code&gt; 类型，使用此类型时默认无需显式指定参考系坐标 &lt;code&gt;4326&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;触发器注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;触发器会提高数据库系统的复杂度与维护成本，原则上不鼓励使用。禁止使用规则系统，此类需求应当使用触发器替代。&lt;/li&gt;
&lt;li&gt;触发器的典型场景是，在修改某一行后自动修改 &lt;code&gt;updated_time&lt;/code&gt; 为当前时间戳，或者将表的增删改动作记录到另一张日志表中，或者维持两张表在业务上的一致性。&lt;/li&gt;
&lt;li&gt;触发器中的操作是事务性的，意味着如果触发器或触发器中的操作失败，整个事务都会回滚，所以请充分测试并证明触发器的正确性。对于递归调用、执行复杂查询死锁，多个触发器执行顺序等情况需要特别关注。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;存储过程/函数注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;函数/存储过程适用于封装事务，减少并发冲突，减少网络往返，减少返回数据量，执行&lt;strong&gt;少量&lt;/strong&gt;自定义逻辑。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;存储过程&lt;strong&gt;不适合&lt;/strong&gt;进行复杂计算，不适合进行平凡/频繁的类型转换与包装。在关键高负载系统中，应当移除数据库中&lt;strong&gt;不必要&lt;/strong&gt;的计算密集型逻辑，例如在数据库中使用SQL进行WGS84到其他坐标系的换算。与数据获取、筛选密切关联的计算逻辑可以使用函数/存储过程：例如PostGIS中的几何关系判断。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不再使用的，被替换的函数与存储过程应当及时移除下线，避免与未来的函数发生冲突。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用统一的函数创建语法格式，签名单独占用一行（函数名与参数），返回值单启一行，语言为第一个标签。一定要标注函数易变性等级：&lt;code&gt;IMMUTABLE&lt;/code&gt;, &lt;code&gt;STABLE&lt;/code&gt;, &lt;code&gt;VOLATILE&lt;/code&gt;。添加属性标签，如：&lt;code&gt;RETURNS NULL ON NULL INPUT&lt;/code&gt;，&lt;code&gt;PARALLEL SAFE&lt;/code&gt;，&lt;code&gt;ROWS 1&lt;/code&gt; 等。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;OR&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;REPLACE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FUNCTION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nspname&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;myfunc&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;arg1_&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;TEXT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;arg2_&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;INTEGER&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RETURNS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VOID&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LANGUAGE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SQL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;STABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PARALLEL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SAFE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ROWS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RETURNS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INPUT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用合理的Locale选项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认使用 &lt;code&gt;C.UTF8&lt;/code&gt;，没有特殊理由不得更改。&lt;/li&gt;
&lt;li&gt;默认的 &lt;code&gt;collate&lt;/code&gt; 规则必须为 &lt;code&gt;C&lt;/code&gt; ，避免字符串索引问题。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/SEXcyRFmdXNI7rpPUB3Zew&#34;&gt;https://mp.weixin.qq.com/s/SEXcyRFmdXNI7rpPUB3Zew&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用合理的字符编码与本地化配置&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必须使用 &lt;code&gt;UTF8&lt;/code&gt; 字符编码，严格禁止使用其他任何字符编码。&lt;/li&gt;
&lt;li&gt;必须使用 &lt;code&gt;C&lt;/code&gt; 作为 &lt;code&gt;LC_COLLATE&lt;/code&gt; 默认排序规则，有特殊需求必须在DDL/查询子句中显式指定来实现。&lt;/li&gt;
&lt;li&gt;字符集 &lt;code&gt;LC_CTYPE&lt;/code&gt; 默认使用 &lt;code&gt;en_US.UTF8&lt;/code&gt;，一些扩展依赖字符集信息方可正常工作，如 &lt;code&gt;pg_trgm&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;索引相关注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有在线查询必须针对其访问模式设计相应索引，除极小表外不允许全表扫描。&lt;/li&gt;
&lt;li&gt;索引有代价，不允许创建不使用的索引，应当及时清理不再使用的索引。&lt;/li&gt;
&lt;li&gt;建立联合索引时，应当将区分度，选择率高的列放在前面，例如 ID，时间戳等。&lt;/li&gt;
&lt;li&gt;GiST索引可用于解决近邻查询问题，传统B树索引无法提供对KNN问题的良好支持。&lt;/li&gt;
&lt;li&gt;对于值与堆表的存储顺序线性相关的数据，如果查询为范围查询，建议使用BRIN索引。最典型场景如仅追加写入的时序数据，BRIN索引相比Btree更为高效。&lt;/li&gt;
&lt;li&gt;针对 JSONB / 数组字段进行检索时，可以使用 GIN 索引加速查询。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;明确B树索引空值的顺序&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如在可空列上有排序需求，需要在查询与索引中明确指定 &lt;code&gt;NULLS FIRST&lt;/code&gt; 还是 &lt;code&gt;NULLS LAST&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;注意，&lt;code&gt;DESC&lt;/code&gt; 排序的默认规则是 &lt;code&gt;NULLS FIRST&lt;/code&gt;，即空值会出现在排序的最前面，通常这不是期望行为。&lt;/li&gt;
&lt;li&gt;索引的排序条件必须与查询匹配，如：&lt;code&gt;CREATE INDEX ON tbl (id DESC NULLS LAST);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;禁止在大字段上建立索引&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;被索引字段大小无法超过2KB（1/3的页容量），在文本类型上创建索引需要谨慎，被索引的文本应当使用带有长度约束的 &lt;code&gt;varchar(n)&lt;/code&gt; 类型。&lt;/li&gt;
&lt;li&gt;文本类型用作主键时，必须设置最大长度。原则上长度不应当超过 64 个字符，特殊情况需显式说明评估。&lt;/li&gt;
&lt;li&gt;如有大字段索引需求，可以考虑对大字段取哈希，并建立函数索引。或使用其他类型的索引（GIN）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;充分利用函数索引&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;任何可以由同一行其他字段推断得出的冗余字段，可以使用函数索引替代。&lt;/li&gt;
&lt;li&gt;对于经常使用表达式作为查询条件的语句，可以使用表达式或函数索引加速查询。&lt;/li&gt;
&lt;li&gt;典型场景：建立大字段上的哈希函数索引，为需要左模糊查询的文本列建立 &lt;code&gt;reverse&lt;/code&gt; 函数索引。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;充分利用部分索引&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查询中查询条件固定的部分，可以使用部分索引，减小索引大小并提升查询效率。&lt;/li&gt;
&lt;li&gt;查询中某待索引字段若只有有限几种取值，也可以建立几个相应的部分索引。&lt;/li&gt;
&lt;li&gt;如果部分索引中的列会被频繁更新，请关注这些索引的膨胀情况&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;0x03-查询规范&#34;&gt;0x03 查询规范&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The limits of my language mean the limits of my world.&lt;/p&gt;
&lt;p&gt;—Ludwig Wittgenstein&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;使用服务接入&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生产数据库接入必须通过域名接入&lt;a href=&#34;/zh/docs/concept/svc&#34;&gt;服务&lt;/a&gt;，严禁使用 IP 地址直连。&lt;/li&gt;
&lt;li&gt;服务与接入使用 VIP，LVS/HAProxy 屏蔽集群实例成员的角色变化，主从切换无需应用重启。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;读写分离&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;互联网业务场景：写请求必须走主库，通过 Primary 服务访问。&lt;/li&gt;
&lt;li&gt;读请求原则上走从库，通过 Replica 服务访问。&lt;/li&gt;
&lt;li&gt;例外情况：需要读己之写的一致性保证，且检测到显著的复制延迟时，只读请求可以访问主库；或向DBA申请提供 Standby 服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;快慢分离&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生产中1毫秒以内的查询称为快查询，生产中超过1秒的查询称为慢查询。&lt;/li&gt;
&lt;li&gt;慢查询必须走离线从库 —— Offline 服务/实例，应当在执行时设置超时。&lt;/li&gt;
&lt;li&gt;生产中的在线普通查询执行时长原则上应当控制在 1ms 内。&lt;/li&gt;
&lt;li&gt;生产中的在线普通查询执行时长，超过10ms需修改技术方案，优化达标后再上线。&lt;/li&gt;
&lt;li&gt;在线查询应当配置10ms 数量级或更快的 Timeout，避免堆积造成雪崩。&lt;/li&gt;
&lt;li&gt;禁止从 Primary 上 ETL 数据，应当使用 Offline 服务从专用实例取数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用连接池&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生产应用必须通过连接池访问数据库，通过 1:1 部署的 Pgbouncer 代理访问 PostgreSQL 数据库。Offline 服务，个人用户严禁直接使用连接池。&lt;/li&gt;
&lt;li&gt;Pgbouncer 连接池默认使用 Transaction Pooling 模式，一些会话级别的功能可能无法使用（比如Notify/Listen），需要特别注意。在此模式下，1.21 以前的 Pgbouncer 不支持使用 Prepared Statements。特殊场景可以使用 Session Pooling 或绕开连接池直接访问数据库，需要 DBA 审核特批。&lt;/li&gt;
&lt;li&gt;使用连接池时禁止修改连接状态，包括修改连接参数，修改搜索路径，更换角色，更换数据库。万不得已修改后必须彻底销毁连接，将状态变更后的连接放回连接池会导致污染扩散。严禁使用 pg_dump 通过 Pgbouncer 转储数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;为查询语句配置主动超时&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用应当为所有的语句配置主动超时，超时后主动取消请求，避免雪崩。（Go context）&lt;/li&gt;
&lt;li&gt;周期性执行的语句，必须配置小于执行周期的超时 Timeout，避免雪崩。&lt;/li&gt;
&lt;li&gt;HAProxy 配置有 24 小时连接默认超时，用于滚动过期长连接。请不要在离线实例上运行执行时间超过1天的 SQL，有此需求由DBA特批调整。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;关注复制延迟&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用必须意识到主从之间的同步延迟，并妥善处理好复制延迟超出合理范围的情况。&lt;/li&gt;
&lt;li&gt;常规情况下，复制延迟在 100µs / 几十KB 的数量级，但是在极端情况下，从库可能会出现分钟/小时级的复制延迟，应用应当知晓这种现象，并有相应的降级方案 —— 选择从主库读取，稍后重试，或直接报错。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;重试失败的事务&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;查询&lt;/strong&gt;可能因为并发争用，管理员命令等原因被杀死，应用需要意识到这一点，并在必要时重试。&lt;/li&gt;
&lt;li&gt;应用在数据库大量报错时可以触发断路器熔断，避免雪崩。但要注意区分错误的类型与性质。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;掉线重连&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据库&lt;strong&gt;连接&lt;/strong&gt;可能因为各种原因被中止，应用&lt;strong&gt;必须&lt;/strong&gt;有掉线重连机制。&lt;/li&gt;
&lt;li&gt;可以使用&lt;code&gt;SELECT 1&lt;/code&gt;作为心跳包查询，检测连接的有消息，并定期保活。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在线服务应用代码禁止执行DDL&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生产应用严禁执行 DDL，不要在应用代码里搞个大新闻。&lt;/li&gt;
&lt;li&gt;例外场景：为分区表创建新的时间分区，可由应用谨慎管理。&lt;/li&gt;
&lt;li&gt;特殊例外：办公系统使用的数据库，例如 Gitlab / Jira/ Confluence 等可以授予应用 DDL 权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;SELECT语句显式指定列名&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;避免使用 &lt;code&gt;SELECT *&lt;/code&gt;，或在 &lt;code&gt;RETURNING&lt;/code&gt; 子句中使用 &lt;code&gt;*&lt;/code&gt;。请使用具体的字段列表，不要返回用不到的字段。当表结构发生变动时（例如，新值列），使用列通配符的查询很可能会发生列数不匹配的错误。&lt;/li&gt;
&lt;li&gt;一些表的字段经过维护之后，顺序会发生变化，例如：将 INTEGER 主键 &lt;code&gt;id&lt;/code&gt; 升级为 &lt;code&gt;BIGINT&lt;/code&gt; 后，&lt;code&gt;id&lt;/code&gt; 的列顺序会到最后一列。此问题只能在维护迁移时择机修复，研发应当克制调整列顺序的强迫症，并在 SELECT 语句中显式指定列的顺序&lt;/li&gt;
&lt;li&gt;例外：当存储过程返回具体的表行类型时，允许使用通配符。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;禁止在线查询全表扫描&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例外情况：常量极小表，极低频操作，表/返回结果集很小（百条记录/百KB内）。&lt;/li&gt;
&lt;li&gt;在首层过滤条件上使用诸如&lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;的否定式操作符会导致全表扫描，必须避免。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;禁止在事务中长时间等待&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开启事务后必须尽快提交或回滚，超过10分钟的&lt;code&gt;IDEL IN Transaction&lt;/code&gt;将被强制杀死。&lt;/li&gt;
&lt;li&gt;应用应当开启 AutoCommit，避免&lt;code&gt;BEGIN&lt;/code&gt;之后没有配对的&lt;code&gt;ROLLBACK&lt;/code&gt;或&lt;code&gt;COMMIT&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;尽量使用标准库提供的事务基础设施，不到万不得已不要手动控制事务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用 count 计数时的注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;count(*)&lt;/code&gt;是&lt;strong&gt;统计行数&lt;/strong&gt;的标准语法，与空值无关。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;count(col)&lt;/code&gt;统计的是&lt;code&gt;col&lt;/code&gt;列中的&lt;strong&gt;非空记录数&lt;/strong&gt;。该列中的NULL值不会被计入。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;count(distinct col)&lt;/code&gt; 对&lt;code&gt;col&lt;/code&gt;列除重计数，同样忽视空值，即只统计非空不同值的个数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;count((col1, col2))&lt;/code&gt;对多列计数，即使待计数的列全为空也会被计数，&lt;code&gt;(NULL,NULL)&lt;/code&gt;有效。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a(distinct (col1, col2))&lt;/code&gt;对多列除重计数，即使待计数列全为空也会被计数，&lt;code&gt;(NULL,NULL)&lt;/code&gt;有效。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用聚合函数的注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;除了&lt;code&gt;count&lt;/code&gt;之外的所有聚合函数都会忽略空值输入，因此当输入值全部为空时，结果是&lt;code&gt;NULL&lt;/code&gt;。但&lt;code&gt;count(col)&lt;/code&gt;在这种情况下会返回 &lt;code&gt;0&lt;/code&gt;，是一个例外。&lt;/li&gt;
&lt;li&gt;如果聚集函数返回空并不是期望的结果，使用 &lt;code&gt;coalesce&lt;/code&gt; 来设置缺省值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;谨慎处理空值&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;明确区分零值与空值，空值使用&lt;code&gt;IS NULL&lt;/code&gt;进行等值判断，零值使用常规的&lt;code&gt;=&lt;/code&gt;运算符进行等值判断。&lt;/li&gt;
&lt;li&gt;空值作为函数输入参数时应当带有类型修饰符，否则对于有重载的函数将无法识别使用何者。&lt;/li&gt;
&lt;li&gt;注意空值比较逻辑：任何涉及到空值比较运算结果都是&lt;code&gt;unknown&lt;/code&gt;，需要注意&lt;code&gt;unknown&lt;/code&gt;参与布尔运算的逻辑：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;and&lt;/code&gt;：&lt;code&gt;TRUE or UNKNOWN&lt;/code&gt;会因为逻辑短路返回&lt;code&gt;TRUE&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;or&lt;/code&gt;：&lt;code&gt;FALSE and UNKNOWN&lt;/code&gt;会因为逻辑短路返回&lt;code&gt;FALSE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;其他情况只要运算对象出现&lt;code&gt;UNKNOWN&lt;/code&gt;，结果都是&lt;code&gt;UNKNOWN&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;空值与&lt;strong&gt;任何值&lt;/strong&gt;的逻辑判断，其结果都为空值，例如&lt;code&gt;NULL=NULL&lt;/code&gt;返回结果是&lt;code&gt;NULL&lt;/code&gt;而不是&lt;code&gt;TRUE/FALSE&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;涉及空值与非空值的等值比较，请使用``IS DISTINCT FROM&lt;code&gt; &lt;/code&gt;进行比较，保证比较结果非空。&lt;/li&gt;
&lt;li&gt;空值与聚合函数：聚合函数当输入值&lt;strong&gt;全部&lt;/strong&gt;为NULL时，返回结果为NULL。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意序列号空缺&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当使用 &lt;code&gt;Serial&lt;/code&gt; 类型时，&lt;code&gt;INSERT&lt;/code&gt;，&lt;code&gt;UPSERT&lt;/code&gt;等操作都会消耗序列号，该消耗不会随事务失败而回滚。&lt;/li&gt;
&lt;li&gt;当使用整型 &lt;code&gt;INTEGER&lt;/code&gt; 作为主键，且表存在频繁插入冲突时，需要关注整型溢出的问题。&lt;/li&gt;
&lt;li&gt;不推荐使用序列号生成身份列，考虑使用 &lt;code&gt;GENERATED ALWAYS AS IDENTITY&lt;/code&gt; 代替。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用游标后必须及时关闭&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重复查询使用准备语句&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重复的查询应当使用&lt;strong&gt;准备语句（Prepared Statement）&lt;/strong&gt;，消除数据库硬解析的CPU开销。低于 1.21 版本的 Pgbouncer 无法在事务池化模式中支持此功能，请特别注意。&lt;/li&gt;
&lt;li&gt;准备语句会修改连接状态，请注意连接池对于准备语句的影响。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;选择合适的事务隔离等级&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认隔离等级为&lt;strong&gt;读已提交&lt;/strong&gt;，适合大多数简单读写事务，普通事务选择满足需求的最低隔离等级。&lt;/li&gt;
&lt;li&gt;需要事务级一致性快照的写事务，请使用&lt;strong&gt;可重复读&lt;/strong&gt;隔离等级。&lt;/li&gt;
&lt;li&gt;对正确性有严格要求（例如与钱有关）的写入事务，使用&lt;strong&gt;可序列化&lt;/strong&gt;隔离等级。&lt;/li&gt;
&lt;li&gt;在RR与SR隔离等级出现并发冲突时，应用应当视错误类型进行积极的重试。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;判断结果存在性不要使用count&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;SELECT 1 FROM tbl WHERE xxx LIMIT 1&lt;/code&gt; 判断是否存满足条件的列，要比Count快。&lt;/li&gt;
&lt;li&gt;可以使用 &lt;code&gt;SELECT exists(SELECT * FROM tbl WHERE xxx LIMIT 1)&lt;/code&gt; 将存在性结果转换为布尔值。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用RETURNING子句一次性取回修改后的结果&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;RETURNING&lt;/code&gt; 子句可以在 &lt;code&gt;INSERT&lt;/code&gt;，&lt;code&gt;UPDATE&lt;/code&gt;，&lt;code&gt;DELETE&lt;/code&gt; 语句后使用，有效减少数据库交互次数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用UPSERT简化逻辑&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当业务出现插入-失败-更新的操作序列时，考虑使用 &lt;code&gt;UPSERT&lt;/code&gt; 替代。&lt;/li&gt;
&lt;li&gt;但请注意，&lt;code&gt;UPSERT&lt;/code&gt; 即使没有成功插入，也会消耗序列号。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;利用咨询锁应对热点并发&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;针对单行记录的极高频并发写入（秒杀），应当使用咨询锁对记录ID进行锁定。&lt;/li&gt;
&lt;li&gt;如果能在应用层次解决高并发争用，就不要放在数据库层面进行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;优化IN操作符&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;EXISTS&lt;/code&gt; 子句代替&lt;code&gt;IN&lt;/code&gt;操作符，性能更佳。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;=ANY(ARRAY[1,2,3,4])&lt;/code&gt; 代替 &lt;code&gt;IN (1,2,3,4)&lt;/code&gt;，效果更佳。&lt;/li&gt;
&lt;li&gt;控制参数列表的大小，原则上不要超过1万个，超过时可以考虑分批处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不建议使用左模糊搜索&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;左模糊搜索&lt;code&gt;WHERE col LIKE &#39;%xxx&#39;&lt;/code&gt;无法充分利用B树索引，如有需要，可用 &lt;code&gt;reverse&lt;/code&gt; 表达式函数索引。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用数组代替临时表&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;考虑使用数组替代临时表，例如在获取一系列ID的对应记录时。&lt;code&gt;=ANY(ARRAY[1,2,3])&lt;/code&gt; 要比临时表JOIN好。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;0x04-管理规范&#34;&gt;0x04 管理规范&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;使用 Pigsty 搭建 PostgreSQL 集群与基础设施&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生产环境统一使用 Pigsty 主干版本，在 x86_64 机器， CentOS 7.9 / RockyLinux 8.8 操作系统上部署数据库。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pigsty.yml&lt;/code&gt; 配置文件通常包含了高度敏感的重要机密信息，应当使用 git 进行版本化管理，并严格控制访问权限。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;files/pki&lt;/code&gt; 内生成的 CA 私钥与其他证书应当妥善保管，定期将备份至安全区域存储归档，并严格控制访问权限。&lt;/li&gt;
&lt;li&gt;所有密码都不允许使用默认值，确保都已经修改为强度足够的新密码。&lt;/li&gt;
&lt;li&gt;严格控制管理节点与配置代码仓库的的访问权限，仅限 DBA 登陆与访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;监控系统是必选项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;任何部署必须有一套监控系统，生产环境至少使用两套 Infra 节点以提供冗余。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;根据需求合理规划集群架构&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;任何由DBA管理的生产数据库集群，必须带有至少一个在线从库，用于在线故障切换。&lt;/li&gt;
&lt;li&gt;默认使用 &lt;code&gt;oltp&lt;/code&gt; 模板，分析类数据库使用 &lt;code&gt;olap&lt;/code&gt; 模板，财务库使用 &lt;code&gt;crit&lt;/code&gt; 模板，小微虚拟机（四核内）使用 &lt;code&gt;tiny&lt;/code&gt; 模板。&lt;/li&gt;
&lt;li&gt;年增数据量超过1TB的业务，或者写入 TPS 超过3～5万的集群，可以考虑搭建水平分片集群。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用 Patroni 与 Etcd 配置集群高可用&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生产数据库集群使用 Patroni 作为高可用组件，使用 etcd 作为 DCS。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;etcd&lt;/code&gt; 使用专用虚拟机集群，3 ～ 5 个节点，严格打散分布在不同机柜上。&lt;/li&gt;
&lt;li&gt;必须开启 Patroni Failsafe 模式，确保 etcd 故障时集群主库可以继续工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用 pgBackRest 与 MinIO 配置集群PITR&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生产数据库集群使用 pgBackRest 作为备份恢复/PITR方案，使用 MinIO 作为备份存储仓库。&lt;/li&gt;
&lt;li&gt;MinIO 使用多节点多盘集群，亦可使用 S3 / OSS / COS 服务代替，冷备份必须设置密码加密。&lt;/li&gt;
&lt;li&gt;所有数据库集群每天进行一次本地全量备份，保留最近一周的备份与WAL，每隔一月存留一个全备。&lt;/li&gt;
&lt;li&gt;出现 WAL 归档错误时，应当及时检查备份仓库并排查问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;核心业务数据库配置注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;核心业务集群至少需要配置两个在线从库，其中一个为专用离线查询实例。&lt;/li&gt;
&lt;li&gt;核心业务集群需要搭建一套延迟24小时的延迟从库集群，用于应急数据恢复。&lt;/li&gt;
&lt;li&gt;核心业务集群通常采用异步提交，与钱有关则采用同步提交。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;财务数据库配置注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;财务数据库集群需要至少两个在线从库，其中一个为专用同步 Standby 实例，并启用 Standby 服务接入。&lt;/li&gt;
&lt;li&gt;与钱有关的库必须使用 RPO = 0 的 &lt;code&gt;crit&lt;/code&gt; 模板，启用同步提交确保数据零丢失，视情况启用 Watchdog。&lt;/li&gt;
&lt;li&gt;与钱有关的库必须强制打开数据校验和，视情况打开全量 DML 日志。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用合理的字符编码与本地化配置&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必须使用 &lt;code&gt;UTF8&lt;/code&gt; 字符编码，严格禁止使用其他任何字符编码。&lt;/li&gt;
&lt;li&gt;必须使用 &lt;code&gt;C&lt;/code&gt; 作为 &lt;code&gt;LC_COLLATE&lt;/code&gt; 默认排序规则，有特殊需求必须在DDL/查询子句中显式指定来实现。&lt;/li&gt;
&lt;li&gt;字符集 &lt;code&gt;LC_CTYPE&lt;/code&gt; 默认使用 &lt;code&gt;en_US.UTF8&lt;/code&gt;，一些扩展依赖字符集信息方可正常工作，如 &lt;code&gt;pg_trgm&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;业务数据库管理注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同一个集群内允许创建多个不同的数据库，必须使用 Ansible 剧本新建业务数据库。&lt;/li&gt;
&lt;li&gt;所有业务数据库都必须同步存在于 Pgbouncer 连接池中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;业务用户管理注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不同的业务/服务必须使用不同的数据库用户，必须使用 Ansible 剧本新建业务用户。&lt;/li&gt;
&lt;li&gt;所有生产业务用户都必须同步存在于 Pgbouncer 连接池的用户列表文件中。&lt;/li&gt;
&lt;li&gt;个人用户应当设置默认有效期为 90 天的密码并定时更换。&lt;/li&gt;
&lt;li&gt;个人用户只允许从跳板机访问有权限的集群 Offline 实例，或带有 &lt;code&gt;pg_offline_query&lt;/code&gt; 的从库。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;扩展插件管理注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装新扩展时，必须先在集群所有实例中使用 &lt;code&gt;yum/apt&lt;/code&gt; 安装对应大版本的扩展插件二进制软件包。&lt;/li&gt;
&lt;li&gt;启用扩展前，需要确认扩展是否需要加入 &lt;code&gt;shared_preload_libraries&lt;/code&gt; ，如果需要应当安排滚动重启。&lt;/li&gt;
&lt;li&gt;注意 &lt;code&gt;shared_preload_libraries&lt;/code&gt; 优先级顺序， &lt;code&gt;citus&lt;/code&gt;， &lt;code&gt;timescaledb&lt;/code&gt;，&lt;code&gt;pgml&lt;/code&gt; 通常要放在最前面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pg_stat_statements&lt;/code&gt; 与 &lt;code&gt;auto_explain&lt;/code&gt; 是必选插件，必须在所有集群中启用。&lt;/li&gt;
&lt;li&gt;安装扩展统一使用 &lt;code&gt;dbsu&lt;/code&gt; 进行，在业务数据库中 &lt;code&gt;CREATE EXTENSION&lt;/code&gt; 执行创建。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数据库XID与年龄注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关注数据库与表的年龄，避免XID事务号用尽。使用超过 20% 应当关注，超过 50% 应当立即介入处理。&lt;/li&gt;
&lt;li&gt;处理 XID 时，按年龄从大到小顺序挨个对表执行 &lt;code&gt;VACUUM FREEZE&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数据库表与索引膨胀注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关注表与索引的膨胀率，避免索引性能劣化，使用 &lt;code&gt;pg_repack&lt;/code&gt; 在线处理表/索引膨胀问题。&lt;/li&gt;
&lt;li&gt;一般情况下，膨胀率超过 50% 的索引与表可以考虑进行重整处理。&lt;/li&gt;
&lt;li&gt;处理超过 100GB 的表膨胀时，应当特别注意，并挑选业务低谷时进行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数据库重启注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重启数据库前，执行 &lt;code&gt;CHECKPOINT&lt;/code&gt; 两次，强制脏页刷盘，可加速重启过程。&lt;/li&gt;
&lt;li&gt;重启数据库前，执行 &lt;code&gt;pg_ctl reload&lt;/code&gt; 重载配置确认配置文件正常可用。&lt;/li&gt;
&lt;li&gt;重启数据库可使用 &lt;code&gt;pg_ctl restart&lt;/code&gt; 或 patronictl 同时重启整个集群。&lt;/li&gt;
&lt;li&gt;严禁使用 &lt;code&gt;kill -9&lt;/code&gt; 关闭任何数据库进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;复制延迟注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;监控复制延迟，使用复制槽时更必须十分留意。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新从库数据预热&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高负载业务集群添加新从库实例时，应当对新数据库实例进行预热，逐步调整并应用 HAProxy 实例权重，分梯度上量：4,8,16,32,64,100。可以使用 &lt;code&gt;pg_prewarm&lt;/code&gt; 将热数据加载至内存。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数据库发布流程&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线上数据库发布需要经过研发自测，主管审核，QA审核（可选），DBA审核几个评估阶段。&lt;/li&gt;
&lt;li&gt;研发自测阶段，应当由研发确保变更在开发、预发环境执行正确无误。
&lt;ul&gt;
&lt;li&gt;如果是新建表，应当给出记录数量级，数据日增量预估值，读写吞吐量级预估。&lt;/li&gt;
&lt;li&gt;如果是新建函数，应当给出平均执行时间与极端情况说明。&lt;/li&gt;
&lt;li&gt;如果是模式变更，必须梳理清楚所有上下游依赖。&lt;/li&gt;
&lt;li&gt;如果是数据变更，记录订正，必须给出回滚 SQL。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;研发 Team Leader 需要对变更进行评估与审核，对变更内容负责。&lt;/li&gt;
&lt;li&gt;DBA对发布的形式与影响进行评估与审核，提出审核意见，打回或统一执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数据工单格式&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据库变更通过平台进行，每个变更一个工单。&lt;/li&gt;
&lt;li&gt;标题清晰：某某业务需在 &lt;code&gt;xx&lt;/code&gt; 库执行 &lt;code&gt;yy&lt;/code&gt; 动作。&lt;/li&gt;
&lt;li&gt;目标明确：每个步骤需要在哪些实例上执行哪些操作，结果如何校验。&lt;/li&gt;
&lt;li&gt;回滚方案：任何变更都需要提供回滚方案，新建也需要提供清理脚本。&lt;/li&gt;
&lt;li&gt;任何变更都需要记录归档，有完善的审批记录，首先由研发上级TL Review 审批通过后由 DBA 审批。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数据库变更发布注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用统一的发布窗口，每天 16:00 统一收集当日变更依次执行；16:00点后TL确认的需求将顺延至第二天执行。19:00 后不允许数据库发布，紧急发布请TL做特殊说明，抄送CTO审批同意后执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库 DDL 变更 DML 变更统一使用管理员用户 &lt;code&gt;dbuser_dba&lt;/code&gt; 远程执行，确保默认权限正常工作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;业务管理员在自行执行 DDL 时，&lt;strong&gt;必须&lt;/strong&gt;先 &lt;code&gt;SET ROLE dbrole_admin&lt;/code&gt; 后再执行发布，确保默认权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;任何变更都需要有回滚预案方可执行，极个别无法回滚的操作需要特别谨慎处理（例如枚举加值）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库变更使用 &lt;code&gt;psql&lt;/code&gt; 命令行工具，连接到集群主库执行，使用 &lt;code&gt;\i&lt;/code&gt; 执行脚本或 &lt;code&gt;\e&lt;/code&gt; 手工分批执行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;删除表注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生产数据表 &lt;code&gt;DROP&lt;/code&gt; 应当首先重命名，冷却 1～3 天确认没有访问后再移除。&lt;/li&gt;
&lt;li&gt;清理表时必须梳理所有依赖，包括直接间接依赖的对象：触发器，外键引用等。&lt;/li&gt;
&lt;li&gt;待删除的临时表通常放置于 &lt;code&gt;trash&lt;/code&gt; Schema 中，通过  &lt;code&gt;ALTER TABLE SET SCHEMA&lt;/code&gt; 修改模式名。&lt;/li&gt;
&lt;li&gt;高负载业务集群中，移除特别大的表 (&amp;gt; 100G) 时挑选业务低谷进行，避免抢占 I/O 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;创建与删除索引注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必须使用 &lt;code&gt;CREATE INDEX CONCURRENTLY&lt;/code&gt; 并发创建索引，使用 &lt;code&gt;DROP INDEX CONCURRENTLY&lt;/code&gt; 并发移除索引。&lt;/li&gt;
&lt;li&gt;重建索引时，总是先创建新索引，再移除旧索引，并修改新索引名与旧索引保持一致。&lt;/li&gt;
&lt;li&gt;创建索引失败后，应当及时移除 &lt;code&gt;INVALID&lt;/code&gt; 的索引，修改索引后，使用 &lt;code&gt;analyze&lt;/code&gt; 重新收集表上的统计数据。&lt;/li&gt;
&lt;li&gt;业务空闲时，可以启用并行索引创建，并设置 &lt;code&gt;maintenance_work_mem&lt;/code&gt; 为更大的值加速索引创建。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;审慎地进行模式变更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽可能避免整表重写式的变更，1GB 以内的表允许全表重写，DBA 应当在变更时告知所有相关业务方。&lt;/li&gt;
&lt;li&gt;向现有表中添加新列时，应当避免在默认值中使用 &lt;code&gt;VOLATILE&lt;/code&gt; 的函数，避免全表重写。&lt;/li&gt;
&lt;li&gt;变更列类型时，必要时应当重建所有依赖该类型的函数，视图，并 &lt;code&gt;ANALYZE&lt;/code&gt; 刷新统计信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;控制数据写入的批次规模&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大批量写入操作应当切分为小批量进行，避免一次产生大量WAL或占用 I/O。&lt;/li&gt;
&lt;li&gt;大批量 &lt;code&gt;UPDATE&lt;/code&gt; 后，执行 &lt;code&gt;VACUUM&lt;/code&gt; 回收死元组占用的空间。&lt;/li&gt;
&lt;li&gt;执行 DDL 语句本质是对系统目录的修改，同样需要控制一个批次内的DDL语句数量。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数据加载注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;COPY&lt;/code&gt;加载数据，如有需要可以并行执行。&lt;/li&gt;
&lt;li&gt;加载数据前可以临时关闭&lt;code&gt;autovacuum&lt;/code&gt;，按需禁用触发器，并在加载完后再建立约束与索引。&lt;/li&gt;
&lt;li&gt;调大 &lt;code&gt;maintenance_work_mem&lt;/code&gt;，增大&lt;code&gt;max_wal_size&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;加载完成后执行&lt;code&gt;vacuum verbose analyze table&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数据库迁移、大版本升级注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生产环境统一使用标准迁移搭建剧本逻辑，通过蓝绿部署实现不停机集群迁移、大版本升级等需求。&lt;/li&gt;
&lt;li&gt;对于停机时间没有要求的集群，可以使用 &lt;code&gt;pg_dump | psql&lt;/code&gt; 逻辑导出导入的方式停机升级。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数据误删/误更新处理流程&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;事故发生后，立即评估是否需要停机止血，评估影响规模，决定处理手段。&lt;/li&gt;
&lt;li&gt;研发侧如有办法恢复，优先由研发自行通过 SQL 发布进行订正；否则使用 &lt;code&gt;pageinspect&lt;/code&gt; 与 &lt;code&gt;pg_dirtyread&lt;/code&gt; 从坏表中抢救数据。&lt;/li&gt;
&lt;li&gt;若有延迟从库，从延时从库中抽取数据进行修复。首先确认误删时间点，推进延迟从库至该 XID 后抽取数据。&lt;/li&gt;
&lt;li&gt;大面积误删误写，经与业务沟通同意后，执行原地 PITR 回滚至特定时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数据腐坏处理流程&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;确认从库数据是否可用于恢复，若从库数据无恙可先 Switchover 至从库。&lt;/li&gt;
&lt;li&gt;临时关闭 &lt;code&gt;auto_vacuum&lt;/code&gt; ，定位错误根因，替换故障磁盘并补充新从库。&lt;/li&gt;
&lt;li&gt;若系统目录损坏，或使用 &lt;code&gt;pg_filedump&lt;/code&gt; 从表二进制文件中恢复数据。&lt;/li&gt;
&lt;li&gt;若 CLOG 损坏，使用 &lt;code&gt;dd&lt;/code&gt; 生成仿造提交记录。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数据库连接打满注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;出现连接打满现象（雪崩）时，立即使用杀连接查询治标止损：&lt;code&gt;pg_cancel_backend&lt;/code&gt; 或 &lt;code&gt;pg_terminate_backend&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用  &lt;code&gt;pg_terminate_backend&lt;/code&gt; 中止所有普通后端进程，从每秒一次（&lt;code&gt;psql&lt;/code&gt; &lt;code&gt;\watch 1&lt;/code&gt;）开始。并从监控系统确认连接情况，如果继续堆积，则不断提高杀连接查询的执行频次，例如每 0.1 秒一次，直到不再堆积为止。&lt;/li&gt;
&lt;li&gt;从监控系统确认止血后，尝试停止杀连接，若重新出现堆积则立即恢复杀连接。立即分析根因并进行相应处理（升配，限流，加索引等）&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 云数据库：用米其林的价格，吃预制菜大锅饭</title>
      <link>/zh/blog/cloud/rds-scam/</link>
      <pubDate>Sun, 06 Oct 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/rds-scam/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/rds-scam/featured_hu9e82e781e1729570a61befcbcaefe3a6_496580_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;p&gt;云数据库是不是天价大锅饭&lt;/p&gt;
&lt;p&gt;RDS带来的数据库范式转变&lt;/p&gt;
&lt;p&gt;质量安全效率成本剖析核算，&lt;/p&gt;
&lt;p&gt;下云数据库自建，如何实战！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;太长不看&#34;&gt;太长；不看&lt;/h2&gt;
&lt;p&gt;从商业软件到开源软件再到云软件，软件行业的范式出现了嬗变，数据库自然也不例外：云厂商拿着开源数据库内核，干翻了传统企业级数据库公司。&lt;/p&gt;
&lt;p&gt;云数据库是一门非常有利可图的生意：可以将成本不到 20¥/核·月的硬件算力卖出十倍到几十倍的溢价，轻松实现 50% - 70% 甚至更高的毛利率。&lt;/p&gt;
&lt;p&gt;然而，随着硬件遵循摩尔定律发展，云管控软件出现开源平替，这个生意面临着严峻的挑战：云数据库服务丧失了性价比，而下云自建开始成为趋势。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;云数据库是天价预制菜，如何理解？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你在家用微波炉加热黄焖鸡米饭料理包花费10元，餐馆老板替你用微波炉加热装碗上桌收费30元，你不会计较什么，房租水电人工服务也都是要钱的。
但如果现在老板端出同样一碗饭跟你收费 1000 元并说：我们提供的不是黄焖鸡米饭，&lt;strong&gt;而是可靠质保的弹性餐饮服务&lt;/strong&gt;，反正十年前就这个价，
你会不会有削一顿这个老板的冲动？ 这样的事情就发生在云数据库，以及其他各种云服务上。&lt;/p&gt;
&lt;p&gt;对于规模以上的大型算力与大型存储来说，云服务的价格只能用离谱来形容：云数据库的溢价倍率可以达到十几倍到几十倍。
而作为一门生意，云数据库的毛利率可以轻松达到 50% - 70%，与苦哈哈卖资源的 IaaS (10% - 15%) 形成鲜明对比。
不幸地是，云服务并没有提供与高昂价格相对应的优质服务：云数据库服务的质量，安全，性能表现也并不尽人意。&lt;/p&gt;
&lt;p&gt;更严峻的问题在于：随着硬件遵循摩尔定律发展，以及云管控软件出现开源平替，云数据库的模式正面临着严峻的挑战：
云数据库服务丧失了性价比，而下云自建开始成为趋势。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;云数据库是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;云数据库，就是云上的数据库服务，这是一种软件交付的新兴范式：用户不是“拥有软件“，而是“租赁服务”。&lt;/p&gt;
&lt;p&gt;与云数据库概念对应的是传统商业数据库（如 Oracle，DB2，SQL Server）与开源数据库（如 PostgreSQL，MySQL）。
这两种交付范式的共同特点是，软件是一种“产品”（数据库内核），用户“拥有”软件的副本，买回来/免费下载下来运行在自己的硬件上；&lt;/p&gt;
&lt;p&gt;而云数据库服务（AWS/阿里云/…… RDS）通常会将软硬件资源打成包，把跑在云服务器上的开源数据库内核包装成“服务”：
用户通过云平台提供的数据库 URL 访问并使用数据库服务，并通过云厂商自研的管控软件（平台/PaaS）管理数据库。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;数据库软件交付有哪几种范式？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最初，软件吞噬世界&lt;/strong&gt;，以 Oracle 为代表的商业数据库，用软件取代了人工簿记，用于数据分析与事务处理，极大地提高了效率。不过 Oracle 这样的商业数据库非常昂贵，一核·一月光是软件授权费用就能破万，不是大型机构都不一定用得起，即使像壕如淘宝，上了量后也不得不”去O“。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接着，开源吞噬软件&lt;/strong&gt;，像 PostgreSQL 和 MySQL 这样”&lt;strong&gt;开源&lt;/strong&gt;免费“的数据库应运而生。软件开源本身是免费的，每核每月只需要几十块钱的硬件成本。大多数场景下，如果能找到一两个数据库专家帮企业用好开源数据库，那可是要比傻乎乎地给 Oracle 送钱要实惠太多了。&lt;/p&gt;
&lt;p&gt;开源软件带来了巨大的行业变革，可以说，&lt;strong&gt;互联网的历史就是开源软件的历史&lt;/strong&gt;。尽管如此，开源软件免费，但 &lt;strong&gt;专家稀缺昂贵&lt;/strong&gt;。能帮助企业 &lt;strong&gt;用好/管好&lt;/strong&gt; 开源数据库的专家非常稀缺，甚至有价无市。某种意义上来说，这就是”开源“这种模式的商业逻辑：&lt;strong&gt;免费的开源软件吸引用户，用户需求产生开源专家岗位，开源专家产出更好的开源软件&lt;/strong&gt;。但是，专家的稀缺也阻碍了开源数据库的进一步普及。于是，“云软件”出现了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;然后，云吞噬开源&lt;/strong&gt;。公有云软件，是互联网大厂将专家使用开源软件的能力产品化对外输出的结果。公有云厂商把开源数据库内核套上壳，包上管控软件跑在托管硬件上，并雇佣共享 DBA 专家提供支持，便成了&lt;strong&gt;云数据库服务&lt;/strong&gt; （RDS） 。&lt;strong&gt;云诚然是有价值的服务，也为很多软件变现提供了新的途径。但云厂商的搭便车行径，无疑对开源软件社区是一种剥削与攫取&lt;/strong&gt;，而云计算罗宾汉们，也开始集结并组织反击。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;经典商业数据库 Oracle，DB2， SQL Server 都卖得很贵，云数据库为什么不能卖高价？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;商业软件时代，可以称为软件 1.0 时代，数据库中以 Oracle，SQL Server，IBM 为代表，价格其实非常高昂。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：你觉得卖的贵，我要 Argue 一下，这不是正常的商业逻辑吗？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;卖的贵不是大问题 —— 有只要最好的东西，根本不看价格的客户。然而问题在于云数据库不够好，第一：内核是开源 PG / MySQL，实际上自己做的就是个管控。而且在其营销却宣传中，好像是包治百病的万灵药，存算分离，Serverless，HTAP，云原生，超融合…，RDS 是先进的汽车，而老的数据库是马车……，blah&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：如果不是马车和汽车，那应该是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;区别最多算油车和电车，阐述数据库行业与汽车行业的类比。数据库：汽车；DBA：司机；商业数据库：品牌汽车；开源数据库：组装车；云数据库：出租车+出租司机，嘀嘀打车；这种模式是有其适用光谱的。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：云数据库的适用光谱？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;起步阶段，流量极小的简单应用 / 2 毫无规律可循，大起大落的负载 / 3 全球化出海合规场景 ，租售比。小微企业别折腾，上云（但上什么云值得商榷），大企业毫无疑问，下云。更务实的做法是买基线，租尖峰，混合云 —— 主体下云，弹性上云。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：这么看来，云计算其实是有它的价值与生态位的。&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;《科技封建主义》，垄断巨头对生态造成的伤害。 / 2. 云营销，吹牛是要上税的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;抛开宏大叙事不谈，但云数据库的费用可不便宜。…… （弹性/百公里加速），引出成本问题。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;为什么有此一说？为什么会觉得贵？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;让我们用几个具体的例子来说明。&lt;/p&gt;
&lt;p&gt;例如在探探时，我们曾经评估过上云后的成本。我们用的服务器整体 TCO 在&lt;/p&gt;
&lt;p&gt;，一台是……5年7.5万，每年TCO 1.5w。两台组个高可用，就是每年3万块钱，阿里云华东1默认可用区，独享的64核256GB实例：pg.x4m.8xlarge.2c，并加装一块3.2TB的ESSD PL3云盘。每年的费用在25万（3年）到75万（按需）不等。 AWS 总体在每年160 ～ 217万元不等。&lt;/p&gt;
&lt;p&gt;不只是我们，Ruby on Rails 的作者 DHH 在 2023 年分享了他们 37 Signal 公司从云上下来的完整历程。&lt;/p&gt;
&lt;p&gt;介绍 &lt;a href=&#34;https://pigsty.io/zh/blog/cloud/odyssey/&#34;&gt;DHH 下云的例子&lt;/a&gt;，每年 300w 美元年消费。一次性投入&lt;strong&gt;60万美元&lt;/strong&gt;买了服务器自己托管后，年支出降到了 100 万美元，原来的1/3 。五年能省下 700 万美金。下云花了半年时间，也没有使用更多的人手来运营。&lt;/p&gt;
&lt;p&gt;特别是考虑到开源替代的出现
——&lt;/p&gt;
&lt;p&gt;德不配位，必有灾殃，&lt;/p&gt;
&lt;p&gt;字面意思：用云数据库，实际上是用五星级酒店米其林餐厅的价格，吃大食堂大锅饭预制菜料理包。&lt;/p&gt;
&lt;p&gt;例如在 AWS 上，如果你想购买一套高规格的 PostgreSQL 云数据库实例，通常需要你要掏出对应云服务器十倍以上的价钱，考虑到云服务器本身有 5 倍左右的溢价，云服务相比规模自建&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;rds带来的数据库范式转变&#34;&gt;RDS带来的数据库范式转变&lt;/h2&gt;
&lt;p&gt;上期云计算泥石流，我们聊到了老罗在交个朋友淘宝直播间“卖云”：先卖着扫地机器人，然后姗姗来迟的老罗照本宣科念台词卖了四十分钟”云“，随即画风一转，马不停蹄地卖起了 &lt;strong&gt;高露洁无水酵素牙膏&lt;/strong&gt;。这很明显是一场失败的直播尝试：超过千家企业在直播间下单了云服务器，100 ～ 200 块的云服务器客单价加上每家限购一台，也就是撑死了二十万的营收，说不定还没有罗老师出场费高。&lt;/p&gt;
&lt;p&gt;我写了一篇文章《&lt;a href=&#34;https://mp.weixin.qq.com/s/s_MCdaCByDBuocXkY1tvKw&#34;&gt;罗永浩救不了牙膏云&lt;/a&gt;》揶揄直播卖虚拟机的阿里云是个牙膏云，然后我的朋友瑞典马工马上写了一篇《&lt;a href=&#34;https://mp.weixin.qq.com/s/ffrwbLiGxTLO1jVh8mHiBA&#34;&gt;牙膏云？您可别吹捧云厂商了&lt;/a&gt;》驳斥说：“任何一家本土云厂商都不配牙膏云这个称号。从利润率，到社会价值，到品牌管理，质量管理和市场教育，公有云厂商们都被牙膏厂全方面吊打”。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;云数据库是什么，是一种软件范式转移吗？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最初，软件吞噬世界&lt;/strong&gt;，以 Oracle 为代表的商业数据库，用软件取代了人工簿记，用于数据分析与事务处理，极大地提高了效率。不过 Oracle 这样的商业数据库非常昂贵，一核·一月光是软件授权费用就能破万，不是大型机构都不一定用得起，即使像壕如淘宝，上了量后也不得不”去O“。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接着，开源吞噬软件&lt;/strong&gt;，像 PostgreSQL 和 MySQL 这样”&lt;strong&gt;开源&lt;/strong&gt;免费“的数据库应运而生。软件开源本身是免费的，每核每月只需要几十块钱的硬件成本。大多数场景下，如果能找到一两个数据库专家帮企业用好开源数据库，那可是要比傻乎乎地给 Oracle 送钱要实惠太多了。&lt;/p&gt;
&lt;p&gt;开源软件带来了巨大的行业变革，可以说，&lt;strong&gt;互联网的历史就是开源软件的历史&lt;/strong&gt;。尽管如此，开源软件免费，但 &lt;strong&gt;专家稀缺昂贵&lt;/strong&gt;。能帮助企业 &lt;strong&gt;用好/管好&lt;/strong&gt; 开源数据库的专家非常稀缺，甚至有价无市。某种意义上来说，这就是”开源“这种模式的商业逻辑：&lt;strong&gt;免费的开源软件吸引用户，用户需求产生开源专家岗位，开源专家产出更好的开源软件&lt;/strong&gt;。但是，专家的稀缺也阻碍了开源数据库的进一步普及。于是，“云软件”出现了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;然后，云吞噬开源&lt;/strong&gt;。公有云软件，是互联网大厂将自己使用开源软件的能力产品化对外输出的结果。公有云厂商把开源数据库内核套上壳，包上管控软件跑在托管硬件上，并雇佣共享 DBA 专家提供支持，便成了&lt;strong&gt;云数据库服务&lt;/strong&gt; （RDS） 。&lt;strong&gt;这诚然是有价值的服务，也为很多软件变现提供了新的途径。但云厂商的搭便车行径，无疑对开源软件社区是一种剥削与攫取&lt;/strong&gt;，而捍卫计算自由的开源组织与开发者自然也会展开反击。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;云数据库是不是天价大锅饭&#34;&gt;云数据库是不是天价大锅饭&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;问：我们先来聊聊第一个问题，成本，成本不是云数据库所宣称的一项优势吗？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;看和谁比，和传统商业数据库 Oracle 比可以，和开源数据库比就不行了 —— 特别是小规模可以（DBA），有点规模就不行了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：云是不是可以省下DBA/数据库专家的成本？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是的，好DBA稀缺难找。但用云数据库不代表你就不需要DBA了，你只是省去了系统建设的工作与日常运维性的工作，还有省不掉的部分。第二，我们可以具体算一笔账，在什么规模下，雇佣一个 DBA 相比云数据库是合算的。（聊一聊几种价格的模型）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：RDS 和DBA 是什么关系？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RDS 和 DBA 提供的核心价值不是数据库产品，而是用好开源数据库内核的能力。…… 只不过一个主要靠DBA老司机，一个主要靠管控软件。一个是雇佣，一个是租赁。我觉得生态里还缺一种模式 —— 拥有管控软件，所以我做的东西就是开源的数据库管控软件。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：所以云数据库成本上不占优势？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;极小规模有优势，标准尺寸或者大规模数据库没有任何成本优势。&lt;/p&gt;
&lt;p&gt;比较成本你要看怎么比。云数据库的计费项：计算+存储，当然还有流量费，数据库代理费，监控费用，备份费用。&lt;/p&gt;
&lt;p&gt;大头是计算与存储，计算的单位是……，存储的单位是……（一些关键数字）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：实例部分的钱怎么算？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;阿里 RDS: 7x-11x，PolarDB: 6x~10x，AWS: 14x ~ 22x&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;双实例高可用版价格&lt;/th&gt;
&lt;th&gt;4x 核月单价&lt;/th&gt;
&lt;th&gt;8x 核月单价&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;高可用RDS系列核月均价&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;¥339&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;¥432&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS RDS 高可用参考价&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;¥1,160&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;¥1,582&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;阿里云 PolarDB 参考价&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;¥250&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;¥400&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DHH探探自建1C算力（不含存储）&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;¥40&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;云服务器，云上按量，包月，包年，预付五年的单价分别为 &lt;strong&gt;187¥，125¥，81¥，37¥&lt;/strong&gt;，相比自建的 &lt;strong&gt;20¥&lt;/strong&gt; 分别溢价了 &lt;strong&gt;8x, 5x, 3x, 1x&lt;/strong&gt;。在配置常用比例的块存储后（1核:64GB, ESSD PL3），单价分别为：&lt;strong&gt;571¥，381¥，298¥，165¥&lt;/strong&gt;，相比自建的 &lt;strong&gt;22.4¥&lt;/strong&gt; 溢价了 &lt;strong&gt;24x, 16x, 12x, 6x&lt;/strong&gt; 。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：存储部分的钱怎么算？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先来看零售单价，GB·月单价 ，两分钱，阿里云 ESSD 上分了几个不同的档次，从 1- 4块钱。&lt;/p&gt;
&lt;p&gt;1TB 存储·月价格（满折扣）：自己买 16 ，AWS 1900，阿里云 3200&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：上面聊了很多成本的问题，但你怎么能盯着成本呢？成本到底有多重要？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在你技术与产品有领先优势的情况下，成本没那么重要。但当技术与产品拉不开差距的时候，即 —— 你卖的是没有不可替代性的大路货标准品，成本就非常重要了。在十年前，云数据库也许是属于产品/技术主导的状态，可以心安理得的吃高毛利。但是在十年后的今天。云不是高科技了，云已经烂大街了。市场已经从价值定价转向了成本定价，成本至关重要。&lt;/p&gt;
&lt;p&gt;阿里的主营业务电商，被“廉价”的拼多多打的稀里哗啦，拼多多靠的是什么？就是一个朴实无华的便宜。你淘宝天猫能卖的，我能卖一样还更便宜，这就是核心竞争力。你又不是爱马仕，劳力士，买个包买个表都要配几倍货才卖给你的奢侈品逻辑，在老罗直播间里夹在牙膏和吸尘器中间的大路货云服务器能拼什么，还不是一个便宜？&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：那么什么时候成本不重要呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二个点是经济上行繁荣期，创业公司拼速度的发展期，扣成本可能为时过早。但现在很明显，是经济下行萧条期……。再比如说，如果你的东西足够好，那么用户也可以不在意成本。就好比你去五星级酒店，米其林餐厅吃饭，不会在意他们用的食材是多少成本；对吧，OpenAI ChatGPT 别无分号，仅此一家，爱买不买。但是，去菜市场买菜，那是是会看成本的。云数据库，云服务器，云盘，都是“食材”，而不是菜品，是要核算成本，比价的。（黄焖鸡米饭的故事）&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;质量安全效率成本剖析核算&#34;&gt;质量安全效率成本剖析核算&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;问：性价比里的价格成本聊透了，那我们来聊聊质量、安全、效率&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;云数据库很贵，所以在卖的时候都有一些话术。虽然我们贵，但是我们好呀！&lt;em&gt;&lt;strong&gt;数据库是基础软件里的皇冠明珠，凝聚着无数无形知识产权BlahBlah&lt;/strong&gt;&lt;/em&gt;。因此软件的价格远超硬件非常合理…… 但是，云数据库真的好吗？&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：在功能上，云数据库怎么样？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;只能 OLTP 的 MySQL 咱就不说了，但是 RDS PostgreSQL 还是可以聊一聊的。尽管 PostgreSQL 是世界上最先进的开源关系型数据库，但其独一无二的特点在于其&lt;strong&gt;极致可扩展性，与繁荣的扩展生态&lt;/strong&gt;！不幸地是，&lt;strong&gt;《&lt;a href=&#34;https://mp.weixin.qq.com/s/EH7RPB6ImfMHXhOMU7P5Qg&#34;&gt;云 RDS 阉割掉了 PostgreSQL 的灵魂&lt;/a&gt;&lt;/strong&gt;》 —— 用户无法在 RDS 上自由加装扩展，而一些强力扩展也注定不会出现在 &lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng&amp;mid=2247485745&amp;idx=5&amp;sn=a7d610ea37c3f3fa78ee4ba0ee705962&amp;chksm=fe4b3ceac93cb5fc6f1975f94be04424e7b3690eedd1658951deb8d016f5f19ade8806d86417&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;RDS&lt;/strong&gt;&lt;/a&gt; 中。使用 RDS 无法发挥出 PostgreSQL 真正的实力，而这是一个对云厂商来说&lt;strong&gt;无法解决的缺陷&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：在功能扩展上，云上的 PostgreSQL 数据库有什么缺陷？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Contrib 模块作为 PostgreSQL 本体的一部分，已经包含了 73 个扩展插件，在 PG 自带的 73 个扩展中，阿里云保留了23个阉割了49个；AWS 保留了 49 个，阉割了 24 个。PostgreSQL 官方仓库 PGDG 收录的约 100 个扩展，Pigsty 作为PG发行版自身维护打包了20个强力扩展插件，在 EL/Deb 平台上总共可用的扩展已经达到了 234 个 —— AWS RDS 只提供了 94 个扩展，阿里云 RDS 提供了 104 个扩展。&lt;/p&gt;
&lt;p&gt;在重要的扩展中，情况更严重。AWS与阿里云缺失的扩展有：（时序 TimescaleDB，分布式 Citus，列存 Hydra，全文检索 BM25，OLAP PG Analytics，消息队列 pgq，甚至一些基本的重要组件都没有提供，比如做 CDC 的 WAL2JSON），版本跟进跟进速度也不理想。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：云数据库为什么不能提供这些扩展？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;云厂商的口径是：安全性，稳定性，但这根本说不通。云上的扩展都是从 PostgreSQL 官方仓库 PGDG 下载打好包，测试好的 rpm / deb 包来用的。需要云厂商测试什么东西？但我认为更重要的一个问题是开源协议的问题，AGPLv3 带来的挑战。开源社区面对云厂商白嫖的挑战，已经开始集体转向了，越来越多的开源软件使用更为严格，歧视云厂商的软件许可证。比如 XXX 都用 AGPL 发布，云厂商就不可能提供，否则就要把自己的摇钱树 —— 管控软件开源。&lt;/p&gt;
&lt;p&gt;这个我们后面可以单独开一期来聊这个事情。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：上面提到了安全性的问题，那么云数据库真的安全吗？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、多租户安全挑战（恶意的邻居，Kubecon 案例）；2. 公网的更大攻击面（SSH爆破，SHGA）；&lt;/p&gt;
&lt;p&gt;3、糟糕的工程实践（AK/SK，Replicator密码，HBA修改）； 4 没有保密性、完整性兜底。&lt;/p&gt;
&lt;p&gt;5、缺乏可观测性，因此难以发现安全问题，更难取证，就更别提追索了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：云数据库的可观测性一团稀烂，怎么说？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;信息、数据、情报对于管理来说什么至关重要。但是云上提供的这个监控系统吧，质量只能说一言难进。早在 2017 年的时候我就调研过世面上所有 PostgreSQL 数据库监控系统 …… 指标数量，图表数量，信息含量。可观测性理念，都一塌糊涂。监控的颗粒度也很低（分钟级），想要5秒级别的？不好意思请加钱。&lt;/p&gt;
&lt;p&gt;AustinDatabase 号主今天刚发了一篇《&lt;a href=&#34;https://mp.weixin.qq.com/s/IMgJBZ9uqU5x738p9mED4w&#34;&gt;上云后给我一个 不裁 DBA的理由&lt;/a&gt;》聊到这个问题：在阿里云上想开 Ticket 找人分析问题，客服会疯狂给你推荐 DAS（数据库自动驾驶服务），请加钱，每月每实例 6K 的天价。&lt;/p&gt;
&lt;p&gt;没有足够好的监控系统，你怎么定责，怎么追索？（比如硬件问题，超卖，IO抢占导致的性能雪崩，主从切换，给客户造成了损失）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：除了安全和可观测性的问题，相当一部分用户更在意的是质量可靠性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;云数据库并不提供对可靠性兜底，没有SLA 条款兜底这个。&lt;/p&gt;
&lt;p&gt;只有可用性的 SLA ，还是很逊色的 SLA，赔付比例跟玩一样。 营销混淆：将 SLA 混淆为真实可靠性战绩。&lt;/p&gt;
&lt;p&gt;乞丐版的标准版数据库甚至连 WAL 归档与 PITR 都没有，就单纯给你回滚到特定备份，用户也没有能力自助解决问题。&lt;/p&gt;
&lt;p&gt;著名的双十一大故障，草台班子理论，降本增笑。中亭团伙……可观测性团队的草台班子，都是刚毕业的在维护。&lt;/p&gt;
&lt;p&gt;业务连续性上的战绩并不理想：RTO，RPO ，嘴上说的都是 =0 =0，实际…… 。腾讯云硬盘故障导致初创公司数据丢失的案例。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：云数据库真的好吗？（性能维度）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们先来聊一聊性能吧。刚才聊了云盘的价格，没说云盘的性能，EBS 块存储的典型性能，IOPS，延迟，本地盘。更重要的是这个高等级的云盘还&lt;a href=&#34;https://pigsty.io/zh/blog/cloud/ecs/#%E4%BA%91%E5%AD%98%E5%82%A8%E5%AF%B9%E5%8D%95%E4%BB%B7%E7%9A%84%E5%BD%B1%E5%93%8D&#34;&gt;不是你想用就给你用的&lt;/a&gt;。如果你买的量低于1.2TB，他们是不卖给你 ESSD PL3 的。而次一档的 ESSD PL2 的 IOPS 吞吐量就只有 ESSD PL3 的 1/10 。&lt;/p&gt;
&lt;p&gt;第二个问题是资源利用率。RDS 管控 2GB 的管控……，什么都不干内存吃一半。Java管控，日志Agent。&lt;/p&gt;
&lt;p&gt;高可用版的云数据库，有个备库，但是不给你读。吃你一倍的资源对不对，你想要只读实例要额外单独申请。&lt;/p&gt;
&lt;p&gt;最后，资源利用率提高的是云厂商白赚，好处让云厂商赚走了，代价让用户承担了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：其他的点呢？比如可维护性？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每个操作要发验证码短信，100套 PostgreSQL 集群怎么办？ClickOps小农经济，企业用户和开发者真正的正道是 IaC，但是在这一点上比较拉垮。K8S Pigsty 都做的很好，原生内置了 IaC。RPA 机器人流程自动化。糟糕的API 设计，举个例子，几种不同风格的&lt;a href=&#34;https://help.aliyun.com/zh/rds/developer-reference/api-rds-2014-08-15-errorcodes?spm=a2c4g.11186623.0.0.604b1fbaxZLPDN&#34;&gt;错误代码&lt;/a&gt;，&lt;a href=&#34;https://help.aliyun.com/zh/rds/developer-reference/instance-state-table?spm=a2c4g.11186623.0.0.437f5df9BftH2v&#34;&gt;实例状态表&lt;/a&gt;，（驼峰法，蛇形法，全大写，两段式）体现出了低劣的软件工程质量水平。&lt;/p&gt;
&lt;p&gt;业务连续性，RTO RPO，比如做 PITR 是通过创建一个新的按量付费的实例来实现的。那原来的实例怎么办？怎么回滚？怎么保障恢复的时长？这种合格DBA都应该知道的东西，云RDS 为什么不知道？&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;云数据库有没有啥出彩之处&#34;&gt;云数据库有没有啥出彩之处？&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;问：云数据库就没有一些做的出色的地方吗？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有，弹性，公有云的弹性就是针对其商业模式设计的：启动成本极低，维持成本极高。低启动成本吸引用户上云，而且良好的弹性可以随时适配业务增长，可是业务稳定后形成供应商锁定，尾大不掉，极高的维持成本就会让用户痛不欲生了。这种模式有一个俗称 —— &lt;strong&gt;杀猪盘&lt;/strong&gt;。这个模式发展到极致就是 Serverless。 云厂商的假 Serverless。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：还有一个与弹性经常一起说的，叫敏捷？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;敏捷，以前算是云数据库的独门优势，但现在也没有了。第一，真正的 Serverless ，Neon，Supabase，Vercel 免费套餐，赛博菩萨。第二，Pigsty 管控，上线一套新数据库也是5分钟。云厂商的极致弹性，秒级扩容其实骗人的，几百秒也是秒……&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：聊聊 Serverless，这会是未来吗？为什么说这是榨钱术？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;云厂商的 RDS Serverles，本质上是一种弹性计费模式，而不是什么技术创新。真正技术创新的  Serverless RDS，可以参考 Neon：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Scale to Zero，&lt;/li&gt;
&lt;li&gt;无需事先配置，直接连上去自动创建实例并使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;RDS Serverless 是一种营销宣传骗术。只是计费模式的区别，是一个恶劣的笑话。按照云厂商的营销策略，我拿个共享的 PG 集群，来一个租户就新建一个 Database 给他，不做资源隔离随便用，然后按实际的 Query 数量或者 Query Time 收费，这也可以叫 Serverless。&lt;/p&gt;
&lt;p&gt;然后按照这个定义，云厂商的各种产品一下子就全部都变成 Serverless 了。然后 Serverless 这个词的实质意思就被篡夺了，变成平庸无聊的计费技术。真正做的好的 Serverless ，应该去看看赛博菩萨 Cloudflare。&lt;/p&gt;
&lt;p&gt;这里我还提一点，Serverless 说是要解决极致弹性的问题，但弹性本身其实没有多重要&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：为什么弹性不重要，传统企业如何应对弹性问题？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;弹性峰值能到平时的几十上百倍，我觉得弹性有价值。否则以现在物理资源的价格，直接超配十倍也没多少钱……云厂商的弹性溢价差不多就是十几倍。大甲方的思路很清晰，有这个钱租赁，我干嘛不超配10倍。小用户用 serverless 可以理解。弹性转折点，40 QPS 。唯一场景就是那些 MicroSaaS。但那些 MicroSaas 可以直接用免费套餐的 Vercel，Neon，Supabase，Cloudflare……&lt;/p&gt;
&lt;p&gt;传统企业如何解决？我们有 15 % 的 机器 Buffer 池，如果不够用，把低利用率的从库摘几台就够了，机器到位，PG 5分钟上线。服务器到上架IDC大概两周左右，现在 IDC 上架已经到 半天 / 一天了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：所以云数据库整体来看，到底怎么样？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;刚才，我们已经从质量、效率、安全、成本剖析了云数据库的方方面面。基本上除了弹性，表现都很一般，而唯一能称得上出彩的弹性，其实也没他们说的那么重要。我对云数据库的总体评价就是 —— 预制菜，能不能吃？能吃，也吃不死人，但你也不要指望这种大锅饭能好吃到哪里去。&lt;/p&gt;
&lt;p&gt;草台班子，也没有什么品牌形象。例如 IBM DeveloperWorks。 《&lt;a href=&#34;https://mp.weixin.qq.com/s/Fc5oALMo1OJGIRK_Tf5VVA&#34;&gt;破防了，谁懂啊家人们：记一次mysql问题排查&lt;/a&gt;》&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;下云数据库自建如何实战&#34;&gt;下云数据库自建，如何实战！&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;问：什么时候应该用云数据库，什么时候不应该。或者说，什么规模应该上云，什么规模应该下云？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;光谱的两端，DBaaS 替代，开源自建。经典阈值，团队水平。&lt;/p&gt;
&lt;p&gt;平均水准的技术团队：100 ～ 300 万年消费，云上 KA。没有任何懂的人，服务器厂商给出的估算规模是1000万。&lt;/p&gt;
&lt;p&gt;优秀的技术团队：一台物理机 ～ 一个机柜的量，下云，年消费几万到几十万。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：小企业用数据库有什么其他选择？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Neon，Supabase，Vercel，或者在赛博佛祖 Cloudflare 上直接托管。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：你给云数据库旷旷一顿批判，那是你站在头部甲方，顶级DBA的视角去看的。一般企业没有这个条件，怎么办？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;做好三件事：管控软件的开源替代怎么解决，硬件资源的置备供给怎么解决，人怎么解决？&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：开源管控软件，怎么说？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;举个例子，管理服务器的开源管控软件， KVM / Proxmox / OpenStack，新一代的就是 Kubernetes。对象存储的开源平替 MinIO，或者物美价廉的 Cloudflare R2&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：硬件资源如何置备管理？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;IDC：Deft，Equinix，世纪互联。IDC 也可以按月付费，人家很清楚，一点儿都不贪心，30% 的毛利明明白白。&lt;/p&gt;
&lt;p&gt;服务器 + 30% 毛利，按月付费，机柜成本：4000 ～ 6000 ¥/月（42U  10A/20A），可放十几台服务器。网络带宽：独享带宽（通用） 100 块 / MB·月 ；专用带宽可达  20 ¥ / MB·月&lt;/p&gt;
&lt;p&gt;你也可以考虑长租公有云厂商的云服务器，租五年的话，比 IDC 贵一倍。请选择那些带有本地 NVMe 存储的实例自建，不要使用EBS云盘。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：还有个问题，在线的问题如何解决？云上的网络/可用区不是一般 IDC 可以解决的吧？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cloudflare 解决问题。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：人怎么解决，DBA ？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当下的经济形势与就业率背景，用合理的价格想要找到能用的人并不难。初级的运维与DBA遍地都是，高级的专家找咨询公司，比如我就提供这样的服务。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：专业的人做专业的事情，从云上集中管理到云下自建，是不是一种开倒车的行为？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;云厂商是不是最专业的人在做这件事，我相当怀疑。1. 云厂商摊子铺得太大，每个具体领域投入的人并不多；2. 云厂商的精英员工流失严重，自己出来创业的很不少。3. 自建绝不是开是历史倒车，而是历史前进的一个过程。历史发展本来就是钟摆式往复，螺旋式发展上升的一个过程。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：云数据库的问题解决了，但是想要从云上下来，需要解决的问题不止数据库，其他的东西怎么办？对象存储，虚拟化，容器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;留待下一期来讨论！&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: PostgreSQL 17 发布：摊牌了，我不装了！</title>
      <link>/zh/blog/pg/pg-17/</link>
      <pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/pg-17/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/pg-17/featured_hu02aa61ae1d9de35cbe238d2676170cb9_645728_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;p&gt;一年一度的 PostgreSQL 大版本发布来了！这次的 PostgreSQL 17 ，又给我们带来了什么惊喜呢？&lt;/p&gt;
&lt;p&gt;在这次大版本发布注记中， PostgreSQL 全球社区直接摊牌了 —— &lt;strong&gt;不好意思，我不装了&lt;/strong&gt; —— “&lt;strong&gt;现在PG就是世界上最先进的开源数据库，已经是各种规模组织的首选开源数据库了&lt;/strong&gt;”。虽然没有指名道姓，但官方已经无限接近喊出“干翻顶级商业数据库”（Oracle）的口号了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-17-released-2936/&#34;&gt;&lt;img alt=&#34;news.webp&#34; src=&#34;/zh/blog/pg/pg-17/news.webp&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在年初发表的 《&lt;a href=&#34;/zh/blog/pg/pg-eat-db-world&#34;&gt;PostgreSQL 正在吞噬数据库世界&lt;/a&gt;》中，我提出 &lt;strong&gt;可扩展性&lt;/strong&gt; 是 PostgreSQL 独一无二的核心优势。
很高兴地看到这一点在短短半年中，就成为了 PostgreSQL 社区的关注焦点与共识，并在 &lt;a href=&#34;/zh/blog/pg/pgcondev-2024/&#34;&gt;PGCon.Dev 2024&lt;/a&gt; 与本次 PostgreSQL 17 发布中得到充分的体现。&lt;/p&gt;
&lt;p&gt;关于新特性，我先前在 《&lt;a href=&#34;/zh/blog/pg/pg-17-beta1&#34;&gt;PostgreSQL 17 Beta1 发布！牙膏管挤爆了！&lt;/a&gt;》中已经有过介绍，在此就不再赘述了。
这个大版本有很多新特性，当然要说最让我印象深刻的是， PG竟然能在&lt;a href=&#34;/zh/blog/pg/pg-performence&#34;&gt;原本就已经非常强悍的性能&lt;/a&gt; 基础上让写入吞吐再次翻倍 —— &lt;strong&gt;朴实无华的强悍&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;但比起具体的功能特性，我认为 PG 社区最大的转变发生在&lt;strong&gt;心态与精神&lt;/strong&gt;上 —— 在这次发布通告中，PostgreSQL 去掉了原本 Slogan “世界上最先进的开源关系型数据库” 中的 “关系型” 三个字定语，直接变成了 “世界上最先进的开源数据库”。
并且在最后 “关于PostgreSQL” 的部分说到：“PG 的功能集，高级特性，可扩展性，安全性，稳定性已经比肩甚至超越了顶级商业数据库”。所以我想 “开源” 这个定语用不了多久也许就可以一同去掉，变成 “&lt;strong&gt;世界上最先进的数据库&lt;/strong&gt;” 了。&lt;/p&gt;
&lt;p&gt;PostgreSQL 这头巨兽已经觉醒了 —— 它不再是过去那种佛系与世无争的样子，精神面貌焕然一新，转换为一种积极进取的姿态 —— 它已经做好了接管与征服整个数据库世界的心理建设与动员准备。
而无数资本也已经涌入 PostgreSQL 生态，&lt;a href=&#34;https://mp.weixin.qq.com/s/fi_p3tTZTnwP5XDJrkVbQw&#34;&gt;PG 系的 Startup 几乎拿走了数据库领域融资的全部 New Money&lt;/a&gt;。PostgreSQL 势必成为数据库领域一统天下的 “Linux 内核，DBMS 的纷争也许在未来会内化为 PostgreSQL 发行版内战，就让我们拭目以待吧。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;eco.png&#34; src=&#34;/zh/blog/pg/pg-17/eco.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;原文postgresql-17-发布注记&#34;&gt;原文：PostgreSQL 17 发布注记&lt;/h2&gt;
&lt;p&gt;PostgreSQL &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;全球开发组&lt;/a&gt; 今天正式（2024-09-26）宣布了 &lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;PostgreSQL 17&lt;/a&gt; 的正式发布，这是世界上最先进的开源数据库的最新版本。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;备注：是的，“关系型”定语已经去掉了，就是世界上最先进的开源数据库&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PostgreSQL 17 建立在数十年的开源开发模式基础上，在不断提升性能与可伸缩性的同时，也在不断适应数据访问与存储的新兴模式。
本次 &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;&lt;code&gt;PostgreSQL&lt;/code&gt;&lt;/a&gt; 发布带来了显著的整体性能提升，例如，VACUUM 内存管理的彻底改进、存储访问优化、高并发工作负载改进、批量加载与导出加速、以及索引查询执行的改进等。
PostgreSQL 17具备能够同时惠及新型工作负载和关键核心系统的特性，例如：新增的 SQL/JSON 的 &lt;code&gt;JSON_TABLE&lt;/code&gt; 命令改善了开发者体验；而对逻辑复制的改进，则简化了高可用架构与大版本升级的管理负担。&lt;/p&gt;
&lt;p&gt;PostgreSQL 核心团队成员 Jonathan Katz 表示：“PostgreSQL 17 展现了全球开源社区如何协同构建，改善功能，帮助位于数据库旅途中不同阶段的用户”。“无论是针对大规模数据库运维的改进，还是基于卓越开发者体验的新特性，PostgreSQL 17 都将为您带来更好的数据管理体验。”&lt;/p&gt;
&lt;p&gt;PostgreSQL 是一款以可靠性、稳健性和可扩展性著称的创新型数据管理系统，受益于全球开发者社区超过 25 年的开源开发，&lt;strong&gt;已成为各类组织的首选开源关系型数据库&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;系统性能的全面提升&#34;&gt;系统性能的全面提升&lt;/h2&gt;
&lt;p&gt;PostgreSQL 的 &lt;a href=&#34;https://www.postgresql.org/docs/17/routine-vacuuming.html&#34;&gt;&lt;code&gt;vacuum&lt;/code&gt;&lt;/a&gt; 进程对于系统健康运行至关重要，然而 vacuum 操作是需要消耗服务器实例资源的。PostgreSQL 17 引入了一种新的 vacuum 内部内存结构，内存消耗量降至原本的 1/20。这不仅提高了 vacuum 的速度，还减少了对共享资源的占用，为用户的工作负载释放出更多可用资源。&lt;/p&gt;
&lt;p&gt;PostgreSQL 17 也继续在 I/O 层面上不断优化性能。由于对预写日志（&lt;a href=&#34;https://www.postgresql.org/docs/17/wal-intro.html&#34;&gt;&lt;code&gt;WAL&lt;/code&gt;&lt;/a&gt;）处理的改进，高并发工作负载的&lt;strong&gt;写入吞吐量可能有高达两倍的提升&lt;/strong&gt;。此外，新的流式 I/O 接口加快了顺序扫描（读取表中所有数据）以及 &lt;a href=&#34;https://www.postgresql.org/docs/17/sql-analyze.html&#34;&gt;&lt;code&gt;ANALYZE&lt;/code&gt;&lt;/a&gt; 更新 Planner 所需统计信息的速度。&lt;/p&gt;
&lt;p&gt;PostgreSQL 17 也在查询执行方面改善了性能。对于使用 &lt;a href=&#34;https://www.postgresql.org/docs/17/indexes-types.html#INDEXES-TYPES-BTREE&#34;&gt;B-tree&lt;/a&gt; 索引（PostgreSQL 默认的索引方法）的 &lt;code&gt;IN&lt;/code&gt; 子句查询，性能有所提高。此外，&lt;a href=&#34;https://www.postgresql.org/docs/17/brin.html&#34;&gt;BRIN&lt;/a&gt; 索引现在支持并行构建。
PostgreSQL 17 在查询规划方面进行了多项改进，包括对 &lt;code&gt;NOT NULL&lt;/code&gt; 约束的优化，以及对 CTE（&lt;a href=&#34;https://www.postgresql.org/docs/17/queries-with.html&#34;&gt;&lt;code&gt;WITH&lt;/code&gt;&lt;/a&gt; 查询）处理的改进。本次发布中，使用 SIMD（单指令多数据）加速计算得到了更广泛地应用，例如在 &lt;a href=&#34;https://www.postgresql.org/docs/17/functions-bitstring.html&#34;&gt;&lt;code&gt;bit_count&lt;/code&gt;&lt;/a&gt; 函数中使用 &lt;code&gt;AVX-512&lt;/code&gt; 指令。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;进一步丰富的开发者体验&#34;&gt;进一步丰富的开发者体验&lt;/h2&gt;
&lt;p&gt;PostgreSQL 是 &lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-92-released-1415/&#34;&gt;第一个添加 JSON 支持的关系型数据库&lt;/a&gt;（2012年），而 PostgreSQL 17 进一步完善了对 SQL/JSON 标准的实现。&lt;a href=&#34;https://www.postgresql.org/docs/17/functions-json.html#FUNCTIONS-SQLJSON-TABLE&#34;&gt;&lt;code&gt;JSON_TABLE&lt;/code&gt;&lt;/a&gt; 特性现已在 PostgreSQL 17 中可用 —— 它允许开发者将 JSON 数据转换为标准的 PostgreSQL 表。
PostgreSQL 17 现在支持 SQL/JSON 标准的 &lt;a href=&#34;https://www.postgresql.org/docs/17/functions-json.html#FUNCTIONS-JSON-CREATION-TABLE&#34;&gt;构造函数&lt;/a&gt;（&lt;code&gt;JSON&lt;/code&gt;、&lt;code&gt;JSON_SCALAR&lt;/code&gt;、&lt;code&gt;JSON_SERIALIZE&lt;/code&gt;）和 &lt;a href=&#34;https://www.postgresql.org/docs/17/functions-json.html#SQLJSON-QUERY-FUNCTIONS&#34;&gt;查询函数&lt;/a&gt;（&lt;code&gt;JSON_EXISTS&lt;/code&gt;、&lt;code&gt;JSON_QUERY&lt;/code&gt;、&lt;code&gt;JSON_VALUE&lt;/code&gt;），为开发者提供了更多种类的与 JSON 数据交互的方式。
本次发布添加了更多种类的 &lt;a href=&#34;https://www.postgresql.org/docs/17/functions-json.html#FUNCTIONS-SQLJSON-PATH-OPERATORS&#34;&gt;&lt;code&gt;jsonpath&lt;/code&gt; 表达式&lt;/a&gt;，重点是将 JSON 数据转换为原生的 PostgreSQL 数据类型，包括数值、布尔值、字符串和日期/时间类型。&lt;/p&gt;
&lt;p&gt;PostgreSQL 17 为 &lt;a href=&#34;https://www.postgresql.org/docs/17/sql-merge.html&#34;&gt;&lt;code&gt;MERGE&lt;/code&gt;&lt;/a&gt; （带条件版本的 UPDATE）添加了更多功能，包括 &lt;code&gt;RETURNING&lt;/code&gt; 子句，和更新 &lt;a href=&#34;https://www.postgresql.org/docs/17/sql-createview.html&#34;&gt;视图&lt;/a&gt; 的能力。
此外，PostgreSQL 17 中批量加载与导出数据的能力得到加强，例如，在使用 &lt;a href=&#34;https://www.postgresql.org/docs/17/sql-copy.html&#34;&gt;&lt;code&gt;COPY&lt;/code&gt;&lt;/a&gt; 命令导出大量数据时，性能提升高达两倍。当源端和目标编码匹配时，&lt;code&gt;COPY&lt;/code&gt; 性能也有所提升，而且 &lt;code&gt;COPY&lt;/code&gt; 命令包含一个新选项 &lt;code&gt;ON_ERROR&lt;/code&gt;，允许在插入错误时继续导入。&lt;/p&gt;
&lt;p&gt;此次发布还扩展了对分区数据和分布在远端 PostgreSQL 实例上的数据的管理功能。PostgreSQL 17 支持在&lt;a href=&#34;https://www.postgresql.org/docs/17/ddl-partitioning.html&#34;&gt;分区表&lt;/a&gt;上使用标识列（Identity Columns）和 &lt;code&gt;EXCLUDE&lt;/code&gt; 约束。
用于在远程 PostgreSQL 实例上执行查询的 PostgreSQL 外部数据源包装器（&lt;a href=&#34;https://www.postgresql.org/docs/17/postgres-fdw.html&#34;&gt;&lt;code&gt;postgres_fdw&lt;/code&gt;&lt;/a&gt;）现在可以将 &lt;code&gt;EXISTS&lt;/code&gt; 和 &lt;code&gt;IN&lt;/code&gt; 子查询下推到远程服务器，以实现更高效的处理。&lt;/p&gt;
&lt;p&gt;PostgreSQL 17 还包含一个内置的、平台无关的、不可变的排序规则提供者，以确保排序规则的不可变性，并提供了类似于 &lt;code&gt;C&lt;/code&gt; 排序规则的排序语义，但使用 &lt;code&gt;UTF-8&lt;/code&gt; 编码而非 &lt;code&gt;SQL_ASCII&lt;/code&gt;。使用这个新的排序规则提供者，可以保证您的文本查询无论在哪里的 PostgreSQL 上运行，都能返回相同的排序结果。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;针对高可用与大版本升级的逻辑复制改进&#34;&gt;针对高可用与大版本升级的逻辑复制改进&lt;/h2&gt;
&lt;p&gt;在许多用例中，&lt;a href=&#34;https://www.postgresql.org/docs/17/logical-replication.html&#34;&gt;逻辑复制&lt;/a&gt; 用于实时传输数据。
然而，在 17 版本之前，想要执行大版本升级的用户必须先删除掉逻辑复制槽，并需要在升级后将数据重新同步到订阅者。
从 PostgreSQL 17 开始，用户不需要先删除逻辑复制槽了，因而简化了使用逻辑复制时的大版本升级过程。&lt;/p&gt;
&lt;p&gt;PostgreSQL 17 现在包含了针对逻辑复制的故障切换能力，使其在高可用环境中部署时更为可靠。
此外，PostgreSQL 17 引入了命令行工具 &lt;a href=&#34;https://www.postgresql.org/docs/17/app-pgcreatesubscriber.html&#34;&gt;&lt;code&gt;pg_createsubscriber&lt;/code&gt;&lt;/a&gt;，用于将物理从库转换为一个新的逻辑从库。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;更多面向安全与运维的管理选项&#34;&gt;更多面向安全与运维的管理选项&lt;/h2&gt;
&lt;p&gt;PostgreSQL 17 进一步扩展了用户对数据库系统全生命周期的管理能力。PostgreSQL 提供了一个新的 TLS 选项 &lt;code&gt;sslnegotiation&lt;/code&gt;，允许用户在使用 &lt;a href=&#34;https://en.wikipedia.org/wiki/Application-Layer_Protocol_Negotiation&#34;&gt;ALPN&lt;/a&gt;（在 ALPN 目录中注册为 &lt;code&gt;postgresql&lt;/code&gt;）时执行直接 TLS 握手。
PostgreSQL 17 还添加了 &lt;a href=&#34;https://www.postgresql.org/docs/17/predefined-roles.html&#34;&gt;预置角色&lt;/a&gt; &lt;code&gt;pg_maintain&lt;/code&gt;，赋予普通用户执行维护操作的权限。&lt;/p&gt;
&lt;p&gt;PostgreSQL 自带的备份工具 &lt;a href=&#34;https://www.postgresql.org/docs/17/app-pgbasebackup.html&#34;&gt;&lt;code&gt;pg_basebackup&lt;/code&gt;&lt;/a&gt; 现在支持增量备份，并添加了命令行功能程序 &lt;a href=&#34;https://www.postgresql.org/docs/17/app-pgcombinebackup.html&#34;&gt;&lt;code&gt;pg_combinebackup&lt;/code&gt;&lt;/a&gt; 用于重建全量备份。
此外，&lt;code&gt;pg_dump&lt;/code&gt; 新增了一个名为 &lt;code&gt;--filter&lt;/code&gt; 的选项，允许您在生成转储文件时，选择要包含的对象。&lt;/p&gt;
&lt;p&gt;PostgreSQL 17 还增强了监控和分析功能。&lt;a href=&#34;https://www.postgresql.org/docs/17/sql-explain.html&#34;&gt;&lt;code&gt;EXPLAIN&lt;/code&gt;&lt;/a&gt; 命令现在会显示本地块读写I/O耗时，并包含两个新选项：&lt;code&gt;SERIALIZE&lt;/code&gt; 和 &lt;code&gt;MEMORY&lt;/code&gt;，可以显示用于网络传输的数据转换耗时以及使用的内存量。
PostgreSQL 17 现在还会报告 &lt;a href=&#34;https://www.postgresql.org/docs/17/progress-reporting.html#VACUUM-PROGRESS-REPORTING&#34;&gt;索引 VACUUM 的进度&lt;/a&gt;，
并添加了新的系统视图 &lt;a href=&#34;https://www.postgresql.org/docs/17/view-pg-wait-events.html&#34;&gt;&lt;code&gt;pg_wait_events&lt;/code&gt;&lt;/a&gt;，在与 &lt;code&gt;pg_stat_activity&lt;/code&gt; 视图结合使用时可以更深入地了解活动会话的等待原因。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;其他功能&#34;&gt;其他功能&lt;/h2&gt;
&lt;p&gt;PostgreSQL 17 中还添加了许多其他新功能和改进，可能会对您的用例有所帮助。请参阅 &lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;发行注记&lt;/a&gt; 以查阅新功能和变更的完整列表。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;关于-postgresql&#34;&gt;关于 PostgreSQL&lt;/h2&gt;
&lt;p&gt;PostgreSQL 是全世界最先进的开源数据库，拥有着一个由成千上万的用户、贡献者、公司和组织组成的全球社区。它始于加州大学伯克利分校，有着超过 35 年的工程与开发历史。
PostgreSQL 以无与伦比的开发速度持续发展：&lt;strong&gt;PostgreSQL 提供成熟的功能集不仅比肩能顶级的专有商业数据库系统，在高级数据库功能、可扩展性、安全性和稳定性方面上甚至超越了它们。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;译注：说的就是你呀，Oracle&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;关于-pigsty&#34;&gt;关于 Pigsty&lt;/h2&gt;
&lt;p&gt;顺带一提，紧随 PostgreSQL 17 发布的 Pigsty v3.0.3 已经正式支持使用 PostgreSQL 17 内核，欢迎试用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pigsty.cc/zh&#34;&gt;&lt;strong&gt;Pigsty&lt;/strong&gt;&lt;/a&gt; 是开源免费，本地优先，开箱即用的 PostgreSQL RDS，允许用户在本地一键拉起生产级的 PG 云数据库服务，并带有开箱即用的 340 个PG扩展插件，故障自愈的高可用，顶级监控系统，PITR备份恢复，IaC命令行工具，SOP管理预案的完整解决方案。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pigsty-home.png&#34; src=&#34;/zh/blog/pg/pg-17/pigsty-home.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;其他参考阅读&#34;&gt;其他参考阅读&lt;/h2&gt;
&lt;p&gt;德哥在他的博客中已经解读了许多关于 PostgreSQL 17 的新功能特性，是进一步了解 PostgreSQL 17 新功能特性的好资源：&lt;/p&gt;
&lt;p&gt;《&lt;a href=&#34;https://mp.weixin.qq.com/s/HSynUBf9b8Ecz3953XKL5g&#34;&gt;PostgreSQL 17 正式发布, 要不要升?&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;支持块级别增量备份与恢复:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - 内置块级别物理增量备份(INCREMENTAL backup/pg_combinebackup)功能》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add new pg_walsummary tool》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add new function &lt;code&gt;pg_get_wal_summarizer_state()&lt;/code&gt; 分析为聚合入 pg_wal/summaries 的pid内存中的wal片段信息》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 增量备份patch: Add the system identifier to backup manifests》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;支持逻辑复制failover、switchover:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - pg_upgrade大版本升级支持保留逻辑订阅全部信息 (preserve the full subscription&amp;rsquo;s state)》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 主库视图 &lt;code&gt;pg_replication_slots&lt;/code&gt;.&lt;code&gt;conflict_reason&lt;/code&gt; 支持逻辑复制冲突原因跟踪》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 支持逻辑复制槽failover to 流复制standby节点. &lt;code&gt;pg_create_logical_replication_slot(... failover = true|false ...)&lt;/code&gt;》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - preparation for replicating unflushed WAL data》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - sync logical replication slot LSN, Failover &amp;amp; Switchover》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add a new slot sync worker to synchronize logical slots》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 增加GUC standby_slot_names , 保证这些standby已接收并flush所有逻辑slot向下游发送逻辑数据对应的WAL》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - pg_createsubscriber支持将物理从库转换为逻辑从库》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 跟踪slot断联时间戳&lt;code&gt;pg_replication_slots.inactive_since&lt;/code&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;支持COPY错误处理:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add new COPY option SAVE_ERROR_TO (copy跳过错误行)》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - pg_stat_progress_copy Add progress reporting of skipped tuples during COPY FROM》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - COPY LOG_VERBOSITY notice ERROR信息》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JSON类型处理能力增强:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - Implement various jsonpath methods》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - JSON_TABLE: Add support for NESTED paths and columns》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;vacuum性能改进:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - 增加index vacuum 进度打印》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Optimize vacuuming of relations with no indexes 降低wal产出》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 解除vacuumdb,clusterdb,reindexdb的某些options组合限制》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 使用TidStore数据结构存储dead tupleids, 提升vacuum效率, 为什么PG单表不建议超过8.9亿条记录?》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - vacuum_buffer_usage_limit调大默认值, 减少vacuum造成的wal flush, 提升vacuum速度》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;index 性能优化:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - Allow Incremental Sorts on GiST and SP-GiST indexes》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - btree index backward scan (order by desc 场景)优化》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Allow parallel CREATE INDEX for BRIN indexes》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;高并发锁竞争优化:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - 优化wal insert lock, 提升高并发写入吞吐性能》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Reduce rate of walwriter wakeups due to async commits》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - WAL锁竞争优化 - reading WAL buffer contents without a lock, Additional write barrier in AdvanceXLInsertBuffer()》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;性能优化:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - 函数parser阶段优化, 函数guc into lists避免parser》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 删除snapshot too old特性, 将引入新实现方式》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - postgres_fdw 支持semi-join pushdown (exists (&amp;hellip;))》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 将unstable hashfunc剥离, 提升in-memory场景哈希计算性能和算法自由度》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 优化器增强, group by支持Incremental Sort, GUC: enable_group_by_reordering》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 引入新的smgr, 优化bulk loading》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add &lt;code&gt;--copy-file-range&lt;/code&gt; option to &lt;code&gt;pg_upgrade&lt;/code&gt;》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 减少分区表partitionwise join内存消耗》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 使用 Merge Append 提升 UNION 性能》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - pg_restore &lt;code&gt;--transaction-size=N&lt;/code&gt; 支持N个对象封装为一个事务提交》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新增GUC参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add GUC: event_triggers . for temporarily disabling event triggers》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Allow ALTER SYSTEM to set unrecognized custom GUCs.》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - XX000 内部错误 backtrace, add GUC backtrace_on_internal_error》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - allow_alter_system GUC控制 是否允许&lt;code&gt;alter system &lt;/code&gt;修改&lt;code&gt;postgresql.auto.conf&lt;/code&gt;》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 新增 GUC: or_to_any_transform_limit 控制&lt;code&gt;OR to ANY&lt;/code&gt;转换》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 新增 GUC trace_connection_negotiation : 跟踪客户端 SSLRequest or GSSENCRequest packet》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SQL语法、函数功能增强:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - plpgsql 支持定义 &lt;code&gt;%TYPE&lt;/code&gt; &lt;code&gt;%ROWTYPE&lt;/code&gt; 数组变量类型》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 支持修改生成列表达式 &lt;code&gt;alter table ... ALTER COLUMN ... SET EXPRESSION AS (express)&lt;/code&gt;》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Support identity columns in partitioned tables》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 简化exclude约束用法, 对primary key,unique约束增加without overlaps可选项》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add RETURNING support to MERGE》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 增加uuid功能函数: 提取UUID值里面的时间戳 和 生成UUID值的函数版本》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 新增返回某个范围内的随机数的随机函数&lt;code&gt;random(min, max)&lt;/code&gt;》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add support for &lt;code&gt;MERGE ... WHEN NOT MATCHED BY SOURCE&lt;/code&gt;》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 使用pg_basetype 获得domain类型的基础类型》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Implement &lt;code&gt;ALTER TABLE ... MERGE|SPLIT PARTITION&lt;/code&gt; &amp;hellip; command》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;管理手段增强:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - 内置支持login event trigger》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add tests for XID wraparound》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - pgbench工具新增meta语法syncpipeline, &lt;code&gt;pgbench: Add \syncpipeline&lt;/code&gt;》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 引入MAINTAIN权限及pg_maintain预制角色》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 新增 &amp;ldquo;builtin&amp;rdquo; collation provider》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 通过pg_wal_replay_wait()支持读写分离pool实现跨实例的读写一致性》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - transaction_timeout》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;内部统计信息、系统视图增强:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add new parallel message type to progress reporting.》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add system view pg_wait_events》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add JIT deform_counter》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 添加checkpoint delay等待事件》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add &lt;code&gt;local_blk_{read|write}_time&lt;/code&gt; I/O timing statistics for local blocks》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Introduce pg_stat_checkpointer》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - improve range type pg_stats》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 增强standby节点检查点统计信息》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add EXPLAIN (MEMORY) to report planner memory consumption》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;table access method 接口增强:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - Add support for &lt;code&gt;DEFAULT&lt;/code&gt; in &lt;code&gt;ALTER TABLE .. SET ACCESS METHOD&lt;/code&gt;》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 支持修改分区表access method》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 寻找undo-based table access methods的蛛丝马迹》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 频繁提交table access method相关patch, undo-based table access methods真的快来了吗?》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - table AM增强: Custom reloptions for table AM》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扩展接口能力增强:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - 增加alter table部分属性hook, 未来可定制化审计功能》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 支持自定义等待事件》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - Introduce the dynamic shared memory registry (DSM 注册器)》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 新增代码注入功能(enable-injection-points), 类似hook.》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 引入读写原子操作函数接口with full barrier semantics》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 支持在申请时指定动态共享内存区域初始、最大段size》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 代码注入(injection_points)功能增强, Introduce runtime conditions》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;libpq协议增强:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《PostgreSQL 17 preview - libpq: Add support for Close on portals and statements , 释放绑定变量语句入口(prepared statements)》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - 增加wire protocol头文件》&lt;/li&gt;
&lt;li&gt;《PostgreSQL 17 preview - libpq新增&lt;code&gt;PQchangePassword()&lt;/code&gt;接口, 防止alter user修改密码时明文被记录在SQL活跃会话、log、pg_stat_statements中》&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 阿里云：高可用容灾神话破灭</title>
      <link>/zh/blog/cloud/aliyun-ha/</link>
      <pubDate>Tue, 17 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/aliyun-ha/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/aliyun-ha/featured_hu02aa61ae1d9de35cbe238d2676170cb9_676376_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;p&gt;2024年9月10日，阿里云新加坡可用区C数据中心因锂电池爆炸导致火灾，到现在已经过去一周了，仍未完全恢复。
按照月度 SLA 定义的可用性计算规则（7天+/30天≈75%），&lt;strong&gt;服务可用性别说几个9了，连一个8都不剩了&lt;/strong&gt;，而且还在进一步下降中。
当然，可用性八八九九已经是小问题了 —— 真正的问题是，放在单可用区里的数据还能不能找回来？&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://status.aliyun.com/#/?region=ap-southeast-1&#34;&gt;&lt;img alt=&#34;status.png&#34; src=&#34;/zh/blog/cloud/aliyun-ha/status.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;截止至 09-17，关键服务如 ECS, OSS, EBS, NAS, RDS 等仍然处于异常状态&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通常来说，如果只是机房小范围失火的话，问题并不会特别大，因为电源和UPS通常放在单独房间内，与服务器机房隔离开。
但一旦触发了消防淋水，问题就大条了：一旦服务器整体性断电，恢复时间基本上要以天计；
如果泡水，那就不只是什么可用性的问题了，要考虑的是数据还能不能找回 —— &lt;strong&gt;数据完整性&lt;/strong&gt; 的问题了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=21&#34;&gt;&lt;img alt=&#34;event.png&#34; src=&#34;/zh/blog/cloud/aliyun-ha/event.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前公告上的说法是，14号晚上已经拖出来一批服务器，正在干燥、一直到16号都没干燥完。从这个“干燥”说法来看，有很大概率是泡水了。
虽然在任何官方公告出来前，我们无法断言事实如何，但根据常理判断，出现数据一致性受损是大概率事件，只是丢多丢少的问题。
所以目测这次新加坡火灾大故障的影响，基本与 2022 年底 &lt;a href=&#34;https://help.aliyun.com/noticelist/articleid/1061819219.html&#34;&gt;香港盈科机房大故障&lt;/a&gt; 与2023年&lt;a href=&#34;/zh/blog/cloud/aliyun&#34;&gt;双十一全球不可用&lt;/a&gt; 故障在一个量级甚至更大。&lt;/p&gt;
&lt;p&gt;天有不测风云，人有旦夕祸福。故障的发生概率不会降为零，重要的是我们从中故障能学到什么经验与教训？&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;容灾实战战绩&#34;&gt;容灾实战战绩&lt;/h2&gt;
&lt;p&gt;整个数据中心着火是一件很倒霉的事，绝大多数用户除了靠异地冷备份逃生外，通常也只能自认倒霉。我们可以讨论锂电池还是铅酸电池更好，UPS电源应该怎么布局这类问题，但因为这些责备阿里云也没什么意义。&lt;/p&gt;
&lt;p&gt;但有意义的是，在这次 &lt;strong&gt;可用区级故障中&lt;/strong&gt;，标称自己为 “&lt;strong&gt;跨可用区容灾高可用&lt;/strong&gt;” 的产品，例如云数据库 RDS，到底表现如何？&lt;strong&gt;故障给了我们一次用真实战绩来检验这些产品容灾能力的机会。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;容灾的核心指标是 &lt;strong&gt;RTO&lt;/strong&gt; （恢复耗时）与 &lt;strong&gt;RPO&lt;/strong&gt;（数据损失），而不是什么几个9的可用性 —— 道理很简单，你可以单凭运气做到不出故障，实现 100% 的可用性。但真正检验容灾能力的，是灾难出现后的恢复速度与恢复效果。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;配置策略&lt;/th&gt;
&lt;th&gt;RTO&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;RPO&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;单机 + &lt;i class=&#34;fa-solid fa-music text-danger&#34;&gt;&lt;/i&gt; 什么也不做&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt; &lt;strong&gt;数据永久丢失，无法恢复&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;i class=&#34;fas fa-circle-xmark text-danger&#34;&gt;&lt;/i&gt; &lt;strong&gt;数据全部丢失&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;单机 + &lt;i class=&#34;fa-solid fa-copy text-secondary&#34;&gt;&lt;/i&gt; 基础备份&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fa-solid fa-triangle-exclamation text-secondary&#34;&gt;&lt;/i&gt; 取决于备份大小与带宽（几小时）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;i class=&#34;fa-solid fa-triangle-exclamation text-secondary&#34;&gt;&lt;/i&gt; 丢失上一次备份后的数据（几个小时到几天）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;单机 + &lt;i class=&#34;fa-solid fa-copy text-primary&#34;&gt;&lt;/i&gt; 基础备份 + &lt;i class=&#34;fa-solid fa-clock-rotate-left text-primary&#34;&gt;&lt;/i&gt; WAL归档&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fa-solid fa-triangle-exclamation text-primary&#34;&gt;&lt;/i&gt; 取决于备份大小与带宽（几小时）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;i class=&#34;fa-solid fa-triangle-exclamation text-primary&#34;&gt;&lt;/i&gt; 丢失最后尚未归档的数据（几十MB）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;主从 + &lt;i class=&#34;fa-solid fa-wrench text-secondary&#34;&gt;&lt;/i&gt; 手工故障切换&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fa-solid fa-triangle-exclamation text-primary&#34;&gt;&lt;/i&gt;  十分钟&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;i class=&#34;fa-solid fa-circle-check text-primary&#34;&gt;&lt;/i&gt; 丢失复制延迟中的数据（约百KB）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;主从 + &lt;i class=&#34;fa-solid fa-infinity text-primary&#34;&gt;&lt;/i&gt; 自动故障切换&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fa-solid fa-circle-check text-primary&#34;&gt;&lt;/i&gt; 一分钟内&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;i class=&#34;fa-solid fa-circle-check text-primary&#34;&gt;&lt;/i&gt; 丢失复制延迟中的数据（约百KB）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;主从 + &lt;i class=&#34;fa-solid fa-infinity text-primary&#34;&gt;&lt;/i&gt; 自动故障切换 + &lt;i class=&#34;fa-solid fa-rotate text-success&#34;&gt;&lt;/i&gt; 同步提交&lt;/td&gt;
&lt;td&gt;&lt;i class=&#34;fa-solid fa-circle-check text-success&#34;&gt;&lt;/i&gt; 一分钟内&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;i class=&#34;fa-solid fa-circle-check text-success&#34;&gt;&lt;/i&gt; 无数据丢失&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;毕竟，&lt;a href=&#34;/zh/blog/cloud/sla&#34;&gt;&lt;strong&gt;SLA&lt;/strong&gt;&lt;/a&gt; 中的规定的几个9 可用性指标&lt;strong&gt;并非真实历史战绩&lt;/strong&gt;，而是达不到此水平就补偿月消费XX元代金券的承诺。要想考察产品真正的容灾能力，还是要靠演练或真实灾难下的实际战绩表现。&lt;/p&gt;
&lt;p&gt;然而实际战绩如何呢？在这次在这次新加坡火灾中，整个可用区 RDS 服务的切换用了多长时间 —— 多AZ高可用的 RDS 服务在 11:30 左右完成切换，&lt;strong&gt;耗时 70 分钟&lt;/strong&gt;（10:20 故障开始），也就是 &lt;strong&gt;RTO &amp;lt; 70分&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这个指标相比 2022 年香港C可用区故障 RDS 切换的的 &lt;strong&gt;133&lt;/strong&gt; 分钟，有进步。但和阿里云自己标注的指标（&lt;strong&gt;RTO &amp;lt; 30秒&lt;/strong&gt;）还是差了两个数量级。&lt;/p&gt;
&lt;p&gt;至于单可用区的基础版 RDS 服务，官方文档上说 &lt;strong&gt;RTO &amp;lt; 15分&lt;/strong&gt;，实际情况是：单可用区的RDS都要过头七了。&lt;strong&gt;RTO &amp;gt; 7天&lt;/strong&gt;，至于 RTO 和 RPO 会不会变成 &lt;strong&gt;无穷大 ∞&lt;/strong&gt; （彻底丢完无法恢复），我们还是等官方消息吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;如实标注容灾指标&#34;&gt;如实标注容灾指标&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://help.aliyun.com/zh/rds/product-overview/competitive-advantages-of-apsaradb-rds-instances-over-self-managed-databases&#34;&gt;阿里云官方文档&lt;/a&gt; 宣称：RDS 服务提供多可用区容灾， “&lt;em&gt;高可用系列和集群系列提供自研高可用系统，实现&lt;strong&gt;30秒&lt;/strong&gt;内故障恢复。基础系列约&lt;strong&gt;15分钟&lt;/strong&gt;即可完成故障转移&lt;/em&gt;。”
也就是高可用版 RDS 的 RTO &amp;lt; 30s，基础单机版的 RTO &amp;lt; 15min，中规中矩的指标，没啥问题。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://help.aliyun.com/zh/rds/product-overview/competitive-advantages-of-apsaradb-rds-instances-over-self-managed-databases&#34;&gt;&lt;img alt=&#34;rds.jpg&#34; src=&#34;/zh/blog/cloud/aliyun-ha/rds.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我相信在单个集群的主实例出现单机硬件故障时，阿里云 RDS 是可以实现上面的容灾指标的 —— 但既然这里声称的是 “&lt;strong&gt;多可用区容灾&lt;/strong&gt;”，那么用户的合理期待是当整个可用区故障时，RDS 故障切换也可以做到这一点。&lt;/p&gt;
&lt;p&gt;可用区容灾是一个合理需求，特别是考虑到阿里云在最近短短一年内出现过好几次整个可用区范围的故障（**&lt;a href=&#34;/zh/blog/cloud/aliyun&#34;&gt;甚至还有一次全球/全服务级别的故障&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2024-09-10 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=21&#34;&gt;&lt;strong&gt;新加坡可用区C机房火灾&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2024-07-02 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=20&#34;&gt;&lt;strong&gt;上海可用区N网络访问异常&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2024-04-27 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=19&#34;&gt;浙江地域访问其他地域或其他地域访问杭州地域的OSS、SLS服务异常&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2024-04-25 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=18&#34;&gt;&lt;strong&gt;新加坡地域可用区C部分云产品服务异常&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-11-27 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=17&#34;&gt;&lt;strong&gt;阿里云部分地域云数据库控制台访问异常&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-11-12 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=16&#34;&gt;&lt;strong&gt;阿里云云产品控制台服务异常&lt;/strong&gt;&lt;/a&gt; （&lt;a href=&#34;/zh/blog/cloud/aliyun&#34;&gt;全球大故障&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;2023-11-09 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=15&#34;&gt;中国内地访问中国香港、新加坡地域部分EIP无法访问&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-10-12 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=14&#34;&gt;阿里云杭州地域可用区J、杭州地域金融云可用区J网络访问异常&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-07-31 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=13&#34;&gt;暴雨影响北京房山地域NO190机房&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-06-21 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=12&#34;&gt;&lt;strong&gt;阿里云北京地域可用区I网络访问异常&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-06-20 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=11&#34;&gt;部分地域电信网络访问异常&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-06-16 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=10&#34;&gt;移动网络访问异常&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-06-13 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=9&#34;&gt;阿里云广州地域访问公网网络异常&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-06-05 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=8&#34;&gt;中国香港可用区D某机房机柜异常&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-05-31 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=7&#34;&gt;阿里云访问江苏移动地域网络异常&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-05-18 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=6&#34;&gt;阿里云杭州地域云服务器ECS控制台服务异常&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-04-27 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=5&#34;&gt;部分北京移动(原中国铁通) 用户网络访问存在丢包现象&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-04-26 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=4&#34;&gt;杭州地域容器镜像服务ACR服务异常&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-03-01 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=3&#34;&gt;深圳可用区A部分ECS访问Local DNS异常&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2023-02-18 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=2&#34;&gt;阿里云广州地域网络异常&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2022-12-25 &lt;a href=&#34;https://status.aliyun.com/#/eventDetail?eventId=1&#34;&gt;&lt;strong&gt;阿里云香港地域电讯盈科机房制冷设备故障&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;那么，为什么在实战中，单个RDS集群故障可以做到的指标，在可用区级故障时就做不到了呢？&lt;strong&gt;从历史的故障中我们不难&lt;/strong&gt;推断&lt;/strong&gt; —— 数据库高可用依赖的基础设施本身，很可能就是单AZ部署的。包括在先前&lt;a href=&#34;https://www.aliyun.com/noticelist/articleid/1061819219.html&#34;&gt;香港盈科机房故障&lt;/a&gt;中展现出来的 ：单可用区的故障很快蔓延到了整个 Region —— &lt;strong&gt;因为管控平面本身不是多可用区容灾的&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;12月18日10:17开始，阿里云香港Region可用区C部分RDS实例出现不可用的报警。随着该可用区受故障影响的主机范围扩大，出现服务异常的实例数量随之增加，工程师启动数据库应急切换预案流程。截至12:30，RDS MySQL与Redis、MongoDB、DTS等大部分跨可用区实例完成跨可用区切换。部分单可用区实例以及单可用区高可用实例，由于依赖单可用区的数据备份，仅少量实例实现有效迁移。少量支持跨可用区切换的RDS实例没有及时完成切换。&lt;strong&gt;经排查是由于这部分RDS实例依赖了部署在香港Region可用区C的代理服务&lt;/strong&gt;，由于代理服务不可用，无法通过代理地址访问RDS实例。我们协助相关客户通过临时切换到使用RDS主实例的地址访问来进行恢复。随着机房制冷设备恢复，21:30左右绝大部分数据库实例恢复正常。对于受故障影响的单机版实例及主备均在香港Region可用区C的高可用版实例，我们提供了克隆实例、实例迁移等临时性恢复方案，但由于底层服务资源的限制，部分实例的迁移恢复过程遇到一些异常情况，需要花费较长的时间来处理解决。&lt;/p&gt;
&lt;p&gt;ECS管控系统为B、C可用区双机房容灾，C可用区故障后由B可用区对外提供服务，由于大量可用区C的客户在香港其他可用区新购实例，同时可用区C的ECS实例拉起恢复动作引入的流量，导致可用区 B 管控服务资源不足。新扩容的ECS管控系统启动时依赖的中间件服务部署在可用区C机房，导致较长时间内无法扩容。ECS管控依赖的自定义镜像数据服务，&lt;strong&gt;依赖可用区C的单AZ冗余版本的OSS服务&lt;/strong&gt;，导致客户新购实例后出现启动失败的现象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我建议在包括 RDS 在内的云产品应当实事求是，如实标注历史故障案例里的 RTO 和 RPO 战绩，以及真实可用区灾难下的实际表现。不要笼统地宣称 “&lt;em&gt;&lt;strong&gt;30秒/15分钟恢复，不丢数据，多可用区容灾&lt;/strong&gt;&lt;/em&gt;”，承诺一些自己做不到的事情。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;阿里云的可用区到底是什么&#34;&gt;阿里云的可用区到底是什么？&lt;/h2&gt;
&lt;p&gt;在这次新加坡C可用区故障，包括之前香港C可用区故障中，阿里云表现出来的一个问题就是，单个数据中心的故障扩散蔓延到了整个可用区中，而单个可用区的故障又会影响整个区域。&lt;/p&gt;
&lt;p&gt;在云计算中， &lt;strong&gt;区域（Region）&lt;/strong&gt; 与 &lt;strong&gt;可用区（AZ）&lt;/strong&gt; 是一个非常基本的概念，熟悉 AWS 的用户肯定不会感到陌生。
按照 &lt;a href=&#34;https://aws.amazon.com/cn/about-aws/global-infrastructure/regions_az&#34;&gt;AWS的说法&lt;/a&gt; ：一个 &lt;strong&gt;区域&lt;/strong&gt; 包含多个可用区，每个可用区是一个或多个独立的数据中心。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;aws-az-region.png&#34; src=&#34;/zh/blog/cloud/aliyun-ha/aws-az-region.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;对于 AWS 来说，并没有特别多的 Region，比如美国也就四个区域，但每个区域里 &lt;a href=&#34;https://gist.github.com/karstenmueller/98381c897178a260be8c08f98ffe2c3e&#34;&gt;两三个可用区&lt;/a&gt;，而一个可用区（AZ）通常对应着多个数据中心（DC）。
AWS 的实践是一个 DC 规模控制在八万台主机，DC之间距离在 70 ～ 100 公里。这样构成了一个 Region - AZ - DC 的三级关系。&lt;/p&gt;
&lt;p&gt;不过 &lt;a href=&#34;https://help.aliyun.com/document_detail/40654.html&#34;&gt;阿里云&lt;/a&gt; 上似乎不是这样的，它们缺少了一个关键的 &lt;strong&gt;数据中心（DC）&lt;/strong&gt; 的概念。
因此 &lt;strong&gt;可用区（AZ）&lt;/strong&gt; 似乎就是一个数据中心，而 &lt;strong&gt;区域（Region）&lt;/strong&gt; 与 AWS 的上一层 &lt;strong&gt;可用区（AZ）概念&lt;/strong&gt; 对应。&lt;/p&gt;
&lt;p&gt;把原本的 AZ 拔高成了 Region，把原本的 DC （或者DC的一部分，一层楼？）拔高成了可用区。&lt;/p&gt;
&lt;p&gt;我们不好说阿里云这么设计的动机，一种可能的猜测是：本来可能阿里云国内搞个华北，华东，华南，西部几个区域就行，但为了汇报起来带劲（你看AWS美国才4个Region，我们国内有14个！），就搞成了现在这个样子。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;云厂商有责任推广最佳实践&#34;&gt;云厂商有责任推广最佳实践&lt;/h2&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;p&gt;提供单az对象存储服务的云，可不可以评价为：不是傻就是坏？&lt;/p&gt;
&lt;p&gt;云厂商有责任推广好的实践，不然出了问题，也还是“都是云的问题”&lt;/p&gt;
&lt;p&gt;你给别人默认用的就是本地三副本冗余，绝大多数用户就会选择你默认的这个。&lt;/p&gt;
&lt;p&gt;看有没有告知,没告知，那就是坏，告知了，长尾用户能不能看懂？但其实很多人不懂的。&lt;/p&gt;
&lt;p&gt;你都已经三副本存储了，为什么不把一个副本放在另一个 DC 或者另一个 AZ ？
你都已经在存储上收取了上百倍的溢价了，为什么就不不愿意多花一点点钱去做同城冗余，难道是扣数据跨 AZ 复制的那点流量费吗？&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;做健康状态页请认真一点&#34;&gt;做健康状态页请认真一点&lt;/h2&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;p&gt;我听说过天气预报，但从未听说过故障预报。但阿里云健康看板为我们提供了这一神奇的能力 —— 你可以选择未来的日期，而且未来日期里还有服务健康状态数据。例如，你可以查看20年后的服务健康状态 ——&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;2044.png&#34; src=&#34;/zh/blog/cloud/aliyun-ha/2044.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;未来的 “故障预报” 数据看上去是用当前状态填充的。所以当前处于故障状态的服务在未来的状态还是异常。如果你选择 20 年后，你依然可以看到当前新加坡大故障的健康状态为“异常”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;也许&lt;/strong&gt; 阿里云是想用这种隐晦的方式告诉用户：&lt;em&gt;&lt;strong&gt;新加坡区域单可用区里的数据已经泡汤了，Gone Forever, 乃们还是不要指望找回了&lt;/strong&gt;&lt;/em&gt;。当然，更合理推断是：这不是什么故障预报，这个健康看板是实习生做的。完全没有设计 Review，没有 QA 测试，不考虑边际条件，拍拍脑袋拍拍屁股就上线了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;云是新的故障单点那怎么办&#34;&gt;云是新的故障单点，那怎么办？&lt;/h2&gt;
&lt;p&gt;TBD&lt;/p&gt;
&lt;p&gt;信息安全三要素 CIA：机密性，完整性，可用性，最近阿里都遇上了大翻车。&lt;/p&gt;
&lt;p&gt;前有 &lt;a href=&#34;https://mp.weixin.qq.com/s/C7XGgGmzvMjKJGbBGVmrzw&#34;&gt;阿里云盘灾难级BUG&lt;/a&gt; 泄漏隐私照片破坏机密性；&lt;/p&gt;
&lt;p&gt;后有这次可用区故障故障，击穿多可用区/单可用区可用性神话，甚至威胁到了命根子 —— 数据完整性。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;参考阅读&#34;&gt;参考阅读&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/cloud/cloud-exit/&#34;&gt;是时候放弃云计算了吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/cloud/odyssey/&#34;&gt;下云奥德赛&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/cloud/finops/&#34;&gt;FinOps的终点是下云&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/cloud/profit/&#34;&gt;云计算为啥还没挖沙子赚钱？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/cloud/sla/&#34;&gt;云SLA是不是安慰剂？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/cloud/ebs/&#34;&gt;云盘是不是杀猪盘？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/cloud/rds/&#34;&gt;云数据库是不是智商税？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/cloud/paradigm/&#34;&gt;范式转移：从云到本地优先&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/cloud/cdn/&#34;&gt;腾讯云CDN：从入门到放弃&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486452&amp;idx=1&amp;sn=29cff4ee30b90483bd0a4f0963876f28&amp;chksm=fe4b3e2fc93cb739af6ce49cffa4fa3d010781190d99d3052b4dbfa87d28c0386f44667e4908#rd&#34;&gt;【阿里】云计算史诗级大翻车来了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486438&amp;idx=1&amp;sn=b2c489675134d4e84fbc249089777cb4&amp;chksm=fe4b3e3dc93cb72b5d0d90ef61011dda5a09e5f08d96c8cca87148706451c859777162bd18da#rd&#34;&gt;阿里云的羊毛抓紧薅，五千的云服务器三百拿&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486387&amp;idx=1&amp;sn=20ac92e33ed5a6b8e3120e99aefaf1cc&amp;chksm=fe4b3e68c93cb77ed5b627c8caf78666cab9deafc18dacf528e51411682e616b4df1deab87f9&amp;scene=21#wechat_redirect&#34;&gt;云厂商眼中的客户：又穷又闲又缺爱&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247483770&amp;idx=1&amp;sn=723c865ff27fd0ceace1d8fb2c76ddca&amp;chksm=c0ca8db0f7bd04a63f79aba185e093bbb0ab5763b1f91f58cfc86551daf7e47bd6627dd8c73b#rd&#34;&gt;阿里云的故障在其他云也可能发生,并且可能丢数据&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247483764&amp;idx=1&amp;sn=8aebb4053257fac48f71b75a957153ad&amp;chksm=c0ca8dbef7bd04a816feba238a2232abdc02b5ccdb405f32217455dc3bf3a1811bd4ff8815af#rd&#34;&gt;中国云服务走向全球？先把 Status Page 搞定&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247483759&amp;idx=1&amp;sn=eb12dfe4df37c22aadd120676391f4cb&amp;chksm=c0ca8da5f7bd04b3a024111b5c3be9f273c70087cc986937e72e12d7a0fe496753a88568afe9#rd&#34;&gt;我们可以信任阿里云的故障处理吗?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247483762&amp;idx=1&amp;sn=903405e0b64037f1b7d44b23f0c9b08d&amp;chksm=c0ca8db8f7bd04ae55f719df891d811d05269dac3a8e0a894d23292e06674058c943712672f5#rd&#34;&gt;给阿里云的一封公开信&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247484048&amp;idx=1&amp;sn=b57839c9dc85fe3dc6eaac01ff37b995&amp;chksm=c0ca8e5af7bd074ca5221de40c47b82378a8ca20f348ab1c80de7d244679733ee80e29cb3381#rd&#34;&gt;平台软件应该像数学一样严谨 &amp;mdash; 和阿里云RAM团队商榷&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247484025&amp;idx=1&amp;sn=5c6f1b0035b7f9a657a5d24d68699943&amp;chksm=c0ca8eb3f7bd07a550325dd691c5761cbf99a9b4644d14c9bbb512dc9ecd27033622bb83e58e#rd&#34;&gt;被医药业吊打的中国软件从业者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247484019&amp;idx=1&amp;sn=5dbe25e5c8d39a67bf9e9573ba2e9b98&amp;chksm=c0ca8eb9f7bd07af03f6d1228d73153fc37479a132a697c310851bfbffcf997ce991a7c2f010#rd&#34;&gt;腾讯的错别字文化&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247484064&amp;idx=1&amp;sn=cedf630065c88b936133001f84690c75&amp;chksm=c0ca8e6af7bd077c417aae032cc91281808e8768ea4f103dd1c71039986079c49bbd0aa03507#rd&#34;&gt;云为什么留不住客户 — 以腾讯云 CAM 为例&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247483883&amp;idx=1&amp;sn=f2644e9ff54790b319d63a1ffb26e717&amp;chksm=c0ca8d21f7bd0437b3be51f1d093ff45fac4e36552cdbf8b27c8d0ec5470e85ac46dd7f136a3#rd&#34;&gt;腾讯云团队为什么用阿里云的服务名？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247483846&amp;idx=1&amp;sn=9a2f3cd59147d2444b7432ecf50af9ba&amp;chksm=c0ca8d0cf7bd041a3f56fcf0bb4adbde8434d81818009f9906c0fa3d1121017996f572b0237e#rd&#34;&gt;究竟是客户差劲，还是腾讯云差劲？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247483694&amp;idx=1&amp;sn=618a3aa4f196c30eb9e89969643b06e9&amp;chksm=c0ca8de4f7bd04f25b277942fb41da2092c073f3db55fb92020ba66f21e14522e823a8a3346c#rd&#34;&gt;百度腾讯阿里真的是高科技企业吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247483663&amp;idx=1&amp;sn=27f37af0dc4e755d7a64f341de6d8aad&amp;chksm=c0ca8dc5f7bd04d3f4a4437a63958eb93be56722ed32c43385bf41631c86a869bdeada35af04#rd&#34;&gt;云计算厂商们，你们辜负了中国的用户&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247483712&amp;idx=1&amp;sn=acdb5adf0d588d9617ed72b5ffca8dd3&amp;chksm=c0ca8d8af7bd049c0a69cfebb950c07f599a807876a5d0748122e9a0b0528d216a8d5d968197#rd&#34;&gt;除了打折虚拟机, 云计算用户究竟在用什么高阶云服务?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247483743&amp;idx=1&amp;sn=9f329de1649fac75f69e57270978d047&amp;chksm=c0ca8d95f7bd0483d6af4940ca342e2544135e9de0b56fa1a6f299c887800aae04c11b0551bd#rd&#34;&gt;腾讯云阿里云做的真的是云计算吗?&amp;ndash;从客户成功案例的视角&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247483828&amp;idx=1&amp;sn=e03403d98876700134be4d1127371fe2&amp;chksm=c0ca8d7ef7bd0468677fc02cc47c530cdad242ac56ee485cb7b16667afafabc2339af0a995c6#rd&#34;&gt;本土云厂家究竟在服务谁？&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 云计算泥石流：合订本</title>
      <link>/zh/blog/cloud/cloud-exit/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/cloud-exit/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/cloud-exit/featured_hu02aa61ae1d9de35cbe238d2676170cb9_156498_640x0_resize_q75_catmullrom.jpg" width="640" height="640"/>]]>
        
        &lt;div style=&#34;text-align: center;&#34;&gt;&lt;p&gt;
世人常道云上好，托管服务烦恼少。我言云乃杀猪盘，溢价百倍实厚颜。
&lt;p&gt;赛博地主搞垄断，坐地起价剥血汗。运维外包嫖开源，租赁电脑炒概念。&lt;/p&gt;
&lt;p&gt;世人皆趋云上游，不觉开销似水流。云租天价难为持，开源自建更稳实。&lt;/p&gt;
&lt;p&gt;下云先锋把路趟，引领潮流一肩扛。不畏浮云遮望眼，只缘身在最前线。&lt;/p&gt;
&lt;/p&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;曾几何时，“&lt;strong&gt;上云&lt;/strong&gt;“近乎成为技术圈的政治正确，整整一代应用开发者的视野被云遮蔽。就让我们用实打实的数据分析与亲身经历，讲清楚公有云租赁模式的价值与陷阱 —— 在这个降本增效的时代中，供您借鉴与参考。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;云基础资源篇&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/rp8Dtvyo9cItBJSsvfrKjw&#34;&gt;剖析云算力成本，阿里云真降了吗&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/HathxpQ_KUuqxyrtyCDzWw&#34;&gt;扒皮对象存储：从降本到杀猪&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/UxjiUBTpb1pRUfGtR9V3ag&#34;&gt;云盘是不是杀猪盘？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/LefEAXTcBH-KBJNhXNoc7A&#34;&gt;云数据库是不是智商税&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ANFnbDXwuhKI99fgYRZ9ug&#34;&gt;垃圾腾讯云CDN：从入门到放弃&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/i4wk9ebyUK7irNSwuT3NWQ&#34;&gt;吊打公有云的赛博佛祖 Cloudflare&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;云商业模式篇&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/s_MCdaCByDBuocXkY1tvKw&#34;&gt;罗永浩救不了牙膏云？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/W5kOLxeJCIHjnWbIHc1Pzw&#34;&gt;Redis不开源是“开源”之耻，更是公有云之耻&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/BYu8nZjqAQbWc2yT8K_pFQ&#34;&gt;阿里云降价背后折射出的绝望&lt;/a&gt;【转载】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Yp_PU8nmyK-NVq0clD98RQ&#34;&gt;FinOps终点是下云&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/2w0bLJI7TvUNp1tzLYbvsA&#34;&gt;云计算为啥还没挖沙子赚钱？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/LC5jAhuVObRcrTLxI1FUQA&#34;&gt;云SLA是不是安慰剂？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/TksQ108v_nGaW11-87Es3A&#34;&gt;杀猪盘真的降价了吗？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Yp6L0hh4b4HuJQRPD3aJYw&#34;&gt;范式转移：从云到本地优先&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;下云奥德赛篇&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Fit7MtSDQdp9IcedmWdYQg&#34;&gt;云计算反叛军联盟&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/1OSRcBfd58s0tgZTUZHB9g&#34;&gt;重新拿回计算机硬件的红利&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/yIVal-9U6_TXX-dZpVtjBg&#34;&gt;下云高可用的秘诀：拒绝智力自慰&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/xaa079P4DRCz0hzNovGoOA&#34;&gt;半年下云省千万：DHH下云FAQ答疑&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/CicctyvV1xk5B-AsKfzPjw&#34;&gt;是时候放弃云计算了吗？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/H2S3TV-AsqS43A5Hh-XMhQ&#34;&gt;下云奥德赛&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;云故障复盘篇&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/SpxKyjSb1luCrJ8xIFjylg&#34;&gt;我们能从腾讯云故障复盘中学到什么？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/mgkOybNeEH3LO0gRa1rQBQ&#34;&gt;云SLA是安慰剂还是厕纸合同？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/PgduTGIvWSUgHZhVfnb7Bg&#34;&gt;腾讯云：颜面尽失的草台班子&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/5F2YgVtfpXoe7A1MoSoKLg&#34;&gt;【腾讯】云计算史诗级二翻车来了&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/FIOB_Oqefx1oez1iu7AGGg&#34;&gt;从降本增笑到真的降本增效&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/OIlR0rolEQff9YfCpj3wIQ&#34;&gt;我们能从阿里云史诗级故障中学到什么&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/3F1ud-tWB3eymu1-dxSHMA&#34;&gt;阿里云周爆：云数据库管控又挂了&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/cTge3xOlIQCALQc8Mi-P8w&#34;&gt;【阿里】云计算史诗级大翻车来了&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;RDS翻车篇&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/EH7RPB6ImfMHXhOMU7P5Qg&#34;&gt;RDS阉掉了PostgreSQL的灵魂&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/W1hwbl3qmjC4Dcmadc8uSg&#34;&gt;DBA 会被云淘汰吗？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/CMRrqI2yBWlNbACHpNgL1g&#34;&gt;驳《再论为什么你不应该招DBA》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/AGEW1iHQkQy4NQyYC2GonQ&#34;&gt;云RDS：从删库到跑路&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/4a8Qy4O80xqsnytC4l9lRg&#34;&gt;数据库应该放入K8S里吗？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/kFftay1IokBDqyMuArqOpg&#34;&gt;把数据库放入Docker是一个好主意吗？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;云厂商画像篇&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/XZqe4tbJ9lgf8a6PWj7vjw&#34;&gt;牙膏云？您可别吹捧云厂商了&lt;/a&gt;【转载】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/8ZffsCgchv8LH5ujv0lRGQ&#34;&gt;互联网技术大师速成班 &lt;/a&gt;【转载】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/qSTEf9txjHNTHeEFv3NkWg&#34;&gt;门内的国企如何看门外的云厂商&lt;/a&gt;【转载】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/1dse1KSCq2xG-QaL1JzZ8Q&#34;&gt;卡在政企客户门口的阿里云&lt;/a&gt;【转载】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/OxhhJ4U1P43di_eaE1uGPw&#34;&gt;互联网故障背后的草台班子们&lt;/a&gt;【转载】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/y9IradwxTxOsUGcOHia1XQ&#34;&gt;云厂商眼中的客户：又穷又闲又缺爱&lt;/a&gt;【转载】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/_ijL2OXAQJQrmWiE-KKzdw&#34;&gt;公有云厂商卖的云计算到底是什么玩意？&lt;/a&gt;【转载】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;序&#34;&gt;序&lt;/h2&gt;
&lt;p&gt;曾几何时，“上云“近乎成为技术圈的政治正确，整整一代应用开发者的视野被云遮蔽。DHH 以及像我这样的人愿意成为这个质疑者，用实打实的数据与亲身经历，讲清楚公有云租赁模式的陷阱。&lt;/p&gt;
&lt;p&gt;很多开发者并没有意识到，底层硬件已经出现了翻天覆地的变化，性能与成本以指数方式攀升与坍缩。许多习以为常的工作假设都已经被打破，无数利弊权衡与架构方案值得重新思索与设计。&lt;/p&gt;
&lt;p&gt;公有云有其存在意义 —— 对那些非常早期、或两年后不复存在的公司，那些完全不在乎花钱、有着极端大起大落不规则负载的公司，对那些需要出海合规，CDN服务的公司而言，公有云仍然是非常值得考虑的选项。&lt;/p&gt;
&lt;p&gt;然而对绝大多数已经发展起来，有一定规模与韧性，能在几年内摊销资产的公司而言，真的应该重新审视一下这股云热潮。好处被大大夸张了 —— &lt;strong&gt;在云上跑东西通常和你自己弄一样复杂，却贵得离谱&lt;/strong&gt;，我们真诚建议您好好算一下账。&lt;/p&gt;
&lt;p&gt;最近十年间，硬件以摩尔定律的速度持续演进，IDC2.0与资源云提供了公有云资源的物美价廉替代，开源软件与开源管控调度软件的出现更是让自建能力唾手可及 —— 云下开源自建，在成本，性能，与安全自主可控上都会有显著回报。&lt;/p&gt;
&lt;p&gt;我们提倡下云理念，并提供了实践的路径与切实可用的自建替代品 —— 我们将为认同这一结论的追随者提前铺设好意识形态与技术上的道路。不为别的，只是期望所有用户都能拥有自己的数字家园，而不是从科技巨头云领主那里租用农场。这也是一场对互联网集中化与反击赛博地主垄断收租的运动，让互联网 —— 这个美丽的自由避风港与理想乡可以走得更长。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/YrDngnKQc_0juN1B3SPnNg&#34;&gt;&lt;img src=&#34;/zh/blog/cloud/cloud-exit/featured.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;云基础资源篇&#34;&gt;云基础资源篇&lt;/h2&gt;
&lt;p&gt;EC2 / S3 / EBS 这样的基础资源价格，是所有云服务的定价之锚。基础资源篇的五篇文章，分别剖析了 EC2 算力，S3 对象存储，EBS 云盘，RDS 云数据库，以及 CDN 网络的方方面面：质量、安全、效率，以及大家最关心的一系列问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;重新拿回计算机硬件的红利httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247486489idx1snf2be1be496de46ac5ca816ac39cfdf24chksmfe4b39c2c93cb0d4ff50dd6962370523a6271eab478fe9174c0c7a88fc88ea05fd3e51313ad3scene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486489&amp;idx=1&amp;sn=f2be1be496de46ac5ca816ac39cfdf24&amp;chksm=fe4b39c2c93cb0d4ff50dd6962370523a6271eab478fe9174c0c7a88fc88ea05fd3e51313ad3&amp;scene=21#wechat_redirect&#34;&gt;重新拿回计算机硬件的红利&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在当下，硬件重新变得有趣起来，AI 浪潮引发的显卡狂热便是例证。但有趣的硬件不仅仅是 GPU —— CPU 与 SSD 的变化却仍不为大多数开发者所知，有一整代软件开发者被云和炒作营销遮蔽了双眼，难以看清这一点。&lt;/p&gt;
&lt;p&gt;许多软件与商业领域的问题的根都在硬件上：&lt;strong&gt;硬件的性能以指数模式增长&lt;/strong&gt;，让分布式数据库几乎成为了伪需求。&lt;strong&gt;硬件的价格以指数模式衰减&lt;/strong&gt;，让公有云从普惠基础设施变成了杀猪盘。让我们用算力与存储的价格变迁来说明这一点。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;扒皮云对象存储从降本到杀猪httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247486688idx1snbbdee063b65994cb5e15d3e3b7d87523chksmfe4b393bc93cb02d76c48f0fbfe3d60c8821b8079b1cfc05f8ccc56c1351b4a7a76b5794019ascene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486688&amp;idx=1&amp;sn=bbdee063b65994cb5e15d3e3b7d87523&amp;chksm=fe4b393bc93cb02d76c48f0fbfe3d60c8821b8079b1cfc05f8ccc56c1351b4a7a76b5794019a&amp;scene=21#wechat_redirect&#34;&gt;扒皮云对象存储：从降本到杀猪&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;对象存储是云计算的定义性服务，曾是云上降本的典范。然而随着硬件的发展，资源云（Cloudflare / IDC 2.0）与开源平替（MinIO）的出现，曾经“物美价廉”的对象存储服务失去了性价比，和&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485745&amp;idx=4&amp;sn=93746ecea381afd8e2f9820447b09ec7&amp;chksm=fe4b3ceac93cb5fc44f33ffff226747bc317854acbb3882aeb0d9a7e196eeb5df002d0e77275&amp;scene=21#wechat_redirect&#34;&gt;EBS&lt;/a&gt;一样成为了杀猪盘。&lt;/p&gt;
&lt;p&gt;硬件资源的价格随着摩尔定律以指数规律下降，但节省的成本并没有穿透云厂商这个中间层，传导到终端用户的服务价格上。 逆水行舟，不进则退，降价速度跟不上摩尔定律就是其实就是变相涨价。以S3为例，在过去十几年里，云厂商S3虽然名义上降价&lt;strong&gt;6&lt;/strong&gt;倍，但硬件资源却便宜了 &lt;strong&gt;26&lt;/strong&gt; 倍，&lt;strong&gt;S3 的价格实际上是涨了 4 倍&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;云盘是不是杀猪盘httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247485745idx4sn93746ecea381afd8e2f9820447b09ec7chksmfe4b3ceac93cb5fc44f33ffff226747bc317854acbb3882aeb0d9a7e196eeb5df002d0e77275scene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485745&amp;idx=4&amp;sn=93746ecea381afd8e2f9820447b09ec7&amp;chksm=fe4b3ceac93cb5fc44f33ffff226747bc317854acbb3882aeb0d9a7e196eeb5df002d0e77275&amp;scene=21#wechat_redirect&#34;&gt;云盘是不是杀猪盘？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;EC2 / S3 / EBS 是所有云服务的定价之锚。如果说 EC2/S3 定价还勉强能算合理，那么 EBS 的定价乃是故意杀猪。公有云厂商最好的块存储服务与自建可用的 PCI-E NVMe SSD 在性能规格上基本相同。然而相比直接采购硬件，AWS EBS 的成本高达 &lt;strong&gt;120&lt;/strong&gt; 倍，而阿里云的 ESSD 则可高达 &lt;strong&gt;200&lt;/strong&gt; 倍。&lt;/p&gt;
&lt;p&gt;公有云的弹性就是针对其商业模式设计的：&lt;strong&gt;启动成本极低，维持成本极高&lt;/strong&gt;。低启动成本吸引用户上云，而且良好的弹性可以随时适配业务增长，可是业务稳定后形成供应商锁定，尾大不掉，极高的维持成本就会让用户痛不欲生了。这种模式有一个俗称 —— &lt;strong&gt;杀猪盘&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;云数据库是不是智商税httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247485745idx5sna7d610ea37c3f3fa78ee4ba0ee705962chksmfe4b3ceac93cb5fc6f1975f94be04424e7b3690eedd1658951deb8d016f5f19ade8806d86417scene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485745&amp;idx=5&amp;sn=a7d610ea37c3f3fa78ee4ba0ee705962&amp;chksm=fe4b3ceac93cb5fc6f1975f94be04424e7b3690eedd1658951deb8d016f5f19ade8806d86417&amp;scene=21#wechat_redirect&#34;&gt;云数据库是不是智商税&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;近日，Basecamp &amp;amp; HEY 联合创始人 DHH 的一篇文章引起热议，主要内容可以概括为一句话：“&lt;em&gt;我们每年在云数据库（RDS/ES）上花50万美元，你知道50万美元可以买多少牛逼的服务器吗？我们要下云，拜拜了您呐！&lt;/em&gt;“&lt;/p&gt;
&lt;p&gt;在专业甲方用户眼中，云数据库只能算 60 分及格线上的大锅饭标品，却敢于卖出十几倍的天价资源溢价。如果用云数据库1年的钱，就够买几台甚至十几台性能更好的服务器自建更好的本地 RDS，那么使用云数据库的意义到底在哪里？在有完整开源平替的情况下，这算不算交了智商税？&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;垃圾腾讯云cdn从入门到放弃httpsmpweixinqqcoms__bizmzu5odayntm5ngmid2247485363idx1sn8622b25fd2309d4fc969d22964a04129scene21wechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485363&amp;idx=1&amp;sn=8622b25fd2309d4fc969d22964a04129&amp;scene=21#wechat_redirect&#34;&gt;垃圾腾讯云CDN：从入门到放弃&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本来我相信至少在  IaaS 的存储，计算，网络三大件上，公有云厂商还是可以有不小优势的。只不过在腾讯云 CDN 上的亲身体验让我的想法动摇了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;云商业模式篇&#34;&gt;云商业模式篇&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;finops终点是下云httpsmpweixinqqcoms__bizmzu5odayntm5ngmid2247485745idx1sn6109bb1be67f9e7e02124c4fc3b47ea3scene21wechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485745&amp;idx=1&amp;sn=6109bb1be67f9e7e02124c4fc3b47ea3&amp;scene=21#wechat_redirect&#34;&gt;FinOps终点是下云&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;FinOps关注点跑偏，公有云是个杀猪盘。自建能力决定议价权，数据库是自建关键。&lt;/p&gt;
&lt;p&gt;搞 FinOps 的关注减少浪费资源的&lt;strong&gt;数量&lt;/strong&gt;，却故意无视了房间里的大象 —— &lt;strong&gt;云资源单价&lt;/strong&gt;。云算力的成本是自建的五倍，块存储的成本则可达百倍以上，堪称终极成本刺客。对于有一定规模企业来说，IDC自建的总体成本在云服务列表价1折上下。下云是原教旨 FinOps 的终点，也是真正 FinOps 的起点。&lt;/p&gt;
&lt;p&gt;拥有自建能力的用户即使不下云也能谈出极低的折扣，没有自建能力的公司只能向公有云厂商缴纳高昂的 “无专家税” 。无状态应用与数仓搬迁相对容易，真正的难点是在不影响质量安全的前提下，完成数据库的自建。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;云计算为啥还没挖沙子赚钱httpsmpweixinqqcoms__bizmzu5odayntm5ngmid2247485629idx1sn7ec768fac5905b0c7052e7b3a6825c4escene21wechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485629&amp;idx=1&amp;sn=7ec768fac5905b0c7052e7b3a6825c4e&amp;scene=21#wechat_redirect&#34;&gt;云计算为啥还没挖沙子赚钱？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;公有云毛利不如挖沙子，杀猪盘为何成为赔钱货？卖资源模式走向价格战，开源替代打破垄断幻梦。服务竞争力逐渐被抹平，云计算行业将走向何方？&lt;/p&gt;
&lt;p&gt;业界标杆的 AWS 与 Azure 毛利就可以轻松到 60% 与 70% 。反观国内云计算行业，毛利普遍在个位数到 &lt;strong&gt;15%&lt;/strong&gt; 徘徊，至于像金山云这样的云厂商，毛利率直接一路干到 &lt;strong&gt;2.1%&lt;/strong&gt;，还不如打工挖沙子的毛利高。这不禁让人好奇，这些本土云厂商是怎么把一门百分之三四十纯利的生意能做到这种地步的？&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;云sla是不是安慰剂httpsmpweixinqqcoms__bizmzu5odayntm5ngmid2247485601idx1sn5521562d414b547a192b3dbc45ce720fscene21wechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485601&amp;idx=1&amp;sn=5521562d414b547a192b3dbc45ce720f&amp;scene=21#wechat_redirect&#34;&gt;云SLA是不是安慰剂？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在云计算的世界里，&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485601&amp;idx=1&amp;sn=5521562d414b547a192b3dbc45ce720f&amp;chksm=fe4b3d7ac93cb46c37f64f61593a102eb0a6c624a95fe37e0cccf2c03c766cda5ad268671e14&amp;scene=21#wechat_redirect&#34;&gt;服务等级协议&lt;/a&gt;（SLA）曾被视为云厂商对其服务质量的承诺。然而，当我们深入研究这些由一堆9组成的 &lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485601&amp;idx=1&amp;sn=5521562d414b547a192b3dbc45ce720f&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;SLA&lt;/strong&gt;&lt;/a&gt; 时，会发现它们并不能像期望的那样“兜底”：与其说是 SLA 是对用户的补偿，不如说 SLA 是对云厂商服务质量没达标时的“惩罚”。&lt;/p&gt;
&lt;p&gt;你以为给自己的服务上了保险可以高枕无忧，但 SLA 对用户来说不是兜底损失的保险单。在最坏的情况下，它是吃不了兜着走的哑巴亏。在最好的情况下，它才是提供情绪价值的安慰剂。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;杀猪盘真的降价了吗httpsmpweixinqqcoms__bizmzu5odayntm5ngmid2247485559idx1sn9279f44f0aa804a6e2698e503d5eaceascene21wechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485559&amp;idx=1&amp;sn=9279f44f0aa804a6e2698e503d5eacea&amp;scene=21#wechat_redirect&#34;&gt;杀猪盘真的降价了吗？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;存算资源降价跟不上摩尔定律发展其实就是变相涨价。但能看到有云厂商率先打起了降价第一枪，还是让人欣慰的：云厂商向 PLG 的康庄大道迈出了第一步：用技术优化产品，靠提高效率去降本，而不是靠销售吹逼打折杀猪。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;范式转移从云到本地优先httpsmpweixinqqcoms__bizmzu5odayntm5ngmid2247485301idx1sn2fb038f8b9f26c095d97eb0d87e8b262scene21wechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485301&amp;idx=1&amp;sn=2fb038f8b9f26c095d97eb0d87e8b262&amp;scene=21#wechat_redirect&#34;&gt;范式转移：从云到本地优先&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;软件吞噬世界，开源吞噬软件。云吞噬开源，谁来吃云？与云软件相对应的本地优先软件开始如雨后春笋一般出现。而我们，就在亲历见证这次范式转移。&lt;/p&gt;
&lt;p&gt;最终会有这么一天，公有云厂商与自由软件世界达成和解，心平气和地接受基础设施供应商的角色定位，为大家提供水与电一般的存算资源。而云软件终将会回归正常毛利，希望那一天人们能记得人们能记得，这不是因为云厂商大发慈悲，而是因为有人带来过&lt;strong&gt;开源平替&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;下云奥德赛篇&#34;&gt;下云奥德赛篇&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;下云奥德赛是时候放弃云计算了吗zhblogcloudodyssey&#34;&gt;&lt;a href=&#34;/zh/blog/cloud/odyssey&#34;&gt;下云奥德赛：是时候放弃云计算了吗？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下云先锋：&lt;strong&gt;David Heinemeier Hansson&lt;/strong&gt;，网名 DHH，37 Signal 联创与CTO，Ruby on Rails 作者，下云倡导者、实践者、领跑者。反击科技巨头垄断的先锋。&lt;/p&gt;
&lt;p&gt;DHH 下云已省下了近&lt;strong&gt;百万美元&lt;/strong&gt;云支出，未来的五年还能省下上&lt;strong&gt;千万美元&lt;/strong&gt;。我们跟进了下云先锋的完整进展，挑选了十四篇博文，译为中文，合辑为《下云奥德赛》，记录了他们从云上搬下来的波澜壮阔的完整旅程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;10-27 推特下云省掉 60% 云开销&lt;/li&gt;
&lt;li&gt;10-06 托管云服务的代价&lt;/li&gt;
&lt;li&gt;09-15 下云后已经省了百万美金&lt;/li&gt;
&lt;li&gt;06-23 我们已经下云了！&lt;/li&gt;
&lt;li&gt;05-03 从云遣返到主权云！&lt;/li&gt;
&lt;li&gt;05-02 下云还有性能回报？&lt;/li&gt;
&lt;li&gt;04-06 下云所需的硬件已就位！&lt;/li&gt;
&lt;li&gt;03-23 裁员前不先考虑下云吗？&lt;/li&gt;
&lt;li&gt;03-11 失控的不仅仅是云成本！&lt;/li&gt;
&lt;li&gt;02-22 指导下云的五条价值观&lt;/li&gt;
&lt;li&gt;02-21 下云将给咱省下五千万！&lt;/li&gt;
&lt;li&gt;01-26 折腾硬件的乐趣重现&lt;/li&gt;
&lt;li&gt;01-10 “企业级“替代品还要离谱&lt;/li&gt;
&lt;li&gt;2022-10-19 我们为什么要下云？&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;半年下云省千万dhh下云faq答疑httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247486660idx1snecd2371c822d737d41ffd9a6323f78fbchksmfe4b391fc93cb009f1927a142c02d0f72c13c94afe835c94ab7c4205ed819063592472b69d63scene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486660&amp;idx=1&amp;sn=ecd2371c822d737d41ffd9a6323f78fb&amp;chksm=fe4b391fc93cb009f1927a142c02d0f72c13c94afe835c94ab7c4205ed819063592472b69d63&amp;scene=21#wechat_redirect&#34;&gt;半年下云省千万：DHH下云FAQ答疑&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;DHH 与 X马斯克的下云举措在全球引发了激烈的讨论，有许多的支持者，也有许多的质疑者。面对众人提出的问题与质疑，DHH 给出了自己充满洞见的回复。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在硬件上省下的成本，会不会被更大规模的团队薪资抵消掉？&lt;/li&gt;
&lt;li&gt;为什么你选择下云，而不是优化云账单呢？&lt;/li&gt;
&lt;li&gt;那么安全性呢？你不担心被黑客攻击吗？&lt;/li&gt;
&lt;li&gt;不需要一支世界级超级工程师团队来干这些吗？&lt;/li&gt;
&lt;li&gt;这是否意味着你们在建造自己的数据中心？&lt;/li&gt;
&lt;li&gt;谁来做码放服务器、拔插网络电缆这些活呢？&lt;/li&gt;
&lt;li&gt;那么可靠性呢？难道云不是为你做到了这些吗？&lt;/li&gt;
&lt;li&gt;那国际化业务的性能呢？云不是更快吗？&lt;/li&gt;
&lt;li&gt;你有考虑到以后更换服务器的成本吗？&lt;/li&gt;
&lt;li&gt;那么隐私法规和GDPR呢？&lt;/li&gt;
&lt;li&gt;那么需求激增时怎么办？自动伸缩呢？&lt;/li&gt;
&lt;li&gt;你在服务合同和授权许可费上花费了多少？&lt;/li&gt;
&lt;li&gt;如果云这么贵，你们为什么会选择它？&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;下云高可用的秘诀拒绝智力自慰httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247486772idx1sn88783a2b7982f9db9e0b9ea4843fc2cbchksmfe4b38efc93cb1f9267d158ac9c52d9e0b9d1a24b765cbf034e3a52a25521aa20764a8bdc8d7scene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486772&amp;idx=1&amp;sn=88783a2b7982f9db9e0b9ea4843fc2cb&amp;chksm=fe4b38efc93cb1f9267d158ac9c52d9e0b9d1a24b765cbf034e3a52a25521aa20764a8bdc8d7&amp;scene=21#wechat_redirect&#34;&gt;下云高可用的秘诀：拒绝智力自慰&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下云之后，DHH 的几个业务都保持了 99.99% 以上的可用性。Basecamp 2 更是连续两年实现 100% 可用性的魔法。相当一部分归功于他们选择了简单枯燥、朴实无华的，复杂度很低，成熟稳定的技术栈 —— 他们并不需要 Kubernetes 大师或花哨的数据库与存储。&lt;/p&gt;
&lt;p&gt;程序员极易被复杂度所吸引，就像飞蛾扑火一样。系统架构图越复杂，&lt;strong&gt;智力自慰&lt;/strong&gt;的快感就越大。坚决抵制这种行为，是在云下自建保持稳定可靠的关键所在。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;云故障复盘篇&#34;&gt;云故障复盘篇&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;阿里云计算史诗级大翻车来了httpsmpweixinqqcoms__bizmzu5odayntm5ngmid2247486452idx1sn29cff4ee30b90483bd0a4f0963876f28scene21wechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486452&amp;idx=1&amp;sn=29cff4ee30b90483bd0a4f0963876f28&amp;scene=21#wechat_redirect&#34;&gt;【阿里】云计算史诗级大翻车来了&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2023年11月12日，也就是双十一后的第一天，阿里云发生了一场&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486452&amp;idx=1&amp;sn=29cff4ee30b90483bd0a4f0963876f28&amp;scene=21#wechat_redirect&#34;&gt;史诗级大翻车&lt;/a&gt;。根据阿里云官方的服务状态页，&lt;strong&gt;全球范围内所有可用区&lt;/strong&gt; x &lt;strong&gt;所有服务&lt;/strong&gt;全部都出现异常，时间从 17:44 到 21: 11，共计3小时27分钟。规模与范围创下全球云计算行业的历史纪录。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;阿里云周爆云数据库管控又挂了httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247486512idx1sn43d6340fce93bfbf5439cc2cd8e3b8ddchksmfe4b39ebc93cb0fd192c69d9f589ccd36f1c1eb5d34fffc357cf0b8177c746c4b3445ea5f63ascene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486512&amp;idx=1&amp;sn=43d6340fce93bfbf5439cc2cd8e3b8dd&amp;chksm=fe4b39ebc93cb0fd192c69d9f589ccd36f1c1eb5d34fffc357cf0b8177c746c4b3445ea5f63a&amp;scene=21#wechat_redirect&#34;&gt;阿里云周爆：云数据库管控又挂了&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;阿里云 &lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486452&amp;idx=1&amp;sn=29cff4ee30b90483bd0a4f0963876f28&amp;chksm=fe4b3e2fc93cb739af6ce49cffa4fa3d010781190d99d3052b4dbfa87d28c0386f44667e4908&amp;scene=21#wechat_redirect&#34;&gt;11. 12 大故障两周&lt;/a&gt; 过去，还没有看到官方的详细&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486468&amp;idx=1&amp;sn=7fead2b49f12bc2a2a94aae942403c22&amp;chksm=fe4b39dfc93cb0c92e5d4c67241de0519ae6a23ce6f07fe5411b95041accb69e5efb86a38150&amp;scene=21#wechat_redirect&#34;&gt;复盘报告&lt;/a&gt;，结果又来了一场大故障：中美7个区域的数据库管控宕了近两个小时。这一次和 11.12 故障属于让官方发全站公告的显著故障。&lt;/p&gt;
&lt;p&gt;11月份还有两次较小规模的局部故障。这种故障频率即使是对于草台班子来说也有些过分了。某种意义上说，阿里云这种&lt;strong&gt;周爆&lt;/strong&gt;可以凭一己之力，毁掉用户对公有云云厂商的托管服务的信心&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;我们能从阿里云史诗级故障中学到什么httpsmpweixinqqcoms__bizmzu5odayntm5ngmid2247486468idx1sn7fead2b49f12bc2a2a94aae942403c22scene21wechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486468&amp;idx=1&amp;sn=7fead2b49f12bc2a2a94aae942403c22&amp;scene=21#wechat_redirect&#34;&gt;我们能从阿里云史诗级故障中学到什么&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;时隔一年阿里云又出大故障，并创造了云计算行业闻所未闻的新记录 —— 全球所有区域/所有服务同时异常。
阿里云不愿意发布故障复盘报告，那我就来替他复盘 —— 我们应当如何看待这一史诗级故障案例，以及，能从中学习到什么经验与教训？&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;从降本增笑到真的降本增效httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247486527idx1sn8e26f644f2b908fd21c83b81d329155dchksmfe4b39e4c93cb0f22271127a154a6ac5c45947b2051b06b7667ee5c203d136b5d2e8f6577b10scene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486527&amp;idx=1&amp;sn=8e26f644f2b908fd21c83b81d329155d&amp;chksm=fe4b39e4c93cb0f22271127a154a6ac5c45947b2051b06b7667ee5c203d136b5d2e8f6577b10&amp;scene=21#wechat_redirect&#34;&gt;从降本增笑到真的降本增效&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;双十一刚过，阿里云就出了打破行业纪录的&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486452&amp;idx=1&amp;sn=29cff4ee30b90483bd0a4f0963876f28&amp;chksm=fe4b3e2fc93cb739af6ce49cffa4fa3d010781190d99d3052b4dbfa87d28c0386f44667e4908&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;全球史诗级大翻车&lt;/strong&gt;&lt;/a&gt;，然后开始了11月连环炸模式 —— 从月爆到周爆再到日爆。话音未落，&lt;strong&gt;滴滴&lt;/strong&gt;又出现了一场超过12小时，资损几个亿的大故障。&lt;/p&gt;
&lt;p&gt;年底正是冲绩效的时间，互联网大厂大事故却是一波接一波。硬生生把降本增效搞成了“&lt;strong&gt;降本增笑&lt;/strong&gt;” —— 这已经不仅仅是梗了，而是来自官方的自嘲。大厂故障频发，处理表现远远有失水准，乱象的背后到底是什么问题？&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;rds翻车篇&#34;&gt;RDS翻车篇&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;更好的开源rds替代pigstyhttpmpweixinqqcoms__bizmzu5odayntm5ngmid2247485518idx1sn3d5f3c753facc829b2300a15df50d237chksmfe4b3d95c93cb4833b8e80433cff46a893f939154be60a2a24ee96598f96b32271301abfda1fscene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485518&amp;idx=1&amp;sn=3d5f3c753facc829b2300a15df50d237&amp;chksm=fe4b3d95c93cb4833b8e80433cff46a893f939154be60a2a24ee96598f96b32271301abfda1f&amp;scene=21#wechat_redirect&#34;&gt;更好的开源RDS替代：Pigsty&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;我希望，未来的世界人人都有自由使用优秀服务的事实权利，而不是只能被圈养在几个公有云厂商提供的猪圈（Pigsty）里吃粑粑。这就是我要做 Pigsty 的原因 —— &lt;strong&gt;一个更好的，开源免费的 PostgreSQL RDS替代&lt;/strong&gt;。让用户能够在任何地方（包括云服务器）上，一键拉起有比云RDS更好的数据库服务。&lt;/p&gt;
&lt;p&gt;Pigsty 是对 PostgreSQL 的彻底补完，更是对云数据库的辛辣嘲讽。它本意是“猪圈”，但更是 Postgres In Great STYle 的缩写，即“&lt;strong&gt;全盛状态下的 PostgreSQL&lt;/strong&gt;”。它是一个完全基于开源软件的，可以运行在任何地方的，浓缩了 PostgreSQL 使用管理最佳实践的 Me-Better  RDS 开源替代。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;驳再论为什么你不应该招dbahttpsmpweixinqqcoms__bizmzu5odayntm5ngmid2247485335idx1snc37c2ee787fe4fc1b6909500c5f05583scene21wechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485335&amp;idx=1&amp;sn=c37c2ee787fe4fc1b6909500c5f05583&amp;scene=21#wechat_redirect&#34;&gt;驳《再论为什么你不应该招DBA》&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;云计算鼓吹者马工大放厥词说：云数据库可以取代 DBA。之前在《&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485292&amp;idx=2&amp;sn=5b08790e3d481833e11b95da476341d5&amp;chksm=fe4b32b7c93cbba1879591d45a39ad41fb4d6961ad2703cb1e533002d44d50a2ebb1845e98d6&amp;scene=21#wechat_redirect&#34;&gt;你怎么还在招聘DBA&lt;/a&gt;》，以及回应文《&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485269&amp;idx=1&amp;sn=a46b8b218331ece956c336b5c2a8df79&amp;chksm=fe4b328ec93cbb98434b258ed1bfa6c63aecd0f3675002db75520edd21456eb39e97455fe995&amp;scene=21#wechat_redirect&#34;&gt;云数据库是不是智商税&lt;/a&gt;》中，我们便已交锋过。&lt;/p&gt;
&lt;p&gt;当别人把屎盆子扣在这个行业所有人头上时，还是需要人来站出来说几句的。因此撰文以驳斥马工的谬论：《&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzkwODMyMDE2NQ==&amp;mid=2247483919&amp;idx=1&amp;sn=fa5b4dba96b60bafeb862e05de8c7ff5&amp;chksm=c0ca8ec5f7bd07d3375eab6bc1938ff741a167bf22008f25a702438393d20a754f30aa6bdfb9&amp;scene=21#wechat_redirect&#34;&gt;再论为什么你不应该招DBA&lt;/a&gt;》。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;云rds从删库到跑路httpsmpweixinqqcoms__bizmzu5odayntm5ngmid2247485093idx1sn5815f71f1d832101d35a75f5aa4acd3cscene21wechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485093&amp;idx=1&amp;sn=5815f71f1d832101d35a75f5aa4acd3c&amp;scene=21#wechat_redirect&#34;&gt;云RDS：从删库到跑路&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;用户都已经花钱买了‘开箱即用’的云数据库了，为什么连 PITR 恢复这么基本的兜底都没有呢？因为云厂商心机算计，把WAL日志归档/PITR这些PG的基础功能阉割掉，放进所谓的“高可用”版本高价出售。&lt;/p&gt;
&lt;p&gt;云数据库也是数据库，云数据库并不是啥都不用管的运维外包魔法，不当配置使用，一样会有数据丢失的风险。没有开启WAL归档就无法使用PITR，甚至无法登陆服务器获取现存WAL来恢复误删的数据。当故障发生时，用户甚至被断绝了自救的可能性，只能原地等死。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;数据库应该放入k8s里吗httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247486587idx1sn16521d6854711a4fe429464aeb2df6bdchksmfe4b39a0c93cb0b6d57c1345b79a6c87972e58eeed65831bc6ba8cf73d2a99d6a11d48d2f706scene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486587&amp;idx=1&amp;sn=16521d6854711a4fe429464aeb2df6bd&amp;chksm=fe4b39a0c93cb0b6d57c1345b79a6c87972e58eeed65831bc6ba8cf73d2a99d6a11d48d2f706&amp;scene=21#wechat_redirect&#34;&gt;数据库应该放入K8S里吗？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Kubernetes 作为一个先进的容器编排工具，在无状态应用管理上非常趁手；但其在处理有状态服务 —— 特别是 PostgreSQL 和 MySQL 这样的数据库时，有着本质上的局限性。&lt;/p&gt;
&lt;p&gt;将数据库放入 K8S 中会导致 &lt;strong&gt;“双输”&lt;/strong&gt; —— K8S 失去了无状态的简单性，不能像纯无状态使用方式那样灵活搬迁调度销毁重建；而数据库也牺牲了一系列重要的属性：可靠性，安全性，性能，以及复杂度成本，却只能换来有限的“弹性”与资源利用率 —— 但虚拟机也可以做到这些！对于&lt;strong&gt;公有云厂商之外&lt;/strong&gt;的用户来说，几乎都是弊远大于利。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;把数据库放入docker是一个好主意吗httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247486572idx1sn274a51976bf8ae5974beb1d3173380c1chksmfe4b39b7c93cb0a14c4d99f8ffd1e00c36b972a8058fd99e9d06e6035c4f378b6d327892260bscene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486572&amp;idx=1&amp;sn=274a51976bf8ae5974beb1d3173380c1&amp;chksm=fe4b39b7c93cb0a14c4d99f8ffd1e00c36b972a8058fd99e9d06e6035c4f378b6d327892260b&amp;scene=21#wechat_redirect&#34;&gt;把数据库放入Docker是一个好主意吗？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;对于无状态的应用服务而言，&lt;strong&gt;容器&lt;/strong&gt;是一个相当完美的开发运维解决方案。然而对于带持久状态的服务 —— 数据库来说，事情就没有那么简单了。我认为就目前而言，将生产环境数据库放入Docker / K8S 中仍然是一个馊主意。&lt;/p&gt;
&lt;p&gt;对于云厂商来说，使用容器的利益是自己的，弊端是用户的，他们有动机这样去做，但这样的利弊权衡对普通用户而言并不成立。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;云厂商画像篇&#34;&gt;云厂商画像篇&lt;/h2&gt;
&lt;p&gt;这个系列多数来自云计算鼓吹者马工，为本土云厂商与互联网大厂绘制了精准幽默，幽默滑稽的肖像。&lt;/p&gt;
&lt;h3 id=&#34;卡在政企客户门口的阿里云httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247486691idx1sn6858441ede03a6e700155390cf0086f4chksmfe4b3938c93cb02eb36992769204ec829f4a9fe55c37329546a1db6039301ddf47094dddf7e1scene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486691&amp;idx=1&amp;sn=6858441ede03a6e700155390cf0086f4&amp;chksm=fe4b3938c93cb02eb36992769204ec829f4a9fe55c37329546a1db6039301ddf47094dddf7e1&amp;scene=21#wechat_redirect&#34;&gt;卡在政企客户门口的阿里云&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;互联网故障背后的草台班子们httpsmpweixinqqcoms__bizmzu5odayntm5ngmid2247486590idx1snd4d85de483fafb867487f024631a3e6cscene21wechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486590&amp;idx=1&amp;sn=d4d85de483fafb867487f024631a3e6c&amp;scene=21#wechat_redirect&#34;&gt;互联网故障背后的草台班子们&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;云厂商眼中的客户又穷又闲又缺爱httpsmpweixinqqcoms__bizmzu5odayntm5ngmid2247486387idx1sn20ac92e33ed5a6b8e3120e99aefaf1ccscene21wechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486387&amp;idx=1&amp;sn=20ac92e33ed5a6b8e3120e99aefaf1cc&amp;scene=21#wechat_redirect&#34;&gt;云厂商眼中的客户：又穷又闲又缺爱&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;互联网技术大师速成班httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247486766idx1snb17b224eb2a2faa401957886cf7ea832chksmfe4b38f5c93cb1e3765c88f0cd4133090497527e50c747654f3e312c8db83f801b44bd562e74scene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486766&amp;idx=1&amp;sn=b17b224eb2a2faa401957886cf7ea832&amp;chksm=fe4b38f5c93cb1e3765c88f0cd4133090497527e50c747654f3e312c8db83f801b44bd562e74&amp;scene=21#wechat_redirect&#34;&gt;互联网技术大师速成班&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;门内的国企如何看门外的云厂商httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247486747idx1sn29cce4b791b274c966e05d2ce81ae09dchksmfe4b38c0c93cb1d6aa83c776f206791e79f172105c3f942a9a2e28da70889929ef3cb0c77839scene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486747&amp;idx=1&amp;sn=29cce4b791b274c966e05d2ce81ae09d&amp;chksm=fe4b38c0c93cb1d6aa83c776f206791e79f172105c3f942a9a2e28da70889929ef3cb0c77839&amp;scene=21#wechat_redirect&#34;&gt;门内的国企如何看门外的云厂商&lt;/a&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h2 id=&#34;阿里云专辑&#34;&gt;阿里云专辑&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/EDRmP7ninfSx-CgNDb8mpg&#34;&gt;阿里云新加坡可用区C故障，网传机房着火&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Yxyir8kjRDUZwkkE_dscZQ&#34;&gt;先优化碳基BIO核，再优化硅基CPU核&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;云计算泥石流系列原文链接&#34;&gt;云计算泥石流系列原文链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/YrDngnKQc_0juN1B3SPnNg&#34;&gt;云计算泥石流&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/yIVal-9U6_TXX-dZpVtjBg&#34;&gt;拒绝用复杂度自慰，下云也保稳定运行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/HathxpQ_KUuqxyrtyCDzWw&#34;&gt;扒皮对象存储：从降本到杀猪&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/xaa079P4DRCz0hzNovGoOA&#34;&gt;半年下云省千万：DHH下云FAQ答疑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/FIOB_Oqefx1oez1iu7AGGg&#34;&gt;从降本增笑到真的降本增效&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/3F1ud-tWB3eymu1-dxSHMA&#34;&gt;阿里云周爆：云数据库管控又挂了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/1OSRcBfd58s0tgZTUZHB9g&#34;&gt;重新拿回计算机硬件的红利&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/OIlR0rolEQff9YfCpj3wIQ&#34;&gt;我们能从阿里云史诗级故障中学到什么&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/cTge3xOlIQCALQc8Mi-P8w&#34;&gt;【阿里】云计算史诗级大翻车来了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/CicctyvV1xk5B-AsKfzPjw&#34;&gt;是时候放弃云计算了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/eag0CqfUTeNPbIB6TZqFVg&#34;&gt;云计算泥石流合集 —— 用数据解构公有云&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/H2S3TV-AsqS43A5Hh-XMhQ&#34;&gt;下云奥德赛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Yp_PU8nmyK-NVq0clD98RQ&#34;&gt;FinOps终点是下云&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/2w0bLJI7TvUNp1tzLYbvsA&#34;&gt;云计算为啥还没挖沙子赚钱？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/LC5jAhuVObRcrTLxI1FUQA&#34;&gt;云SLA是不是安慰剂？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Q0OtrpEhF24XN7gwMjbSRA&#34;&gt;技术反思录：正本清源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/TksQ108v_nGaW11-87Es3A&#34;&gt;杀猪盘真的降价了吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/UxjiUBTpb1pRUfGtR9V3ag&#34;&gt;公有云是不是杀猪盘？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/LefEAXTcBH-KBJNhXNoc7A&#34;&gt;云数据库是不是智商税&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ANFnbDXwuhKI99fgYRZ9ug&#34;&gt;垃圾腾讯云CDN：从入门到放弃&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/CMRrqI2yBWlNbACHpNgL1g&#34;&gt;驳《再论为什么你不应该招DBA》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Yp6L0hh4b4HuJQRPD3aJYw&#34;&gt;范式转移：从云到本地优先&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/AGEW1iHQkQy4NQyYC2GonQ&#34;&gt;云RDS：从删库到跑路&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/DJsDRO18saZaxe3oyzzYrA&#34;&gt;是时候和GPL说再见了&lt;/a&gt; 【译】&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/8ZffsCgchv8LH5ujv0lRGQ&#34;&gt;互联网技术大师速成班&lt;/a&gt;（转载瑞典马工）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/qSTEf9txjHNTHeEFv3NkWg&#34;&gt;门内的国企如何看门外的云厂商&lt;/a&gt; （转载思维南人）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/gPdeaWqFDRe131c78UBkSA&#34;&gt;卡在政企客户门口的阿里云&lt;/a&gt;（转载瑞典马工）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/OxhhJ4U1P43di_eaE1uGPw&#34;&gt;互联网故障背后的草台班子们&lt;/a&gt;（转载瑞典马工）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/y9IradwxTxOsUGcOHia1XQ&#34;&gt;云厂商眼中的客户：又穷又闲又缺爱&lt;/a&gt;（转载瑞典马工）&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 先优化碳基BIO核，再优化硅基CPU核</title>
      <link>/zh/blog/db/bio-core-cpu-core/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/bio-core-cpu-core/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/bio-core-cpu-core/featured_hu02aa61ae1d9de35cbe238d2676170cb9_978966_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;h2 id=&#34;先优化生物核再优化硅内核&#34;&gt;先优化生物核，再优化硅内核&lt;/h2&gt;
&lt;p&gt;企业痴迷于 AI 的一个重要原因是，它有可能显著降低程序员的薪酬成本。如果一个公司需要 10 名程序员完成一项任务，而每个程序员的年薪为 20 万美元，那这就是一个每年 200 万美元的问题。如果 AI 能砍掉四分之一的成本，他们就能省出 50 万美元！如果能砍一半那就是 100 万美元！提高效率在程序员的薪资成本上会很快转化为利润！&lt;/p&gt;
&lt;p&gt;这就是为什么我喜欢 Ruby！这就是我搞 Rails 的原因！过去 20 年，我一直坚信编程领域的趋势是：程序员的成本会越来越高，而计算机的成本却在不断下降。因此，聪明的做法是提高程序员的生产力，&lt;strong&gt;即使以牺牲计算机资源为代价&lt;/strong&gt;！&lt;/p&gt;
&lt;p&gt;很多程序员难以理解这一点 —— 他们实际上是非常昂贵的“生物计算核”，而且是真正稀缺的资源。而硅制计算内核却非常丰富，成本也在不断下降。所以随着时间推移，用计算机的时间换取程序员生产力的交易会越来越划算。AI 是实现此目标的方式之一，但像 Ruby on Rails 这样的工具从一开始关注的也是这个问题。&lt;/p&gt;
&lt;p&gt;我们再看看那个年薪 20 万美元的程序员。你可以从 Hetzner 租用 1 个 AMD EPYC CPU核，年租金是 55 美元（批发模式，一台 48 核的服务器月租金 220 $元，所以 220 x 12 / 48 = 55）。这意味着一个生物核的价格，相当于 3663 个硅基核。如果你能让生物核的效率提高 10%，你就相当于节省了 366 个硅核的成本。如果你能让生物核的效率提高 25%，那你就相当于节省了接近一千个硅基核！&lt;/p&gt;
&lt;p&gt;但是，许多“软绵绵的”生物编程内核对它们的硅制同类怀有一种独特的人类同情，这种情感超越了理性的数学计算。他们单纯地觉得 —— 自己可以花更多时间，通过使用对自己不高效、但对硅内核更高效的工具和技术，来减少硅内核的负担，而不是要求硅内核做更多的工作。对于某些人来说，减轻硅内核的负担几乎成了一种道德责任，似乎他们认为自己有义务尽量承担这些任务。&lt;/p&gt;
&lt;p&gt;从艺术和精神层面上讲，我其实还挺尊重这种做法的！让计算机用更少的资源完成更多任务，确实有一种美好的感觉。我依然对 Commodore 64 和 Amiga 时代的 Demo 充满怀念。当年那些技术高手仅用 &lt;a href=&#34;https://www.youtube.com/watch?v=wl6mXn_wHEw&#34;&gt;区区4KB&lt;/a&gt; 就能让计算机呈现出惊艳的音画效果，实在是令人难以置信。&lt;/p&gt;
&lt;p&gt;然而在大多数情况下，这种做法在经济上并不划算。当然，在计算性能的前沿阵地上依然需要有人去挖掘最后一丝性能。比如，需要有人从 NVIDIA 4090 显卡中榨干最后一滴性能，我们的 3D 引擎才能在 4K / 120FPS 下进行光线追踪。但这对于软件行业中的绝大多数业务场景都不现实 —— 它们的业务是写业务软件！对于这类工作，不需要什么史诗级优化，计算机在很久以前就已经足够快了。&lt;/p&gt;
&lt;p&gt;这也是我过去 20 年来，我一直在做的工作！开发业务软件并将其作为 SaaS 销售。整个行业都在做同样的事情，带来了巨大的利润和就业机会。这是一次历史性的牛市行情，主要由使用高级语言解决业务逻辑的程序员驱动 —— 他们找出产品与市场的契合点（PMF）来推动进步。&lt;/p&gt;
&lt;p&gt;所以，每当听到关于计算效率的讨论时，你应该想起这个“软绵绵的”生物核。世界上大多数软件的价格都是基于它们的人工成本，而不是所需的硅内核。因而哪怕只是稍微提高生物核的生产力，也值得在硅芯片采购上花大钱。而且这种成本效益的比例，只会年复一年更偏向于充分利用生物核。&lt;/p&gt;
&lt;p&gt;—— 至少在 AGI 霸主到来前，生物核都不会彻底过时！但没有人知道这一天何时会来，或者是否会到来。所以最好着眼于当下的经济学，选择对你来说最能提高生产力的工具链，并相信快乐的程序员将是你投资中最划算的一笔。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：David Heinemeier Hansson，DHH，37 Signal CTO，Ruby on Rails 作者&lt;/p&gt;
&lt;p&gt;译者：冯若航，PostgreSQL Hacker，开源 RDS PG —— Pigsty 作者，数据库老司机，云计算泥石流。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://world.hey.com/dhh/optimize-for-bio-cores-first-silicon-cores-second-112a6c3f&#34;&gt;优先优化生物内核，其次是硅内核&lt;/a&gt; @ 2024-09-06&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;老冯评论&#34;&gt;老冯评论&lt;/h2&gt;
&lt;p&gt;DHH 的博客一如既往地充满洞见 —— 虽然事实听上去可能并不讨喜，但程序员本质上也是一种生物计算核 —— Bio Core ，而很多程序员已经忘记了这一点。&lt;/p&gt;
&lt;p&gt;实际上在一百年前，Computer 指的还是 “计算员” 而非 “计算机”；而在上世纪四五十 年代，算力的衡量单位更一度是 ——  “Kilo-Girls”，即一千名女孩的计算速度，类似的单位还有 &lt;code&gt;kilo-girl-hour&lt;/code&gt; 等。当然，随着信息技术的突飞猛进，这些枯燥乏味的计算活计都交给计算机了，程序员得以专注于更高层次的抽象和创造。&lt;/p&gt;
&lt;p&gt;对于我所在的数据库行业，我认为这篇文章能带给用户的一个启示是 —— 数据库的真正瓶颈早就不是 CPU 硅基核了，而是能用好数据库的生物核。对于绝大多数用例，数据库的瓶颈早已不再是 CPU，内存， I/O，网络，存储，而是开发者与 DBA 的思维，认知，经验，智慧。&lt;/p&gt;
&lt;p&gt;因此，没人会在乎你的数据库能否支持 100 万 TPS，而是你的软件是否能用最小的时间成本，复杂度成本，认知成本解决问题。
易用性、简单性、可维护性成为了竞争的焦点 —— 专注于此道的 RDS 数据库服务也因此大获成功（同理还有 Neon, Supabase，Pigsty 等）。&lt;/p&gt;
&lt;p&gt;像 AWS 这样的云厂商拿着开源的 MySQL 和 PostgreSQL 内核一路杀到了数据库市场一哥的位置，是因为 AWS 比 Oracle / EDB 有更深的数据库内核造诣，懂得如何利用硅基核吗？非也。而是因为比起优化硅基核，他们更懂得如何优化生物核 —— 他们懂得如何让开发者，DBA，运维更容易用好数据库 —— 用好数据库，而非制造数据库，成为了新的核心瓶颈点。&lt;/p&gt;
&lt;p&gt;所以，传统数据库内核是一个夕阳产业，将与格力空调，联想电脑一样成为低毛利的制造业。 而真正的高科技与技术创新，将发生在数据库管控上 —— 用软件辅助、赋能、甚至冒天下之大不韪的“替代” 一部分开发者 —— 如何用好数据库内核与硅基CPU核，提高生物核的生产力，降低认知成本，简化复杂度，提高易用性。这才是未来数据库行业的发展方向。&lt;/p&gt;
&lt;p&gt;高科技行业就是要依靠技术创新驱动。如果你能用开源 PG 内核替代 Oracle ，SQL Server，那别人也能 —— 最好的结果无非就是甲骨文微软都放弃传统数据库转型做云服务，传统数据库成为低利润的制造业。正如二十年的 PC 行业一样。二十年前 IBM 戴尔惠普都是国际玩家，中国联想说要做到世界一流。今天看联想确实做到了，但是 PC 行业早就不是高科技行业了，只是一个最无聊普通的制造业。&lt;/p&gt;
&lt;p&gt;即使是在国内看起来很能打的&lt;a href=&#34;/zh/blog/db/distributive-bullshit&#34;&gt;真自研分布式数据库内核&lt;/a&gt;，如果选错了赛道，那所能期待的最好结局也不过是成为数据库行业的长虹，赚五个点的利润。然后被拿着开源 PostgreSQL 内核提供服务的 云厂商 RDS 和本地优先 RDS 骑脸输出，最终成为数据库领域的 “Kilo-Girl”。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;optimize-for-bio-cores-first-silicon-cores-second&#34;&gt;Optimize for bio cores first, silicon cores second&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;David Heinemeier Hansson 2024-09-06&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://world.hey.com/dhh/optimize-for-bio-cores-first-silicon-cores-second-112a6c3f&#34;&gt;Optimize for bio cores first, silicon cores second&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A big part of the reason that companies are going ga-ga over AI right now is the promise that it might materially lower their payroll for programmers. If a company currently needs 10 programmers to do a job, each have a cost of $200,000/year, then that&amp;rsquo;s a $2m/year problem. If AI could even cut off 1/4 of that, they would have saved half a million! Cut double that, and it&amp;rsquo;s a million. Efficiency gains add up quick on the bottom line when it comes to programmers!&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s why I love Ruby! That&amp;rsquo;s why I work on Rails! For twenty years, it&amp;rsquo;s been clear to me that this is where the puck was going. Programmers continuing to become more expensive, computers continuing to become less so. Therefore, the smart bet was on making those programmers more productive EVEN AT THE EXPENSE OF THE COMPUTER!&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s what so many programmers have a difficult time internalizing. They are in effect very expensive biological computing cores, and the real scarce resource. Silicon computing cores are far more plentiful, and their cost keeps going down. So as every year passes, it becomes an even better deal trading compute time for programmer productivity. AI is one way of doing that, but it&amp;rsquo;s also what tools like Ruby on Rails were about since the start.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s return to that $200,000/year programmer. You can rent 1 AMD EPYC core from Hetzner for $55/year (they sell them in bulk, $220/month for a box of 48, so 220 x 12 / 48 = 55). That means the price of one biological core is the same as the price of 3663 silicon cores. Meaning that if you manage to make the bio core 10% more efficient, you will have saved the equivalent cost of 366 silicon cores. Make the bio core a quarter more efficient, and you&amp;rsquo;ll have saved nearly ONE THOUSAND silicon cores!&lt;/p&gt;
&lt;p&gt;But many of these squishy, biological programming cores have a distinctly human sympathy for their silicon counterparts that overrides the math. They simply feel bad asking the silicon to do more work, if they could spend more of their own time to reduce the load by using less efficient for them / more efficient for silicon tools and techniques. For some, it seems to be damn near a moral duty to relieve the silicon of as many burdens they might believe they&amp;rsquo;re able carry instead.&lt;/p&gt;
&lt;p&gt;And I actually respect that from an artsy, spiritual perspective! There &lt;em&gt;is&lt;/em&gt; something beautifully wholesome about making computers do more with fewer resources. I still look oh-so-fondly back on the demo days of the Commodore 64 and Amiga. What those wizards were able to squeeze out of &lt;a href=&#34;https://www.youtube.com/watch?v=wl6mXn_wHEw&#34;&gt;a mere 4kb&lt;/a&gt; to make the computer dance in sound and picture was truly incredible.&lt;/p&gt;
&lt;p&gt;It just doesn&amp;rsquo;t make much economic sense, most of the time. Sure, there&amp;rsquo;s still work at the vanguard of the computing threshold. Somebody&amp;rsquo;s gotta squeeze the last drop of performance out of that NVIDIA 4090, such that our 3D engines can raytrace at 4K and 120FPS. But that&amp;rsquo;s not the reality at most software businesses that are in the business of making business software (say that three times fast!). Computers have long since been way fast enough for that work to happen without heroic optimization efforts.&lt;/p&gt;
&lt;p&gt;And that&amp;rsquo;s the kind of work I&amp;rsquo;ve been doing for said twenty years! Making business software and selling it as SaaS. That&amp;rsquo;s what an entire industry has been doing to tremendous profit and gainful employment across the land. It&amp;rsquo;s been a bull run for the ages, and it&amp;rsquo;s been mostly driven by programmers working in high-level languages figuring out business logic and finding product-market fit.&lt;/p&gt;
&lt;p&gt;So whenever you hear a discussion about computing efficiency, you should always have the squishy, biological cores in mind. Most software around the world is priced on their inputs, not on the silicon it requires. Meaning even small incremental improvements to bio core productivity is worth large additional expenditures on silicon chips. And every year, the ratio grows greater in favor of the bio cores.&lt;/p&gt;
&lt;p&gt;At least up until the point that we make them obsolete and welcome our AGI overlords! But nobody seems to know when or if that&amp;rsquo;s going to happen, so best you deal in the economics of the present day, pick the most productive tool chain available to you, and bet that happy programmers will be the best bang for your buck.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: MongoDB没有未来：好营销救不了烂芒果</title>
      <link>/zh/blog/db/bad-mongo/</link>
      <pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/bad-mongo/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/bad-mongo/featured_hu02aa61ae1d9de35cbe238d2676170cb9_950024_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;p&gt;这两天 MongoDB 整的营销花活让人眼花缭乱：《&lt;a href=&#34;https://mp.weixin.qq.com/s/ypV31fanKB6ZsFzuRYTwmQ&#34;&gt;MongoDB向PostgreSQL宣战&lt;/a&gt;》，《&lt;a href=&#34;https://mp.weixin.qq.com/s/SJw6S6k82bxOq1pWP3kDfw&#34;&gt;MongoDB 击败 PostgreSQL 赢下价值 300 亿美元项目&lt;/a&gt;》，以及原文 The Register 的《&lt;a href=&#34;https://www.theregister.com/2024/08/30/mongodb_postgresql/&#34;&gt;MongoDB在战胜强敌之后准备乱拳干翻 PostgreSQL&lt;/a&gt;》，活生生一副要乱拳打死老师傅的架势。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;300b.jpg&#34; src=&#34;/zh/blog/db/bad-mongo/300b.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;有朋友得意洋洋的特意转给我想看 PG 的笑话，这着实让我感到无奈 —— &lt;strong&gt;这么离谱的新闻都有人信！&lt;/strong&gt; 但事实是 —— &lt;strong&gt;这么离谱的东西真就有人信！&lt;/strong&gt; 包括某些CEO也照样会中招翻车。诚如石破天祖师爷所说：“&lt;strong&gt;永远不要低估好营销对烂产品的影响&lt;/strong&gt;”。&lt;/p&gt;
&lt;p&gt;把东西卖给估值300亿的公司，和做 300 亿的项目完全是两码事。当然，这不能怪人家眼拙，这是 MongoDB &lt;strong&gt;在营销上的一贯伎俩&lt;/strong&gt; —— 如果不仔细看原文，很难区分这个 300 亿指的是项目价值还是公司估值。&lt;/p&gt;
&lt;p&gt;在当下，MongoDB 在产品和技术上乏善可陈；在正确性，性能，功能以及各种维度上被 PostgreSQL 按在地上摩擦；在开发者中的流行度与口碑，以及DB-Engine 热度都不断下滑，MongoDB 公司本身也不赚钱，股价也刚经过大腰斩，亏损继续扩大；“营销” 也许是 MongoDB 唯一能拿出手的东西了。&lt;/p&gt;
&lt;p&gt;然而诚信是商业的根本，“好营销救不了烂芒果”，建立在谎言与忽悠之上的营销不会有好下场。今天我就来带大家看看，MongoDB 营销的锦绣丝绸被套里，填进去的都是些什么烂棉花。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;烂产品靠营销上位&#34;&gt;烂产品靠营销上位&lt;/h2&gt;
&lt;p&gt;图灵奖得主，数据库祖师爷 Stonebraker 老爷子在最近在 SIGMOD 2024 发表的名著级论文《&lt;a href=&#34;https://db.cs.cmu.edu/papers/2024/whatgoesaround-sigmodrec2024.pdf&#34;&gt;What goes around comes around&amp;hellip; And Around&lt;/a&gt;》中对此有过精辟的评价：“绝对不要低估好营销对&lt;strong&gt;烂产品&lt;/strong&gt;的影响 —— &lt;strong&gt;比如 MySQL 与 MongoDB&lt;/strong&gt;”。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/db/bad-mongo/stonebraker.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个世界上有许多烂数据库 —— 但能用三寸不烂之舌把烂货成功吹成宝贝卖出去的，MongoDB 说自己是第一，MySQL 也只自认老二屈居人下。&lt;/p&gt;
&lt;p&gt;在所有关于 MongoDB 大忽悠的故事中，最让人印象深刻的是 LinkedIn 上的这篇《&lt;a href=&#34;https://mp.weixin.qq.com/s/e3_32Neoy5RVRBSozsa_7A&#34;&gt;MongoDB 3.2 —— 现由 PostgreSQL 强力驱动&lt;/a&gt;》 。
这篇文章的精彩之处在于，它是由 MongoDB 合作伙伴发出的血泪控诉：MongoDB 无视了自己合作伙伴的忠言劝告，拿了一个 PostgreSQL 伪装成自己的分析引擎，并在发布会上忽悠用户。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/db/bad-mongo/mongo-powered-by-pg.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;作者作为 MongoDB 在分析领域的合作伙伴彻底灰心丧气，公开撰文发起控诉 —— “&lt;em&gt;MongoDB 的分析引擎是一个 PostgreSQL ，那你们真还不如直接去用 PostgreSQL&lt;/em&gt;”。&lt;/p&gt;
&lt;p&gt;像这样刻意造假忽悠的案例绝非个例，MongoDB 还在贬低同业产品自抬身价上有诸多记录。例如在官网文章《&lt;a href=&#34;https://www.mongodb.com/resources/compare/mongodb-postgresql/dsl-migrating-postgres-to-mongodb&#34;&gt;从PostgreSQL迁移到MongoDB&lt;/a&gt;》中，MongoDB 宣称自己是 “&lt;strong&gt;可扩展灵活的新一代现代通用数据库&lt;/strong&gt;”，
而 PostgreSQL 是 “&lt;strong&gt;复杂且容易出错的老旧单片关系数据库&lt;/strong&gt;”。完全无视了其实自己在整体的性能，功能，正确性，甚至自己标榜的应对大数据量的吞吐与可伸缩性上完全被 PostgreSQL 吊打的事实。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;功能被pgsql覆盖&#34;&gt;功能被PGSQL覆盖&lt;/h2&gt;
&lt;p&gt;JSON 文档确实是一个很受互联网应用开发者喜爱的特性。然而提供这一能力的数据库并非只有 MongoDB 。PostgreSQL 在十年前就已经提供了 SOTA 水平的 JSON 支持，并且仍然在不断演进改善。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/db/bad-mongo/pg-jsonb.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;PostgreSQL 的 JSON 支持是所有关系型数据库中最成熟与最早的（2012-2014），早于 SQL/JSON 标准或者说直接影响了 SQL/JSON 标准建立（2016）。
更重要的是，它的文档特性实现质量很高。相比之下 —— 同样在营销上号称支持 JSON 的MySQL，实际上是个简陋的 BLOB 换皮，&lt;a href=&#34;https://mp.weixin.qq.com/s/JgGCn9o2-DNPNqazPZXTtA&#34;&gt;跟 9.0 向量类型有一拼&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;数据库祖师爷 Stonebraker 表示过，带有可扩展类型的关系模型早已覆盖了数据库世界的各个角落，而 NoSQL 运动是数据库发展历史上的一段弯路：&lt;strong&gt;关系模型是向下兼容文档模型的&lt;/strong&gt;。
文档模型跟几十年前范式化 vs 反范式化的大讨论实质是一样的 —— 1.只有有任何非一对多的关系，就会出现数据重复；2. 用预计算的JOIN未必比现场JOIN更快；3 数据没有独立性。
用户可以假设自己的应用场景是独立 KV 式缓存访问，但哪怕只要添加一个稍微复杂一点的功能，开发者就会面临几十年前就讨论过的数据重复困境。&lt;/p&gt;
&lt;p&gt;PostgreSQL 在功能上是 MongoDB 的上位替代，所以可以对 MongoDB 的用例做到向下兼容 —— PostgreSQL 能做的MongoDB 做不了；而 MongoDB 能做的 PostgreSQL 也能做：你可以在PG中创建一个只有 &lt;code&gt;data JSONB&lt;/code&gt; 列的表，然后使用各种 JSON 查询与索引来处理这里的数据；如果你确实觉得花几秒钟建表仍然是一个额外负担，那么在生态中还有各种各样基于 PostgreSQL 提供 MongoDB API，甚至 MongoDB 线缆协议的解决方案。&lt;/p&gt;
&lt;p&gt;例如，FerretDB 项目通过中间件的方式在 PostgreSQL 集群上实现了 MongoDB 线缆协议兼容性 —— MongoDB 应用甚至都不需要更换客户端驱动，修改业务代码就能迁移到 PostgreSQL 上。
（另一被原位兼容的是 &lt;a href=&#34;https://mp.weixin.qq.com/s/c2TmMo0DflkSUli1BsLthQ&#34;&gt;SQL Server&lt;/a&gt; ）； PongoDB 则是直接在 NodeJS 客户端驱动侧将 PG 仿真成一个 MongoDB。
此外还有 &lt;code&gt;mongo_fdw&lt;/code&gt;，可以让 PG 从 MongoDB 中用 SQL 读取数据，&lt;code&gt;wal2mongo&lt;/code&gt; 将 PG 变更抽取为 BSON。&lt;/p&gt;
&lt;p&gt;例如 &lt;a href=&#34;/zh/blog/pg/ferretdb&#34;&gt;&lt;strong&gt;FerretDB&lt;/strong&gt;&lt;/a&gt; 项目通过中间件的方式在 PostgreSQL 集群上实现了 MongoDB 线缆协议兼容性 —— MongoDB 应用甚至都不需要更换客户端驱动，修改业务代码就能迁移到 PostgreSQL 上。（另一被原位线缆兼容的是 &lt;a href=&#34;/zh/blog/pg/pg-replace-mssql&#34;&gt;&lt;strong&gt;SQL Server&lt;/strong&gt; &lt;/a&gt;）；&lt;strong&gt;PongoDB&lt;/strong&gt; 则是直接在 NodeJS 客户端驱动侧将 PG 仿真成一个 MongoDB。此外还有 &lt;code&gt;mongo_fdw&lt;/code&gt;，可以让 PG 从 MongoDB 中用 SQL 读取数据，&lt;code&gt;wal2mongo&lt;/code&gt; 将 PG 变更抽取为 BSON。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;ferret.webp&#34; src=&#34;/zh/blog/db/bad-mongo/ferret.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;在易用性上，各家云厂商都推出了开箱即用的 PG RDS 服务，想要开源自建也有 &lt;a href=&#34;https://pigsty.cc/zh/&#34;&gt;&lt;strong&gt;Pigsty&lt;/strong&gt;&lt;/a&gt; 这样开箱即用的解决方案，还有 Serverless 的 Neon 更是让PG上手门槛低到一行命令就能直接用起来。&lt;/p&gt;
&lt;p&gt;此外，相比于 MongoDB 使用的 SSPL 协议（已经不再是一个开源协议了），PostgreSQL 使用的类 BSD 开源协议显然要友善的多，PG可以在不需要软件授权费的情况下，提供更好的上位功能替代 —— Do more pay less! 不赢都难。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;正确性与性能被吊打&#34;&gt;正确性与性能被吊打&lt;/h2&gt;
&lt;p&gt;对于数据库来说，&lt;strong&gt;正确性至关重要&lt;/strong&gt; —— 中立的分布式事务测试框架 JEPSEN 对 MongoDB 的正确性做过评测：结果可以用 “&lt;strong&gt;一塌糊涂&lt;/strong&gt;”形容（BTW：另一个难兄难弟是 &lt;a href=&#34;/zh/blog/db/bad-mysql&#34;&gt;&lt;strong&gt;MySQL&lt;/strong&gt;&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;当然，MongoDB 的强项就是面不改色心不跳的 “忽悠“，尽管 JEPSEN 提了这么多的问题，在 MongoDB 官网上，关于 Jespen 的评测是这么介绍的：”&lt;em&gt;到目前为止，因果一致性通常仅限于研究项目&amp;hellip;&amp;hellip;MongoDB 是我们所知的第一个提供实现的商业数据库之一&lt;/em&gt;“&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/db/bad-mongo/jepsen-mongo.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个例子再次体现了 MongoDB 在营销上的脸皮 —— 用一种极其精致的语言艺术，从一大坨 Bullshit 中精心挑选出了一颗未消化的花生米，而一笔带过在正确性/一致性上的各种致命硬伤。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;另一个有趣的点是&lt;strong&gt;性能&lt;/strong&gt;。作为一个专用的文档数据库，&lt;strong&gt;性能&lt;/strong&gt; 应当是其相对于通用数据库的杀手级特性。&lt;/p&gt;
&lt;p&gt;先前有一篇《《&lt;a href=&#34;https://mp.weixin.qq.com/s/V4V5eTWEb02NBIO5kfZt7A&#34;&gt;从 MongoDB 到 PostgreSQL 的大迁移&lt;/a&gt;》引发了 MongoDB 用户的关注，我的用户群里有位朋友 @flyingcrp 问了这样一个问题 —— 为什么PG上的一个插件或者功能点就能顶得上别人一个完整的产品？&lt;/p&gt;
&lt;p&gt;当然也不乏持相反观点的朋友 —— PG的 JSON 性能肯定比不过细分领域的专业产品 —— 一个专用数据库如果连性能都干不过通用数据库，那还活个什么劲儿？&lt;/p&gt;
&lt;p&gt;这个讨论引起了我的兴趣，这些命题成立吗？于是，我做了一些简单的检索与研究，结果发现了一些非常有趣且震惊的结论：例如，在 MongoDB 的看家本领 —— JSON 存储与检索性能上，PostgreSQL 已经吊打 MongoDB 了。&lt;/p&gt;
&lt;p&gt;来自 ONGRES 与 EDB 的一份 &lt;a href=&#34;https://info.enterprisedb.com/rs/069-ALB-339/images/PostgreSQL_MongoDB_Benchmark-WhitepaperFinal.pdf&#34;&gt;PG vs Mongo 性能对比评测报告&lt;/a&gt;  详细对比了两者在 OLTP / OLAP 上的性能，结果一目了然。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/db/bad-mongo/mongo-pg-bench.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;另一份更近一点的&lt;a href=&#34;https://medium.com/@yurexus/can-postgresql-with-its-jsonb-column-type-replace-mongodb-30dc7feffaf3&#34;&gt;性能对比&lt;/a&gt; 着重测试了 JSONB / GIN 索引下的表现对比，得出的结论也是：PostgreSQL JSONB 列是 MongoDB 的替代。&lt;/p&gt;
&lt;p&gt;在当下，&lt;a href=&#34;/zh/blog/pg/pg-performence&#34;&gt;&lt;strong&gt;单机 PostgreSQL 性能&lt;/strong&gt;&lt;/a&gt; 可以轻松 Scale 到几十TB ～ 几百TB数量级，支撑几十万的点写入 QPS 与几百万的点查询 QPS。只用 PostgreSQL 支撑业务到百万日活 / 百万美元营收甚至直接 IPO 都毫无问题。&lt;/p&gt;
&lt;p&gt;老实说，MongoDB 的性能已经完全跟不上时代了，而它引以为傲的“内置分片”可伸缩性，&lt;a href=&#34;/zh/blog/pg/pg-scalability&#34;&gt;&lt;strong&gt;在软件架构与性能突飞猛进&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&#34;/zh/blog/cloud/bonus&#34;&gt;&lt;strong&gt;硬件遵循摩尔定律指数发展&lt;/strong&gt;&lt;/a&gt; 的当下显得毫无意义。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;流行度热度在衰退&#34;&gt;流行度热度在衰退&lt;/h2&gt;
&lt;p&gt;如果我们观察 DB-Engine 热度分数，不难看出过去十年中，拥有最大增长的两个数据库就是 PostgreSQL 与 MongoDB 。可以说这两者是移动互联网时代中数据领域的最大赢家。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-engine.png&#34; src=&#34;/zh/blog/db/bad-mongo/db-engine.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;但它们的区别在于，PostgreSQL 仍然在继续增长，甚至已经在 StackOverflow 全球开发者调研中，连续三年成为 &lt;a href=&#34;/zh/blog/pg/pg-in-2024&#34;&gt;&lt;strong&gt;最流行的数据库&lt;/strong&gt;&lt;/a&gt; 并势头不减赢麻了。而 MongoDB 在 2021 年开始就掉头向下开始过气。使用率，口碑，需求度都出现了停滞或扭头向下的发展趋势：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;sf-metric.png&#34; src=&#34;/zh/blog/db/bad-mongo/sf-metric.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 StackOverflow 年度全球开发者调研中，提供了主要的数据库用户的转移关系图。不难看出，MongoDB 用户的最大流出项就是 PostgreSQL。而会去使用 MongoDB 的往往是 MySQL 用户。&lt;/p&gt;
&lt;p&gt;MongoDB 和 MySQL 属于那种典型的 “面向初学者” 的数据库，针对小白做了许多无底线讨好性的妥协设计 —— 从统计中不难看出它们在新手中的使用率比专业开发者中更高。
与之相反的则是 PostgreSQL，在专业开发者中的使用比例要比新手中高得多。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/db/bad-mongo/transition.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;任何开发者都会经历初学者状态，我最初也是从 MySQL / Mongo 开始与数据库打交道的，但很多人就止步于此，而有追求的工程师则会不断学习进步，提升自己的品味与技术鉴别力，使用更好用、更强大的技术来更新自己的武器库。&lt;/p&gt;
&lt;p&gt;而趋势是：越来越多的用户在提升的过程中，从 MongoDB 和 MySQL 迁移到了上位替代 PostgreSQL 中。从而成就了新一代世界上最流行的数据库 —— PostgreSQL。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;风评已然臭不可闻&#34;&gt;风评已然臭不可闻&lt;/h2&gt;
&lt;p&gt;许多使用过 MongoDB 的开发者都对其留下了极其恶劣的印象，包括我自己。我上一次和 MongoDB 打交道是在 2016 年。我们部门先前用 MongoDB 搭建了一套实时统计平台，存放全网应用下载/安装/启动计数器，几 TB 规模的数据。我负责把这套在线业务的 MongoDB 迁移到 PostgreSQL。&lt;/p&gt;
&lt;p&gt;在这个过程中，我对 MongoDB 留下了&lt;strong&gt;糟糕的印象&lt;/strong&gt; —— 我花费了很多时间清洗 MongoDB 中模式错乱的垃圾数据。包括一些匪夷所思的问题（比如 Collection 里有整本的小说，SQL 注入的脚本，非法的零字符、Unicode码位与Surrogate Pair，各种花里胡哨的模式），堪称是一个史诗级的垃圾箱。&lt;/p&gt;
&lt;p&gt;在这个过程中，我也深入研究了 MongoDB 的查询语言，并将其翻译为标准 SQL。我甚至使用 Multicorn 写了一个 MongoDB 的外部数据源包装器 FDW 来做到这一点，顺便还水了篇 &lt;a href=&#34;https://vonng.com/pdf/unified_access_layer_with_postgresql_fdw.pdf&#34;&gt;关于 Mongo/HBase FDW 的论文&lt;/a&gt;。（比较巧的是，我那时候确实不知道 —— MongoDB 官方竟然也是这么用FDW干分析的！）&lt;/p&gt;
&lt;p&gt;总体来说，在这趟深度使用与迁移过程中，我对 MongoDB 感到非常失望，感觉到自己的时间被毫无意义的东西给浪费掉了。
当然后来我也发现，并不是只有我一个人有这种感受，在 HN 和 Reddit 上有无数关于 MongoDB 的嘲讽与吐槽：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://developer.olery.com/blog/goodbye-mongodb-hello-postgresql/&#34;&gt;告别 MongoDB。迎接 PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.enterprisedb.com/postgres-plus-edb-blog/marc-linster/postgres-outperforms-mongodb-and-ushers-new-developer-reality&#34;&gt;Postgres 性能优于 MongoDB，并引领开发者新现实&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/errbit/errbit/issues/614&#34;&gt;MongoDB 已死。PostgreSQL 万岁 :)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/&#34;&gt;你永远不应该使用 MongoDB 的理由&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.airpair.com/postgresql/posts/sql-vs-nosql-ko-postgres-vs-mongo&#34;&gt;SQL vs NoSQL 决斗。Postgres vs Mongo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svs.io/post/31724990463/why-i-migrated-away-from-mongodb&#34;&gt;为什么我放弃了 MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/&#34;&gt;为什么你永远永远永远不该使用 MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aptuz.com/blog/is-postgres-nosql-database-better-than-mongodb/&#34;&gt;Postgres NoSQL 比 MongoDB 更好吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.userlike.com/en/blog/2015/10/09/bye-by-mysql-and-mongodb-guten-tag-postgresql&#34;&gt;再见 MongoDB。你好 PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;关于这篇《MongoDB挑战PG》的新闻，HN评论区是这样的：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;hackernews.png&#34; src=&#34;/zh/blog/db/bad-mongo/hackernews.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;关于 MongoDB，Reddit 里的评论是这样的：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;reddit-comment.png&#34; src=&#34;/zh/blog/db/bad-mongo/reddit-comment.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;能让开发者专门抽出时间写文章来骂它，MongoDB 的恶劣营销功不可没：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;blog.png&#34; src=&#34;/zh/blog/db/bad-mongo/blog.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;能让合作伙伴&lt;a href=&#34;https://mp.weixin.qq.com/s/e3_32Neoy5RVRBSozsa_7A&#34;&gt;破口大骂，吹哨揭发&lt;/a&gt;，我看 MongoDB 也是独此一家：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;shotgun.png&#34; src=&#34;/zh/blog/db/bad-mongo/shotgun.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;mongodb没有未来&#34;&gt;MongoDB没有未来&lt;/h2&gt;
&lt;p&gt;Stonebraker 表示过，带有可扩展类型的关系模型早已覆盖了数据库世界的各个角落，而 NoSQL 运动是数据库发展历史上的一段弯路。
《种瓜得瓜》一文认为未来文档数据库的发展趋势是向关系数据库靠拢，重新把自己当初“鄙视”的 SQL / ACID 给加回来，以弥补自己与 RDBMS 的智力差距，最终趋同于 RDBMS 。&lt;/p&gt;
&lt;p&gt;但是问题就来了，如果这些文档数据库最终还是要变成关系数据库，那么为什么不直接用 PostgreSQL 关系数据库呢？难道用户可以指望 MongoDB 这孤家寡人的一家商业数据库公司，能够在这个赛道赶上整个 PostgreSQL 开源生态？—— 这个生态可是包含了几乎所有软件/云/科技巨头在内 —— &lt;strong&gt;能战胜一个生态的，只有另一个生态&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在 MongoDB 不断重新发明 RDBMS 世界的各种轮子，拙劣地跟在 PG 后面亦步亦趋补课，又同时把 PG 描述为 “复杂且容易出错旧的单片关系数据库” 时。PostgreSQL 已经成长为一个超出 MongoDB 想象的多模态超融合数据库，它已经通过几百个扩展插件成为&lt;a href=&#34;/zh/blog/pg/pg-eat-db-world&#34;&gt;&lt;strong&gt;数据库领域的全能王霸主&lt;/strong&gt;&lt;/a&gt;。JSON 仅仅是其武库中的冰山一角，还有 XML，全文检索，向量嵌入，AIML，地理信息，时序数据，分布式，消息队列，FDW，以及二十多种存储过程语言支持。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;ecosystem.jpg&#34; src=&#34;/zh/blog/db/bad-mongo/ecosystem.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用 PostgreSQL ，你可以做到许多超出想象的事情：你可以在数据库内发 HTTP 请求，用XPATH 解析，用 Cron 插件调度写爬虫，原地入库后用机器学习扩展分析，调用大模型创建向量Embedding 用图扩展构建知识图谱，用包括JS在内的二十多种语言编写存储过程，并在库内拉起 HTTP 服务器对外 Serve。这种匪夷所思的能力是 MongoDB 以及其他“纯”关系型数据库难望其项背的。&lt;/p&gt;
&lt;p&gt;MongoDB 根本没有与 PostgreSQL 在产品、技术上堂堂正正一战的能力，因此只能在营销上使阴招，暗搓搓的下绊子，但这种做法只会让更多人看清它的真面目。&lt;/p&gt;
&lt;p&gt;作为一个上市公司，MongoDB 的股价也已经经历了一次大腰斩，而且亏损持续扩大。产品与技术上的落后，以及运营上的不诚信，都让人怀疑它的未来。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;stock.png&#34; src=&#34;/zh/blog/db/bad-mongo/stock.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我认为任何开发者，创业者，投资人都不应该把赌注押在 MongoDB 上
—— &lt;strong&gt;这确实是一个没有希望，也没有未来的数据库&lt;/strong&gt;。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: MongoDB: 现在由PostgreSQL强力驱动？</title>
      <link>/zh/blog/db/mongo-powered-by-pg/</link>
      <pubDate>Tue, 03 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/mongo-powered-by-pg/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/mongo-powered-by-pg/featured_hu02aa61ae1d9de35cbe238d2676170cb9_340018_640x0_resize_q75_catmullrom.jpg" width="640" height="640"/>]]>
        
        &lt;hr&gt;
&lt;h4 id=&#34;前言&#34;&gt;前言&lt;/h4&gt;
&lt;p&gt;明天我会发一篇批判 MongoDB 的文章，作为对其近期恶劣营销碰瓷 PostgreSQL 的回应。在那之前，我想先分享一篇在 2015 年时的精彩文章，揭露了 MongoDB 的一些黑历史。&lt;/p&gt;
&lt;p&gt;这篇文章最经典的一点在于，它是由 MongoDB 的合作伙伴发出的血泪控诉，MongoDB 对尝试在生态中做分析的伙伴不屑一顾，而是跑去拿了一个 PostgreSQL 作为自己的分析引擎忽悠用户，从而让合作伙伴彻底灰心丧气的故事。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文原文链接：https://www.linkedin.com/pulse/mongodb-32-now-powered-postgresql-john-de-goes （双向被墙状态，你需要开无痕模式挂代理方能访问）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：John De Goes —— 挑战 Ziverge 的现状&lt;/p&gt;
&lt;p&gt;发布日期: 2015年12月8日&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;本文所述观点仅为个人看法，不代表我&lt;a href=&#34;http://slamdata.com/&#34;&gt;雇主&lt;/a&gt;的立场或观点。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在将各种线索综合起来后，我感到极度&lt;em&gt;震惊&lt;/em&gt;。若我的猜测属实，&lt;a href=&#34;http://mongodb.com/&#34;&gt;MongoDB&lt;/a&gt;可能正要犯下我认为是数据库公司历史上&lt;strong&gt;最大的错误&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我是一个&lt;a href=&#34;http://github.com/slamdata/slamdata&#34;&gt;开源分析工具&lt;/a&gt;的开发者，该工具支持连接至如 MongoDB 这类的 NoSQL 数据库，我每天都在努力推动这些新一代数据库供应商更加走向成功。&lt;/p&gt;
&lt;p&gt;事实上，我不久前在 &lt;a href=&#34;https://www.mongodb.com/events/mongodb-days-siliconvalley&#34;&gt;MongoDB Days Silicon Valley&lt;/a&gt; 上向&lt;a href=&#34;https://twitter.com/slamdata/status/672166743255592960&#34;&gt;一室之内的众人&lt;/a&gt;进行了&lt;a href=&#34;http://www.slideshare.net/jdegoes/slamdata-how-mongodb-is-powering-a-revolution-in-visual-analytics&#34;&gt;演讲&lt;/a&gt;，阐述了采纳这种新型数据库的诸多益处。&lt;/p&gt;
&lt;p&gt;因此当我意识到这一潜在的破坏性秘密时，我立即敲响了警钟。在 2015 年 11 月 12 日，我发送了一封邮件至 MongoDB 的首席产品经理 Asya Kamsky。&lt;/p&gt;
&lt;p&gt;尽管措辞谦和，但我表达得十分明确：&lt;em&gt;MongoDB 正在犯下一个巨大的错误，并应当在还有机会纠正前，重新考虑自身决策。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;然而我没有再接收到 Asya 或其他任何人的回应。我曾成功劝说 MongoDB &lt;a href=&#34;https://www.mongodb.com/blog/post/revisiting-usdlookup&#34;&gt;改变策略&lt;/a&gt;，避免将&lt;a href=&#34;http://slamdata.com/blog/2015/10/21/mongodb-missing-join.html&#34;&gt;错误的功能&lt;/a&gt;商业化的经历，这一次未能重演。&lt;/p&gt;
&lt;p&gt;以下我如何从新闻稿、YouTube 视频以及散布在 Github 上的源代码中找到线索，以及我最终未能说服 MongoDB 改变方向的经过。&lt;/p&gt;
&lt;p&gt;故事起始于 2015 年 6 月 1 日，在纽约市举行的年度 MongoWorld 大会上。&lt;/p&gt;
&lt;h2 id=&#34;mongoworld-2015&#34;&gt;MongoWorld 2015&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://slamdata.com/&#34;&gt;SlamData&lt;/a&gt; 是我新创办的分析初创公司，它赞助了 2015 年的 MongoWorld，因此我得到了一个难得的 VIP 派对门票，得以参加大会前夜的活动。&lt;/p&gt;
&lt;p&gt;活动在 NASDAQ MarketWatch 举行，地点优雅，俯瞰时代广场。我穿着工装裤和初创公司的 T 恤，明显感觉自己穿得不合时宜。高级小吃和酒水随意畅饮，MongoDB 的管理团队也全员出动。&lt;/p&gt;
&lt;p&gt;我与 MongoDB 的新任 CEO Dev (&amp;ldquo;Dave&amp;rdquo;) Ittycheria 握了手，并对他未来的工作表示了几句鼓励。&lt;/p&gt;
&lt;p&gt;今年早些时候，富达投资公司&lt;a href=&#34;http://fortune.com/2015/11/12/fidelity-marks-down-tech-unicorns/&#34;&gt;Fidelity Investments&lt;/a&gt; 将 MongoDB 的估值削减至 2013 年的一半（16 亿美元），将这个初创公司从“独角兽”降级为“驴子”。Dev 的任务就是证明 Fidelity 以及其他质疑者是错误的。&lt;/p&gt;
&lt;p&gt;Dev 从 Max Schireson 手中接过了公司（Max 在 2014 年&lt;a href=&#34;http://maxschireson.com/2014/08/05/1137/&#34;&gt;著名辞职&lt;/a&gt;），在任期间，Dev 组建了一个新的管理团队，对 MongoDB 整个公司产生了深远影响。&lt;/p&gt;
&lt;p&gt;虽然我只与 Dev 交谈了几分钟，但他给我的感觉是聪明、友善的，而且非常渴望了解我公司正在做的事情。他递给我一张名片，并表示如果我有需要可以随时联系他。&lt;/p&gt;
&lt;p&gt;接下来是 MongoDB 的 CTO 兼联合创始人 Eliot Horowitz。我与他握手，自我介绍，并用 30 秒钟介绍了我的初创公司。&lt;/p&gt;
&lt;p&gt;当时，我觉得我的介绍一定很糟糕，因为 Eliot 对我说的每一句话似乎都不感兴趣。事实证明，Eliot 讨厌 SQL，把分析工具视为一种麻烦，所以不难理解我为什么让他感到无聊！&lt;/p&gt;
&lt;p&gt;不过，Eliot 确实听到了“分析”这个词，并透露说第二天的大会上，MongoDB 将发布 3.2 版本的一些有趣的新消息。&lt;/p&gt;
&lt;p&gt;我请求他透露更多细节，但不行，这些内容严格保密。我只能等到第二天，与全世界一同揭晓答案。&lt;/p&gt;
&lt;p&gt;我将这个消息告诉了我的联合创始人 Jeff Carr，我们短暂地感到了一丝恐慌。对于我们这个由四个人组成、完全自筹资金的初创公司来说，最大的担忧是 MongoDB 会宣布推出自己的分析工具，这可能会影响我们融资的机会。&lt;/p&gt;
&lt;p&gt;令人宽慰的是，第二天我们发现 MongoDB 的重大宣布并不是分析工具，而是一个名为 &lt;em&gt;MongoDB BI Connector&lt;/em&gt;的解决方案，这是即将发布的 3.2 版本中的一个重要功能。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;mongodb-32-bi-connector&#34;&gt;MongoDB 3.2 BI Connector&lt;/h2&gt;
&lt;p&gt;Eliot 得以宣布 BI 连接器的推出。尽管当天的公告众多，但他对这一连接器似乎不甚感兴趣，因此仅略加提及。&lt;/p&gt;
&lt;p&gt;然而，详细信息很快通过一份&lt;a href=&#34;https://www.mongodb.com/press/opens-modern-application-data-to-new-generation-visual-analysis-and-traditional-bi-tools&#34;&gt;官方新闻稿&lt;/a&gt;发布，其概括如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MongoDB 今日宣布推出一款全新的 BI 和数据可视化连接器，该连接器将 MongoDB 数据库与业界标准的商业智能（BI）及数据可视化工具相连。该连接器设计以兼容市场上所有符合 SQL 标准的数据分析工具，如 Tableau、SAP Business Objects、Qlik 以及 IBM Cognos Business Intelligence 等。目前该连接器处于预览阶段，预计将在 2015 年第四季度全面发布。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据该新闻稿，BI 连接器将使&lt;em&gt;全球任何 BI 软件&lt;/em&gt;都能与 MongoDB 数据库进行交互。&lt;/p&gt;
&lt;p&gt;这则消息迅速在 Twitter 上[传播开来](&lt;a href=&#34;https://twitter.com/search?f=tweets&amp;vertical=default&amp;q=mongodb&#34;&gt;https://twitter.com/search?f=tweets&amp;vertical=default&amp;q=mongodb&lt;/a&gt; bi connector&amp;amp;src=typd)，并引发了媒体广泛报道。&lt;a href=&#34;http://techcrunch.com/2015/06/02/new-mongodb-connector-creates-direct-connection-to-data-visualization-tools/&#34;&gt;TechCrunch&lt;/a&gt; 等多家媒体均转载了这一消息，每次报道都为人们提供了新的细节，甚至《财富》杂志还宣称该 BI 连接器实际上已在 MongoWorld &lt;a href=&#34;http://fortune.com/2015/06/03/couchbase-mongodb-embrace-sql/&#34;&gt;发布&lt;/a&gt;！&lt;/p&gt;
&lt;p&gt;考虑到公告的性质，媒体的这种热烈反响似乎是合理的。&lt;/p&gt;
&lt;h3 id=&#34;当世界碰撞&#34;&gt;当世界碰撞&lt;/h3&gt;
&lt;p&gt;MongoDB 与许多其他 NoSQL 数据库一样，不存储关系型数据。它存储的是复杂的数据结构，这些结构是传统的关系型 BI 软件无法理解的。MongoDB 的战略副总裁 Kelly Stirman 对此进行了精辟的解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“这些被称为现代应用的软件之所以如此命名，是因为它们采用了不适用于传统数据库行列格式的复杂数据结构。”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个能让全球任何 BI 软件在这些复杂数据结构上进行强力分析而且&lt;em&gt;不损失分析精度&lt;/em&gt;的连接器，无疑是&lt;em&gt;重大新闻&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;MongoDB 是否真的做到了不可能的事？他们是否开发出了一种既能满足所有 &lt;a href=&#34;http://slamdata.com/whitepapers/characteristics-of-nosql-analytics-systems/&#34;&gt;NoSQL 分析需求&lt;/a&gt;，又能在扁平化、统一的数据上暴露关系语义，使传统 BI 软件能够处理的连接器？&lt;/p&gt;
&lt;p&gt;几个月前，我曾与 MongoDB 的产品副总裁 Ron Avnur 交谈。Ron 表示，所有 MongoDB 的客户都在寻求分析功能，但公司尚未决定是自主开发还是寻找合作伙伴。&lt;/p&gt;
&lt;p&gt;这意味着 MongoDB 可能在短短几个月内，从&lt;em&gt;一无所有&lt;/em&gt;迅速转变为拥有&lt;em&gt;神奇解决方案&lt;/em&gt;。&lt;/p&gt;
&lt;h3 id=&#34;掀开内幕&#34;&gt;掀开内幕&lt;/h3&gt;
&lt;p&gt;发布会结束后，我和 Jeff 回到了我们赞助商的展位。Jeff 问了我一个显而易见的问题：&lt;strong&gt;“他们怎么能在短短几个月内，从无到有做出一个能兼容所有 BI 工具的 BI 连接器？！”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我仔细思考了这个问题。&lt;/p&gt;
&lt;p&gt;BI 连接器需要解决的诸多问题中，有一个是如何在 MongoDB 上高效执行类似 SQL 的分析任务。凭借我在分析领域的&lt;a href=&#34;http://github.com/quasar-analytics/&#34;&gt;深厚&lt;/a&gt;&lt;a href=&#34;http://github.com/precog&#34;&gt;背景&lt;/a&gt;，我知道要在像 MongoDB 这样现代数据库上高效地执行通用分析是非常具有挑战性的。&lt;/p&gt;
&lt;p&gt;这些数据库支持非常丰富的数据结构，并且它们的接口是为所谓的&lt;strong&gt;操作型&lt;/strong&gt;用例设计的（而不是&lt;strong&gt;分析型&lt;/strong&gt;用例）。能够利用操作型接口在丰富的数据结构上运行任意分析的技术，需要&lt;strong&gt;多年&lt;/strong&gt;的开发。不是你能在两个月内搞定的事情。&lt;/p&gt;
&lt;p&gt;于是我直觉性地回答了 Jeff：&lt;strong&gt;“他们没有开发新的 BI 连接器。这不可能。这里面肯定有其他问题！”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;具体是什么问题，我并不清楚。但在握手和发名片的间隙，我做了一些调查。&lt;/p&gt;
&lt;p&gt;Tableau 展示了他们的软件与 MongoDB BI 连接器配合使用的演示，这引起了我的好奇心。Tableau 在关系型数据库上的可视化分析领域设立了标准，而他们前瞻性的大数据团队一直在认真思考 NoSQL。&lt;/p&gt;
&lt;p&gt;借助与 MongoDB 的关系，Tableau 发布了一份与 MongoWorld 发布会同步的&lt;a href=&#34;http://www.tableau.com/about/blog/2015/6/tableau-mongodb-visual-analytics-json-speed-thought-39557&#34;&gt;新闻稿&lt;/a&gt;，我在他们的网站上找到了这篇新闻稿。&lt;/p&gt;
&lt;p&gt;我仔细阅读了这篇新闻稿，想要了解一些新的细节。在深处，我发现了一个微弱的线索：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MongoDB 将很快宣布连接器的测试版，计划在今年晚些时候 MongoDB 3.2 版本发布时提供正式版。在 MongoDB 的测试期间，Tableau 将通过&lt;strong&gt;我们的 PostgreSQL 驱动程序&lt;/strong&gt;在 Windows 和 Mac 上支持 MongoDB 连接器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这些话给了我第一个线索：&lt;strong&gt;通过我们的 PostgreSQL 驱动程序&lt;/strong&gt;。这至少意味着 MongoDB 的 BI 连接器将使用与 PostgreSQL 数据库相同的“语言”（&lt;em&gt;wire protocol&lt;/em&gt;）。&lt;/p&gt;
&lt;p&gt;这让我感到有些可疑：MongoDB 是否真的在重新实现&lt;strong&gt;整个&lt;/strong&gt; PostgreSQL 的通信协议，包括对数百个 PostgreSQL 函数的支持？&lt;/p&gt;
&lt;p&gt;虽然&lt;strong&gt;可能&lt;/strong&gt;，但这看起来&lt;strong&gt;极其不可能&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我转向 Github，寻找 MongoDB 可能借鉴的开源项目。由于会议的 WiFi 不稳定，我不得不通过手机热点，查找了几十个同时提到 PostgreSQL 和 MongoDB 的仓库。&lt;/p&gt;
&lt;p&gt;最终，我找到了我要找的东西：&lt;a href=&#34;https://github.com/asya999/mongoose_fdw/commits/master&#34;&gt;mongoose_fdw&lt;/a&gt;，一个由 Asya Kamsky（当时我不认识她，但她的简介提到她为 MongoDB 工作）分叉的开源仓库。&lt;/p&gt;
&lt;p&gt;这个仓库包含一个所谓的 &lt;em&gt;Foreign Data Wrapper&lt;/em&gt; (FDW) for PostgreSQL 数据库。FDW 接口允许开发者插入其他数据源，以便 PostgreSQL 可以提取数据并在这些数据上执行 SQL（为使 BI 工具正常工作，NoSQL 数据必须被展平、填充空值，并做其他简化处理）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;“我想我知道是怎么回事了。”&lt;/strong&gt; 我对 Jeff 说。&lt;strong&gt;“看起来，他们可能在原型中将数据展平，然后使用另一个数据库来执行由 BI 软件生成的 SQL 语句。”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;“什么数据库？”&lt;/strong&gt; 他马上问道。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;“PostgreSQL。”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Jeff 哑口无言。他一句话也没说。但我能完全明白他在想什么，因为我也在想同样的事。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;糟了。这对 MongoDB 来说是个坏消息。真的很糟糕。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;postgresqlmongodb-终结者&#34;&gt;PostgreSQL：MongoDB 终结者&lt;/h2&gt;
&lt;p&gt;PostgreSQL 是一个流行的开源关系型数据库。它的受欢迎程度如此之高，以至于目前在&lt;a href=&#34;http://db-engines.com/en/ranking&#34;&gt;排名&lt;/a&gt;上几乎与 MongoDB 并驾齐驱。&lt;/p&gt;
&lt;p&gt;这个数据库对 MongoDB 构成了&lt;em&gt;激烈竞争&lt;/em&gt;，主要原因是它已经获得了 MongoDB 的一些功能，包括存储、验证、操作和索引 &lt;a href=&#34;https://en.wikipedia.org/wiki/JSON&#34;&gt;JSON 文档&lt;/a&gt;的能力。第三方软件甚至&lt;a href=&#34;https://www.citusdata.com/&#34;&gt;赋予了它&lt;/a&gt;横向扩展的能力（或者我该说，&lt;em&gt;巨量&lt;/em&gt;扩展的能力）。&lt;/p&gt;
&lt;p&gt;每隔一个月左右，就会有人写文章推荐使用 PostgreSQL 而不是 MongoDB。这些文章往往会迅速传播，飙升到 HackerNews 网站的热榜。以下是其中一些文章的链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://developer.olery.com/blog/goodbye-mongodb-hello-postgresql/&#34;&gt;告别 MongoDB。迎接 PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.enterprisedb.com/postgres-plus-edb-blog/marc-linster/postgres-outperforms-mongodb-and-ushers-new-developer-reality&#34;&gt;Postgres 性能优于 MongoDB，并引领开发者新现实&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/errbit/errbit/issues/614&#34;&gt;MongoDB 已死。PostgreSQL 万岁 :)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/&#34;&gt;你永远不应该使用 MongoDB 的理由&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.airpair.com/postgresql/posts/sql-vs-nosql-ko-postgres-vs-mongo&#34;&gt;SQL vs NoSQL 决斗。Postgres vs Mongo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svs.io/post/31724990463/why-i-migrated-away-from-mongodb&#34;&gt;为什么我放弃了 MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/&#34;&gt;为什么你永远永远永远不该使用 MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aptuz.com/blog/is-postgres-nosql-database-better-than-mongodb/&#34;&gt;Postgres NoSQL 比 MongoDB 更好吗？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.userlike.com/en/blog/2015/10/09/bye-by-mysql-and-mongodb-guten-tag-postgresql&#34;&gt;再见 MongoDB。你好 PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;商业化 PostgreSQL 的最大公司是 &lt;a href=&#34;http://enterprisedb.com/&#34;&gt;EnterpriseDB&lt;/a&gt;（虽然还有很多其他公司，一些历史更悠久或同样活跃），它在官网上维护了一个&lt;a href=&#34;http://www.enterprisedb.com/nosql-for-enterprise&#34;&gt;大量的内容库&lt;/a&gt;，主张 PostgreSQL 是比 MongoDB 更好的 NoSQL 数据库。&lt;/p&gt;
&lt;p&gt;无论你对这个观点有何看法，有一点是明确的：MongoDB 和 PostgreSQL 在开发者的认知中正进行着一场激烈而血腥的争夺战。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;从原型到生产&#34;&gt;从原型到生产&lt;/h2&gt;
&lt;p&gt;任何有经验的工程师都会告诉你，&lt;strong&gt;原型不能直接用于生产环境&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;即便 MongoDB &lt;em&gt;确实&lt;/em&gt;在使用 PostgreSQL 作为原型的 BI 连接器，也许某些聪明的 MongoDB 工程师正被关在某个房间里，努力开发一个独立的生产版本。&lt;/p&gt;
&lt;p&gt;实际上，从 Tableau 的新闻稿措辞来看，依赖 PostgreSQL 驱动的情况&lt;em&gt;可能&lt;/em&gt;只是暂时的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;在 MongoDB 的测试阶段&lt;/strong&gt;，Tableau 将通过我们的 PostgreSQL 驱动程序，在 Windows 和 Mac 上支持 MongoDB 连接器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我猜测，或许 MongoDB 3.2 版本发布时会带来真正的产品：一个能够暴露 MongoDB 所支持的丰富数据结构（而不是展平、填充空值和丢弃数据）、完全在数据库内执行所有查询，并且无需依赖竞争数据库的 BI 连接器。&lt;/p&gt;
&lt;p&gt;七月，在 MongoWorld 结束一个多月后，我在一次商务旅行中顺道拜访了 MongoDB 在帕洛阿尔托的办公室。我所了解到的情况让我倍感鼓舞。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;拜访-mongodb&#34;&gt;拜访 MongoDB&lt;/h2&gt;
&lt;p&gt;以帕洛阿尔托的标准来看，MongoDB 的办公室相当大。&lt;/p&gt;
&lt;p&gt;之前几次去硅谷时，我看到过这家公司的招牌，但这是我第一次有机会进去看看。&lt;/p&gt;
&lt;p&gt;就在前一周，我通过邮件与 Asya Kamsky 和 Ron Anvur 聊过天。我们讨论了我公司在 MongoDB 内部直接执行高级分析的&lt;a href=&#34;http://quasar-analytics.org/&#34;&gt;开源工作&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;由于我们恰巧同时在帕洛阿尔托，Asya 邀请我过去，一边吃着外卖披萨喝着办公室的汽水，一边聊聊。&lt;/p&gt;
&lt;p&gt;刚聊了几分钟，我就能感觉到 Asya 非常聪明、技术过硬且注重细节——这些正是你希望在像 MongoDB 这样高度技术化产品的产品经理身上看到的特质。&lt;/p&gt;
&lt;p&gt;我向 Asya 解释了我们公司正在做的事情，并帮助她在她的电脑上运行我们的开源软件，让她可以亲自试试。我们聊着聊着，自然而然地谈到了 MongoDB 的 BI 连接器市场，上面有很多产品（如 Simba、DataDirect、CData 等等）。&lt;/p&gt;
&lt;p&gt;我们似乎都持有相同的观点：BI 软件需要具备理解更复杂数据的能力。另一种选择是简化数据以适应老旧 BI 软件的限制，但这意味着会丢失大量信息，从而失去解决 NoSQL 分析中&lt;a href=&#34;http://slamdata.com/whitepapers/characteristics-of-nosql-analytics-systems/&#34;&gt;关键问题&lt;/a&gt;的能力。&lt;/p&gt;
&lt;p&gt;Asya 认为，MongoDB 的 BI 连接器应该能够暴露原生的 MongoDB 数据结构，比如数组，而不需要进行任何展平或转换。这种特性，我称之为&lt;em&gt;同构数据模型&lt;/em&gt;，是通用 NoSQL 分析系统的关键需求之一，我在&lt;a href=&#34;http://www.infoworld.com/article/2983953/nosql/how-to-choose-a-nosql-analytics-system.html&#34;&gt;多篇文章&lt;/a&gt;中对此进行了深入讨论。&lt;/p&gt;
&lt;p&gt;让我感到非常鼓舞的是，Asya 独立得出了相同的结论，这让我相信 MongoDB 已经充分理解了这个问题。我当时认为，MongoDB 的分析未来一片光明。&lt;/p&gt;
&lt;p&gt;然而，不幸的是，我错得离谱。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;mongodb为巨大的创意错误而生&#34;&gt;MongoDB：为巨大的&lt;del&gt;创意&lt;/del&gt;错误而生&lt;/h2&gt;
&lt;p&gt;在得知 MongoDB 走在正确的道路上之后，我对 BI 连接器放松了警惕，在接下来的几个月里没怎么关注它，虽然期间我和 Asya 以及 Ron 交换了几封电子邮件。&lt;/p&gt;
&lt;p&gt;然而，到了九月份，我发现 MongoDB 的产品团队陷入了沉默。经过几周没有回复的电子邮件，我变得不安，开始自己四处查找线索。&lt;/p&gt;
&lt;p&gt;我发现 Asya 分叉了一个名为 &lt;a href=&#34;https://github.com/asya999/Multicorn&#34;&gt;Multicorn&lt;/a&gt; 的项目，这个项目允许 Python 开发者为 PostgreSQL 编写 Foreign Data Wrappers（外部数据封装器）。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;糟糕&lt;/em&gt;，我心想，&lt;em&gt;MongoDB 又要故技重施了。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;进一步挖掘后，我发现了所谓的“圣杯”：一个名为 &lt;a href=&#34;https://github.com/asya999/yam_fdw&#34;&gt;yam_fdw&lt;/a&gt; （Yet Another MongoDB Foreign Data Wrapper）的新项目，这是一个基于 Multicorn 用 Python 编写的全新 FDW。&lt;/p&gt;
&lt;p&gt;根据提交日志（用于追踪代码库的更改），该项目是在我与 Asya Kamsky 于七月份会面之后才开发的。换句话说，这已经是&lt;em&gt;原型之后&lt;/em&gt;的开发工作了！&lt;/p&gt;
&lt;p&gt;最后一根稻草让我确信 MongoDB 计划将 PostgreSQL 数据库作为其“BI 连接器”发布，是当有人转发给我一个 &lt;a href=&#34;https://www.youtube.com/watch?v=0kwopDp0bmg&#34;&gt;YouTube 视频&lt;/a&gt;，视频中 Asya 演示了该连接器。&lt;/p&gt;
&lt;p&gt;视频中的措辞非常谨慎，省去了任何可能带来麻烦的信息，但视频最后总结道：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;BI 连接器接收连接，并且可以使用与 Postgres 数据库&lt;strong&gt;相同的网络协议&lt;/strong&gt;，因此如果你的报表工具可以通过 ODBC 连接，我们将提供一个 ODBC 驱动程序，您可以使用该驱动程序从您的工具连接到 BI 连接器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此时，我毫无疑问地确认：即将随 MongoDB 3.2 一起发布的 BI 连接器实际上是伪装成 PostgreSQL 数据库的产物！&lt;/p&gt;
&lt;p&gt;很可能，将 MongoDB 数据吸入 PostgreSQL 的实际逻辑是我之前发现的基于 Python 的 Multicorn 封装器的强化版。&lt;/p&gt;
&lt;p&gt;到这个时候，MongoDB 的任何人都没有回复我的邮件，这对任何理智的人来说，应该已经足够让他们放弃了。&lt;/p&gt;
&lt;p&gt;然而，我决定再尝试一次，机会是在 12 月 2 日的 MongoDB Days 会议上，那时距离 3.2 发布只有一周时间。&lt;/p&gt;
&lt;p&gt;Eliot Horowitz 将发表主题演讲，Asya Kamsky 将会发言，Ron Avnur 可能也会出席。甚至 Dev 自己也可能会来。&lt;/p&gt;
&lt;p&gt;那将是我说服 MongoDB 放弃 BI 连接器把戏的最佳机会。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;mongodb-days-2015硅谷&#34;&gt;MongoDB Days 2015，硅谷&lt;/h2&gt;
&lt;p&gt;感谢 MongoDB 出色的市场团队，再加上我在西雅图 MongoDB 巡回演讲中类似演讲的成功经验，我在 MongoDB Days 会议上获得了 45 分钟的演讲时间。&lt;/p&gt;
&lt;p&gt;我在会议上的&lt;em&gt;官方&lt;/em&gt;任务是做一场关于 MongoDB 驱动的分析的演讲，并让用户了解我们公司开发的开源软件。&lt;/p&gt;
&lt;p&gt;但我的&lt;em&gt;个人&lt;/em&gt;议程却截然不同：在 3.2 版本即将发布前，说服 MongoDB 放弃 BI 连接器。如果这个宏大的目标（很可能是&lt;em&gt;妄想&lt;/em&gt;）无法实现，我至少想确认自己对该连接器的怀疑。&lt;/p&gt;
&lt;p&gt;在会议当天，我特意向 MongoDB 的老朋友和新面孔打招呼。尽管我可能不同意某些产品决策，但公司里还是有很多出色的人，他们只是努力在做好自己的工作。&lt;/p&gt;
&lt;p&gt;几天前我刚刚生病，但大量的咖啡让我（大部分时间）保持清醒。随着时间的推移，我在圣何塞会议中心长长的走廊里反复练习了几次演讲。&lt;/p&gt;
&lt;p&gt;下午时分，我已经准备就绪，并在满员的会场上做了&lt;a href=&#34;http://www.slideshare.net/jdegoes/slamdata-how-mongodb-is-powering-a-revolution-in-visual-analytics&#34;&gt;我的演讲&lt;/a&gt;。让我兴奋的是，有这么多人对&lt;a href=&#34;http://www.slideshare.net/jdegoes/slamdata-how-mongodb-is-powering-a-revolution-in-visual-analytics&#34;&gt;MongoDB 上的视觉分析&lt;/a&gt;这一深奥的主题感兴趣（显然这个领域正在发展壮大）。&lt;/p&gt;
&lt;p&gt;在与一些与会者握手并交换名片后，我开始寻找 MongoDB 的管理团队。&lt;/p&gt;
&lt;p&gt;我首先遇到了 Eliot Horowitz，就在他即将开始主题演讲前几分钟。我们聊了聊孩子和美食，我还告诉他我公司的一些近况。&lt;/p&gt;
&lt;p&gt;主题演讲在下午 5:10 准时开始。Eliot 先谈到了一些 3.0 版本的功能，因为显然很多公司仍停留在旧版本上。随后，他快速介绍了 MongoDB 3.2 的各种新功能。&lt;/p&gt;
&lt;p&gt;我当时在想，Eliot 会说些什么关于 BI 连接器的内容呢？他会提到它吗？&lt;/p&gt;
&lt;p&gt;结果发现，BI 连接器是主题演讲的一个重要内容，不仅有专门的介绍环节，甚至还进行了一场精彩的演示。&lt;/p&gt;
&lt;h3 id=&#34;bi-connector&#34;&gt;BI Connector&lt;/h3&gt;
&lt;p&gt;Eliot 大声宣布：“MongoDB 没有原生的分析工具”，由此引出了 BI 连接器。&lt;/p&gt;
&lt;p&gt;我觉得这有点儿好笑，因为我曾为 MongoDB 写过一篇题为 &lt;a href=&#34;https://www.mongodb.com/blog/post/native-sql-analytics-mongodb-slamdata&#34;&gt;Native Analytics for MongoDB with SlamData&lt;/a&gt; 的客座文章。（编辑注：MongoDB 已经撤下了这篇博客，但截至山地时间15:30，它仍然在搜索索引中 &lt;a href=&#34;https://www.mongodb.com/blog?utf8=✓&amp;search=slamdata&#34;&gt;仍在搜索索引中&lt;/a&gt;）。SlamData 也是 MongoDB 的合作伙伴，并赞助了 MongoDB Days 大会。&lt;/p&gt;
&lt;p&gt;在介绍 BI 连接器的用途时，Eliot 似乎有些磕磕绊绊（从&amp;hellip;可操作的洞察中获取操作？&lt;em&gt;麻烦的分析！&lt;/em&gt;）。当他把演示交给 Asya Kamsky 时，似乎松了一口气，后者为活动准备了一个不错的演示。&lt;/p&gt;
&lt;p&gt;在演示过程中，我发现 Asya 表现得比平时紧张。她斟词酌句，省略了关于连接器是什么的所有细节，只提到了它如何工作的无罪部分（比如它依赖 DRDL 来定义 MongoDB 的 schema）。大部分演示内容并没有集中在 BI 连接器上，而是更多地展示了 Tableau（当然，Tableau 的演示效果确实很好！）。&lt;/p&gt;
&lt;p&gt;我所有的反馈都没能减缓 BI 连接器的进展。&lt;/p&gt;
&lt;h3 id=&#34;全力以赴&#34;&gt;全力以赴&lt;/h3&gt;
&lt;p&gt;主题演讲结束后，大批与会者前往隔壁房间参加鸡尾酒会。与会者大多在与其他与会者交谈，而 MongoDB 的员工则倾向于聚在一起。&lt;/p&gt;
&lt;p&gt;我看到 Ron Avnur 与服务器工程副总裁 Dan Pasette 聊天，距离他们几英尺远的地方，正为与会者提供 Lagunitas IPA 的啤酒。&lt;/p&gt;
&lt;p&gt;现在是行动的时候了。3.2 版本即将发布，几天之内就会面世。MongoDB 的人都不再回复邮件。Eliot 刚刚告诉全世界 MongoDB 没有原生的分析工具，并将 BI 连接器定位为 NoSQL 分析的革命性工具。&lt;/p&gt;
&lt;p&gt;没有什么可失去的了，我走到 Ron 面前，加入了他们的对话，然后开始了一段大约两分钟的激烈独白，猛烈抨击 BI 连接器。&lt;/p&gt;
&lt;p&gt;我告诉他，我对 MongoDB 的期望不仅仅是把 PostgreSQL 数据库伪装成 MongoDB 分析的神奇解决方案。我告诉他，MongoDB 应该表现出诚信和领导力，推出一个支持 MongoDB 丰富数据结构的解决方案，将所有计算都推送到数据库中，并且不依赖于竞争对手的数据库。&lt;/p&gt;
&lt;p&gt;Ron 被震住了。他开始用模糊的语言为 BI 连接器的“下推”（pushdown）辩护，我意识到这是确认我怀疑的机会。&lt;/p&gt;
&lt;p&gt;“Postgres 外部数据封装器几乎不支持下推”，我不动声色地说道。“这在你用于 BI 连接器的 Multicorn 封装器中更是如此，这个封装器基于较旧的 Postgres 版本，甚至不支持 Postgres FDW 的完整下推功能。”&lt;/p&gt;
&lt;p&gt;Ron 承认失败。“这是事实”，他说。&lt;/p&gt;
&lt;p&gt;我逼他为这个决定辩护。但他无言以对。我告诉他，在 MongoDB 发布“BI 连接器”之前，立即拉下停止绳。Ron 对这个可能性不以为然，我告诉他，这件事会彻底让他难堪。“你可能是对的，”他说，“但我现在有更大的事情要担心，”可能指的是即将发布的 3.2 版本。&lt;/p&gt;
&lt;p&gt;我们三个人一起喝了杯啤酒。我指着 Dan 说，“这家伙的团队开发了一个真正能够进行分析的数据库。你们为什么不在 BI 连接器中使用它？”但这没有用，Ron 不为所动。&lt;/p&gt;
&lt;p&gt;我们分道扬镳，同意彼此保留不同意见。&lt;/p&gt;
&lt;p&gt;我从房间另一头看到了 Dev Ittycheria，走过去和他聊了几句。我称赞了市场部的工作，然后开始批评产品。我告诉 Dev，“在我看来，产品团队正在犯一些错误。”他想了解更多，所以我告诉了他我的看法，我已经重复了很多次，以至于我都能倒背如流了。他让我发邮件跟进，当然我发了，但再也没收到回复。&lt;/p&gt;
&lt;p&gt;与 Dev 交谈后，我终于意识到我无法改变 MongoDB 3.2 的发布进程。它将与 BI 连接器一起发布，而我对此无能为力。&lt;/p&gt;
&lt;p&gt;我很失望，但同时也感觉到一阵巨大的解脱。我已经和我能接触到的每个人都谈过了。我已经全力以赴。我已经竭尽全力。&lt;/p&gt;
&lt;p&gt;当我离开鸡尾酒会，回到酒店时，不禁猜测公司为什么会做出我如此强烈反对的决定。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;mongodb孤家寡人孤岛一座&#34;&gt;MongoDB：孤家寡人，孤岛一座&lt;/h2&gt;
&lt;p&gt;经过深思熟虑，我现在认为 MongoDB 做出糟糕产品决策的原因在于无法专注于核心数据库。而这种无法专注的原因，则在于其未能培育出一个 NoSQL 生态系统。&lt;/p&gt;
&lt;p&gt;关系型数据库之所以能占据主导地位，部分原因在于围绕这些数据库发展的庞大生态系统。&lt;/p&gt;
&lt;p&gt;这个生态系统催生了备份、复制、分析、报告、安全、治理以及许多其他类别的应用程序。它们相互依赖，并促进彼此的成功，形成了网络效应和高转换成本，这些都对当今的 NoSQL 厂商构成了挑战。&lt;/p&gt;
&lt;p&gt;与之形成鲜明对比的是，MongoDB 周围几乎&lt;em&gt;没有生态系统&lt;/em&gt;，而且不仅我一个人注意到了这一点 &lt;a href=&#34;http://slamdata.com/blog/2014/12/09/where-is-the-nosql-ecosystem.html&#34;&gt;注意到这一点&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;为什么 MongoDB 没有生态系统？&lt;/p&gt;
&lt;p&gt;我带有讽刺意味的回答是，如果你是一个为 MongoDB 提供原生分析的合作伙伴，MongoDB 的 CTO 会站在舞台上说，没有工具可以为 MongoDB 提供原生分析。&lt;/p&gt;
&lt;p&gt;然而，更客观地说，我认为上述现象只是一个表象。&lt;em&gt;真正的问题&lt;/em&gt;是 MongoDB 的合作伙伴计划完全失效了。&lt;/p&gt;
&lt;p&gt;MongoDB 的合作伙伴团队直接向首席营收官（Carlos Delatorre）汇报工作，这意味着合作伙伴团队的主要任务是从合作伙伴那里获取收入。这种设置本质上会让合作伙伴活动偏向那些没有兴趣推动 NoSQL 生态系统发展的大型公司（事实上，其中许多公司还在生产与 MongoDB 竞争的关系型解决方案）。&lt;/p&gt;
&lt;p&gt;这与 SlamData、Datos IO 等小型、以 NoSQL 为中心的公司形成鲜明对比。这些公司之所以能够成功，&lt;em&gt;正是因为&lt;/em&gt; NoSQL 的成功，它们提供了关系型数据库世界中标准的功能，而 NoSQL 数据库&lt;em&gt;需要&lt;/em&gt;这些功能才能在企业级环境中蓬勃发展。&lt;/p&gt;
&lt;p&gt;作为合作伙伴已经超过一年，我可以告诉你，几乎没有人知道 SlamData 的存在，尽管 SlamData 是企业选择 MongoDB 而不是其他 NoSQL 数据库（例如 MarkLogic）的一个强大动因，也是那些考虑从关系型技术（例如 Oracle）转向 MongoDB 的公司转型的推动者。&lt;/p&gt;
&lt;p&gt;尽管合作伙伴们在努力，但 MongoDB 似乎对由 NoSQL 为中心的合作伙伴所带来的联合收入和销售机会完全不感兴趣。没有转售协议、没有收入分享、没有销售简介、没有联合营销，只有一个 Logo。&lt;/p&gt;
&lt;p&gt;这意味着在组织上，MongoDB 忽视了那些可能对他们最有帮助的 NoSQL 为中心的合作伙伴。同时，他们的最大客户和潜在客户不断要求提供在关系型世界中常见的基础设施，比如备份、复制、监控、分析、数据可视化、报告、数据治理、查询分析等。&lt;/p&gt;
&lt;p&gt;这些来自大公司源源不断的需求，结合未能培养出生态系统的无力，形成了一种&lt;em&gt;有毒的组合&lt;/em&gt;。它导致 MongoDB 产品团队试图通过构建&lt;em&gt;所有可能的产品&lt;/em&gt;来&lt;em&gt;创造自己的生态系统&lt;/em&gt;！&lt;/p&gt;
&lt;p&gt;备份？有。复制？有。监控？有。BI 连接性？有。数据发现？有。可视化分析？有。&lt;/p&gt;
&lt;p&gt;但一个有限资源的 NoSQL 数据库供应商不可能围绕自己建立一个生态系统，去与围绕关系型技术的庞大生态系统竞争（代价太高了！）。因此，这导致了像 MongoDB Compass 这样的分散注意力的项目，以及像 BI 连接器这样的“伪”技术。&lt;/p&gt;
&lt;p&gt;替代方案是什么？在我看来，非常简单。&lt;/p&gt;
&lt;p&gt;首先，MongoDB 应该培育一个充满活力的、由风险投资支持的 NoSQL 为中心的合作伙伴生态系统（&lt;em&gt;而不是&lt;/em&gt;拥有雄厚资金的关系型合作伙伴！）。这些合作伙伴应该在各自的领域内具有深厚的专业知识，并且它们都应该在 MongoDB 成功的情况下成功。&lt;/p&gt;
&lt;p&gt;MongoDB 的销售代表和客户经理应该掌握由合作伙伴提供的信息，这些信息可以帮助他们克服异议并减少客户流失，而 MongoDB 应该将其构建为一个健康的收入来源。&lt;/p&gt;
&lt;p&gt;其次，在通过 NoSQL 为中心的合作伙伴满足了客户对相关基础设施的需求之后，MongoDB 应该将产品和销售重点放在核心数据库上，这才是&lt;em&gt;数据库供应商&lt;/em&gt;应当赚钱的方式！&lt;/p&gt;
&lt;p&gt;MongoDB 应该开发对企业有重要价值的功能（例如 ACID 事务、NVRAM 存储引擎、列式存储引擎、跨数据中心复制等），并仔细划定社区版和企业版之间的界限。所有这一切都应该以一种方式进行，使&lt;em&gt;开发者&lt;/em&gt;在不同版本中拥有相同的能力。&lt;/p&gt;
&lt;p&gt;目标应该是让 MongoDB 从数据库中获得足够的收入，以至于产品团队不会再受到诱惑去发明一个劣质的生态系统。&lt;/p&gt;
&lt;p&gt;你可以自己判断，但我认为哪个是更有可能成功的战略已经非常明显了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;再见了mongodb&#34;&gt;再见了，MongoDB！&lt;/h2&gt;
&lt;p&gt;显然，我无法支持这样的产品决策——推出一个竞争性的关系型数据库，作为在像 MongoDB 这样后关系型数据库上进行分析的最终解决方案。&lt;/p&gt;
&lt;p&gt;在我看来，这个决定对社区不利，对客户不利，对新兴的 NoSQL 分析领域也不利。&lt;/p&gt;
&lt;p&gt;此外，如果这种做法没有 &lt;em&gt;完全透明&lt;/em&gt;，它对诚信也是有害的，而诚信是 &lt;em&gt;所有公司&lt;/em&gt; 的基石（尤其是开源公司）。&lt;/p&gt;
&lt;p&gt;所以，通过这篇文章，我正式放弃。&lt;/p&gt;
&lt;p&gt;不再给 MongoDB 发狂热的邮件。不再在 MongoDB 的鸡尾酒会上缠着管理层。不再与一个连邮件都不回的公司私下分享我的意见。&lt;/p&gt;
&lt;p&gt;这条路我走过了，做过了，但没有效果。&lt;/p&gt;
&lt;p&gt;显然，我现在要揭发这个事实。当你读到这篇文章时，全世界都将知道 MongoDB 3.2 BI 连接器实际上就是 PostgreSQL 数据库，附带一些拼接数据的工具，把一些数据丢弃，然后把剩下的部分吸入 PostgreSQL。&lt;/p&gt;
&lt;p&gt;这对那些正在评估 MongoDB 的公司意味着什么？&lt;/p&gt;
&lt;p&gt;这取决于你们自己，但就我个人而言，如果你在寻找一个 NoSQL 数据库，同时需要传统的 BI 连接性，并且也在考虑 PostgreSQL，那么你可能应该直接选择 PostgreSQL。&lt;/p&gt;
&lt;p&gt;毕竟，MongoDB 对 MongoDB 上的分析问题的 &lt;em&gt;自己答案&lt;/em&gt; 就是将数据从 MongoDB 中导出，扁平化，然后倒入 PostgreSQL。如果你的数据最终会变成在 PostgreSQL 中的扁平化关系数据，那为什么不直接从那里开始呢？一石二鸟！&lt;/p&gt;
&lt;p&gt;至少你可以指望 PostgreSQL 社区在 NoSQL 领域的创新，他们已经这么做很多年了。社区绝不会将 MongoDB 数据库打包成一个假的“PostgreSQL NoSQL”产品，然后称其为 NoSQL 数据库技术的革命。&lt;/p&gt;
&lt;p&gt;而遗憾的是，这恰恰就是 MongoDB 反其道而行之的做法。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;这张“Shame”的照片由 &lt;a href=&#34;https://www.flickr.com/photos/greyworld/&#34;&gt;Grey World&lt;/a&gt; 拍摄，版权归 Grey World 所有，并根据 &lt;a href=&#34;https://creativecommons.org/licenses/by/2.0/&#34;&gt;CC By 2.0&lt;/a&gt; 许可发布。&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;mongodb-32-now-powered-by-postgresql&#34;&gt;MongoDB 3.2: Now Powered by PostgreSQL&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;John De Goes —— Challenging the status quo at Ziverge&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;发布日期: 2015年12月8日&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Opinions expressed are solely my own, and do not express the views or opinions of my &lt;a href=&#34;http://slamdata.com/&#34;&gt;employer&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When I finally pieced together all the clues, I was &lt;em&gt;shocked&lt;/em&gt;. If I was right, &lt;a href=&#34;http://mongodb.com/&#34;&gt;MongoDB&lt;/a&gt;was about to make what I would call the &lt;em&gt;biggest mistake ever made&lt;/em&gt; in the history of database companies.&lt;/p&gt;
&lt;p&gt;I work on an &lt;a href=&#34;http://github.com/slamdata/slamdata&#34;&gt;open source analytics tool&lt;/a&gt; that connects to NoSQL databases like MongoDB, so I spend my days rooting for these next-generation database vendors to succeed.&lt;/p&gt;
&lt;p&gt;In fact, I just presented to a &lt;a href=&#34;https://twitter.com/slamdata/status/672166743255592960&#34;&gt;packed room&lt;/a&gt; at &lt;a href=&#34;https://www.mongodb.com/events/mongodb-days-siliconvalley&#34;&gt;MongoDB Days Silicon Valley&lt;/a&gt;, &lt;a href=&#34;http://www.slideshare.net/jdegoes/slamdata-how-mongodb-is-powering-a-revolution-in-visual-analytics&#34;&gt;making a case&lt;/a&gt; for companies to adopt the new database.&lt;/p&gt;
&lt;p&gt;So when I uncovered a secret this destructive, I hit the panic button: on November 12th, 2015, I sent an email to Asya Kamsky, Lead Product Manager at MongoDB.&lt;/p&gt;
&lt;p&gt;While polite, I made my opinion crystal clear: &lt;em&gt;MongoDB is about to make a giant mistake, and should reconsider while there&amp;rsquo;s still time&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I would never hear back from Asya — or anyone else about the matter. My earlier success in helping convince MongoDB to &lt;a href=&#34;https://www.mongodb.com/blog/post/revisiting-usdlookup&#34;&gt;reverse course&lt;/a&gt; when they tried to monetize &lt;a href=&#34;http://slamdata.com/blog/2015/10/21/mongodb-missing-join.html&#34;&gt;the wrong feature&lt;/a&gt; would not be repeated.&lt;/p&gt;
&lt;p&gt;This is the story of what I discovered, how I pieced together the clues from press releases, YouTube videos, and source code scattered on Github, and how I ultimately failed to convince MongoDB to change course.&lt;/p&gt;
&lt;p&gt;The story begins on June 1st 2015, at the annual MongoWorld conference in New York City.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;mongoworld-2015-1&#34;&gt;MongoWorld 2015&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://slamdata.com/&#34;&gt;SlamData&lt;/a&gt;, my new analytics startup, was sponsoring MongoWorld 2015, so I got a rare ticket to the VIP party the night before the conference.&lt;/p&gt;
&lt;p&gt;Hosted at NASDAQ MarketWatch, in a beautiful space overlooking Times Square, I felt distinctly underdressed in my cargo pants and startup t-shirt. Fancy h&amp;rsquo;ordeuvres and alcohol flowed freely, and MongoDB&amp;rsquo;s management team was out in full force.&lt;/p&gt;
&lt;p&gt;I shook hands with MongoDB&amp;rsquo;s new CEO, Dev (&amp;ldquo;Dave&amp;rdquo;) Ittycheria, and offered him a few words of encouragement for the road ahead.&lt;/p&gt;
&lt;p&gt;Only this year, Fidelity Investments &lt;a href=&#34;http://fortune.com/2015/11/12/fidelity-marks-down-tech-unicorns/&#34;&gt;slashed&lt;/a&gt; its valuation of MongoDB to 50% of what it was back in 2013 ($1.6B), downgrading the startup from &amp;ldquo;unicorn&amp;rdquo;  to &amp;ldquo;donkey&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s been Dev&amp;rsquo;s job to prove Fidelity and the rest of the naysayers wrong.&lt;/p&gt;
&lt;p&gt;Dev inherited the company from Max Schireson (who &lt;a href=&#34;http://maxschireson.com/2014/08/05/1137/&#34;&gt;famously resigned&lt;/a&gt; in 2014), and in his tenure, Dev has built out a new management team at MongoDB, with ripples felt across the company.&lt;/p&gt;
&lt;p&gt;Though I only spoke with Dev for a few minutes, he seemed bright, friendly, and eager to learn about what my company was doing. He handed me his card and asked me to call him if I ever needed anything.&lt;/p&gt;
&lt;p&gt;Next up was Eliot Horowitz, CTO and co-founder of MongoDB. I shook his hand, introduced myself, and delivered a 30 second pitch for my startup.&lt;/p&gt;
&lt;p&gt;At the time, I thought my pitch must have been terrible, since Eliot seemed disinterested in everything I was saying. Turns out Eliot hates SQL and views analytics as a nuisance, so it&amp;rsquo;s not surprising I bored him!&lt;/p&gt;
&lt;p&gt;Eliot did catch the word &amp;ldquo;analytics&amp;rdquo;, however, and dropped that tomorrow at the conference, MongoDB would have some news about the upcoming 3.2 release that I would find very interesting.&lt;/p&gt;
&lt;p&gt;I pleaded for more details, but nope, that was strictly confidential. I&amp;rsquo;d find out the following day, along with the rest of the world.&lt;/p&gt;
&lt;p&gt;I passed along the tip to my co-founder, Jeff Carr, and we shared a brief moment of panic. The big fear for our four-person, self-funded startup was that MongoDB would be announcing their own analytics tool for MongoDB, which could hurt our chances of raising money.&lt;/p&gt;
&lt;p&gt;Much to our relief, we&amp;rsquo;d find out the following day that MongoDB&amp;rsquo;s big announcement wasn&amp;rsquo;t an analytics tool. Instead, it was a solution called &lt;em&gt;MongoDB BI Connector&lt;/em&gt;, a headline feature of the upcoming 3.2 release.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;the-mongodb-32-bi-connector&#34;&gt;The MongoDB 3.2 BI Connector&lt;/h2&gt;
&lt;p&gt;Eliot had the honor of announcing the BI connector. Of all the things he was announcing, Eliot seemed least interested in the connector, so it got barely more than a mention.&lt;/p&gt;
&lt;p&gt;But details soon spread like wildfire thanks to an &lt;a href=&#34;https://www.mongodb.com/press/opens-modern-application-data-to-new-generation-visual-analysis-and-traditional-bi-tools&#34;&gt;official press release&lt;/a&gt;, which contained this succinct summary:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MongoDB today announced a new connector for BI and visualization, which connects MongoDB to industry-standard business intelligence (BI) and data visualization tools. Designed to work with every SQL-compliant data analysis tool on the market, including Tableau, SAP Business Objects, Qlik and IBM Cognos Business Intelligence, the connector is currently in preview release and expected to become generally available in the fourth quarter of 2015.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;According to the press release, the BI connector would allow &lt;em&gt;any BI software in the world&lt;/em&gt; to interface with the MongoDB database.&lt;/p&gt;
&lt;p&gt;News of the connector [caught fire](&lt;a href=&#34;https://twitter.com/search?f=tweets&amp;vertical=default&amp;q=mongodb&#34;&gt;https://twitter.com/search?f=tweets&amp;vertical=default&amp;q=mongodb&lt;/a&gt; bi connector&amp;amp;src=typd) on Twitter, and the media went into a frenzy. The story was picked up by &lt;a href=&#34;http://techcrunch.com/2015/06/02/new-mongodb-connector-creates-direct-connection-to-data-visualization-tools/&#34;&gt;TechCrunch&lt;/a&gt; and many others. Every retelling added new embellishments, with Fortune even claiming the BI connector had actually been &lt;a href=&#34;http://fortune.com/2015/06/03/couchbase-mongodb-embrace-sql/&#34;&gt;released at MongoWorld&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Given the nature of the announcement, the media hoopla was probably justified.&lt;/p&gt;
&lt;h3 id=&#34;when-worlds-collide&#34;&gt;When Worlds Collide&lt;/h3&gt;
&lt;p&gt;MongoDB, like many other NoSQL databases, does not store relational data. It stores rich data structures that relational BI software cannot understand.&lt;/p&gt;
&lt;p&gt;Kelly Stirman, VP of Strategy at MongoDB, explained the problem well:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“The thing that defines these apps as modern is rich data structures that don’t fit neatly into rows and columns of traditional databases&lt;/em&gt;.&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A connector that enabled any BI software in the world to do robust analytics on rich data structures, &lt;em&gt;with no loss of analytic fidelity&lt;/em&gt;, would be &lt;em&gt;giant news&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Had MongoDB really done the impossible? Had they developed a connector which satisfies all the &lt;a href=&#34;http://slamdata.com/whitepapers/characteristics-of-nosql-analytics-systems/&#34;&gt;requirements of NoSQL analytics&lt;/a&gt;, but exposes relational semantics on flat, uniform data, so legacy BI software can handle it?&lt;/p&gt;
&lt;p&gt;A couple months earlier, I had chatted with Ron Avnur, VP of Products at MongoDB. Ron indicated that all of MongoDB&amp;rsquo;s customers wanted analytics, but that they hadn&amp;rsquo;t decided whether to build something in-house or work with a partner.&lt;/p&gt;
&lt;p&gt;This meant that MongoDB had gone from &lt;em&gt;nothing&lt;/em&gt; to &lt;em&gt;magic&lt;/em&gt; in just a few months.&lt;/p&gt;
&lt;h3 id=&#34;pulling-back-the-curtain&#34;&gt;Pulling Back the Curtain&lt;/h3&gt;
&lt;p&gt;After the announcement, Jeff and I headed back to our sponsor booth, and Jeff asked me the most obvious question: &lt;em&gt;&amp;ldquo;How did they go from nothing to a BI connector that works with all possible BI tools in just a couple months?!?&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I thought carefully about the question.&lt;/p&gt;
&lt;p&gt;Among other problems that a BI connector would need to solve, it would have to be capable of efficiently executing SQL-like analytics on MongoDB. From my &lt;a href=&#34;http://github.com/quasar-analytics/&#34;&gt;deep&lt;/a&gt;&lt;a href=&#34;http://github.com/precog&#34;&gt;background&lt;/a&gt; in analytics, I knew that efficiently executing general-purpose analytics on modern databases like MongoDB is very challenging.&lt;/p&gt;
&lt;p&gt;These databases support very rich data structures and their interfaces are designed for so-called &lt;em&gt;operational&lt;/em&gt; use cases (not &lt;em&gt;analytical&lt;/em&gt; use cases). The kind of technology that can leverage operational interfaces to run arbitrary analytics on rich data structures takes &lt;em&gt;years&lt;/em&gt; to develop. It&amp;rsquo;s not something you can crank out in two months.&lt;/p&gt;
&lt;p&gt;So I gave Jeff my gut response: &lt;em&gt;&amp;ldquo;They didn&amp;rsquo;t create a new BI connector. It&amp;rsquo;s impossible. Something else is going on here!&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t know what, exactly. But in between shaking hands and handing out cards, I did some digging.&lt;/p&gt;
&lt;p&gt;Tableau showed a demo of their software working with the MongoDB BI Connector, which piqued my curiosity. Tableau has set the standard for visual analytics on relational databases, and their forward-thinking big data team has been giving NoSQL some serious thought.&lt;/p&gt;
&lt;p&gt;Thanks to their relationship with MongoDB, Tableau issued a &lt;a href=&#34;http://www.tableau.com/about/blog/2015/6/tableau-mongodb-visual-analytics-json-speed-thought-39557&#34;&gt;press release&lt;/a&gt; to coincide with the MongoWorld announcement, which I found on their website.&lt;/p&gt;
&lt;p&gt;I pored through this press release hoping to learn some new details. Burried deep inside, I discovered the faintest hint about what was going on:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MongoDB will soon announce beta availability of the connector, with general availability planned around the MongoDB 3.2 release late this year. During MongoDB’s beta, Tableau will be supporting the MongoDB connector on both Windows and Mac &lt;strong&gt;via our PostgreSQL driver&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These were the words that gave me my first clue: &lt;em&gt;via our PostgreSQL driver&lt;/em&gt;. This implied, at a minimum, that MongoDB&amp;rsquo;s BI Connector would speak the same &amp;ldquo;language&amp;rdquo; (&lt;em&gt;wire protocol&lt;/em&gt;) as the PostgreSQL database.&lt;/p&gt;
&lt;p&gt;That struck me as more than a little suspicious: was MongoDB actually re-implementing the &lt;em&gt;entirety&lt;/em&gt; of the PostgreSQL wire protocol, including support for hundreds of PostgreSQL functions?&lt;/p&gt;
&lt;p&gt;While &lt;em&gt;possible&lt;/em&gt;, this seemed &lt;em&gt;extremely unlikely&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I turned my gaze to Github, looking for open source projects that MongoDB might have leveraged. The conference Wifi was flaky, so I had to tether to my phone while I looked through dozens of repositories that mentioned both PostgreSQL and MongoDB.&lt;/p&gt;
&lt;p&gt;Eventually, I found what I was looking for: &lt;a href=&#34;https://github.com/asya999/mongoose_fdw/commits/master&#34;&gt;mongoose_fdw&lt;/a&gt;, an open source repository forked by Asya Kamsky (whom I did not know at the time, but her profile mentioned she worked for MongoDB).&lt;/p&gt;
&lt;p&gt;The repository contained a so-called &lt;em&gt;Foreign Data Wrapper&lt;/em&gt; (FDW) for the PostgreSQL database. The FDW interface allows developers to plug in other data sources, so that PostgreSQL can pull the data out and execute SQL on the data (NoSQL data must be flattened, null-padded, and otherwise dumbed-down for this to work properly for BI tools).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;I think I know what&amp;rsquo;s going on&amp;rdquo;&lt;/em&gt;, I told Jeff. &lt;em&gt;&amp;ldquo;For the prototype, it looks like they might be flattening out the data and using a different database to execute the SQL generated by the BI software.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;What database?&amp;rdquo;&lt;/em&gt; he shot back.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;PostgreSQL.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Jeff was speechless. He didn&amp;rsquo;t say a word. But I could tell &lt;em&gt;exactly&lt;/em&gt; what he was thinking, because I was thinking it too.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Shit. This is bad news for MongoDB. Really bad.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;postgresql-the-mongodb-killer&#34;&gt;PostgreSQL: The MongoDB Killer&lt;/h2&gt;
&lt;p&gt;PostgreSQL is a popular open source relational database. So popular, in fact, it&amp;rsquo;s currently &lt;a href=&#34;http://db-engines.com/en/ranking&#34;&gt;neck-and-neck with MongoDB&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The database is &lt;em&gt;fierce competition&lt;/em&gt; for MongoDB, primarily because it has acquired some of the features of MongoDB, including the ability to store, validate, manipulate, and index &lt;a href=&#34;https://en.wikipedia.org/wiki/JSON&#34;&gt;JSON documents&lt;/a&gt;. Third-party software even &lt;a href=&#34;https://www.citusdata.com/&#34;&gt;gives it the ability&lt;/a&gt; to scale horizontally (or should I say, hu&lt;em&gt;mongo&lt;/em&gt;usly).&lt;/p&gt;
&lt;p&gt;Every month or so, someone writes an article that recommends PostgreSQL over MongoDB. Often, the article goes viral and skyrockets to the top of hacker websites. A few of these articles are shown below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://developer.olery.com/blog/goodbye-mongodb-hello-postgresql/&#34;&gt;Goodbye MongoDB. Hello PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.enterprisedb.com/postgres-plus-edb-blog/marc-linster/postgres-outperforms-mongodb-and-ushers-new-developer-reality&#34;&gt;Postgres Outperforms MongoDB and Ushers in New Developer Reality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/errbit/errbit/issues/614&#34;&gt;MongoDB is dead. Long live Postgresql :)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/&#34;&gt;Why You Should Never Use MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.airpair.com/postgresql/posts/sql-vs-nosql-ko-postgres-vs-mongo&#34;&gt;SQL vs NoSQL KO. Postgres vs Mongo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svs.io/post/31724990463/why-i-migrated-away-from-mongodb&#34;&gt;Why I Migrated Away from MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/&#34;&gt;Why you should never, ever, ever use MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aptuz.com/blog/is-postgres-nosql-database-better-than-mongodb/&#34;&gt;Is Postgres NoSQL Better than MongoDB?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.userlike.com/en/blog/2015/10/09/bye-by-mysql-and-mongodb-guten-tag-postgresql&#34;&gt;Bye Bye MongoDB. Guten Tag PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The largest company commercializing PostgreSQL is &lt;a href=&#34;http://enterprisedb.com/&#34;&gt;EnterpriseDB&lt;/a&gt; (though there are plenty of others, some older or just as active), which maintains a &lt;a href=&#34;http://www.enterprisedb.com/nosql-for-enterprise&#34;&gt;large repository of content&lt;/a&gt; on the official website arguing that PostgreSQL is a better NoSQL database than MongoDB.&lt;/p&gt;
&lt;p&gt;Whatever your opinion on that point, one thing is clear: MongoDB and PostgreSQL are locked in a vicious, bloody battle for mind share among developers.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;from-prototype-to-production&#34;&gt;From Prototype to Production&lt;/h2&gt;
&lt;p&gt;As any engineer worth her salt will tell you, &lt;em&gt;prototypes aren&amp;rsquo;t for production&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Even if MongoDB &lt;em&gt;was&lt;/em&gt; using PostgreSQL as a prototype BI connector, maybe some brilliant MongoDB engineers were locked in a room somewhere, working on a standalone production version.&lt;/p&gt;
&lt;p&gt;Indeed, the way Tableau worded their press release even implied the dependency on the PostgreSQL driver &lt;em&gt;might&lt;/em&gt; be temporary:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;During MongoDB’s beta&lt;/strong&gt;, Tableau will be supporting the MongoDB connector on both Windows and Mac via our PostgreSQL driver.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Perhaps, I thought, the 3.2 release of MongoDB would ship with the &lt;em&gt;real deal&lt;/em&gt;: a BI connector that exposes the rich data structures that MongoDB supports (instead of flattening, null-padding, and throwing away data), executes all queries 100% in-database, and has no dependencies on competing databases.&lt;/p&gt;
&lt;p&gt;In July, more than a month after MongoWorld, I dropped by MongoDB&amp;rsquo;s offices in Palo Alto during a business trip. And I was very encouraged by what I learned.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;a-trip-to-mongodb&#34;&gt;A Trip to MongoDB&lt;/h2&gt;
&lt;p&gt;By Palo Alto&amp;rsquo;s standards, MongoDB&amp;rsquo;s office is quite large.&lt;/p&gt;
&lt;p&gt;I had seen the company&amp;rsquo;s sign during previous trips to the Valley, but this was the first time I had a chance to go inside.&lt;/p&gt;
&lt;p&gt;The week before, I was chatting with Asya Kamsky and Ron Anvur by email. We were discussing my company&amp;rsquo;s &lt;a href=&#34;http://quasar-analytics.org/&#34;&gt;open source work&lt;/a&gt; in executing advanced analytics on rich data structures directly inside MongoDB.&lt;/p&gt;
&lt;p&gt;Since we happened to be in Palo Alto at the same time, Asya invited me over to chat over catered pizza and office soda.&lt;/p&gt;
&lt;p&gt;Within the first few minutes, I could tell that Asya was smart, technical, and detail-oriented — exactly the traits you&amp;rsquo;d hope for in a product manager for a highly technical product like MongoDB.&lt;/p&gt;
&lt;p&gt;I explained to Asya what my company was doing, and helped her get our open source software up and running on her machine so she could play with it. At some point, we started chatting about BI connectors for MongoDB, of which there were several in the market (Simba, DataDirect, CData, and others).&lt;/p&gt;
&lt;p&gt;We both seemed to share the same view: that BI software needs to gain the ability to understand more complex data. The alternative, which involves dumbing down the data to fit the limitations of older BI software, means throwing away so much information, you lose the ability to solve &lt;a href=&#34;http://slamdata.com/whitepapers/characteristics-of-nosql-analytics-systems/&#34;&gt;key problems&lt;/a&gt; in NoSQL analytics.&lt;/p&gt;
&lt;p&gt;Asya thought a BI connector for MongoDB should expose the native MongoDB data structures, such as arrays, without any flattening or transformations. This characteristic, which I have termed &lt;em&gt;isomorphic data model&lt;/em&gt;, is one of the key requirements for a general-purpose NoSQL analytics, a topic I&amp;rsquo;ve &lt;a href=&#34;http://www.infoworld.com/article/2983953/nosql/how-to-choose-a-nosql-analytics-system.html&#34;&gt;written about&lt;/a&gt; extensively.&lt;/p&gt;
&lt;p&gt;I was very encouraged that Asya had independently come to the same conclusion, and felt confident that MongoDB understood the problem. I thought the future of analytics for MongoDB looked very bright.&lt;/p&gt;
&lt;p&gt;Unfortunately, I could not have been more wrong.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;mongodb-for-giant-ideasmistakes&#34;&gt;MongoDB: For Giant &lt;del&gt;Ideas&lt;/del&gt;Mistakes&lt;/h2&gt;
&lt;p&gt;Delighted that MongoDB was on the right track, I paid little attention to the BI connector for the next couple of months, though I did exchange a few emails with Asya and Ron.&lt;/p&gt;
&lt;p&gt;Heading into September, however, I encountered utter silence from the product team at MongoDB. After a few weeks of unreturned emails, I grew restless, and started poking around on my own.&lt;/p&gt;
&lt;p&gt;I discovered that Asya had forked a project called &lt;a href=&#34;https://github.com/asya999/Multicorn&#34;&gt;Multicorn&lt;/a&gt;, which allows Python developers to write Foreign Data Wrappers for PostgreSQL.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Uh oh&lt;/em&gt;, I thought, &lt;em&gt;MongoDB is back to its old tricks.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;More digging turned up the holy grail: a new project called &lt;a href=&#34;https://github.com/asya999/yam_fdw&#34;&gt;yam_fdw&lt;/a&gt; (Yet Another MongoDB Foreign Data Wrapper), a brand new FDW written in Python using Multicorn.&lt;/p&gt;
&lt;p&gt;According to the commit log (which tracks changes to the repository), the project had been built recently, after my July meeting with Asya Kamsky. In other words, this was &lt;em&gt;post-prototype&lt;/em&gt; development work!&lt;/p&gt;
&lt;p&gt;The final nail in the coffin, which convinced me that MongoDB was planning on shipping the PostgreSQL database as their &amp;ldquo;BI connector&amp;rdquo;, happened when someone forwarded me a &lt;a href=&#34;https://www.youtube.com/watch?v=0kwopDp0bmg&#34;&gt;video on YouTube&lt;/a&gt;, in which Asya demoed the connector.&lt;/p&gt;
&lt;p&gt;Worded very cautiously, and omitting any incriminating information, the video nonetheless ended with this summary:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The BI Connector receives connections and can speak the &lt;strong&gt;same wire protocol that the Postgres database****does&lt;/strong&gt;, so if your reporting tool can connect via ODBC, we will have an ODBC driver that you will be able to use from your tool to the BI Connector.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At that point, I had zero doubt: the production version of the BI connector, to be shipped with MongoDB 3.2, was, in fact, the PostgreSQL database in disguise!&lt;/p&gt;
&lt;p&gt;Most likely, the actual logic that sucked data out of MongoDB into PostgreSQL was a souped-up version of the Python-based Multicorn wrapper I had discovered earlier.&lt;/p&gt;
&lt;p&gt;At this point, no one at MongoDB was returning emails, which to any sane person, would have been enough to call it quits.&lt;/p&gt;
&lt;p&gt;Instead, I decided to give it one more try, at the MongoDB Days conference on December 2, just one week before the release of 3.2.&lt;/p&gt;
&lt;p&gt;Eliot Horowitz was delivering a keynote, Asya Kamsky would be speaking, and Ron Avnur would probably attend. Possibly, even Dev himself might drop by.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s when I&amp;rsquo;d have my best chance of convincing MongoDB to ditch the BI connector shenanigans.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;mongodb-days-2015-silicon-valley&#34;&gt;MongoDB Days 2015, Silicon Valley&lt;/h2&gt;
&lt;p&gt;Thanks to the wonderful marketing team at MongoDB, and based on the success of a similar talk I gave in Seattle at a MongoDB road show, I had a 45 minute presentation at the MongoDB Days conference.&lt;/p&gt;
&lt;p&gt;My &lt;em&gt;official&lt;/em&gt; purpose at the conference was to deliver my talk on MongoDB-powered analytics, and make users aware of the open source software that my company develops.&lt;/p&gt;
&lt;p&gt;But my &lt;em&gt;personal&lt;/em&gt; agenda was quite different: convincing MongoDB to can the BI connector before the impending 3.2 release. Failing that lofty and most likely &lt;em&gt;delusional&lt;/em&gt; goal, I wanted to confirm my suspicions about the connector.&lt;/p&gt;
&lt;p&gt;On the day of the conference, I went out of my way to say hello to old and new faces at MongoDB. Regardless of how much I may disagree with certain product decisions, there are many amazing people at the company just trying to do their jobs.&lt;/p&gt;
&lt;p&gt;I had gotten sick a few days earlier, but copious amounts of coffee kept me (mostly) awake. As the day progressed, I rehearsed my talk a few times, pacing the long corridors of the San Jose Convention Center.&lt;/p&gt;
&lt;p&gt;When the afternoon rolled around, I was ready, and gave &lt;a href=&#34;http://www.slideshare.net/jdegoes/slamdata-how-mongodb-is-powering-a-revolution-in-visual-analytics&#34;&gt;my talk&lt;/a&gt; to a packed room. I was excited about how many people were interested in the esoteric topic of &lt;a href=&#34;http://www.slideshare.net/jdegoes/slamdata-how-mongodb-is-powering-a-revolution-in-visual-analytics&#34;&gt;visual analytics on MongoDB&lt;/a&gt; (clearly the space was growing).&lt;/p&gt;
&lt;p&gt;After shaking hands and exchanging cards with some of the attendees, I went on the hunt for the MongoDB management team.&lt;/p&gt;
&lt;p&gt;I first ran into Eliot Horowitz, moments before his keynote. We chatted kids and food, and I told him how things were going at my company.&lt;/p&gt;
&lt;p&gt;The keynote started sharply at 5:10. Eliot talked about some of the features in 3.0, since a lot of companies are apparently stuck on older versions. He then proceeded to give a whirlwind tour of the features of MongoDB 3.2.&lt;/p&gt;
&lt;p&gt;I wondered what Eliot would say about the BI connector. Would he even mention it?&lt;/p&gt;
&lt;p&gt;Turns out, the BI connector was a leading feature of the keynote, having its own dedicated segment and even a whiz-bang demo.&lt;/p&gt;
&lt;h3 id=&#34;the-bi-connector&#34;&gt;The BI Connector&lt;/h3&gt;
&lt;p&gt;Eliot introduced the BI connector by loudly making the proclamation, &lt;em&gt;&amp;ldquo;MongoDB has no native analytics tools.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I found that somewhat amusing, since I wrote a guest post for MongoDB titled &lt;a href=&#34;https://www.mongodb.com/blog/post/native-sql-analytics-mongodb-slamdata&#34;&gt;Native Analytics for MongoDB with SlamData&lt;/a&gt; &lt;em&gt;(Edit: MongoDB has taken down the blog post, but as of 15:30 MDT, it&amp;rsquo;s &lt;a href=&#34;https://www.mongodb.com/blog?utf8=✓&amp;search=slamdata&#34;&gt;still in the search index&lt;/a&gt;)&lt;/em&gt;. SlamData is also a MongoDB partner and sponsored the MongoDB Days conference.&lt;/p&gt;
&lt;p&gt;Eliot seemed to stumble a bit when describing the purpose of the BI connector (getting actions from&amp;hellip; actionable insights? &lt;em&gt;Pesky analytics&lt;/em&gt;!). He looked relieved when he handed the presentation over to Asya Kamsky, who had prepared a nice demo for the event.&lt;/p&gt;
&lt;p&gt;During the presentation, Asya seemed uncharacteristically nervous to me. She chose every word carefully, and left out all details about what the connector was,  only covering the non-incriminating parts of how it worked (such as its reliance on DRDL to define MongoDB schemas). Most of the presentation focused not on the BI connector, but on Tableau (which, of course, demos very well!).&lt;/p&gt;
&lt;p&gt;All my feedback hadn&amp;rsquo;t even slowed the BI connector down.&lt;/p&gt;
&lt;h3 id=&#34;pulling-out-all-the-stops&#34;&gt;Pulling Out All the Stops&lt;/h3&gt;
&lt;p&gt;After the keynote, the swarm of conference attendees proceeded to the cocktail reception in the adjacent room. Attendees spent most of their time talking to other attendees, while MongoDB employees tended to congregate in bunches.&lt;/p&gt;
&lt;p&gt;I saw Ron Avnur chatting with Dan Pasette, VP of Server Engineering, a few feet from the keg of Lagunitas IPA they were serving attendees.&lt;/p&gt;
&lt;p&gt;Now was the time to act.&lt;/p&gt;
&lt;p&gt;The 3.2 release was coming out in mere days. No one at MongoDB was returning emails. Eliot had just told the world there were no native analytics tools for MongoDB, and had positioned the BI connector as a revolution for NoSQL analytics.&lt;/p&gt;
&lt;p&gt;With nothing to lose, I walked up to Ron, inserted myself into the conversation, and then began ranting against the BI connector in what was probably a two-minute, highly-animated monologue.&lt;/p&gt;
&lt;p&gt;I told him I expected more from MongoDB than disguising the PostgreSQL database as the magical solution to MongoDB analytics. I told him that MongoDB should have demonstrated integrity and leadership, and shipped a solution that supports the rich data structures that MongoDB supports, pushes all computation into the database, and doesn&amp;rsquo;t have any dependencies on a competing database.&lt;/p&gt;
&lt;p&gt;Ron was stunned. He began to defend the BI connector&amp;rsquo;s &amp;ldquo;pushdown&amp;rdquo; in vague terms, and I realized this was my chance to confirm my suspicions.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;Postgres foreign data wrappers support barely any pushdown,&amp;rdquo;&lt;/em&gt; I stated matter-of-factly. &lt;em&gt;&amp;ldquo;This is all the more true in the Multicorn wrapper you&amp;rsquo;re using for the BI connector, which is based on an older Postgres and doesn&amp;rsquo;t even support the full pushdown capabilities of the Postgres FDW.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ron admitted defeat. &lt;em&gt;&amp;ldquo;That&amp;rsquo;s true,&amp;rdquo;&lt;/em&gt; he said.&lt;/p&gt;
&lt;p&gt;I pushed him to defend the decision. But he had no answer. I told him to pull the stop cord right now, before MongoDB released the &amp;ldquo;BI connector&amp;rdquo;. When Ron shrugged off that possibility, I told him the whole thing was going to blow up in his face. &lt;em&gt;&amp;ldquo;You might be right,&amp;rdquo;&lt;/em&gt; he said, &lt;em&gt;&amp;ldquo;But I have bigger things to worry about right now,&amp;rdquo;&lt;/em&gt; possibly referring to the upcoming 3.2 release.&lt;/p&gt;
&lt;p&gt;We had a beer together, the three of us. I pointed to Dan, &lt;em&gt;&amp;ldquo;This guy&amp;rsquo;s team has built a database that can actually do analytics. Why aren&amp;rsquo;t you using it in the BI connector?&amp;rdquo;&lt;/em&gt; But it was no use. Ron wasn&amp;rsquo;t budging.&lt;/p&gt;
&lt;p&gt;We parted ways, agreeing to disagree.&lt;/p&gt;
&lt;p&gt;I spotted Dev Ittycheria from across the room, and walked over to him. I complimented the work that the marketing department was doing, before moving on to critique product. I told Dev, &lt;em&gt;&amp;ldquo;In my opinion, product is making some mistakes.&amp;rdquo;&lt;/em&gt; He wanted to know more, so I gave him my spiel, which I had repeated often enough to know by heart. He told me to followup by email, and of course I did, but I never heard back.&lt;/p&gt;
&lt;p&gt;After my conversation with Dev, it finally sunk in that I would not be able to change the course of MongoDB 3.2. It would ship with the BI connector, and there wasn&amp;rsquo;t a single thing that I could do about it.&lt;/p&gt;
&lt;p&gt;I was disappointed, but at the same time, I felt a huge wave of relief. I had talked to everyone I could. I had pulled out all the stops. I had given it my all.&lt;/p&gt;
&lt;p&gt;As I left the cocktail reception, and headed back to my hotel, I couldn&amp;rsquo;t help but speculate on why the company was making decisions that I so strongly opposed.&lt;/p&gt;
&lt;h2 id=&#34;mongodb-an-island-of-one&#34;&gt;MongoDB: An Island of One&lt;/h2&gt;
&lt;p&gt;After much reflection, I now think that MongoDB&amp;rsquo;s poor product decisions are caused by an inability to focus on the core database. This inability to focus is caused by an inability to cultivate a NoSQL ecosystem.&lt;/p&gt;
&lt;p&gt;Relational databases rose to dominance, in part, because of the astounding ecosystem that grew around these databases.&lt;/p&gt;
&lt;p&gt;This ecosystem gave birth to backup, replication, analytics, reporting, security, governance, and numerous other category-defining applications. Each depended on and contributed to the success of the others, creating network benefits and high switching costs that are proving troublesome for modern-day NoSQL vendors.&lt;/p&gt;
&lt;p&gt;In contrast, there&amp;rsquo;s virtually &lt;em&gt;no ecosystem&lt;/em&gt; around MongoDB, and I&amp;rsquo;m not the only one to &lt;a href=&#34;http://slamdata.com/blog/2014/12/09/where-is-the-nosql-ecosystem.html&#34;&gt;notice this fact&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Why isn&amp;rsquo;t there an ecosystem around MongoDB?&lt;/p&gt;
&lt;p&gt;My snarky answer is that because, if you are a MongoDB partner that provides native analytics for MongoDB, the CTO will get up on stage and say there are no tools that provide native analytics for MongoDB.&lt;/p&gt;
&lt;p&gt;More objectively, however, I think the above is just a symptom. The &lt;em&gt;actual problem&lt;/em&gt; is that the MongoDB partner program is totally broken.&lt;/p&gt;
&lt;p&gt;The partner team at MongoDB reports directly to the Chief Revenue Officer (Carlos Delatorre), which implies the primary job of the partner team is to extract revenue from partners. This inherently skews partner activities towards large companies that have no vested interest in the success of the NoSQL ecosystem (indeed, many of them produce competing relational solutions).&lt;/p&gt;
&lt;p&gt;Contrast that with small, NoSQL-centric companies like SlamData, Datos IO, and others. These companies succeed &lt;em&gt;precisely&lt;/em&gt; in the case that NoSQL succeeds, and they provide functionality that&amp;rsquo;s standard in the relational world, which NoSQL databases &lt;em&gt;need&lt;/em&gt; to thrive in the Enterprise.&lt;/p&gt;
&lt;p&gt;After being a partner for more than a year, I can tell you that almost no one in MongoDB knew about the existence of SlamData, despite the fact that SlamData acted as a powerful incentive for companies to choose MongoDB over other NoSQL databases (e.g. MarkLogic), and an enabler for companies considering the switch from relational technology (e.g. Oracle).&lt;/p&gt;
&lt;p&gt;Despite the fact that partners try, MongoDB appears completely unconcerned about the joint revenue and sales opportunities presented by NoSQL-centric partners. No reseller agreements. No revenue sharing. No sales one-pagers. No cross-marketing. Nothing but a logo.&lt;/p&gt;
&lt;p&gt;This means that organizationally, MongoDB ignores the NoSQL-centric partners who could most benefit them. Meanwhile, their largest customers and prospects keep demanding infrastructure common to the relational world, such as backup, replication, monitoring, analytics, data visualization, reporting, data governance, query analysis, and much more.&lt;/p&gt;
&lt;p&gt;This incessant demand from larger companies, combined with the inability to cultivate an ecosystem, forms a &lt;em&gt;toxic combination&lt;/em&gt;. It leads MongoDB product to try to &lt;em&gt;create its own ecosystem&lt;/em&gt; by building &lt;em&gt;all possible products&lt;/em&gt;!&lt;/p&gt;
&lt;p&gt;Backup? Check. Replication? Check. Monitoring? Check. BI connectivity? Check. Data discovery? Check. Visual analytics? Check.&lt;/p&gt;
&lt;p&gt;But a single NoSQL database vendor with finite resources cannot possibly build an ecosystem around itself to compete with the massive ecosystem around relational technology (it&amp;rsquo;s far too expensive!). So this leads to distractions, like MongoDB Compass, and &amp;ldquo;sham&amp;rdquo; technology, like the BI connector.&lt;/p&gt;
&lt;p&gt;What&amp;rsquo;s the alternative? In my humble opinion, it&amp;rsquo;s quite simple.&lt;/p&gt;
&lt;p&gt;First, MongoDB should nurture a vibrant, venture-funded ecosystem of NoSQL-centric partners (&lt;em&gt;not&lt;/em&gt; relational partners with deep pockets!). These partners should have deep domain expertise in their respective spaces, and all of them should succeed precisely in the case that MongoDB succeeds.&lt;/p&gt;
&lt;p&gt;MongoDB sales reps and account managers should be empowered with partner-provided information that helps them overcome objections and reduce churn, and MongoDB should build this into a healthy revenue stream.&lt;/p&gt;
&lt;p&gt;Second, with customer demand for related infrastructure satisfied by NoSQL-centric partners, MongoDB should focus both product &lt;em&gt;and&lt;/em&gt; sales on the core database, which is how a &lt;em&gt;database vendor&lt;/em&gt; should make money!&lt;/p&gt;
&lt;p&gt;MongoDB should develop features that have significant value to Enterprise (such as ACID transactions, NVRAM storage engines, columnar storage engines, cross data center replication, etc.), and thoughtfully draw the line between Community and Enterprise. All in a way that gives &lt;em&gt;developers&lt;/em&gt; the same capabilities across editions.&lt;/p&gt;
&lt;p&gt;The goal should be for MongoDB to drive enough revenue off the database that product won&amp;rsquo;t be tempted to invent an inferior ecosystem.&lt;/p&gt;
&lt;p&gt;You be the judge, but I think it&amp;rsquo;s pretty clear which is the winning strategy.&lt;/p&gt;
&lt;h2 id=&#34;bye-bye-mongodb&#34;&gt;Bye-Bye, MongoDB&lt;/h2&gt;
&lt;p&gt;Clearly, I cannot get behind product decisions like shipping a competing relational database as the definitive answer to analytics on a post-relational database like MongoDB.&lt;/p&gt;
&lt;p&gt;In my opinion, this decision is bad for the community, it&amp;rsquo;s bad for customers, and it&amp;rsquo;s bad for the emerging space of NoSQL analytics.&lt;/p&gt;
&lt;p&gt;In addition, to the extent it&amp;rsquo;s not done with &lt;em&gt;full transparency&lt;/em&gt;, it&amp;rsquo;s also bad for integrity, which is a pillar on which &lt;em&gt;all companies&lt;/em&gt; should be founded (especially open source companies).&lt;/p&gt;
&lt;p&gt;So with this post, I&amp;rsquo;m officially giving up.&lt;/p&gt;
&lt;p&gt;No more frantic emails to MongoDB. No more monopolizing management at MongoDB cocktail parties. No more sharing my opinions in private with a company that doesn&amp;rsquo;t even return emails.&lt;/p&gt;
&lt;p&gt;Been there, done that, didn&amp;rsquo;t work.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m also, obviously, blowing the whistle. By the time you&amp;rsquo;re reading this, the whole world will know that the MongoDB 3.2 BI Connector is the PostgreSQL database, with some glue to flatten data, throw away bits and pieces, and suck out whatever&amp;rsquo;s left into PostgreSQL.&lt;/p&gt;
&lt;p&gt;What does all this mean for companies evaluating MongoDB?&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s your call, but personally, I&amp;rsquo;d say if you&amp;rsquo;re in the market for a NoSQL database, you need legacy BI connectivity, and you&amp;rsquo;re also considering PostgreSQL, you should probably just pick PostgreSQL.&lt;/p&gt;
&lt;p&gt;After all, MongoDB&amp;rsquo;s &lt;em&gt;own answer&lt;/em&gt; to the problem of analytics on MongoDB is to pump the data out of MongoDB, flatten it out, and dump it into PostgreSQL. If your data is going to end up as flat relational data in PostgreSQL, why not start out there, too? Kill two birds with one stone!&lt;/p&gt;
&lt;p&gt;At least you can count on the PostgreSQL community to innovate around NoSQL, which they&amp;rsquo;ve been doing for years. There&amp;rsquo;s zero chance the community would package up the MongoDB database into a sham &amp;ldquo;PostgreSQL NoSQL&amp;rdquo; product, and call it a revolution in NoSQL database technology.&lt;/p&gt;
&lt;p&gt;Which is, sadly, &lt;em&gt;exactly&lt;/em&gt; what MongoDB has done in reverse.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;The Shame photo taken by &lt;a href=&#34;https://www.flickr.com/photos/greyworld/&#34;&gt;Grey World&lt;/a&gt;, copyright Grey World, and licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/2.0/&#34;&gt;CC By 2.0&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: PostgreSQL可以替代微软SQL Server吗？</title>
      <link>/zh/blog/pg/pg-replace-mssql/</link>
      <pubDate>Mon, 02 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/pg-replace-mssql/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/pg-replace-mssql/featured_hu02aa61ae1d9de35cbe238d2676170cb9_346897_640x0_resize_q75_catmullrom.jpg" width="640" height="640"/>]]>
        
        &lt;p&gt;许多人对于 PostgreSQL 生态已经发展到什么阶段并没有一个直观的印象 —— 除了 &lt;a href=&#34;/zh/blog/pg/pg-eat-db-world&#34;&gt;吞噬数据库世界&lt;/a&gt;，囊括万物的扩展生态之外，PostgreSQL 还可以直接从内核层面，替换掉 Oracle，SQL Server 与 MongoDB，当然 MySQL 就更不在话下了。&lt;/p&gt;
&lt;p&gt;当然要说主流数据库中，暴露风险最高的是谁，那毫无疑问是&lt;strong&gt;微软的 SQL Server 了&lt;/strong&gt;。MSSQL 被替代的是最彻底的 —— 直接在 WireProtocol 层面被替代了。而主导这件事的是 AWS，亚马逊云服务。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;babelfish&#34;&gt;Babelfish&lt;/h2&gt;
&lt;p&gt;虽然我一直吐槽云厂商&lt;a href=&#34;/zh/blog/cloud/redis-oss&#34;&gt;&lt;strong&gt;白嫖开源&lt;/strong&gt;&lt;/a&gt;，但我承认这种策略是极为有效的 ——
AWS 拿着开源的 PostgreSQL 和 MySQL 内核，一路杀穿数据库市场，拳打 Oracle ，脚踢微软，成为数据库市场份额毫无争议的一哥。
而这两年 AWS 更是玩了一招釜底抽薪，开发整合了一个 BabelfishPG 的扩展插件，提供“&lt;strong&gt;线缆协议&lt;/strong&gt;”级别的兼容性。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;marketshare.png&#34; src=&#34;/zh/blog/pg/pg-replace-mssql/marketshare.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;所谓&lt;strong&gt;线缆协议兼容&lt;/strong&gt;，就是指客户端什么都不用改，依然访问 SQL Server 1433 端口，使用 MSSQL 的驱动与命令行工具（sqlcmd）访问加装 BabelfishPG 的集群就可以了。
而且更神奇的是，你依然可以使用 PostgreSQL 的协议语言语法，从原来的 5432 端口访问，和 SQL Server 的客户端并存 —— 这就给迁移带来了极大的便利条件。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;wiltondb&#34;&gt;WiltonDB&lt;/h2&gt;
&lt;p&gt;当然 Babelfish 并不是一个单纯的 PG 扩展插件，它对 PostgreSQL 内核进行了少量修改与适配。并通过四个扩展插件分别提供了 TSQL 语法支持，TDS 线缆协议支持，数据类型以及其他函数支持。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;wiltondb.png&#34; src=&#34;/zh/blog/pg/pg-replace-mssql/wiltondb.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在不同的平台上编译打包这样的内核与扩展并不是轻松容易的一件事，因此 WiltonDB —— 一个 Babelfish 的发行版就做了这件事，将 BabelfishPG 编译打包为 EL 7/8/9 与 Ubuntu 系统，甚至 Windows 下可用的 RPM / DEB / MSI 包。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pigsty-v3&#34;&gt;Pigsty v3&lt;/h2&gt;
&lt;p&gt;当然，只有 RPM / DEB 包，距离提供生产级的服务还依然差得太远，而在最近发布的 Pigsty v3 中，我们提供了将原生 PostgreSQL 内核替换为 BabelfishPG 的能力。&lt;/p&gt;
&lt;p&gt;创建这样一套 MSSQL 集群，所需的不过是在集群定义中修改几个参数。然后依然是一件傻瓜式拉起 —— 类似主从搭建， 扩展安装，参数优化，用户配置，HBA规则设定，甚至是服务流量分发，都会自动根据配置文件一键拉起。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pigsty-conf.png&#34; src=&#34;/zh/blog/pg/pg-replace-mssql/pigsty-conf.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在使用实践上，你完全可以把 Babelfish 集群当作一套普通的 PostgreSQL 集群来使用与管理。唯一的区别就是客户端在使用 5432 PGSQL 协议的基础上，还可以选择是否要使用 1433 端口上的 TSQL 协议支持。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;sqlcmd.png&#34; src=&#34;/zh/blog/pg/pg-replace-mssql/sqlcmd.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;例如，您可以轻松通过配置，将原本固定指向主库连接池 6432 端口的 Primary 服务重定向到 1433 端口，从而实现故障切换下的无缝 TDS / TSQL 流量切换。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;mssql.png&#34; src=&#34;/zh/blog/pg/pg-replace-mssql/mssql.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这意味着原本属于 PostgreSQL RDS 的能力 —— 高可用，时间点恢复，监控系统，IaC管控，SOP预案，甚至无数的扩展插件都可以嫁接融合到 SQL Server 版本的内核之上。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;如何迁移&#34;&gt;如何迁移？&lt;/h2&gt;
&lt;p&gt;PostgreSQL 生态除了有Babelfish这样给力的内核与扩展，还有着繁荣的工具生态。如果要想从 SQL Server 或 MySQL 迁移到 PostgreSQL ，我强烈推荐一款杀手级迁移工具：&lt;a href=&#34;https://pgloader.readthedocs.io/en/latest/ref/mssql.html&#34;&gt;&lt;strong&gt;PGLOADER&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这款迁移工具傻瓜化到了离谱的程度，在理想的情况下，你只需要两个数据库的&lt;strong&gt;连接串&lt;/strong&gt;，就可以完成迁移了。对，真的是一行多余的废话都没有。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pgloader mssql://user@mshost/dbname pgsql://pguser@pghost/dbname
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;有了 MSSQL 兼容内核扩展，又有了迁移工具，存量的 SQL Server 搬迁会变的非常容易。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;除了-mssql还有&#34;&gt;除了 MSSQL，还有……&lt;/h2&gt;
&lt;p&gt;除了 MSSQL，PostgreSQL 生态还有旨在替代 Oracle替代：PolarDB O 与 IvorySQL，旨在替代 MongoDB 的 FerretDB 与 PongoDB。以及三百多个提供各式各样功能的扩展插件。实际上，几乎整个数据库世界都在受到 PostgreSQL 的冲击 —— 除了那些与 PostgreSQL 错开生态位（SQLite，DuckDB，MinIO），或者干脆就是 PostgreSQL 套壳（Supabase，RDS，Aurora/Polar）的数据库。&lt;/p&gt;
&lt;p&gt;我们最近发布的开源 RDS PostgreSQL 方案 —— Pigsty 最近就支持了这些 PG 替换内核，允许用户在一套 PostgreSQL 部署中提供 MSSQL，Oracle，MongoDB，Firebase，MongoDB 的兼容性替代能力。不过限于篇幅，那就是后面几篇要介绍的内容了。&lt;/p&gt;
&lt;p&gt;除了 MSSQL，PostgreSQL 生态还有旨在替代 Oracle替代：PolarDB O 与 IvorySQL，旨在替代 MongoDB 的 FerretDB 与 PongoDB。&lt;a href=&#34;/zh/docs/pgext/list&#34;&gt;以及三百多个提供各式各样功能的扩展插件。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/pigsty/ecosystemjpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;实际上，几乎整个数据库世界都在受到 PostgreSQL 的冲击 —— 除了那些与 PostgreSQL 错开生态位（SQLite，DuckDB，MinIO），或者干脆就是 PostgreSQL 套壳（Supabase，RDS，Aurora/Polar）的数据库。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;dbengine.png&#34; src=&#34;/zh/blog/pg/pg-replace-mssql/dbengine.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们最近发布的开源 RDS PostgreSQL 方案 —— Pigsty 最近就支持了这些 PG 替换内核，允许用户在一套 PostgreSQL 部署中提供 MSSQL，Oracle，MongoDB，Firebase，MongoDB 的兼容性替代能力。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/pigsty/kernels.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;不过限于篇幅，那就是后面几篇要介绍的内容了。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: v3.0：海量扩展，插拔内核，RDS服务</title>
      <link>/zh/blog/releases/v3.0.0/</link>
      <pubDate>Sun, 25 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/releases/v3.0.0/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/releases/v3.0.0/featured_hu02aa61ae1d9de35cbe238d2676170cb9_641590_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;hr&gt;
&lt;h3 id=&#34;亮点特性&#34;&gt;亮点特性&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;扩展大爆炸&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;Pigsty v3 提供了史无前例的 &lt;a href=&#34;/zh/docs/pgext/list&#34;&gt;&lt;strong&gt;340&lt;/strong&gt;&lt;/a&gt; 个可用扩展插件。
包括 &lt;strong&gt;121&lt;/strong&gt; 个扩展 &lt;a href=&#34;/zh/docs/pgext/list/rpm/&#34;&gt;&lt;strong&gt;RPM包&lt;/strong&gt;&lt;/a&gt; 与 &lt;strong&gt;133&lt;/strong&gt; 个 &lt;a href=&#34;/zh/docs/pgext/list/deb/&#34;&gt;&lt;strong&gt;DEB包&lt;/strong&gt;&lt;/a&gt;，数量已经超过了 PGDG 官方仓库提供的扩展数量总和（135 RPM/ 109 DEB）。
而且，Pigsty 还将EL系统与Debian生态的独有PG扩展插件相互移植，实现了两大发行版的插件生态大对齐。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#000&#34;&gt;timescaledb periods temporal_tables emaj table_version pg_cron pg_later pg_background pg_timetable&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;postgis pgrouting pointcloud pg_h3 q3c ogr_fdw geoip #pg_geohash&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#mobilitydb&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pgvector pgvectorscale pg_vectorize pg_similarity pg_tiktoken pgml&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#smlar&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_search pg_bigm zhparser hunspell&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;hydra pg_lakehouse pg_duckdb duckdb_fdw pg_fkpart pg_partman plproxy&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pg_strom citus&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_hint_plan age hll rum pg_graphql pg_jsonschema jsquery index_advisor hypopg imgsmlr pg_ivm pgmq pgq&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#rdkit&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_tle plv8 pllua plprql pldebugger plpgsql_check plprofiler plsh&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pljava plr pgtap faker dbt2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;prefix semver pgunit md5hash asn1oid roaringbitmap pgfaceting pgsphere pg_country pg_currency pgmp numeral pg_rational pguint ip4r timestamp9 chkpass #pg_uri #pgemailaddr #acl #debversion&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pg_rrule&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;topn pg_gzip pg_http pg_net pg_html5_email_address pgsql_tweaks pg_extra_time pg_timeit count_distinct extra_window_functions first_last_agg tdigest aggs_for_arrays pg_arraymath pg_idkit pg_uuidv7 permuteseq pg_hashids&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;sequential_uuids pg_math pg_random pg_base36 pg_base62 floatvec pg_financial pgjwt pg_hashlib shacrypt cryptint pg_ecdsa pgpcre icu_ext envvar url_encode #pg_zstd #aggs_for_vecs #quantile #lower_quantile #pgqr&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pg_protobuf&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_repack pg_squeeze pg_dirtyread pgfincore pgdd ddlx pg_prioritize pg_checksums pg_readonly safeupdate pg_permissions pgautofailover pg_catcheck preprepare pgcozy pg_orphaned pg_crash pg_cheat_funcs pg_savior table_log pg_fio&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pgpool pgagent&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pg_profile pg_show_plans pg_stat_kcache pg_stat_monitor pg_qualstats pg_store_plans pg_track_settings pg_wait_sampling system_stats pg_meta pgnodemx pg_sqlog bgw_replstatus pgmeminfo toastinfo pagevis powa pg_top #pg_statviz #pgexporter_ext&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#pg_mon&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;passwordcheck supautils pgsodium pg_vault anonymizer pg_tde pgsmcrypto pgaudit pgauditlogtofile pg_auth_mon credcheck pgcryptokey pg_jobmon logerrors login_hook set_user pg_snakeoil pgextwlist pg_auditor noset&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#sslutils&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;wrappers multicorn mysql_fdw tds_fdw sqlite_fdw pgbouncer_fdw mongo_fdw redis_fdw pg_redis_pubsub kafka_fdw hdfs_fdw firebird_fdw aws_s3 log_fdw #oracle_fdw&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#db2_fdw&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;orafce pgtt session_variable pg_statement_rollback pg_dbms_metadata pg_dbms_lock pgmemcache #pg_dbms_job&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#wiltondb&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;pglogical pgl_ddl_deploy pg_failover_slots wal2json wal2mongo decoderbufs decoder_raw mimeo pgcopydb pgloader pg_fact_loader pg_bulkload pg_comparator pgimportdoc pgexportdoc #repmgr&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#slony&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;gis-stack rag-stack fdw-stack fts-stack etl-stack feat-stack olap-stack supa-stack stat-stack json-stack&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;换内核&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;Pigsty v3 允许您更换 PostgreSQL 内核，目前支持了 SQL Server 兼容的 Babelfish （线缆协议级仿真），Oracle 兼容的 IvorySQL，以及 PG 版的 RAC PolarDB；此外，现在自托管 Supabase 也在 Debian 系统中可用。
您可以让 Pigsty 中带有 HA，IaC，PITR，监控的生产级 PostgreSQL 集群仿真 MSSQL (via WiltonDB)，Oracle via (IvorySQL)，Oracle RAC (via PolarDB), MongoDB（via FerretDB），以及 Firebase （via Supabase）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;企业版&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;我们现在提供 Pigsty Pro &lt;a href=&#34;/zh/docs/price&#34;&gt;&lt;strong&gt;专业版&lt;/strong&gt;&lt;/a&gt;，在开源版的功能基础上提供增值服务。专业版提供额外的功能模块：MSSQL，Oracle，Mongo，K8S，Victoria，Kafka，TigerBeetle 等……，并提供更广泛的 PG 大版本、操作系统、芯片架构的支持。
提供针对全系操作系统精准小版本定制的离线安装包，以及 EL7，Debian 11，Ubuntu 20.04 等过保老系统的支持；此外，专业版还提供内核可插拔定制服务，并对PolarDB PG/Oracle 的原生部署、监控管控支持以满足“国产化”需要。&lt;/p&gt;
&lt;p&gt;使用以下命令&lt;a href=&#34;/zh/docs/setup/install&#34;&gt;&lt;strong&gt;快速安装&lt;/strong&gt;&lt;/a&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -fsSL https://repo.pigsty.cc/get &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; bash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; ~/pigsty&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; ./bootstrap&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; ./configure&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; ./install.yml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;重大变更&#34;&gt;重大变更&lt;/h3&gt;
&lt;p&gt;本次 Pigsty 发布调整大版本号，从 2.x 升级到 3.0，带有一些重大变更：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;首要支持操作系统调整为：EL 8 / EL 9 / Debian 12 / Ubuntu 22.04&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EL7 / Debian 11 / Ubuntu 20.04 等系统进入弃用阶段，不再提供支持&lt;/li&gt;
&lt;li&gt;有在这些系统上运行需求的用户请考虑我们的 &lt;a href=&#34;https://pigsty.io/zh/docs/price&#34;&gt;订阅服务&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;默认使用在线安装，不再提供离线软件包，从而解决操作系统小版本兼容性问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bootstrap&lt;/code&gt; 过程现在不再询问是否下载离线安装包，但如果 &lt;code&gt;/tmp/pkg.tgz&lt;/code&gt; 存在，仍然会自动使用离线安装包。&lt;/li&gt;
&lt;li&gt;有离线安装需求请自行制作离线软件包或考虑我们的 &lt;a href=&#34;https://pigsty.io/zh/docs/about/service&#34;&gt;订阅服务&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pigsty 使用的上游软件仓库进行统一调整，地址变更，并对所有软件包进行 GPG 签名与校验&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标准仓库： &lt;code&gt;https://repo.pigsty.io/{apt/yum}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;国内镜像： &lt;code&gt;https://repo.pigsty.cc/{apt/yum}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;API 参数变更与配置模板变更&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EL 系与 Debian 系配置模板现在收拢统一，有差异的参数统一放置于 &lt;a href=&#34;https://github.com/Vonng/pigsty/tree/master/roles/node_id/vars&#34;&gt;&lt;code&gt;roles/node_id/vars/&lt;/code&gt;&lt;/a&gt; 目录进行管理。&lt;/li&gt;
&lt;li&gt;配置目录变更，所有配置文件模板统一放置在 &lt;code&gt;conf&lt;/code&gt; 目录下，并分为 &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;dbms&lt;/code&gt;, &lt;code&gt;demo&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt; 四大类。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;其他新特性&#34;&gt;其他新特性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;PG OLAP 分析能力史诗级加强：DuckDB 1.0.0，DuckDB FDW，以及 PG Lakehouse，Hydra 移植至 Deb 系统中。&lt;/li&gt;
&lt;li&gt;PG 向量检索与全文检索能力加强：Vectorscale 提供 DiskANN 向量索引，Hunspell 分词字典支持，pg_search 0.9.1。&lt;/li&gt;
&lt;li&gt;帮助 ParadeDB 解决了软件包构建问题，现在我们在 Debian/Ubuntu 上也能提供这一扩展。&lt;/li&gt;
&lt;li&gt;Supabase 所需的扩展在 Debian/Ubuntu 上全部可用，Supabase 现在可在全OS上自托管。&lt;/li&gt;
&lt;li&gt;提供了场景化预置扩展堆栈的能力，如果您不知道安装哪些扩展，我们准备了针对特定应用场景的扩展推荐包（Stack）。&lt;/li&gt;
&lt;li&gt;针对所有 PostgreSQL 生态的扩展，制作了元数据表格、文档、索引、名称映射，针对 EL与Deb 进行对齐，确保扩展可用性。&lt;/li&gt;
&lt;li&gt;为了解决 DockerHub 被 Ban 的问题，我们加强了 &lt;code&gt;proxy_env&lt;/code&gt; 参数的功能并简化其配置方式。&lt;/li&gt;
&lt;li&gt;建设了一个专用的新软件仓库，提供了 12-17 版本的全部扩展插件，其中，PG16的扩展仓库会在 Pigsty 默认的版本中实装。&lt;/li&gt;
&lt;li&gt;现有软件仓库升级改造，使用标准的签名与校验机制，确保软件包的完整性与安全性。APT 仓库采用新的标准布局通过 &lt;code&gt;reprepro&lt;/code&gt; 构建。&lt;/li&gt;
&lt;li&gt;提供了 1,2,3,4,43 节点的沙箱环境：&lt;code&gt;meta&lt;/code&gt;, &lt;code&gt;dual&lt;/code&gt;, &lt;code&gt;trio&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, &lt;code&gt;prod&lt;/code&gt;，以及针对 7 大 OS Distro 的快捷配置模板。&lt;/li&gt;
&lt;li&gt;PG Exporter 新增了 PostgreSQL 17 与 pgBouncer 1.23 新监控指标收集器的定义，与使用这些指标的 Grafana Panel&lt;/li&gt;
&lt;li&gt;监控面板修缮，修复了各种问题，为 PGSQL Pgbouncer 与 PGSQL Patroni 监控面板添加了日志仪表盘。&lt;/li&gt;
&lt;li&gt;使用全新的 &lt;code&gt;cache.yml&lt;/code&gt; Ansible 剧本，替换了原有制作离线软件包的 &lt;code&gt;bin/cache&lt;/code&gt; 与 &lt;code&gt;bin/release-pkg&lt;/code&gt; 脚本。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;api变更&#34;&gt;API变更&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;新参数选项： &lt;code&gt;pg_mode&lt;/code&gt; 现在支持的模式有 &lt;code&gt;pgsql&lt;/code&gt;, &lt;code&gt;citus&lt;/code&gt;, &lt;code&gt;gpsql&lt;/code&gt;, &lt;code&gt;mssql&lt;/code&gt;, &lt;code&gt;ivory&lt;/code&gt;, &lt;code&gt;polar&lt;/code&gt;，用于指定 PostgreSQL 集群的模式
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pgsql&lt;/code&gt;： 标准 PostgreSQL 高可用集群&lt;/li&gt;
&lt;li&gt;&lt;code&gt;citus&lt;/code&gt;： Citus 水平分布式 PostgreSQL 原生高可用集群&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gpsql&lt;/code&gt;： 用于 Greenplum 与 GP 兼容数据库的监控（专业版）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mssql&lt;/code&gt;： 安装 WiltonDB / Babelfish，提供 Microsoft SQL Server 兼容性模式的标准 PostgreSQL 高可用集群，线缆协议级支持，扩展不可用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ivory&lt;/code&gt;： 安装 IvorySQL 提供的 Oracle 兼容性 PostgreSQL 高可用集群，Oracle语法/数据类型/函数/存储过程兼容，扩展不可用 （专业版）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;polar&lt;/code&gt;： 安装 PolarDB for PostgreSQL （PG RAC）开源版本，提供国产化数据库能力支持，扩展不可用。（专业版）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新参数： &lt;code&gt;pg_parameters&lt;/code&gt;，用于在实例级别指定 &lt;code&gt;postgresql.auto.conf&lt;/code&gt; 中的参数，覆盖集群配置，实现不同实例成员的个性化配置。&lt;/li&gt;
&lt;li&gt;新参数： &lt;code&gt;pg_files&lt;/code&gt;，用于将额外的文件拷贝到PGDATA数据目录，针对需要License文件的商业版PostgreSQL分叉内核设计。&lt;/li&gt;
&lt;li&gt;新参数： &lt;code&gt;repo_extra_packages&lt;/code&gt;，用于额外指定需要下载的软件包，与 &lt;code&gt;repo_packages&lt;/code&gt; 共同使用，便于指定OS版本独有的扩展列表。&lt;/li&gt;
&lt;li&gt;参数重命名： &lt;code&gt;patroni_citus_db&lt;/code&gt; 重命名为 &lt;code&gt;pg_primary_db&lt;/code&gt;，用于指定集群中的主要数据库（在 Citus 模式中使用）&lt;/li&gt;
&lt;li&gt;参数强化：&lt;code&gt;proxy_env&lt;/code&gt; 中的代理服务器配置会写入 Docker Daemon，解决科学上网问题，&lt;code&gt;configure -x&lt;/code&gt; 选项会自动在配置中写入当前环境中的代理服务器配置。&lt;/li&gt;
&lt;li&gt;参数强化：&lt;code&gt;repo_url_packages&lt;/code&gt; 中的 &lt;code&gt;repo.pigsty.io&lt;/code&gt; 会在区域为中国时自动替换为 &lt;code&gt;repo.pigsty.cc&lt;/code&gt;，解决科学上网问题，此外，现在可以指定下载后的文件名称。&lt;/li&gt;
&lt;li&gt;参数强化：&lt;code&gt;pg_databases.extensions&lt;/code&gt; 中的 &lt;code&gt;extension&lt;/code&gt; 字段现在可以支持字典与扩展名字符串两种模式，字典模式提供 &lt;code&gt;version&lt;/code&gt; 支持，允许安装特定版本的扩展。&lt;/li&gt;
&lt;li&gt;参数强化：&lt;code&gt;repo_upstream&lt;/code&gt; 参数如果没有显式覆盖定义，将从 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/master/roles/node_id/vars/rpm.yml&#34;&gt;&lt;code&gt;rpm.yml&lt;/code&gt;&lt;/a&gt; 或 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/master/roles/node_id/vars/rpm.yml&#34;&gt;&lt;code&gt;deb.yml&lt;/code&gt;&lt;/a&gt; 中定义的 &lt;code&gt;repo_upstream_default&lt;/code&gt; 提取对应系统的默认值。&lt;/li&gt;
&lt;li&gt;参数强化：&lt;code&gt;repo_packages&lt;/code&gt; 参数如果没有显式覆盖定义，将从 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/master/roles/node_id/vars/rpm.yml&#34;&gt;&lt;code&gt;rpm.yml&lt;/code&gt;&lt;/a&gt; 或 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/master/roles/node_id/vars/rpm.yml&#34;&gt;&lt;code&gt;deb.yml&lt;/code&gt;&lt;/a&gt; 中定义的 &lt;code&gt;repo_packages_default&lt;/code&gt; 提取对应系统的默认值。&lt;/li&gt;
&lt;li&gt;参数强化：&lt;code&gt;infra_packages&lt;/code&gt; 参数如果没有显式覆盖定义，将从 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/master/roles/node_id/vars/rpm.yml&#34;&gt;&lt;code&gt;rpm.yml&lt;/code&gt;&lt;/a&gt; 或 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/master/roles/node_id/vars/rpm.yml&#34;&gt;&lt;code&gt;deb.yml&lt;/code&gt;&lt;/a&gt; 中定义的 &lt;code&gt;infra_packages_default&lt;/code&gt; 提取对应系统的默认值。&lt;/li&gt;
&lt;li&gt;参数强化：&lt;code&gt;node_default_packages&lt;/code&gt; 参数如果没有显式覆盖定义，将从 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/master/roles/node_id/vars/rpm.yml&#34;&gt;&lt;code&gt;rpm.yml&lt;/code&gt;&lt;/a&gt; 或 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/master/roles/node_id/vars/rpm.yml&#34;&gt;&lt;code&gt;deb.yml&lt;/code&gt;&lt;/a&gt; 中定义的 &lt;code&gt;node_packages_default&lt;/code&gt; 提取对应系统的默认值。&lt;/li&gt;
&lt;li&gt;参数强化：&lt;code&gt;pg_packages&lt;/code&gt; 与 &lt;code&gt;pg_extensions&lt;/code&gt; 中的扩展现在都会从  &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/master/roles/node_id/vars/rpm.yml&#34;&gt;&lt;code&gt;rpm.yml&lt;/code&gt;&lt;/a&gt; 或 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/master/roles/node_id/vars/rpm.yml&#34;&gt;&lt;code&gt;deb.yml&lt;/code&gt;&lt;/a&gt; 中定义的 &lt;code&gt;pg_package_map&lt;/code&gt; 执行一次查找与翻译。&lt;/li&gt;
&lt;li&gt;参数强化：&lt;code&gt;node_packages&lt;/code&gt; 与 &lt;code&gt;pg_extensions&lt;/code&gt; 参数中指定的软件包在安装时会升级至最新版本， &lt;code&gt;node_packages&lt;/code&gt; 中现在默认值变为 &lt;code&gt;[openssh-server&lt;/code&gt;]，帮助修复 &lt;a href=&#34;https://pigsty.io/zh/blog/db/cve-2024-6387/&#34;&gt;OpenSSH CVE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参数强化：&lt;code&gt;pg_dbsu_uid&lt;/code&gt; 会自动根据操作系统类型调整为 &lt;code&gt;26&lt;/code&gt; （EL）或 &lt;code&gt;543&lt;/code&gt; （Debian），避免了手工调整。&lt;/li&gt;
&lt;li&gt;Boostrap 逻辑变化，不再下载离线软件包，添加 &lt;code&gt;-k|--keep&lt;/code&gt; 参数，用于指定在本地安装 ansible 时是否保留现有的软件源。&lt;/li&gt;
&lt;li&gt;Configure 移除了 &lt;code&gt;-m|--mode&lt;/code&gt; 参数，使用 &lt;code&gt;-m|--conf&lt;/code&gt; 参数指定配置文件，使用 &lt;code&gt;-x|--proxy&lt;/code&gt; 参数指定代理服务器配置，不再尝试修复 ssh 本机问题。&lt;/li&gt;
&lt;li&gt;设置了 pgbouncer 默认参数，&lt;code&gt;max_prepared_statements = 128&lt;/code&gt; 启用了事物池化模式下的准备语句支持，并设置 &lt;code&gt;server_lifetime&lt;/code&gt; 为 600，&lt;/li&gt;
&lt;li&gt;修改了 patroni 模板默认参数，统一增大 &lt;code&gt;max_worker_processes&lt;/code&gt; +8 可用后端进程，提高 &lt;code&gt;max_wal_senders&lt;/code&gt; 与 &lt;code&gt;max_replication_slots&lt;/code&gt; 至 50，并增大 OLAP 模板临时文件的大小限制为主磁盘的 1/5&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;版本升级&#34;&gt;版本升级&lt;/h3&gt;
&lt;p&gt;截止至发布时刻，Pigsty 主要组件的版本升级如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/news/postgresql-164-158-1413-1316-1220-and-17-beta-3-released-2910/&#34;&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/a&gt; 16.4, 15.8, 14.13, 13.16, 12.20&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pg_exporter&#34;&gt;pg_exporter&lt;/a&gt; : 0.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://patroni.readthedocs.io/en/latest/&#34;&gt;Patroni&lt;/a&gt;: 3.3.2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pgbouncer.org/2024/08/pgbouncer-1-23-1&#34;&gt;pgBouncer&lt;/a&gt;: 1.23.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pgbackrest.org/release.html#2.53.1&#34;&gt;pgBackRest&lt;/a&gt;: 2.53.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/duckdb/duckdb&#34;&gt;duckdb&lt;/a&gt; : 1.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/etcd-io/etcd&#34;&gt;etcd&lt;/a&gt; : 3.5.15&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cybertec-postgresql/pg_timetable&#34;&gt;pg_timetable&lt;/a&gt;: 5.9.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/FerretDB/FerretDB&#34;&gt;ferretdb&lt;/a&gt;: 1.23.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cybertec-postgresql/vip-manager&#34;&gt;vip-manager&lt;/a&gt;: 2.6.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/minio/minio&#34;&gt;minio&lt;/a&gt;: 20240817012454&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/minio/mc&#34;&gt;mcli&lt;/a&gt;: 20240817113350&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/grafana/grafana/&#34;&gt;grafana&lt;/a&gt; : 11.1.4&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/grafana/loki&#34;&gt;loki&lt;/a&gt; : 3.1.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/grafana/loki&#34;&gt;promtail&lt;/a&gt; : 3.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/prometheus/prometheus&#34;&gt;prometheus&lt;/a&gt; : 2.54.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/prometheus/pushgateway&#34;&gt;pushgateway&lt;/a&gt; : 1.9.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/prometheus/alertmanager&#34;&gt;alertmanager&lt;/a&gt; : 0.27.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/prometheus/blackbox_exporter&#34;&gt;blackbox_exporter&lt;/a&gt; : 0.25.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nginxinc/nginx-prometheus-exporter&#34;&gt;nginx_exporter&lt;/a&gt; : 1.3.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/prometheus/node_exporter&#34;&gt;node_exporter&lt;/a&gt; : 1.8.2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gen2brain/keepalived_exporter&#34;&gt;keepalived_exporter&lt;/a&gt; : 0.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/woblerr/pgbackrest_exporter&#34;&gt;pgbackrest_exporter&lt;/a&gt; 0.18.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/prometheus/mysqld_exporter&#34;&gt;mysqld_exporter&lt;/a&gt; : 0.15.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/oliver006/redis_exporter&#34;&gt;redis_exporter&lt;/a&gt; : v1.62.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/danielqsj/kafka_exporter&#34;&gt;kafka_exporter&lt;/a&gt; : 1.8.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/percona/mongodb_exporter&#34;&gt;mongodb_exporter&lt;/a&gt; : 0.40.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics&#34;&gt;VictoriaMetrics&lt;/a&gt; : 1.102.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;VictoriaLogs&lt;/a&gt; : v0.28.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/labring/sealos&#34;&gt;sealos&lt;/a&gt;: 5.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vectordotdev/vector/releases&#34;&gt;vector&lt;/a&gt; : 0.40.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pigsty 重新编译了所有 PostgreSQL 扩展插件，PostgreSQL 扩展插件的最新版本，请参考 &lt;a href=&#34;/zh/docs/pgext/list/&#34;&gt;扩展列表&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;新应用&#34;&gt;新应用&lt;/h3&gt;
&lt;p&gt;Pigsty 现在提供开箱即用的 Dify 与 Odoo Docker Compose 模板：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/software/dify&#34;&gt;Dify&lt;/a&gt;： AI智能体工作流编排与 LLMOps&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/software/odoo&#34;&gt;Odoo&lt;/a&gt;： 企业级开源 ERP 系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pigsty 专业版现在提供试点的 Kubernetes 部署支持与 Kafka KRaft 集群部署与监控支持&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;KUBE&lt;/code&gt;&lt;/strong&gt;： 使用 cri-dockerd 或 containerd 部署由 Pigsty 托管的 Kubernetes 集群&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;KAFKA&lt;/code&gt;&lt;/strong&gt;：部署由 Kraft 协议支持的高可用 Kafka 集群&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;问题修复&#34;&gt;问题修复&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;通过 &lt;code&gt;node_packages&lt;/code&gt; 中的默认值 &lt;code&gt;[openssh-server&lt;/code&gt;]，&lt;a href=&#34;https://pigsty.io/zh/blog/db/cve-2024-6387/&#34;&gt;CVE-2024-6387&lt;/a&gt; 可以在 Pigsty 安装过程中被自动修复。&lt;/li&gt;
&lt;li&gt;修复了 Loki 解析 Nginx 日志标签基数过大导致的内存消耗问题。&lt;/li&gt;
&lt;li&gt;修复了 EL8 系统中上游 Ansible 依赖变化导致的 bootstrap 失效问题（python3.11-jmespath 升级至 python3.12-jmespath）&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 草台班子唱大戏，阿里云PG翻车记</title>
      <link>/zh/blog/cloud/rds-failure/</link>
      <pubDate>Mon, 19 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/rds-failure/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/rds-failure/featured_hu02aa61ae1d9de35cbe238d2676170cb9_583332_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;p&gt;在《&lt;a href=&#34;/zh/blog/cloud/rds&#34;&gt;云数据库是不是智商税&lt;/a&gt;》中，我对云数据库 RDS 的评价是：“&lt;strong&gt;用五星酒店价格卖给用户天价预制菜&lt;/strong&gt;”—— 但正规的预制菜大锅饭也是能吃的 也一般吃不死人，不过最近一次发生在阿里云上的的故障让我改变了看法。&lt;/p&gt;
&lt;p&gt;我有一位客户L，这两天跟我吐槽了一个在云数据库上遇到的离谱连环故障：一套高可用 PG RDS 集群，因为扩容个内存，主库从库都挂了，给他们折腾到凌晨。期间建议昏招迭出，给出的复盘也相当敷衍。经过客户L同意后，我将这个案例分享出来，也供大家借鉴参考品评。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/rds-failure/#事故经过匪夷所思&#34;&gt;事故经过：匪夷所思&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/rds-failure/#内存扩容无事生非&#34;&gt;内存扩容：无事生非&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/rds-failure/#从库宕机素养堪忧&#34;&gt;从库宕机：素养堪忧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/rds-failure/#主库宕机令人窒息&#34;&gt;主库宕机：令人窒息&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/rds-failure/#wal堆积专家缺位&#34;&gt;WAL堆积：专家缺位&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/rds-failure/#扩容磁盘创收有术&#34;&gt;扩容磁盘：创收有术&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/rds-failure/#协议赔偿封口药丸&#34;&gt;协议赔偿：封口药丸&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/rds-failure/#解决方案下云自建&#34;&gt;解决方案：下云自建&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/rds-failure/#广告时间专家咨询&#34;&gt;广告时间：专家咨询&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;事故经过匪夷所思&#34;&gt;事故经过：匪夷所思&lt;/h2&gt;
&lt;p&gt;客户L的数据库场景比较扎实，大几TB的数据，TPS两万不到，写入吞吐8000行/每秒，读取吞吐7万行/s。用的是 ESSD PL1 ，16c 32g 的实例，一主一备高可用版本，独享型规格族，年消费六位数。&lt;/p&gt;
&lt;p&gt;整个事故经过大致如下：客户L收到 &lt;strong&gt;内存告警&lt;/strong&gt;，提工单，接待的售后工程师诊断：数据量太大，大量行扫描导致内存不足，建议扩容内存。客户同意了，然后工程师扩容内存，扩内存花了三个小时，&lt;strong&gt;期间主库和从库挂了&lt;/strong&gt;，吭哧吭哧手工一顿修。&lt;/p&gt;
&lt;p&gt;然后扩容完了之后又遇到 &lt;strong&gt;WAL日志堆积&lt;/strong&gt; 的问题，堆了 800 GB 的WAL日志要把磁盘打满了，又折腾了两个小时到十一点多。售后说是 WAL 日志归档上传失败导致的堆积，失败是因为磁盘IO吞吐被占满，建议扩容 ESSD PL2。&lt;/p&gt;
&lt;p&gt;吃过了内存扩容翻车的教训，这次扩容磁盘的建议客户没立即买单，而是找我咨询了下，我看了一下这个故障现场，感觉到匪夷所思：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;你这负载也挺稳定的，没事扩容内存干啥？&lt;/li&gt;
&lt;li&gt;RDS 不是号称弹性秒级扩容么，怎么升个内存花三个小时？&lt;/li&gt;
&lt;li&gt;花三个小时就算了，扩个容怎么还把主库从库都搞挂了呢？&lt;/li&gt;
&lt;li&gt;从库挂了据说是参数没配对，那就算了，那主库是怎么挂了的？&lt;/li&gt;
&lt;li&gt;主库挂了高可用切换生效了吗？怎么 WAL 又怎么开始堆积了？&lt;/li&gt;
&lt;li&gt;WAL 堆积是有地方卡住了，建议你升级云盘等级/IOPS有什么用？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;事后也有一些来自乙方的解释，听到后我感觉更加匪夷所思了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从库挂是因为参数配错拉不起来了&lt;/li&gt;
&lt;li&gt;主库挂是因为 “为了避免数据损坏做了特殊处理”&lt;/li&gt;
&lt;li&gt;WAL堆积是因为卡BUG了，还是客户侧发现，推断并推动解决的&lt;/li&gt;
&lt;li&gt;卡 BUG “据称” 是因为云盘吞吐打满了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我的朋友瑞典马工一贯主张，“&lt;a href=&#34;https://mp.weixin.qq.com/s/PqCD80H927s0yJrBr4QQqw&#34;&gt;用云数据库可以替代DBA&lt;/a&gt;”。
我认为在理论上有一定可行性 —— 由云厂商组建一个专家池，提供&lt;a href=&#34;/zh/blog/cloud/dba-vs-rds&#34;&gt;DBA时分共享服务&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;但现状很可能是：&lt;strong&gt;云厂商没有合格的 DBA，不专业的工程师甚至会给你出馊主意，把跑得好好的数据库搞坏，最后赖到资源不足上，再建议你扩容升配好多赚一笔。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在听闻这个案例之后，马工也只能无奈强辩：“&lt;strong&gt;辣鸡RDS不是真RDS&lt;/strong&gt;”。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;wechat-magong.png&#34; src=&#34;/zh/blog/cloud/rds-failure/wechat-magong.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;内存扩容无事生非&#34;&gt;内存扩容：无事生非&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;资源不足是一种常见的故障原因，但也正因如此，有时会被滥用作为推卸责任，甩锅，或者要资源，卖硬件的万金油理由。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;内存告警 OOM 也许对其他数据库是一个问题，但对于 PostgreSQL 来说非常离谱。我从业这么多年来，见识过各种各样的故障：数据量大撑爆磁盘我见过，查询多打满CPU我见过，内存比特位反转腐坏数据我见过，但因为独占PG因为读查询多导致内存告警，我没见过。&lt;/p&gt;
&lt;p&gt;PostgreSQL 使用双缓冲，OLTP实例在使用内存时，页面都放在一个尺寸固定的 SharedBuffer 中。作为一个 &lt;strong&gt;众所周知的最佳实践&lt;/strong&gt;，PG SharedBuffer 配置通常为物理内存的 1/4 左右，剩下的内存由文件系统 Cache 使用。也就是说通常有六七成的内存是由操作系统来灵活调配的，不够用逐出一些 Cache 就好了。如果说因为读查询多导致内存告警，我个人认为是匪夷所思的。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;memory.png&#34; src=&#34;/zh/blog/cloud/rds-failure/memory.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以，因为一个本来不一定是问题的问题（假告警？），RDS 售后工程师给出的建议是：&lt;em&gt;内存不够啦，请扩容内存&lt;/em&gt;。客户相信了这个建议，选择将内存翻倍。&lt;/p&gt;
&lt;p&gt;按道理，云数据库宣传自己的极致弹性，灵活伸缩，还是用 &lt;a href=&#34;/zh/blog/db/pg-in-docker/&#34;&gt;Docker&lt;/a&gt; 管理的。难道不应该是原地改一下 MemLimit 和 PG SharedBuffer 参数，重启一下就生效的吗？几秒还差不多。结果这次扩容却折腾了三个小时才完成，并引发了一系列次生故障。&lt;/p&gt;
&lt;p&gt;内存不足，两台32G扩64G，按照《&lt;a href=&#34;/zh/blog/cloud/ecs/#%E5%AE%9E%E4%BE%8B%E6%97%8F%E5%AF%B9%E4%BB%B7%E6%A0%BC%E7%9A%84%E5%BD%B1%E5%93%8D&#34;&gt;剖析阿里云服务器算力成本&lt;/a&gt;》我们精算过的定价模型，一项内存扩容操作每年带来的额外收入就能有万把块。如果能解决问题那还好说，但事实上这次内存扩容不但没有解决问题，还引发了更大的问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;从库宕机素养堪忧&#34;&gt;从库宕机：素养堪忧&lt;/h2&gt;
&lt;p&gt;第一个因为内存扩容而发生的次生故障是这样的，备库炸了，为什么炸了，因为PG参数没配置正确：&lt;code&gt;max_prepared_transaction&lt;/code&gt;，这个参数为什么会炸？因为在一套 PG 集群中，这个参数必须在主库和从库上保持一致，否则从库就会拒绝启动。&lt;/p&gt;
&lt;p&gt;为什么这里出现了主从参数不一致的问题？&lt;strong&gt;我推测&lt;/strong&gt; 是因为 RDS 的设计中，该参数的值是与实例内存成正比设置的，所以内存扩容翻倍后这个参数也跟着翻倍。主从不一致，然后从库重启的时候就拉不起来了。&lt;/p&gt;
&lt;p&gt;不管怎样，因为这个参数翻车是一个非常离谱的错误，属于 PG DBA 101 问题，PG文档明确强调了这一点。但凡做过滚动升降配这种基操的 DBA，要么已经在读文档的时候了解过这个问题，要么就在这里翻过车再去看文档。&lt;/p&gt;
&lt;p&gt;如果你用 &lt;code&gt;pg_basebackup&lt;/code&gt; 手搓从库，你不会遇到这个问题，因为从库的参数默认和主库一致。如果你用成熟的高可用组件，也不会遇到这个问题：开源PG高可用组件 Patroni 就会强制控制这几个参数并在文档中&lt;a href=&#34;https://patroni.readthedocs.io/en/latest/patroni_configuration.html#important-rules&#34;&gt;显眼地告诉用户&lt;/a&gt;：这几个参数主从必须一致，我们来管理不要瞎改。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;patroni.png&#34; src=&#34;/zh/blog/cloud/rds-failure/patroni.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在一种情况下你会遇到这种问题：考虑不周的家酿高可用服务组件，或未经充分测试的自动化脚本，&lt;strong&gt;自以为是地替你“优化”了这个参数&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;主库宕机令人窒息&#34;&gt;主库宕机：令人窒息&lt;/h2&gt;
&lt;p&gt;如果说从库挂了，影响一部分只读流量那也就算了。主库挂了，对于客户L这种全网实时数据上报的业务可就要血命了。关于主库宕机，工程师给出的说法是：在扩容过程中，因为事务繁忙，主从复制延迟一直追不上，“&lt;strong&gt;为了避免数据损坏做了特殊处理&lt;/strong&gt;”。&lt;/p&gt;
&lt;p&gt;这里的说法语焉不详，但按字面与上下文理解的意思应当为：扩容时需要做主从切换，但因为有不小的主从复制延迟，直接切换会丢掉一部分尚未复制到从库上的数据，所以RDS替你把主库流量水龙头关掉了，追平复制延迟后再进行主从切换。&lt;/p&gt;
&lt;p&gt;老实说，我觉得这个操作让人窒息。主库 Fencing 确实是高可用中的核心问题，但一套正规的生产 PG 高可用集群在处理这个问题时，标准SOP是首先将集群临时切换到同步提交模式，然后执行 Switchover，自然一条数据也不会丢，切换也只会影响在这一刻瞬间执行的查询，亚秒级闪断。&lt;/p&gt;
&lt;p&gt;“&lt;strong&gt;为了避免数据损坏做了特殊处理&lt;/strong&gt;” 这句话确实很有艺术性 —— 没错，把主库直接关掉可以实现 Fencing ，也确实不会在高可用切换时因为复制延迟丢数据，&lt;strong&gt;但客户数据写不进去了啊&lt;/strong&gt;！这丢的数据可比那点延迟多多了。这种操作，很难不让人想起那个著名的《&lt;a href=&#34;https://www.gushiwen.cn/shiwenv_ddbe67aad03d.aspx&#34;&gt;善治伛者&lt;/a&gt;》笑话：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;tuobei.png&#34; src=&#34;/zh/blog/cloud/rds-failure/tuobei.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;wal堆积专家缺位&#34;&gt;WAL堆积：专家缺位&lt;/h2&gt;
&lt;p&gt;主从宕机的问题修复后，又折腾一个半小时，总算是把主库内存扩容完成了。然而一波未平一波又起，WAL日志又开始堆积起来，在几个小时内就堆积到了近 800 GB，如果不及时发现并处理，撑爆磁盘导致整库不可用是早晚的事。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;wal-jam.jpg&#34; src=&#34;/zh/blog/cloud/rds-failure/wal-jam.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;也可以从监控上看到两个坑&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;RDS 工程师给出的诊断是，磁盘 IO 打满导致 WAL 堆积，建议升级磁盘，从 ESSD PL1 升级到 PL2。不过，这一次客户已经吃过一次内存扩容的教训了，没有立刻听信这一建议，而是找到了我咨询。&lt;/p&gt;
&lt;p&gt;我看了情况后感觉非常离谱，负载没有显著变化，IO打满也不是这种卡死不动的情形。那么 WAL 堆积的原因不外乎那几个：复制延迟落后100多GB，复制槽保留了不到1GB，那剩下的大头就是 &lt;strong&gt;WAL归档失败&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我让客户给 RDS 提工单处理找根因，最后 RDS 侧确实找到问题是WAL归档卡住了并手工解决了，但距离 WAL 堆积已经过去近六个小时了，并在整个过程中体现出非常业余的素养，给出了许多离谱的建议。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;wal.png&#34; src=&#34;/zh/blog/cloud/rds-failure/wal.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;另一个离谱建议：把流量打到复制延迟16分钟的从库上去&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;阿里云数据库团队并非没有 PostgreSQL DBA 专家，在阿里云任职的 德哥 Digoal 绝对是 PostgreSQL DBA 大师。然而看起来在 RDS 的产品设计中，并没有沉淀下多少 DBA 大师的领域知识与经验；而 RDS 售后工程师表现出来的专业素养，也与一个合格的 PG DBA ，哪怕是 GPT4 机器人都相差甚远。&lt;/p&gt;
&lt;p&gt;我经常看到 RDS 的用户遇到了问题，通过官方工单没有得到解决，只能绕过工单，通过在 PG 社区中 &lt;a href=&#34;/zh/blog/cloud/drop-rds/&#34;&gt;直接求助德哥解决&lt;/a&gt; —— 而这确实是比较考验运气与关系的一件事。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;扩容磁盘创收有术&#34;&gt;扩容磁盘：创收有术&lt;/h2&gt;
&lt;p&gt;在解决了“内存告警”， “从库宕机”， “主库宕机”， “WAL 堆积” 等连环问题后，已经接近凌晨了。但 WAL 堆积的根因是什么仍然不清楚，工程师的回复是 “&lt;strong&gt;与磁盘吞吐被打满有关&lt;/strong&gt;”，再次建议升级 ESSD 云盘。&lt;/p&gt;
&lt;p&gt;在事后的复盘中，工程师提到了 WAL归档失败的原因是 “&lt;strong&gt;RDS上传组件BUG&lt;/strong&gt;”。所以回头看，如果客户真的听了建议升级云盘，也就就白花冤枉钱了。&lt;/p&gt;
&lt;p&gt;在 《&lt;a href=&#34;/zh/blog/cloud/ebs&#34;&gt;云盘是不是杀猪盘&lt;/a&gt;》中我们分析过，云上溢价最狠的基础资源就是 ESSD 云盘。按照 《&lt;a href=&#34;/zh/blog/cloud/ecs#%E6%9D%80%E7%8C%AA%E7%9B%98%E7%9A%84%E4%BB%B7%E6%A0%BC&#34;&gt;阿里云存算成本剖析&lt;/a&gt;》中给出的数字：客户 5TB 的 ESSD PL1 云盘包月价格 &lt;strong&gt;1 ¥/GB&lt;/strong&gt;，那么每年光是云盘费用就要 &lt;strong&gt;12万&lt;/strong&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;单位价格：¥/GiB月&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;IOPS&lt;/th&gt;
&lt;th&gt;带宽&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;容量&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;按需价格&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;包月价格&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;包年价格&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;预付三年+&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;ESSD 云盘 PL0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;10K&lt;/td&gt;
&lt;td&gt;180 MB/s&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;40G-32T&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.76&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.50&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.43&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;ESSD 云盘 PL1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;50K&lt;/td&gt;
&lt;td&gt;350 MB/s&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;20G-32T&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.51&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.00&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.85&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;ESSD 云盘 PL2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;100K&lt;/td&gt;
&lt;td&gt;750 MB/s&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;461G-32T&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.02&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2.00&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.70&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;ESSD 云盘 PL3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1M&lt;/td&gt;
&lt;td&gt;4 GB/s&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.2T-32T&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6.05&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4.00&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.40&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;本地 NVMe SSD&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3M&lt;/td&gt;
&lt;td&gt;7 GB/s&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;最大单卡64T&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;0.02&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.02&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.02&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.02&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果听从建议 “升级”到 ESSD PL2，没错 IOPS 吞吐能翻一倍，但单价也翻了一倍。单这一项“升级”操作，&lt;strong&gt;就能给云厂商带来额外 12 万的收入&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;即使是 ESSD PL1 乞丐盘，也带有 50K 的 IOPS，而客户L场景的 20K TPS，80K RowPS 换算成 随机4K 页面 IOPS ，就算退一万步讲不考虑 PG 与 OS 的缓冲区（比如 99% 缓存命中率对于这种业务场景是很正常的），想硬打满它也是一件相当不容易的事情。&lt;/p&gt;
&lt;p&gt;我不好判断遇到问题就建议 扩容内存 / 扩容磁盘 这样的做法，到底是出于专业素养不足导致的误诊，还是渴望利用信息不对称创收的邪念，抑或两者兼而有之 —— 但这种趁病要价的做法，确实让我联想起了曾经声名狼藉的莆田医院。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;协议赔偿封口药丸&#34;&gt;协议赔偿：封口药丸&lt;/h2&gt;
&lt;p&gt;在《&lt;a href=&#34;/zh/blog/cloud/sla&#34;&gt;云SLA是不是安慰剂&lt;/a&gt;》一文中，我已提醒过用户：云服务的 SLA 根本不是对服务质量的承诺，&lt;strong&gt;在最好的情况下它是提供情绪价值的安慰剂，而在最坏的情况下它是吃不了兜着走的哑巴亏&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在这次故障中，客户L收到了 &lt;strong&gt;1000&lt;/strong&gt; 元代金券的补偿提议，对于他们的规模来说，这三瓜两枣差不多能让这套 RDS 多跑几天。在用户看来这基本上属于赤裸裸的羞辱了。&lt;/p&gt;
&lt;p&gt;有人说云提供了“&lt;strong&gt;背锅&lt;/strong&gt;”的价值，但那只对不负责的决策者与大头兵才有意义，对于直接背结果的 CXO 来说，整体性的得失才是最重要的，把业务连续性中断的锅甩给云厂商，换来一千块代金券没有任何意义。&lt;/p&gt;
&lt;p&gt;当然像这样的事情其实不止一次，两个月前客户L还遇到过另一次离谱的从库宕机故障 —— 从库宕机了，然后控制台上监控根本看不到，客户自己发现了这个问题，提了工单，发起申诉，还是 &lt;strong&gt;1000¥&lt;/strong&gt; SLA 安慰补偿。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;docker.jpg&#34; src=&#34;/zh/blog/cloud/rds-failure/docker.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;当然这还是因为客户L的技术团队水平在线，有能力自主发现问题并主动发出声索。如果是那种技术能力接近零的小白用户，也许就这么拖着瞒着 &lt;a href=&#34;https://mp.weixin.qq.com/s/mgkOybNeEH3LO0gRa1rQBQ&#34;&gt;糊弄过去了&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;还有那种 “SLA” 根本不管的问题 —— 例如也是客户L再之前的一个案例（原话引用）：“&lt;em&gt;为了折扣要迁移到另一个新的阿里云账号，新账号起了个同配置的 RDS 逻辑复制，复制了近1个月数据都没同步完，让我们直接放弃新账号迁移，导致浪费几万块钱。&lt;/em&gt;” —— 属实是花钱买罪受了，而且根本没地方说理去。&lt;/p&gt;
&lt;p&gt;经过几次故障带来的糟心体验，客户L终于在这次事故后难以忍受，拍板决定下云了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;解决方案下云自建&#34;&gt;解决方案：下云自建&lt;/h2&gt;
&lt;p&gt;客户L在几年前就有下云的计划了，在 IDC 里弄了几台服务器，用 Pigsty 自建搭建了几套 PostgreSQL 集群，作为云上的副本双写，跑得非常不错。但要把云上 RDS 下掉，还是免不了要折腾一下，所以一直也就这样两套并行跑着。包括此次事故之前的多次糟心体验，最终让客户L做了下云的决断。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pigsty.webp&#34; src=&#34;/zh/blog/cloud/rds-failure/pigsty.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;客户L直接下单加购了四台新服务器，以及 8块 Gen4 15TB NVMe SSD。特别是这里的 NVMe 磁盘，IOPS 性能是云上 ESSD PL1 乞丐盘的整整 &lt;strong&gt;20倍&lt;/strong&gt;（1M vs 50K），而 TB·月 单位价格则是云上的 &lt;strong&gt;1/166&lt;/strong&gt;  （1000¥ vs 6¥）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;procurement.png&#34; src=&#34;/zh/blog/cloud/rds-failure/procurement.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;题外话：6块钱TB月价，我只在黑五打折的 Amazon 上看到过。125 TB 才 44K ¥（全新总共再加 9.6K ¥），，果然是术业有专攻，经手了过亿采购的成本控制大师。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如在《&lt;a href=&#34;/zh/blog/cloud/odyssey#02-22-%E6%8C%87%E5%AF%BC%E4%B8%8B%E4%BA%91%E7%9A%84%E4%BA%94%E6%9D%A1%E4%BB%B7%E5%80%BC%E8%A7%82&#34;&gt;下云奥德赛：是时候放弃云计算了吗&lt;/a&gt;》 中 DHH 所说的那样：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“我们明智地花钱：在几个关键例子上，云的成本都极其高昂 —— 无论是&lt;strong&gt;大型物理机数据库、大型 NVMe 存储，或者只是最新最快的算&lt;/strong&gt;力。租生产队的驴所花的钱是如此高昂，以至于几个月的租金就能与直接购买它的价格持平。在这种情况下，你应该直接直接把这头驴买下来！我们将把我们的钱，花在我们自己的硬件和我们自己的人身上，其他的一切都会被压缩。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对客户L来说，下云带来的好处是立竿见影的：只需要 RDS 几个月费用的&lt;strong&gt;一次性投资&lt;/strong&gt;，就足够超配几倍到十几倍的硬件资源，重新拿回&lt;a href=&#34;/zh/blog/cloud/bonus&#34;&gt;硬件发展的红利&lt;/a&gt;，&lt;a href=&#34;/zh/blog/cloud/finops&#34;&gt;实现惊人的降本增效水平&lt;/a&gt; —— &lt;strong&gt;你不再需要对着账单抠抠搜搜，也不用再发愁什么资源不够&lt;/strong&gt;。这确实是一个值得思考的问题：如果云下资源单价变为十分之一甚至百分之几，那么云上鼓吹的弹性还剩多大意义？而阻止云上用户下云自建的原因又会是什么呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下云自建 RDS 服务最大的挑战其实是人与技能&lt;/strong&gt;，客户L已经有着一个技术扎实的团队，但确实缺少在 PostgreSQL 上的专业知识与经验。这也是客户L之所以愿意为 RDS 支付高溢价的一个核心原因。但 RDS 在几次事故中体现出来的专业素养，甚至还不如客户本身的技术团队强，这就让继续留在云上变得毫无意义。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;广告时间专家咨询&#34;&gt;广告时间：专家咨询&lt;/h2&gt;
&lt;p&gt;在下云这件事上， 我很高兴能为客户L提供帮助与支持。 &lt;a href=&#34;https://pigsty.cc/zh/&#34;&gt;Pigsty&lt;/a&gt; 是沉淀了我作为顶级 PG DBA 领域知识与经验的开源 RDS &lt;a href=&#34;/zh/blog/cloud/dba-vs-rds#dba%E7%9A%84%E5%B7%A5%E4%BD%9C%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E6%8E%A7&#34;&gt;自建工具&lt;/a&gt;，已经帮助无数世界各地的用户自建了自己的企业级 PostgreSQL 数据库服务。尽管它已经将开箱即用，扩展整合，监控系统，备份恢复，安全合规，IaC 这些运维侧的问题解决的很好了。但想要充分发挥 PostgreSQL 与 Pigsty 的完整实力，总归还是需要专家的帮助来落地。&lt;/p&gt;
&lt;p&gt;所以我提供了明码标价的 &lt;a href=&#34;/zh/docs/about/service&#34;&gt;&lt;strong&gt;专家咨询服务&lt;/strong&gt;&lt;/a&gt; —— 对于客户L这样有着成熟技术团队，只是缺乏领域知识的客户，我只收取固定的 &lt;strong&gt;5K ¥/月&lt;/strong&gt; 咨询费用，仅仅相当于半个初级运维的工资。但足以让客户放心使用比云上低一个数量级的硬件资源成本，自建更好的本地 PG RDS 服务 —— 而即使在云上继续运行 RDS，也不至于被“砖家”被嘎嘎割韭菜忽悠。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;subscription.png&#34; src=&#34;/zh/blog/cloud/rds-failure/subscription.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我认为&lt;strong&gt;咨询&lt;/strong&gt;是一种站着挣钱的体面模式：我没有任何动机去推销内存与云盘，或者说胡话兜售自己的产品（因为产品是开源免费的！）。所以我完全可以站在甲方立场上，给出对甲方利益最优的建议。甲乙双方都不用去干苦哈哈的数据库运维，因为这些工作已经被 Pigsty 这个我编写的开源工具完全自动化掉了。我只需要在零星的关键时刻提供专家意见与决策支持，并不会消耗多少精力与时间，却能帮助甲方实现原本全职雇佣顶级DBA专家才能实现的效果，最终实现双方共赢。&lt;/p&gt;
&lt;p&gt;但是我也必须强调，我提倡下云理念，从来都是针对那些&lt;strong&gt;有一定数据规模与技术实力&lt;/strong&gt;的客户，比如这里的客户L。如果您的场景落在云计算舒适光谱中（例如用 1C2G 折扣 MySQL 跑 OA ），也缺乏技术扎实或值得信赖的工程师，我会诚实地建议你不要折腾 —— 99 一年的 RDS 总比你自己的 yum install 强不少，还要啥自行车呢？当然针对这种用例，我确实建议你考虑一下 Neon，Supabase，Cloudflare 这些&lt;a href=&#34;/zh/blog/cloud/cloudflare&#34;&gt;赛博菩萨们&lt;/a&gt;的免费套餐，&lt;strong&gt;可能连一块钱都用不着&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;而对于那些有一定规模，绑死在云数据库上被不断抽血的客户，你确实可以考虑另外一个选项：自建数据库服务绝非什么高深的火箭科学 —— &lt;strong&gt;你需要做的只是找到正确的工具与正确的人而已&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;扩展阅读&#34;&gt;扩展阅读&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485745&amp;idx=4&amp;sn=93746ecea381afd8e2f9820447b09ec7&amp;chksm=fe4b3ceac93cb5fc44f33ffff226747bc317854acbb3882aeb0d9a7e196eeb5df002d0e77275&amp;scene=21#wechat_redirect&#34;&gt;云盘是不是杀猪盘？&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;云数据库是不是智商税httpmpweixinqqcoms__bizmzu5odayntm5ngmid2247485745idx5sna7d610ea37c3f3fa78ee4ba0ee705962chksmfe4b3ceac93cb5fc6f1975f94be04424e7b3690eedd1658951deb8d016f5f19ade8806d86417scene21wechat_redirect&#34;&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485745&amp;idx=5&amp;sn=a7d610ea37c3f3fa78ee4ba0ee705962&amp;chksm=fe4b3ceac93cb5fc6f1975f94be04424e7b3690eedd1658951deb8d016f5f19ade8806d86417&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;云数据库是不是智商税&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486688&amp;idx=1&amp;sn=bbdee063b65994cb5e15d3e3b7d87523&amp;chksm=fe4b393bc93cb02d76c48f0fbfe3d60c8821b8079b1cfc05f8ccc56c1351b4a7a76b5794019a&amp;scene=21#wechat_redirect&#34;&gt;扒皮云对象存储：从降本到杀猪&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487089&amp;idx=1&amp;sn=ca16c2e7e534380eadcb3a3870d8e3b4&amp;chksm=fe4b3baac93cb2bc8c4b68c468acf3e8ac5ee124080a3e738262fe99dd1765c3adf9c56ea650&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;剖析云算力成本，阿里云真的降价了吗？&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486527&amp;idx=1&amp;sn=8e26f644f2b908fd21c83b81d329155d&amp;chksm=fe4b39e4c93cb0f22271127a154a6ac5c45947b2051b06b7667ee5c203d136b5d2e8f6577b10&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;从降本增笑到真的降本增效&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486468&amp;idx=1&amp;sn=7fead2b49f12bc2a2a94aae942403c22&amp;chksm=fe4b39dfc93cb0c92e5d4c67241de0519ae6a23ce6f07fe5411b95041accb69e5efb86a38150&amp;scene=21#wechat_redirect&#34;&gt;我们能从阿里云史诗级故障中学到什么&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487926&amp;idx=1&amp;sn=2edbd59c845944dc9ba38021f42d1d63&amp;chksm=fe4b246dc93cad7b35b7517b489371eaa08244ec561359e0a610bc9f6f2aa11cf1e3c2b34fb3&amp;scene=21#wechat_redirect&#34;&gt;阿里云又挂了，这次是光缆被挖断了？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486590&amp;idx=1&amp;sn=d4d85de483fafb867487f024631a3e6c&amp;scene=21#wechat_redirect&#34;&gt;互联网故障背后的草台班子们&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486512&amp;idx=1&amp;sn=43d6340fce93bfbf5439cc2cd8e3b8dd&amp;chksm=fe4b39ebc93cb0fd192c69d9f589ccd36f1c1eb5d34fffc357cf0b8177c746c4b3445ea5f63a&amp;scene=21#wechat_redirect&#34;&gt;阿里云周爆：云数据库管控又挂了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486452&amp;idx=1&amp;sn=29cff4ee30b90483bd0a4f0963876f28&amp;chksm=fe4b3e2fc93cb739af6ce49cffa4fa3d010781190d99d3052b4dbfa87d28c0386f44667e4908&amp;scene=21#wechat_redirect&#34;&gt;【阿里】云计算史诗级大翻车来了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487367&amp;idx=1&amp;sn=d6e4abd2b2249d27bd8b8146b591b026&amp;chksm=fe4b3a5cc93cb34a8e90e4b7f06803fa11ee8234014cd4f1aedff59e3bf3c846b3cb133090f2&amp;scene=21#wechat_redirect&#34;&gt;taobao.com证书过期&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487348&amp;idx=1&amp;sn=412cf2afcd93c3f0a83d65219c4a28e8&amp;chksm=fe4b3aafc93cb3b900cef33bd0510c7c86367d71877b0ee65d4847da0ae1298e2b1fd88d0b3f&amp;scene=21#wechat_redirect&#34;&gt;我们能从腾讯云故障复盘中学到什么？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487267&amp;idx=1&amp;sn=7d31d44e89560356b5c5a2e7a40bb1e1&amp;chksm=fe4b3af8c93cb3ee9b8000cd90a12a798395f67205d4ba5b0c77b8c5b6ce9ea448d9fc014921&amp;scene=21#wechat_redirect&#34;&gt;【腾讯】云计算史诗级二翻车来了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487339&amp;idx=1&amp;sn=fce4c0d415d87026013169c737faeacb&amp;chksm=fe4b3ab0c93cb3a61bd2831fcad6dfb36419540e690420b1229053b1de2e3d3533a66f44fb4c&amp;scene=21#wechat_redirect&#34;&gt;云SLA是安慰剂还是厕纸合同？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487279&amp;idx=1&amp;sn=95231614887e129f298644ddc194909f&amp;chksm=fe4b3af4c93cb3e29078b4716d3b633246db8e2081acff8b821181c9ae058a0daf91e45a40b9&amp;scene=21#wechat_redirect&#34;&gt;腾讯云：颜面尽失的草台班子&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485363&amp;idx=1&amp;sn=8622b25fd2309d4fc969d22964a04129&amp;scene=21#wechat_redirect&#34;&gt;垃圾腾讯云CDN：从入门到放弃&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247488183&amp;idx=1&amp;sn=955849e8698fadcea9211b2731456222&amp;chksm=fe4b276cc93cae7aeb43cc4128c9a18e7a5cb02721277cb61bba1e32b61a57ecdd18bd949277&amp;scene=21#wechat_redirect&#34;&gt;我们能从网易云音乐故障中学到什么？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247488151&amp;idx=1&amp;sn=556731d65228f07f443cfb27b5e7bd8b&amp;chksm=fe4b274cc93cae5ae1a32d423f2f7285eff3e184903d62182ad5f17c4772b4baf38b6a9c89c8&amp;scene=21#wechat_redirect&#34;&gt;GitHub全站故障，又是数据库上翻的车？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247488036&amp;idx=1&amp;sn=7bbcc3e8979a5f97a519a7a1684caa06&amp;chksm=fe4b27ffc93caee9701d4a94830417e281c5c08e345d12b007ebaca84dc79c3224b880d75f4c&amp;scene=21#wechat_redirect&#34;&gt;全球Windows蓝屏：甲乙双方都是草台班子&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487552&amp;idx=1&amp;sn=799ae77dda3b80d2296070826142adea&amp;chksm=fe4b259bc93cac8da2cc20f864e5a8b62ecb6f5dd57e7435db1d3fb2f2864a5d991b3a016358&amp;scene=21#wechat_redirect&#34;&gt;删库：Google云爆破了大基金的整个云账户&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487536&amp;idx=1&amp;sn=0cd598f426de0b617c7f3318aed9bd95&amp;chksm=fe4b25ebc93cacfd2d96a9704a0ae4dc2d330aee7cd4579641df513edce307ccdd3a9f94736e&amp;scene=21#wechat_redirect&#34;&gt;云上黑暗森林：打爆AWS云账单，只需要S3桶名&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487617&amp;idx=1&amp;sn=090b10e96e7e64c0ab0c5deb0cbb46ed&amp;chksm=fe4b255ac93cac4cb270be6091ca6e1257afaa03d50c53316ce82a2be6150151f6077e07e9da&amp;scene=21#wechat_redirect&#34;&gt;Ahrefs不上云，省下四亿美元&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487400&amp;idx=1&amp;sn=cf5b94165d2791030e0e874dca8383c7&amp;chksm=fe4b3a73c93cb3652df4d53316e554e5bd0a0d659c7cad7214e10c4a9892d8d1a679e2187583&amp;scene=21#wechat_redirect&#34;&gt;赛博菩萨Cloudflare圆桌访谈与问答录&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487184&amp;idx=1&amp;sn=afa93b16ae95dba95d99a87ef6ff7605&amp;chksm=fe4b3b0bc93cb21d07adb10713c1061a53b6438a5db0bd93a2e7a0f11ea365ba3d24ae02d13d&amp;scene=21#wechat_redirect&#34;&gt;Redis不开源是“开源”之耻，更是公有云之耻&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487240&amp;idx=1&amp;sn=ba535fd0c1026bc2482ea6ad1e1fb8bf&amp;chksm=fe4b3ad3c93cb3c50bfeaed64963cce25c49bee80364d3a8ca78b87d7c9f19fd4d79d3c62ddc&amp;scene=21#wechat_redirect&#34;&gt;吊打公有云的赛博佛祖 Cloudflare&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485760&amp;idx=1&amp;sn=97096da1077a4fbb4c43452a3c4983c7&amp;scene=21#wechat_redirect&#34;&gt;下云奥德赛&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485745&amp;idx=1&amp;sn=6109bb1be67f9e7e02124c4fc3b47ea3&amp;scene=21#wechat_redirect&#34;&gt;FinOps终点是下云&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485601&amp;idx=1&amp;sn=5521562d414b547a192b3dbc45ce720f&amp;scene=21#wechat_redirect&#34;&gt;云SLA是不是安慰剂？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485629&amp;idx=1&amp;sn=7ec768fac5905b0c7052e7b3a6825c4e&amp;scene=21#wechat_redirect&#34;&gt;云计算为啥还没挖沙子赚钱？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486489&amp;idx=1&amp;sn=f2be1be496de46ac5ca816ac39cfdf24&amp;scene=21#wechat_redirect&#34;&gt;重新拿回计算机硬件的红利&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485301&amp;idx=1&amp;sn=2fb038f8b9f26c095d97eb0d87e8b262&amp;scene=21#wechat_redirect&#34;&gt;范式转移：从云到本地优先&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486366&amp;idx=1&amp;sn=c28407399af8b1ddeadf93e902ed23cc&amp;scene=21#wechat_redirect&#34;&gt;是时候放弃云计算了吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487111&amp;idx=1&amp;sn=f02c3a7fc8ba9cc0919518b3c5805675&amp;chksm=fe4b3b5cc93cb24a71d0847bcd7f1655f7466f7f7864457413d3ca80cd79df974b7b9279b9e9&amp;scene=21#wechat_redirect&#34;&gt;RDS阉掉了PostgreSQL的灵魂&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486903&amp;idx=1&amp;sn=01c57499f41e8f51045bb8dd52586595&amp;chksm=fe4b386cc93cb17a2d2fad903e809107162cc1e67e8ad7c8bfdd51de657c97f32f912cabe550&amp;scene=21#wechat_redirect&#34;&gt;DBA会被云淘汰吗？&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 我们能从网易云音乐故障中学到什么？</title>
      <link>/zh/blog/cloud/netease/</link>
      <pubDate>Sun, 18 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/netease/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/netease/featured_huf0f94727527e7e470168c5bbabb04c03_683887_640x0_resize_q75_catmullrom.jpg" width="640" height="320"/>]]>
        
        &lt;p&gt;今天下午 14:44 左右，网易云音乐出现 &lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247488162&amp;idx=1&amp;sn=5913eb51b437e365c685ed11917a3302&amp;chksm=fe4b2779c93cae6ff254f4568f3e7895e005ce249ab4e0e3111bf3665a54fed35b381ff55aa9&amp;scene=21#wechat_redirect&#34;&gt;不可用故障&lt;/a&gt;，至 17:11 分恢复。网传原因为&lt;strong&gt;基础设施/云盘存储&lt;/strong&gt;相关问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;故障经过&#34;&gt;故障经过&lt;/h2&gt;
&lt;p&gt;故障期间，网易云音乐客户端可以正常播放离线下载的音乐，但访问在线资源会直接提示报错，网页版则直接出现 502 服务器报错无法访问。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;bad-gateway.png&#34; src=&#34;/zh/blog/cloud/netease/bad-gateway.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在此期间，网易 163门户也出现 502 服务器报错，并在一段时间后 302 重定向到移动版主站。期间也有用户反馈&lt;strong&gt;网易新闻&lt;/strong&gt;与其他服务也受到影响。&lt;/p&gt;
&lt;p&gt;许多用户都反馈连不上网易云音乐后，以为是自己网断了，卸了APP重装，还有以为公司 IT 禁了听音乐站点的，各种评论很快将此次故障推上微博热搜：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;weibo.png&#34; src=&#34;/zh/blog/cloud/netease/weibo.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;期间截止到 17:11 分，网易云音乐已经恢复，163 主站门户也从移动版本切换回浏览器版本，整个故障时长约两个半小时，P0 事故。&lt;/p&gt;
&lt;p&gt;17:16 分，网易云音乐知乎账号发布通知致歉，并表示明天搜“畅听音乐”可以领取 7 天黑胶 VIP 的&lt;strong&gt;朋友费&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;heijiao.png&#34; src=&#34;/zh/blog/cloud/netease/heijiao.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;原因推断&#34;&gt;原因推断&lt;/h2&gt;
&lt;p&gt;在此期间，出现各种流言与小道消息。总部着火🔥 （老图），TiDB 翻车（网友瞎编），下载《黑神话悟空》打爆网络，以及程序员删库跑路等就属于一眼假的消息。&lt;/p&gt;
&lt;p&gt;但也有先前网易云音乐公众号发布的一篇文章《&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzI1NTg3NzcwNQ==&amp;mid=2247491821&amp;idx=1&amp;sn=573dcc464a690a5b9a0a991c6f3c74e2&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;云音乐贵州机房迁移总体方案回顾&lt;/strong&gt;&lt;/a&gt;》，以及两份有板有眼的网传聊天记录，可以作为一个参考。&lt;/p&gt;
&lt;p&gt;网传此次故障与云存储有关，网传聊天记录就不贴了，可以参考《&lt;a href=&#34;https://mp.weixin.qq.com/s/rcmhu16eZdx1JXJadZ8d-Q&#34;&gt;网易云音乐宕机,原因曝光!7月份刚迁移完机房，传和降本增效有关。&lt;/a&gt;》一文截图，或者权威媒体的引用报道《&lt;a href=&#34;https://mp.weixin.qq.com/s/nApqdf0ow6iY97TDZMEdsg&#34;&gt;独家｜网易云音乐故障真相：技术降本增效，人手不足排查了半天&lt;/a&gt;》。&lt;/p&gt;
&lt;p&gt;我们可以找到一些关于网易云存储团队的公开信息，例如，网易自研的云存储方案 Curve 项目被枪毙了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;author.png&#34; src=&#34;/zh/blog/cloud/netease/author.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;查阅 &lt;a href=&#34;https://github.com/opencurve/curve&#34;&gt;Github Curve 项目主页&lt;/a&gt;，发现项目在 2024 年初后就陷入停滞状态：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pulse.png&#34; src=&#34;/zh/blog/cloud/netease/pulse.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后一个 Release 一直停留在RC没有发布正式版，项目已经基本无人维护，进入静默状态。&lt;/p&gt;
&lt;p&gt;Curve 团队负责人还发表过一篇《curve：遗憾告别 未竟之旅》的公众号文章，并随即遭到删除。我对这件事有些印象，因为 Curve 是 PolarDB 推荐的两个开源共享存储方案之一，所以特意调研过这个项目，现在看来……&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;经验教训&#34;&gt;经验教训&lt;/h2&gt;
&lt;p&gt;关于裁员与降本增效的老生长谈已经说过很多了，我们又还能从这场事故中学习到什么教训呢？以下是我的观点：&lt;/p&gt;
&lt;p&gt;第一个教训是，&lt;strong&gt;不要用云盘跑严肃数据库&lt;/strong&gt;！在这件事上，我确实可以说一句 “ &lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486587&amp;idx=1&amp;sn=16521d6854711a4fe429464aeb2df6bd&amp;chksm=fe4b39a0c93cb0b6d57c1345b79a6c87972e58eeed65831bc6ba8cf73d2a99d6a11d48d2f706&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;Told you so&lt;/strong&gt;&lt;/a&gt;” 。底层块存储基本都是提供给数据库用的。如果这里出现了故障，爆炸半径与 Debug 难度是远超出一般工程师的&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486527&amp;idx=1&amp;sn=8e26f644f2b908fd21c83b81d329155d&amp;chksm=fe4b39e4c93cb0f22271127a154a6ac5c45947b2051b06b7667ee5c203d136b5d2e8f6577b10&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;智力带宽&lt;/strong&gt;&lt;/a&gt;的。如此显著的故障时长（两个半小时），显然不是在无状态服务上的问题。&lt;/p&gt;
&lt;p&gt;第二个教训是 —— &lt;strong&gt;自研造轮子没有问题，但要留着人来兜底&lt;/strong&gt;。降本增效把存储团队一锅端了，遇到问题找不到人就只能干着急。&lt;/p&gt;
&lt;p&gt;第三个教训是，&lt;strong&gt;警惕大厂开源&lt;/strong&gt;。作为一个底层存储项目，一旦启用那就不是简单说换就能换掉的。而网易毙掉 Curve 这个项目，所有这些用 Curve 的基建就成了没人维护的危楼。Stonebraker 老爷子在他的名著论文《What Goes Around Comes Around》中就提到过这一点：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;stonebraker.png&#34; src=&#34;/zh/blog/cloud/netease/stonebraker.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;参考阅读&#34;&gt;参考阅读&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247488162&amp;idx=1&amp;sn=5913eb51b437e365c685ed11917a3302&amp;chksm=fe4b2779c93cae6ff254f4568f3e7895e005ce249ab4e0e3111bf3665a54fed35b381ff55aa9&amp;scene=21#wechat_redirect&#34;&gt;网易云音乐崩了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247488151&amp;idx=1&amp;sn=556731d65228f07f443cfb27b5e7bd8b&amp;chksm=fe4b274cc93cae5ae1a32d423f2f7285eff3e184903d62182ad5f17c4772b4baf38b6a9c89c8&amp;scene=21#wechat_redirect&#34;&gt;GitHub全站故障，又是数据库上翻的车？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487926&amp;idx=1&amp;sn=2edbd59c845944dc9ba38021f42d1d63&amp;chksm=fe4b246dc93cad7b35b7517b489371eaa08244ec561359e0a610bc9f6f2aa11cf1e3c2b34fb3&amp;scene=21#wechat_redirect&#34;&gt;阿里云又挂了，这次是光缆被挖断了？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247488036&amp;idx=1&amp;sn=7bbcc3e8979a5f97a519a7a1684caa06&amp;chksm=fe4b27ffc93caee9701d4a94830417e281c5c08e345d12b007ebaca84dc79c3224b880d75f4c&amp;scene=21#wechat_redirect&#34;&gt;全球Windows蓝屏：甲乙双方都是草台班子&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487552&amp;idx=1&amp;sn=799ae77dda3b80d2296070826142adea&amp;chksm=fe4b259bc93cac8da2cc20f864e5a8b62ecb6f5dd57e7435db1d3fb2f2864a5d991b3a016358&amp;scene=21#wechat_redirect&#34;&gt;删库：Google云爆破了大基金的整个云账户&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487536&amp;idx=1&amp;sn=0cd598f426de0b617c7f3318aed9bd95&amp;chksm=fe4b25ebc93cacfd2d96a9704a0ae4dc2d330aee7cd4579641df513edce307ccdd3a9f94736e&amp;scene=21#wechat_redirect&#34;&gt;云上黑暗森林：打爆AWS云账单，只需要S3桶名&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486766&amp;idx=1&amp;sn=b17b224eb2a2faa401957886cf7ea832&amp;chksm=fe4b38f5c93cb1e3765c88f0cd4133090497527e50c747654f3e312c8db83f801b44bd562e74&amp;scene=21#wechat_redirect&#34;&gt;互联网技术大师速成班 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486747&amp;idx=1&amp;sn=29cce4b791b274c966e05d2ce81ae09d&amp;chksm=fe4b38c0c93cb1d6aa83c776f206791e79f172105c3f942a9a2e28da70889929ef3cb0c77839&amp;scene=21#wechat_redirect&#34;&gt;门内的国企如何看门外的云厂商&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486691&amp;idx=1&amp;sn=6858441ede03a6e700155390cf0086f4&amp;chksm=fe4b3938c93cb02eb36992769204ec829f4a9fe55c37329546a1db6039301ddf47094dddf7e1&amp;scene=21#wechat_redirect&#34;&gt;卡在政企客户门口的阿里云&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486590&amp;idx=1&amp;sn=d4d85de483fafb867487f024631a3e6c&amp;scene=21#wechat_redirect&#34;&gt;互联网故障背后的草台班子们&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486387&amp;idx=1&amp;sn=20ac92e33ed5a6b8e3120e99aefaf1cc&amp;scene=21#wechat_redirect&#34;&gt;云厂商眼中的客户：又穷又闲又缺爱&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487367&amp;idx=1&amp;sn=d6e4abd2b2249d27bd8b8146b591b026&amp;chksm=fe4b3a5cc93cb34a8e90e4b7f06803fa11ee8234014cd4f1aedff59e3bf3c846b3cb133090f2&amp;scene=21#wechat_redirect&#34;&gt;taobao.com证书过期&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487339&amp;idx=1&amp;sn=fce4c0d415d87026013169c737faeacb&amp;chksm=fe4b3ab0c93cb3a61bd2831fcad6dfb36419540e690420b1229053b1de2e3d3533a66f44fb4c&amp;scene=21#wechat_redirect&#34;&gt;云SLA是安慰剂还是厕纸合同？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487223&amp;idx=1&amp;sn=da885170d5d65a3c646d8b3d9da3aed3&amp;chksm=fe4b3b2cc93cb23a5625e8c183860a9e1528eca0a1311439f1ec308a74d53f10cf5dbbb9a1d0&amp;scene=21#wechat_redirect&#34;&gt;罗永浩救不了牙膏云&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487319&amp;idx=1&amp;sn=7e38023ce115046b5318ee670c90fd58&amp;chksm=fe4b3a8cc93cb39a961e396d1491b7bb77089c2d79b8f5e942c6a945cf0aa6dedbf5a8a42828&amp;scene=21#wechat_redirect&#34;&gt;故障不是腾讯云草台的原因，傲慢才是&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487267&amp;idx=1&amp;sn=7d31d44e89560356b5c5a2e7a40bb1e1&amp;chksm=fe4b3af8c93cb3ee9b8000cd90a12a798395f67205d4ba5b0c77b8c5b6ce9ea448d9fc014921&amp;scene=21#wechat_redirect&#34;&gt;【腾讯】云计算史诗级二翻车来了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487184&amp;idx=1&amp;sn=afa93b16ae95dba95d99a87ef6ff7605&amp;chksm=fe4b3b0bc93cb21d07adb10713c1061a53b6438a5db0bd93a2e7a0f11ea365ba3d24ae02d13d&amp;scene=21#wechat_redirect&#34;&gt;Redis不开源是“开源”之耻，更是公有云之耻&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487089&amp;idx=1&amp;sn=ca16c2e7e534380eadcb3a3870d8e3b4&amp;chksm=fe4b3baac93cb2bc8c4b68c468acf3e8ac5ee124080a3e738262fe99dd1765c3adf9c56ea650&amp;scene=21#wechat_redirect&#34;&gt;剖析云算力成本，阿里云真的降价了吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487348&amp;idx=1&amp;sn=412cf2afcd93c3f0a83d65219c4a28e8&amp;chksm=fe4b3aafc93cb3b900cef33bd0510c7c86367d71877b0ee65d4847da0ae1298e2b1fd88d0b3f&amp;scene=21#wechat_redirect&#34;&gt;我们能从腾讯云故障复盘中学到什么？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487279&amp;idx=1&amp;sn=95231614887e129f298644ddc194909f&amp;chksm=fe4b3af4c93cb3e29078b4716d3b633246db8e2081acff8b821181c9ae058a0daf91e45a40b9&amp;scene=21#wechat_redirect&#34;&gt;腾讯云：颜面尽失的草台班子&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486527&amp;idx=1&amp;sn=8e26f644f2b908fd21c83b81d329155d&amp;chksm=fe4b39e4c93cb0f22271127a154a6ac5c45947b2051b06b7667ee5c203d136b5d2e8f6577b10&amp;scene=21#wechat_redirect&#34;&gt;从降本增笑到真的降本增效&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486512&amp;idx=1&amp;sn=43d6340fce93bfbf5439cc2cd8e3b8dd&amp;chksm=fe4b39ebc93cb0fd192c69d9f589ccd36f1c1eb5d34fffc357cf0b8177c746c4b3445ea5f63a&amp;scene=21#wechat_redirect&#34;&gt;阿里云周爆：云数据库管控又挂了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486468&amp;idx=1&amp;sn=7fead2b49f12bc2a2a94aae942403c22&amp;chksm=fe4b39dfc93cb0c92e5d4c67241de0519ae6a23ce6f07fe5411b95041accb69e5efb86a38150&amp;scene=21#wechat_redirect&#34;&gt;我们能从阿里云史诗级故障中学到什么&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486452&amp;idx=1&amp;sn=29cff4ee30b90483bd0a4f0963876f28&amp;chksm=fe4b3e2fc93cb739af6ce49cffa4fa3d010781190d99d3052b4dbfa87d28c0386f44667e4908&amp;scene=21#wechat_redirect&#34;&gt;【阿里】云计算史诗级大翻车来了&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 谁整合好DuckDB，谁赢得OLAP世界</title>
      <link>/zh/blog/pg/pg-duckdb/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/pg-duckdb/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/pg-duckdb/featured_hu02aa61ae1d9de35cbe238d2676170cb9_228138_640x0_resize_q75_catmullrom.jpg" width="640" height="320"/>]]>
        
        &lt;p&gt;在 《PostgreSQL正在吞噬世界中》 一文中，我曾经抛出过这个问题：&lt;strong&gt;谁会最终统一数据库世界？&lt;/strong&gt;。我认为是 PostgreSQL 生态与各种各样的扩展插件 —— 而我的判断是，要想征服 OLAP 这个最大也是最显著的数据库独立王国，这个分析扩展一定与 &lt;strong&gt;DuckDB&lt;/strong&gt; 有关。&lt;/p&gt;
&lt;p&gt;PostgreSQL 一直以来都是我最喜欢的数据库，然而我第二喜欢的数据库在这两年中从 Redis 变为了 DuckDB。DuckDB 是一个非常小巧且强大的 &lt;strong&gt;嵌入式&lt;/strong&gt; OLAP 分析数据库，在分析性能、易用性上都做到了极致水平，并且在所有数据库中有着仅次于 PostgreSQL 的可扩展性。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;extensibility.webp&#34; src=&#34;/zh/blog/pg/pg-duckdb/extensibility.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;正如两年前开展的向量数据库扩展插件赛马一样，当下 PG 生态进行的扩展竞赛已经开始围绕 DuckDB 进行 —— “&lt;em&gt;&lt;strong&gt;谁更好地在PG中整合DuckDB，谁就赢得OLAP世界的未来&lt;/strong&gt;&lt;/em&gt;”。尽管已经有许多玩家在摩拳擦掌，但 DuckDB 官方亲自下场，毫无疑问宣告着这场竞争即将进入白热化。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;duckdbolap的新兴挑战者&#34;&gt;DuckDB：OLAP的新兴挑战者&lt;/h2&gt;
&lt;p&gt;DuckDB 是由 Mark Raasveldt 和 Hannes Mühleisen 两位数据库研究员在荷兰阿姆斯特丹的国家数学与计算机科学研究所（Centrum Wiskunde &amp;amp; Informatica, CWI）开发的。CWI 不仅仅是一个研究机构，可以说是分析型数据库领域发展背后的幕后推手与功臣，是列式存储引擎与向量化查询执行的先驱。现在你能看到的各种分析数据库产品 ClickHouse，Snowflake，Databricks 背后，都有 CWI 的影子。顺便一提，Python之父龟叔也是在 CWI 时创建 Python 语言的。&lt;/p&gt;
&lt;p&gt;然而，现在这些分析领域的先锋们自己亲自下场来做分析数据库了，他们选择了一个非常好的时机与生态位切入，搞出了 &lt;strong&gt;DuckDB&lt;/strong&gt; 来。&lt;/p&gt;
&lt;p&gt;DuckDB 的起源来自作者们对数据库用户痛点的观察：数据科学家主要使用像 Python 与 Pandas 这样的工具，不怎么熟悉经典的数据库。经常被如何连接，身份认证，数据导入导出这些工作搞的一头雾水。那么有没有办法做一个简单易用的嵌入式分析数据库给他们用呢？ —— 就像 SQLite 一样。&lt;/p&gt;
&lt;p&gt;DuckDB 整个数据库软件源代码就是一个头文件一个c++文件，编译出来就是一个独立二进制，数据库本身也就一个简单的文件。使用兼容 PostgreSQL 的解析器与语法，简单到几乎没有任何上手门槛。尽管 DuckDB 看上去非常简单，但它最了不起的一点在于 —— &lt;strong&gt;简约而不简单，分析性能也是绝冠群雄&lt;/strong&gt;。例如，在 ClickHouse 自己的主场 ClickBench 上，有着能够吊打东道主 ClickHouse 的表现。&lt;/p&gt;
&lt;p&gt;另外非常值得称道的一点是，因为作者的薪水由政府税收支付，他们认为将自己的工作成果免费提供给任何人是他们对社会的责任。因此，DuckDB 是在非常宽松的 MIT 许可证下发布的。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我认为 DuckDB 的崛起是必然的：一个有着顶尖性能表现，而使用门槛低到地板，还开源免费的数据库，想不火都难。在 StackOverflow 2023 年的开发者调研中，DuckDB 以 0.61% 的使用率第一次进入“最流行的数据库” 榜单中（第29名，倒数第四），结果仅仅一年过去，在 2024 年度开发者调研中，它就实现了 2.3 倍的流行度增长，前进到（1.4%）与 ClickHouse （1.7%）非常接近的流行度。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;used-prof-2023-2024.png&#34; src=&#34;/zh/blog/pg/pg-duckdb/used-prof-2023-2024.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;同时，DuckDB 也在用户中攒下的极好的口碑，在开发者中受欢迎与喜爱的程度（69.2%）在主要数据库中仅次于 PostgreSQL  （74.5%）。如果我们观察 DB-Engine 的热度趋势，更是不难看出它在 2022 年中开始一飞冲天的狂飙增长态势 —— 虽然没法跟 PostgreSQL 这种数据库比，但目前甚至已经超过了所有 NewSQL 数据库产品的热度分了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-engine-duckdb.png&#34; src=&#34;/zh/blog/pg/pg-duckdb/db-engine-duckdb.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;duckdb的短板与其中的机遇&#34;&gt;DuckDB的短板与其中的机遇&lt;/h2&gt;
&lt;p&gt;DuckDB 是一个可以独立使用的数据库，但更是一个嵌入式的分析数据库。嵌入式有好处也有坏处 —— DuckDB 尽管有着最强分析性能，但它最大的短板就在于薄弱的数据管理能力 —— 也就是数据科学家们不喜欢的那些东西 —— ACID，并发访问，访问控制，数据持久性，高可用，数据库导入导出，等等等，而这恰好是经典数据库的长处，也是企业级分析系统的核心痛点之一。&lt;/p&gt;
&lt;p&gt;可以预期的是，市面上一定会很快出现一系列的 DuckDB 套壳产品来解决这里的摩擦与GAP。正好比当年 Facebook 开源了 KV 数据库 RocksDB ，无数 “新的数据库” 给 RocksDB 套了一层 SQL 解析器，就号称自己是新一代数据库去圈钱了 —— Yet another SQL Sidecar for RocksDB。
向量检索库 hnswlib 开源后，无数 “专用向量数据库” 给它套了薄薄一层皮，就去市场上圈钱了。然后搜索引擎 Lucene 和下一代替代 Tantivy 开源之后，又有无数“全文检索数据库”来给他们套壳贩卖。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;ecosystem.jpg&#34; src=&#34;/zh/blog/pg/pg-duckdb/ecosystem.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;实际上，这样的事情已经在 PostgreSQL 生态中发生了。在其他数据库产品和公司还没来得及反应之前，PG 生态已经有五个玩家下场赛马了，包括 ParadeDB 的 &lt;code&gt;pg_lakehouse&lt;/code&gt;，国内个人开发者李红艳编写的 &lt;code&gt;duckdb_fdw&lt;/code&gt;，CrunchyData 的 &lt;code&gt;crunchy_bridge&lt;/code&gt;， Hydra 出品的 &lt;code&gt;pg_quack&lt;/code&gt;；以及目前 MotherDuck 原厂也跑过来做 PG 扩展了 —— &lt;code&gt;pg_duckdb&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;第二届pg扩展竞速比赛&#34;&gt;第二届PG扩展竞速比赛&lt;/h2&gt;
&lt;p&gt;这不禁让我想起了过去一年中，PG生态里向量数据库扩展的例子。AI爆火之后，PG 生态里就涌现出了至少六款向量数据库扩展（ &lt;code&gt;pgvector&lt;/code&gt;，&lt;code&gt;pgvector.rs&lt;/code&gt;，&lt;code&gt;pg_embedding&lt;/code&gt;，&lt;code&gt;latern&lt;/code&gt;，&lt;code&gt;pase&lt;/code&gt;，&lt;code&gt;pgvectorscale&lt;/code&gt;），并在你追我赶的赛马中卷出了新高度。最后 &lt;code&gt;pgvector&lt;/code&gt; 在以 AWS 为代表的厂商大力投入加持之下，在其他数据库比如 Oracle / MySQL / MariaDB 姗姗来迟的糊弄版本出来之前，就已经把整个专用向量数据库细分领域给摧毁荡平了。&lt;/p&gt;
&lt;p&gt;那么，谁会成为 PG OLAP 生态的 PGVECTOR 呢？我个人的判断还是原厂吊打同人，尽管 &lt;code&gt;pg_duckdb&lt;/code&gt; 才刚刚新鲜出炉，甚至连 v0.0.1 版本都还没发布。但从其架构设计上，已经不难判断，它大概率会是最后的赢家。实际上这个生态赛道才刚刚展开，就立即有收敛的趋势了：&lt;/p&gt;
&lt;p&gt;原本 Fork Citus 列存扩展的 Hydra （YC W22），在尝试构建 &lt;code&gt;pg_quack&lt;/code&gt; 感受到 DuckDB 震撼后，立刻抛弃原有的引擎和 MotherDuck 合作，搞出来了 &lt;code&gt;pg_duckdb&lt;/code&gt;。融合了 PG 生态经验的 Hydra 与 DuckDB 原厂弄的扩展，可以直接在数据库内丝滑地读取 PG 数据表，并使用 DuckDB 引擎进行计算，并且可以直接从文件系统/S3 上读取 Parquet / IceBerg 格式的文件，实现湖仓的效果。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;hydra-pg-quack.png&#34; src=&#34;/zh/blog/pg/pg-duckdb/hydra-pg-quack.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;同样是 YC 投的初创数据库公司 ParadeDB （YC S23），在尝试了自己用 Rust 构建类似的分析产品 pg_analytics 并取得了不俗的成绩之后，也选择改换了路线，基于 DuckDB 打造 pg_lakehouse 扩展。当然，创始人 Phillipe 在 pg_duckdb 刚刚官宣之后也立刻宣布投降，准备在 &lt;code&gt;pg_duckdb&lt;/code&gt; 的基础上进行进一步的开发而不是当竞品。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;paradedb.png&#34; src=&#34;/zh/blog/pg/pg-duckdb/paradedb.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;国内个人开发者李红艳开发的 &lt;a href=&#34;/zh/docs/pgext/olap/duckdb_fdw&#34;&gt;&lt;code&gt;duckdb_fdw&lt;/code&gt;&lt;/a&gt; 是另一条另辟蹊径的道路。不是直接利用 PG的存储引擎接口，而是直接用外部数据源包装器（FDW）的基础设施，将 PG 和 DuckDB 对接到了一起。这引发了官方亲自下场吐槽，将其作为反例批判，也许是 MotherDuck 亲自下场的一个动机：“我还在构思伟大蓝图，如何融合PG与Duck的力量，你小子动作也太快了，得给你一点官方震撼看看”。&lt;/p&gt;
&lt;p&gt;至于 CrunchyData 搞的 &lt;code&gt;cunchy_bridge&lt;/code&gt; ，或者其他数据库公司搞的闭源套壳扩展，我个人感觉是很难有出息的。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;当然，作为 PostgreSQL 发行版 Pigsty 的作者，我的策略始终是 —— 你们赛你们的马，反正所有这些扩展我都会打包并分发给用户，让用户自己选择与决策。就好比当初向量数据库崛起的时候一样，我就把 &lt;code&gt;pgvector&lt;/code&gt; ，&lt;code&gt;pg_embedding&lt;/code&gt;，&lt;code&gt;pase&lt;/code&gt;，&lt;code&gt;pg_sparse&lt;/code&gt; 等等这几个最有前途的扩展打包分发出去。不管谁是最后的胜利者，反正 PG 和 Pigsty 都是摘桃子的赢家。&lt;/p&gt;
&lt;p&gt;天下武功，唯快不破，在 Pigsty v3 中已经实装了这三个最有前途的扩展插件： &lt;a href=&#34;/zh/docs/pgext/olap/pg_duckdb&#34;&gt;&lt;code&gt;pg_duckdb&lt;/code&gt;&lt;/a&gt;，&lt;a href=&#34;/zh/docs/pgext/olap/pg_lakehouse&#34;&gt;&lt;code&gt;pg_lakehouse&lt;/code&gt;&lt;/a&gt;，以及 &lt;a href=&#34;/zh/docs/pgext/olap/duckdb_fdw&#34;&gt;&lt;code&gt;duckdb_fdw&lt;/code&gt;&lt;/a&gt;，当然还有 &lt;code&gt;duckdb&lt;/code&gt; 二进制本体，开箱即用，让用户体验一个 PostgreSQL 包打天下，OLTP / OLAP 双冠全能王合体，真正 HTAP 的快乐。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: StackOverflow 2024调研：PostgreSQL已经杀疯了</title>
      <link>/zh/blog/pg/pg-is-no1-again/</link>
      <pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/pg-is-no1-again/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/pg-is-no1-again/featured_hu3f62c073e83d13b0c8ed4870aebfcb33_572876_640x0_resize_catmullrom_3.png" width="640" height="468"/>]]>
        
        &lt;p&gt;&lt;a href=&#34;https://survey.stackoverflow.co/2024/&#34;&gt;2024 年 StackOverflow 全球开发者调研结果&lt;/a&gt;已经新鲜出炉，
来自 185 个国家与地区的 6 万名开发者给出了高质量的问卷反馈。当然，作为数据库老司机，我最关注的还是 “Database” 这一项调研结果：&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;流行度&#34;&gt;流行度&lt;/h2&gt;
&lt;p&gt;首先是数据库流行度：&lt;a href=&#34;https://survey.stackoverflow.co/2024/technology#1-databases&#34;&gt;专业开发者中的数据库使用率&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一项技术使用者占总体的比例，就是&lt;strong&gt;流行度&lt;/strong&gt;。它的含义是：过去一年有多少比例的用户使用了这项技术。流行度代表过去一年的积累使用，是存量指标，也是最核心的事实指标。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://survey.stackoverflow.co/2024/technology#1-databases&#34;&gt;&lt;img alt=&#34;database-used-prof.png&#34; src=&#34;/zh/blog/pg/pg-is-no1-again/database-used-prof.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在使用率上，PostgreSQL 在专业开发者中以 51.9% 的惊人使用率连续三年蝉联榜首，首次过半！相比第二名的 MySQL (39.4%) 的差距进一步拉开到了 12.5 个百分点（去年这个差距是 8.5 个百分点）。&lt;/p&gt;
&lt;p&gt;如果我们考虑全体开发人员的数据库使用情况，那么 PostgreSQL 是第二年成为世界上最流行的数据库，以 48.7% 的使用率拉开第二名 MySQL (40.3%) 8.4 个百分点（去年为 4.5 个百分点）&lt;/p&gt;
&lt;p&gt;如果我们综合过去八年的问卷数据调查结果，将流行度画在一张散点图上，不难看出 PostgreSQL 几乎一直保持着高速线性增长。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://demo.pigsty.cc/d/sf-survey/stackoverflow-survey?orgId=1&amp;viewPanel=45&#34;&gt;&lt;img alt=&#34;trend-used-prof.png&#34; src=&#34;/zh/blog/pg/pg-is-no1-again/trend-used-prof.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在这个榜单上，有显著增长的数据库除了 PostgreSQL 还有 SQLite，DuckDB，Supabase，BigQuery，Snowflake，Databricks SQL。
这里面，BigQuery，Snowflake，以及 Databricks 属于大数据分析领域的当红炸子鸡。SQLite 和 DuckDB 属于独特的，不与关系型数据库冲突的嵌入式数据库生态位，Supabase 则是封装 PostgreSQL 作为底层核心的后端开发平台。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;used-prof-2023-2024.png&#34; src=&#34;/zh/blog/pg/pg-is-no1-again/used-prof-2023-2024.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;而其他的的数据库，或多或少都受到了 PostgreSQL 崛起带来的冲击。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;喜爱度与需求度&#34;&gt;喜爱度与需求度&lt;/h2&gt;
&lt;p&gt;其次是数据库的喜爱度（红色）与需求度（蓝色）：&lt;a href=&#34;https://survey.stackoverflow.co/2024/technology#2-databases&#34;&gt;全体开发者在过去一年最喜爱与最想要使用的数据库&lt;/a&gt;，按需求度排序。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;database-admire-desire.png&#34; src=&#34;/zh/blog/pg/pg-is-no1-again/database-admire-desire.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;所谓“&lt;strong&gt;口碑&lt;/strong&gt;”（红点），喜爱度（Loved）或欣赏度（Admired），指的是有多少比例的用户愿意继续使用此项技术，这是一个年度的“留存率”指标，可以反映用户对一项技术的看法与评价，代表了未来的增长空间。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;trend-loved.png&#34; src=&#34;/zh/blog/pg/pg-is-no1-again/trend-loved.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在口碑上，PostgreSQL 依然以 74.5% 的喜爱比例第二年蝉联榜首，这里特别值得注意的是两个数据库，在过去一年中，SQLite 与 DuckDB 的喜爱度出现显著上涨，而 TiDB 的喜爱度则出现了惊人的下滑（64.33 到 48.8）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;而需求者占总体的比例，就是需求率（Wanted），或渴望度（Desired），在上图中用红点表示。它的含义是，接下来一年有多少比例的用户会实际选择使用此项技术，代表了未来一年的实际增长动能。因此在 SO 这张图上，也是按照需求度来排序的。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;loved-2023-2024.png&#34; src=&#34;/zh/blog/pg/pg-is-no1-again/loved-2023-2024.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在这一项上，PostgreSQL 是第三年蝉联榜首了，而且以惊人的优势与后来者拉开距离。也许是最近两年因为受到向量数据库需求的拉动，PostgreSQL 的需求量出现了一个非常惊人的激增，从 2022 年的 19% 飙升至 2024 年的 47%。而 MySQL 的需求度，则甚至被 SQLite 反超，从2023年的第二名跌落至第三。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;trend-wanted.png&#34; src=&#34;/zh/blog/pg/pg-is-no1-again/trend-wanted.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;需求量较为精确地反应着明年的增量（用户显式回答：“下一年中我计划使用此种数据库”），因此这里突增的需求度会很快反应到明年的流行度上来。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;小结&#34;&gt;小结&lt;/h2&gt;
&lt;p&gt;PostgreSQL 已经连续第二年以无可争议的碾压性优势，成为了全世界最流行，最受喜爱，需求量最高的数据库。&lt;/p&gt;
&lt;p&gt;并且根据过去八年的趋势，以及未来一年的需求预测来看，已经没有其他力量能够撼动这一点。&lt;/p&gt;
&lt;p&gt;曾经是 PostgreSQL 最大竞争对手的 MySQL 已然颓势尽显，而其他数据库也都在不同程度上受到了 PostgreSQL 的冲击。
能继续保持增长的数据库要么与 PostgreSQL 错开了生态位，要么干脆就是改头换面或者协议兼容的 PostgreSQL。&lt;/p&gt;
&lt;p&gt;PostgreSQL 将成为数据库世界的 Linux 内核，而 PostgreSQL 世界的发行版内战即将拉开序幕。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 瑞士强制政府软件开源</title>
      <link>/zh/blog/db/oss-gov/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/oss-gov/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/oss-gov/featured_hu02aa61ae1d9de35cbe238d2676170cb9_591994_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;blockquote&gt;
&lt;p&gt;瑞士政府通过开源立法走在时代前沿，给 IT 后发国家如何保证软件自主可控打了个样。真正的自主可控根源在于“开源社区”，而不是某些“民族主义”式的“国产软件”。 &lt;a href=&#34;/zh/blog/db/oss-gov/#老冯评论&#34;&gt;老冯评论&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：Steven Vaughan-Nichols，&lt;a href=&#34;https://www.zdnet.com/article/switzerland-now-requires-all-government-software-to-be-open-source/&#34;&gt;原文地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;美国政府仍然对使用开源软件不情不愿，而欧洲国家则更为勇敢。&lt;/p&gt;
&lt;p&gt;几个欧洲国家正在押注开源软件，至于美国嘛，就没那么多了。来自欧洲最新的消息是，瑞士在其《&lt;a href=&#34;https://datenrecht.ch/en/bundesgesetz-ueber-den-einsatz-elektronischer-mittel-zur-erfuellung-von-behoerdenaufgaben-embag-in-schlussabstimmung-angenommen/&#34;&gt;&lt;strong&gt;联邦使用电子手段履行政府职责法&lt;/strong&gt;&lt;/a&gt;》（EMBAG）中迈出了重大一步。这项开创性的立法，强制要求在公共部门（政府）使用开源软件（OSS）。&lt;/p&gt;
&lt;p&gt;这项新法律规定，除非涉及第三方版权和安全保密问题，所有公共机构必须公开其开发或为其开发的软件的源代码。这种“公共资金，公共代码” 的方法旨在提升政府运作的透明度、安全性与效率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考阅读：&lt;a href=&#34;https://www.zdnet.com/article/german-state-ditches-microsoft-for-linux-and-libreoffice/&#34;&gt;德国州政府弃用微软，转投 Linux 和 LibreOffice&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;做出这一决定并不容易。早在2011年，瑞士联邦最高法院就&lt;a href=&#34;https://www.openjustitia.ch/DE/interne_Open_Justitia.html&#34;&gt;将其法院应用程序 Open Justitia  使用开源许可证发布&lt;/a&gt;。而这让专有法律软件公司 Weblaw 感到不满。十多年来，围绕这一问题的政治和法律争斗不断。最终，EMBAG 于 2023 年通过。这项法律不仅允许瑞士政府或其承包商发布开源软件，还要求代码&lt;strong&gt;必须以开源许可证发布&lt;/strong&gt;，“除非第三方版权或安全相关原因排除或限制了这一点。”&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bfh.ch/en/&#34;&gt;伯尔尼应用科学大学&lt;/a&gt;公共部门转型研究所的负责人 Matthias Stürmer 教授领导了这场立法斗争。他将这项法律称为“政府、IT行业和社会的巨大机遇”。Stürmer 认为，所有人都将从这项法规中受益，因为它减少了公共部门的供应商锁定，并允许企业扩展其数字业务解决方案，并有潜力降低IT成本并提高纳税人服务质量。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;除了强制使用开源软件（OSS）外，EMBAG 还要求政府将非个人和非敏感安全的数据也作为开放政府数据（OGD）发布。这种双重的 “默认开放” 策略标志着一场范式转移 —— 通往更大的开放性和软件及数据实际再利用的重大范式转变。&lt;/p&gt;
&lt;p&gt;EMBAG 的实施预计将成为其他国家考虑类似措施的典范。它旨在促进数字主权，鼓励公共部门内的创新和合作。瑞士联邦统计局（BFS）正在主导这项法律的实施，但OSS发布的组织和财务方面仍需明确。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考阅读：&lt;a href=&#34;https://www.zdnet.com/article/why-dont-more-people-use-desktop-linux-i-have-a-theory-you-might-not-like/&#34;&gt;为什么更多的人不使用桌面Linux？我有一个你可能不喜欢的理论&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;其他欧洲国家也长期支持开源软件。例如，2023年，，&lt;a href=&#34;https://eucloudedgeiot.eu/summary-of-the-open-source-key-areas-for-digital-autonomy-workshop/&#34;&gt;法国总统马克龙表示，“我们热爱开源”&lt;/a&gt; 。 而法国国家宪兵队（类似美国的FBI）&lt;a href=&#34;https://www.zdnet.com/article/french-police-move-from-windows-to-ubuntu-linux/&#34;&gt;在其PC上使用Linux&lt;/a&gt;。欧盟（EU）通过其&lt;a href=&#34;https://commission.europa.eu/about-european-commission/departments-and-executive-agencies/digital-services/eu-fossa-2-free-and-open-source-software-auditing_en&#34;&gt;自由和开源软件审计（FOSSA）&lt;/a&gt;项目，长期致力于保障开源软件的安全。&lt;/p&gt;
&lt;p&gt;不过，欧盟内部也并非一帆风顺。有些人担心欧洲委员会会&lt;a href=&#34;https://fossforce.com/2024/07/is-the-european-commission-dropping-support-for-important-open-source-funding/&#34;&gt;削减 NGI Zero Commons Fund的资金&lt;/a&gt;，这一资金是OSS项目的重要来源。&lt;/p&gt;
&lt;p&gt;在美国，虽然也有一些对开源的支持，但远不及欧洲。例如，&lt;a href=&#34;https://open.gsa.gov/oss-policy/&#34;&gt;联邦源代码政策&lt;/a&gt;要求联邦机构至少发布20％的新定制开发代码作为开源软件，但并没有强制要求使用开源软件。总务管理局（GSA）也有一项开源政策，&lt;a href=&#34;https://open.gsa.gov/oss-policy/#:~:text=c.-,GSA%20Service%20and%20Staff%20Offices%20(Project%20teams)%20are%20responsible%20for,knowledge%20to%20improve%20the%20project.&#34;&gt;要求GSA组织考虑并发布其开源代码&lt;/a&gt;，提倡新定制代码开发的“开放优先”方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同时：&lt;a href=&#34;https://www.zdnet.com/article/do-you-need-antivirus-on-linux/&#34;&gt;Linux 需要防病毒软件吗？&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;总的来说，尽管瑞士的立法举措将其置于全球开源运动的前沿，但在欧洲和美国仍需做更多工作以推动开源软件的普及和应用。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;参考阅读&#34;&gt;参考阅读&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/db/db-china&#34;&gt;国产数据库到底能不能打？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/db/db-choke&#34;&gt;数据库真被卡脖子了吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/aLXC7f2iYUfATNWsnyotkA&#34;&gt;国产数据库是大炼钢铁吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/db/sovereign-dbos/&#34;&gt;基础软件到底需要什么样的自主可控？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/79_PnX-a5iSfDMgz_VUx5A&#34;&gt;中国对PostgreSQL的贡献约等于零吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/db/distributive-bullshit&#34;&gt;分布式数据库是伪需求吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/db/rhel-compatibility&#34;&gt;EL 兼容发行版哪家强？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/uccjOkAR1zgur6tftHkzMg&#34;&gt;机场出租车恶性循环与国产数据库怪圈&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 蓝屏星期五：甲乙双方都是草台班子</title>
      <link>/zh/blog/cloud/bsod-friday/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/bsod-friday/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/bsod-friday/featured_hu441334f1a06133531028f083ec7fe48d_85331_640x0_resize_q75_catmullrom.jpg" width="640" height="652"/>]]>
        
        &lt;p&gt;最近，因为网络安全公司 CrowdStrike 发布的一个配置更新，全球范围内无数 Windows 电脑都陷入蓝屏死机状态，无数的混乱 —— 航司停飞，医院取消手术，超市、游乐园、各行各业歇业。&lt;/p&gt;
&lt;p&gt;表：受到影响的行业领域、国家地区与相关机构（&lt;a href=&#34;https://www.secrss.com/articles/68310&#34;&gt;CrowdStrike导致大规模系统崩溃事件的技术分析&lt;/a&gt;）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;涉及领域&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;相关机构&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;航空运输&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;美国、澳大利亚、英国、荷兰、印度、捷克、匈牙利、西班牙、中国香港、瑞士等部分航空公司出现航班延误或机场服务中断。美国达美航空、美国航空和忠实航空宣布停飞所有航班。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;媒体通信&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;以色列邮政、法国电视频道TF1、TFX、LCI和Canal+Group网络、爱尔兰国家广播公司RTÉ、加拿大广播公司、沃丰达集团、电话和互联网服务提供商Bouygues Telecom等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;交通运输&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;澳大利亚货运列车运营商Aurizon、西日本旅客铁道公司、马来西亚铁路运营商KTMB、英国铁路公司、澳大利亚猎人线和南部高地线的区域列车等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;银行与****金融服务&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;加拿大皇家银行、加拿大道明银行、印度储备银行、印度国家银行、新加坡星展银行、巴西布拉德斯科银行、西太平洋银行、澳新银行、联邦银行、本迪戈银行等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;零售&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;德国连锁超市Tegut、部分麦当劳和星巴克、迪克体育用品公司、英国杂货连锁店Waitrose、新西兰的Foodstuffs和Woolworths超市等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;医疗服务&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;纪念斯隆凯特琳癌症中心、英国国家医疗服务体系、德国吕贝克和基尔的两家医院、北美部分医院等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;……&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;……&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在这次事件中，有许多程序员在津津乐道哪个 sys 文件或者配置文件搞崩了系统 （&lt;a href=&#34;https://www.crowdstrike.com/blog/falcon-update-for-windows-hosts-technical-details/&#34;&gt;CrowdStrike官方故障复盘&lt;/a&gt;），或者XX公司是草台班子云云 —— 做安全的乙方和甲方工程师撕成一片。但在我看来，这个问题&lt;strong&gt;根本不是一个技术问题&lt;/strong&gt;，而是一个工程管理问题。重要的也不是指责谁是草台班子，而是我们能从中吸取什么教训？&lt;/p&gt;
&lt;p&gt;在我看来，这场事故是甲乙方两侧的共同责任 —— 乙方的问题在于：崩溃率如此之高的变更，为什么在没有灰度的情况下迅速发布到了全球？有没有做过灰度测试与验证？甲方的问题在于：将自己的终端安全全部寄托于供应链的可靠之上，为什么能允许这样的变更联网实时推送到自己的电脑上而不加以控制？&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;控制爆炸半径&lt;/strong&gt;是软件发布中的一条基本原则，而灰度发布则是软件发布中的基本操作。互联网行业中的许多应用会采用精细的灰度发布策略，比如从 1% 的流量开始滚动上量，一旦发现问题也能立刻回滚，避免一勺烩大翻车的出现。&lt;/p&gt;
&lt;p&gt;数据库与操作系统变更同理，作为一个管理过大规模生产环境数据库集群的 DBA，我们在对数据库或者底层操作系统进行变更时，都会极为小心地采取灰度策略：首先在 Devbox 开发环境中测试变更，然后应用到预发/UAT/Staging环境中。跑几天没事后，开始针对生产环境发布：从一两套边缘业务开始，然后按照业务重要性划分的 A、B、C 三级，以及从库/主库的顺序与批次进行灰度变更。&lt;/p&gt;
&lt;p&gt;某头部券商运维主管也在群里分享了金融行业的最佳实践 —— 直接网络隔离，禁止从互联网更新，买微软 ELA，在内网搭建补丁服务器，然后几万台终端/服务器从补丁服务器统一更新补丁和病毒库。灰度的方式是每个网点和分支机构/每个业务部门都选择一到两台组成灰度环境，跑一两天没事，进入大灰度环境跑满一周，最后的生产环境分成三波每天更新一次，完成整个发布。如果遇到紧急安全事件 —— 也会使用同样的灰度流程，只是把时间周期从一两周压缩到几个小时而已。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;当然，有些乙方安全公司，安全出身的工程师会提出不同的看法：“安全行业不一样，我们要与病毒赶时间“，”病毒研究员发现最新的病毒，然后判断如何最快的全网防御”，“病毒来的时候，我的安全专家判断需要启用，跟你们打招呼来不及”，“蓝屏总好过数字资产丢失或者被人随意控制”。但对甲方来说，安全是一整个体系，配置灰度发布晚一点不是什么大不了的事情，然而集中批量崩溃这种惊吓则是让人难以接受的。&lt;/p&gt;
&lt;p&gt;至少对于企业客户来说，更不更新，什么时候更新，这个利弊权衡应该是由甲方来做的，而不是乙方去拍脑袋决定。而放弃这一职责，无条件信任乙方供应商给你空中升级的甲方，也是草台班子。安全软件是合法的，大规模肉鸡软件，即使用户以最大的善意信任供应商没有主观恶意，但在实践中也难以避免因为无心之失与愚蠢傲慢导致的灾难（比如这次蓝屏星期五）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;fuck-ms.png&#34; src=&#34;/zh/blog/cloud/bsod-friday/fuck-ms.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（美剧《太空部队》名梗：紧急任务遇到Microsoft强制更新）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你的系统真的很重要，在接受任何变更与更新前请切记 —— &lt;strong&gt;Trust，But Verify&lt;/strong&gt;。如果供应商不提供 Verify 这个选项，你应该在权力范围内果断 Say No。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我认为这次事件会极大利好 “&lt;strong&gt;本地优先软件&lt;/strong&gt;” 的理念 —— 本地优先不是不更新，不变更，一个版本用到地老天荒，而是能够在无需联网的情况下，在你自己的电脑与服务器上持续运行。用户与供应商依然可以通过补丁服务器，与定期推送的方式升级功能，更新配置，但更新的时间点、方法、规模、策略都应当允许由用户自行指定，而不是由供应商越俎代庖替你决策。我认为这一点才是 “&lt;strong&gt;自主可控&lt;/strong&gt;” 概念的真正实质。&lt;/p&gt;
&lt;p&gt;在我们自己的开源 PostgreSQL RDS，数据库管控软件 Pigsty 中，也一直践行着本地优先的原则。每当我们发布一个新版本时，我们会对所有需要安装的软件及其依赖取一个快照，制作成离线软件安装包，让用户在没有互联网访问的环境下，无需容器也可以轻松完成高度确定性的安装。如果用户希望部署更多套数据库集群，他可以期待环境中的版本总是一致的 —— 这意味着，你可以随意移除或添加节点进行新陈代谢，让数据库服务跑到地老天荒。&lt;/p&gt;
&lt;p&gt;如果您需要升级软件版本打补丁，将新版本软件包加入本地软件源，使用 Ansible 剧本批量更新即可。您可以选择用老旧 EOL 版本跑到地老天荒，也可以选择在第一时间发布就更新并尝鲜最新特性，您可以按照软件工程最佳实践依次灰度发布，但真想要糙猛快一把梭全量上也随意，我们只提供默认的行为与实践的工具，但说到底，这是用户的自由与选择。&lt;/p&gt;
&lt;p&gt;俗话说，物极必反，在 SaaS 与云服务盛行的当下，关键基础设施故障的单点风险与脆弱性愈加凸显。相信在本次事故后，本地优先软件的理念将会在未来得到更多的关注与实践。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: MySQL 已死，PostgreSQL 当立</title>
      <link>/zh/blog/db/mysql-is-dead/</link>
      <pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/mysql-is-dead/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/mysql-is-dead/featured_hu02aa61ae1d9de35cbe238d2676170cb9_828502_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;p&gt;本月，MySQL 9.0 终于发布了（@2024-07），距离上一次大版本更新 8.0 (&lt;a href=&#34;https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-0.html&#34;&gt;@2016-09&lt;/a&gt;) 已经过去八年了。然而这个空洞无物的所谓“创新版本”却犹如一个恶劣的玩笑，宣告着 MySQL &lt;strong&gt;正在死去&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;PostgreSQL 正在高歌猛进，而 MySQL 却日薄西山，作为 MySQL 生态主要扛旗者的 Percona 也不得不悲痛地承认这一现实，连发三篇《&lt;a href=&#34;/zh/blog/db/sakila-where-are-you-going&#34;&gt;MySQL将何去何从&lt;/a&gt;》，《&lt;a href=&#34;/zh/blog/db/oracle-kill-mysql&#34;&gt;Oracle最终还是杀死了MySQL&lt;/a&gt;》，《&lt;a href=&#34;/zh/blog/db/can-oracle-save-mysql&#34;&gt;Oracle还能挽救MySQL吗&lt;/a&gt;》，公开表达了对 MySQL 的失望与沮丧；&lt;/p&gt;
&lt;p&gt;Percona 的 CEO Peter Zaitsev 也表示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;有了 PostgreSQL，谁还需要 MySQL 呢？&lt;/strong&gt; —— 但如果 MySQL 死了，PostgreSQL 就真的垄断数据库世界了，所以 MySQL 至少还可以作为 PostgreSQL 的磨刀石，让 PG 进入全盛状态。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有的数据库正在&lt;a href=&#34;/zh/blog/pg/pg-eat-db-world&#34;&gt;吞噬数据库世界&lt;/a&gt;，而有的数据库正在&lt;a href=&#34;/zh/blog/db/mysql-is-dead&#34;&gt;黯然地凋零死去&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL is dead，Long live PostgreSQL！&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/mysql-is-dead/#空洞无物的创新版本&#34;&gt;空洞无物的创新版本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/mysql-is-dead/#糊弄了事的向量类型&#34;&gt;糊弄了事的向量类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/mysql-is-dead/#姗姗来迟的js函数&#34;&gt;姗姗来迟的JS函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/mysql-is-dead/#日渐落后的功能特性&#34;&gt;日渐落后的功能特性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/mysql-is-dead/#越新越差的性能表现&#34;&gt;越新越差的性能表现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/mysql-is-dead/#无可救药的质量水平&#34;&gt;无可救药的质量水平&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/mysql-is-dead/#枯萎收缩的生态规模&#34;&gt;枯萎收缩的生态规模&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/mysql-is-dead/#究竟是谁杀死了mysql&#34;&gt;究竟是谁杀死了MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/db/mysql-is-dead/#pg驶向云外mysql安魂九霄&#34;&gt;PG驶向云外，MySQL安魂九霄&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;空洞无物的创新版本&#34;&gt;空洞无物的创新版本&lt;/h2&gt;
&lt;p&gt;MySQL 官网发布的 &lt;a href=&#34;https://dev.mysql.com/doc/refman/9.0/en/mysql-nutshell.html&#34;&gt;&amp;ldquo;What&amp;rsquo;s New in MySQL 9.0&amp;rdquo;&lt;/a&gt; 介绍了 9.0 版本引入的几个新特性，而 &lt;a href=&#34;https://mp.weixin.qq.com/s/puDWYINtIs-pfM_F5s3jaw&#34;&gt;MySQL 9.0 新功能概览&lt;/a&gt; 一文对此做了扼要的总结：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;mysql9-feature.png&#34; src=&#34;/zh/blog/db/mysql-is-dead/mysql9-feature.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;然后呢？就这些吗？这就没了！？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这确实是让人惊诧不已，因为 PostgreSQL 每年的大版本发布都有无数的新功能特性，例如计划今秋发布的 &lt;a href=&#34;/zh/blog/pg/pg-17-beta1/&#34;&gt;PostgreSQL 17&lt;/a&gt; 还只是 beta1，就已然有着蔚为壮观的新增特性列表：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pg17-feature.png&#34; src=&#34;/zh/blog/db/mysql-is-dead/pg17-feature.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;而最近几年的 PostgreSQL 新增特性甚至足够专门编成一本书了。比如《&lt;a href=&#34;https://mp.weixin.qq.com/s/2bjblo9t7KNQh1isRwbs2w&#34;&gt;快速掌握PostgreSQL版本新特性&lt;/a&gt;》便收录了 PostgreSQL 最近七年的重要新特性 —— 将目录塞的满满当当：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pg-features.png&#34; src=&#34;/zh/blog/db/mysql-is-dead/pg-features.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;回头再来看看 MySQL 9 更新的六个特性，后四个都属于无关痛痒，一笔带过的小修补，拿出来讲都嫌丢人。而前两个 &lt;strong&gt;向量数据类型&lt;/strong&gt; 和 &lt;strong&gt;JS存储过程&lt;/strong&gt; 才算是重磅亮点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BUT ——&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MySQL 9.0 的向量数据类型只是 &lt;code&gt;BLOB&lt;/code&gt; 类型换皮 —— 只加了个数组长度函数，这种程度的功能，&lt;strong&gt;28年前&lt;/strong&gt; PostgreSQL 诞生的时候就支持了。&lt;/p&gt;
&lt;p&gt;而 MySQL Javascript 存储过程支持，竟然还是一个 &lt;strong&gt;企业版独占特性&lt;/strong&gt;，开源版不提供 —— 而同样的功能，&lt;strong&gt;13年前&lt;/strong&gt; 的 PostgreSQL 9.1 就已经有了。&lt;/p&gt;
&lt;p&gt;时隔八年的 “创新大版本” 更新就带来了俩 “老特性”，其中一个还是企业版特供。“&lt;strong&gt;创新&lt;/strong&gt;”这俩字，在这里显得如此辣眼与讽刺。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;糊弄了事的向量类型&#34;&gt;糊弄了事的向量类型&lt;/h2&gt;
&lt;p&gt;这两年 AI 爆火，也带动了向量数据库赛道。当下几乎所有主流 DBMS 都已经提供向量数据类型支持 —— &lt;strong&gt;MySQL 除外&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;用户可能原本期待着在 9.0 创新版，向量支持能弥补一些缺憾，结果发布后等到的只有震撼 —— &lt;strong&gt;竟然还可以这么糊弄？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 MySQL 9.0 的 &lt;a href=&#34;https://dev.mysql.com/doc/refman/9.0/en/vector-functions.html&#34;&gt;官方文档&lt;/a&gt; 上，只有三个关于向量类型的函数。抛开与字符串互转的两个，真正的功能函数就一个 &lt;code&gt;VECTOR_DIM&lt;/code&gt;：返回向量的维度！（计算数组长度）&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;mysql-vector-func.png&#34; src=&#34;/zh/blog/db/mysql-is-dead/mysql-vector-func.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;向量数据库的门槛不是一般的低 —— 有个向量距离函数就行（内积，10行C代码，小学生水平编程任务），这样至少可以通过全表扫描求距离 + &lt;code&gt;ORDER BY d LIMIT n&lt;/code&gt; 实现向量检索，是个可用的状态。
但 MySQL 9 甚至连这样一个最基本的向量距离函数都懒得去实现，这绝对不是能力问题，而是 Oracle 根本就不想好好做 MySQL 了。
老司机一眼就能看出这里的所谓 “向量类型” 不过是 &lt;code&gt;BLOB&lt;/code&gt; 的别名 —— 它只管你写入二进制数据，压根不管用户怎么查找使用。
当然，也不排除 Oracle 在自己的 MySQL Heatwave 上有一个不糊弄的版本。可在 MySQL 上，最后实际交付的东西，就是一个十分钟就能写完的玩意糊弄了事。&lt;/p&gt;
&lt;p&gt;不糊弄的例子可以参考 MySQL 的老对手 PostgreSQL。在过去一年中，PG 生态里就涌现出了至少六款向量数据库扩展（ &lt;code&gt;pgvector&lt;/code&gt;，&lt;code&gt;pgvector.rs&lt;/code&gt;，&lt;code&gt;pg_embedding&lt;/code&gt;，&lt;code&gt;latern&lt;/code&gt;，&lt;code&gt;pase&lt;/code&gt;，&lt;code&gt;pgvectorscale&lt;/code&gt;），并在你追我赶的赛马中卷出了新高度。
最后的胜出者是 2021 年就出来的 &lt;a href=&#34;/zh/blog/dev/llm-and-pgvector&#34;&gt;&lt;code&gt;pgvector&lt;/code&gt;&lt;/a&gt; ，它在无数开发者、厂商、用户的共同努力下，站在 PostgreSQL 的肩膀上，很快便达到了许多专业向量数据库都无法企及的高度，甚至可以说凭借一己之力，干死了这个数据库细分领域 —— 《&lt;a href=&#34;/zh/blog/db/svdb-is-dead&#34;&gt;专用向量数据库凉了吗？&lt;/a&gt;》。&lt;/p&gt;
&lt;p&gt;在这一年内，&lt;code&gt;pgvector&lt;/code&gt; &lt;a href=&#34;https://jkatz05.com/post/postgres/pgvector-performance-150x-speedup/&#34;&gt;性能翻了 150 倍&lt;/a&gt;，功能上更是有了翻天覆地的变化 —— &lt;code&gt;pgvector&lt;/code&gt; 提供了 float向量，半精度向量，bit向量，稀疏向量几种数据类型；提供了L1距离，L2距离，内积距离，汉明距离，Jaccard距离度量函数；提供了各种向量、标量计算函数与运算符；支持 IVFFLAT，HNSW 两种专用向量索引算法（扩展的扩展 pgvectorscale 还提供了 DiskANN 索引）；支持了并行索引构建，向量量化处理，稀疏向量处理，子向量索引，混合检索，可以使用 SIMD 指令加速。这些丰富的功能，加上开源免费的协议，以及整个 PG 生态的合力与协同效应 —— 让 &lt;code&gt;pgvector&lt;/code&gt; 大获成功，并与 PostgreSQL 一起，成为无数 AI 项目使用的默认（向量）数据库。&lt;/p&gt;
&lt;p&gt;拿 &lt;code&gt;pgvector&lt;/code&gt; 与来比似乎不太合适，因为 MySQL 9 所谓的“向量”，甚至都远远不如 1996 年 PG 诞生时自带的“多维数组类型” —— “至少它还有一大把数组函数，而不是只能求个数组长度”。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/pg/vector-json-pg/&#34;&gt;&lt;strong&gt;向量是新的JSON&lt;/strong&gt;&lt;/a&gt;，然而向量数据库的宴席都已经散场了，MySQL 都还没来得及上桌 —— 它完美错过了下一个十年 AI 时代的增长动能，正如它在上一个十年里错过互联网时代的JSON文档数据库一样。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;姗姗来迟的js函数&#34;&gt;姗姗来迟的JS函数&lt;/h2&gt;
&lt;p&gt;另一个 MySQL 9.0 带来的 “重磅” 特性是 —— &lt;strong&gt;Javascript 存储过程&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;然而用 Javascript 写存储过程并不是什么新鲜事 —— 早在 2011 年，PostgreSQL 9.1 就已经可以通过 &lt;a href=&#34;https://github.com/plv8/plv8/tree/v0.1.0&#34;&gt;&lt;code&gt;plv8&lt;/code&gt;&lt;/a&gt; 扩展编写 Javascript 存储过程了，MongoDB 也差不多在同一时期提供了对 Javascript 存储过程的支持。&lt;/p&gt;
&lt;p&gt;如果我们查看 DB-Engine 近十二年的 “&lt;a href=&#34;https://demo.pigsty.cc/d/db-analysis/db-engine-analysis?orgId=1&amp;var-year=2012&amp;viewPanel=24&#34;&gt;数据库热度趋势&lt;/a&gt;” ，不难发现只有 PostgreSQL 与 Mongo 两款 DBMS 在独领风骚 —— MongoDB (2009) 与 PostgreSQL 9.2 (2012) 都极为敏锐地把握住了互联网开发者的需求 —— 在 “JSON崛起” 的第一时间就添加 &lt;a href=&#34;/zh/blog/pg/vector-json-pg/&#34;&gt;JSON 特性支持&lt;/a&gt;（文档数据库），从而在过去十年间吃下了数据库领域最大的增长红利。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-engine.png&#34; src=&#34;/zh/blog/db/mysql-is-dead/db-engine.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当然，MySQL 的干爹 —— Oracle 也在2014年底的12.1中添加了 JSON 特性与 Javascript 存储过程的支持 —— 而 MySQL 自己则不幸地等到了 2024 年才补上这一课 —— &lt;strong&gt;但已经太迟了！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Oracle 支持用 C，SQL，PL/SQL，Pyhton，Java，Javascript 编写存储过程。但在 PostgreSQL 支持的二十多种存储过程语言面前，只能说也是小巫见大巫，只能甘拜下风了：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pg-pl.jpg&#34; src=&#34;/zh/blog/db/mysql-is-dead/pg-pl.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;不同于 PostgreSQL 与 Oracle 的开发理念，MySQL 的各种最佳实践里都不推荐使用存储过程 —— 所以 Javascript 函数对于 MySQL 来说是个鸡肋特性。
然而即便如此，Oracle 还是把 Javascript 存储过程支持做成了一个 &lt;strong&gt;MySQL企业版专属&lt;/strong&gt; 的特性 —— 考虑到绝大多数 MySQL 用户使用的都是开源社区版本，这个特性属实是发布了个寂寞。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;日渐落后的功能特性&#34;&gt;日渐落后的功能特性&lt;/h2&gt;
&lt;p&gt;MySQL 在功能上缺失的绝不仅仅是是编程语言/存储过程支持，在各个功能维度上，MySQL 都落后它的竞争对手 PostgreSQL 太多了 —— 功能落后不仅仅是在数据库内核功能上，更发生在扩展生态维度。&lt;/p&gt;
&lt;p&gt;来自 CMU 的 Abigale Kim 对&lt;a href=&#34;https://abigalekim.github.io/assets/pdf/Anarchy_in_the_Database_PGConfDev2024.pdf&#34;&gt;主流数据库的可扩展性&lt;/a&gt;进行了研究：PostgreSQL 有着所有 DBMS 中最好的 &lt;strong&gt;可扩展性&lt;/strong&gt;（Extensibility），以及其他数据库生态难望其项背的扩展插件数量 —— &lt;strong&gt;375+&lt;/strong&gt;，这还只是 PGXN 注册在案的实用插件，&lt;a href=&#34;https://gist.github.com/joelonsql/e5aa27f8cc9bd22b8999b7de8aee9d47&#34;&gt;实际生态扩展总数已经破千&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;dbms-extensibility.png&#34; src=&#34;/zh/blog/db/mysql-is-dead/dbms-extensibility.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这些扩展插件为 PostgreSQL 提供了各种各样的功能 —— 地理空间，时间序列，向量检索，机器学习，OLAP分析，全文检索，图数据库，让 PostgreSQL 真正成为一专多长的全栈数据库 —— 单一数据库选型便可替代各式各样的专用组件： MySQL，MongoDB，Kafka，Redis，ElasticSearch，Neo4j，甚至是专用分析数仓与数据湖。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pg-extensions.jpg&#34; src=&#34;/zh/blog/db/mysql-is-dead/pg-extensions.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;当 MySQL 还局限在 “&lt;strong&gt;关系型 OLTP 数据库&lt;/strong&gt;” 的定位时， PostgreSQL 早已经放飞自我，从一个关系型数据库发展成了一个多模态的数据库，成为了一个数据管理的抽象框架与开发平台。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/pg/pg-eat-db-world&#34;&gt;PostgreSQL正在吞噬数据库世界&lt;/a&gt; —— 它正在通过插件的方式，将整个数据库世界内化其中。“&lt;a href=&#34;/zh/blog/pg/just-use-pg/&#34;&gt;一切皆用 Postgres&lt;/a&gt;” 也已经不再是少数精英团队的前沿探索，而是成为了一种进入主流视野的最佳实践。&lt;/p&gt;
&lt;p&gt;而在新功能支持上，MySQL 却显得十分消极 —— 一个应该有大量 Breaking Change 的“创新大版本更新”，不是糊弄人的摆烂特性，就是企业级的特供鸡肋，一个大版本就连鸡零狗碎的小修小补都凑不够数。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;越新越差的性能表现&#34;&gt;越新越差的性能表现&lt;/h2&gt;
&lt;p&gt;缺少功能也许并不是一个无法克服的问题 —— 对于一个数据库来说，只要它能将自己的本职工作做得足够出彩，那么架构师总是可以多费些神，用各种其他的数据积木一起拼凑出所需的功能。&lt;/p&gt;
&lt;p&gt;MySQL 曾引以为傲的核心特点便是 &lt;strong&gt;性能&lt;/strong&gt; —— 至少对于互联网场景下的简单 OLTP CURD 来说，它的性能是非常不错的。然而不幸地是，这一点也正在遭受挑战：Percona 的博文《&lt;a href=&#34;/zh/blog/db/sakila-where-are-you-going/&#34;&gt;Sakila：你将何去何从&lt;/a&gt;》中提出了一个令人震惊的结论：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL 的版本越新，性能反而越差。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;mysql-perf-bench.jpg&#34; src=&#34;/zh/blog/db/mysql-is-dead/mysql-perf-bench.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据 Percona 的测试，在 sysbench 与 TPC-C 测试下，最新 MySQL 8.4 版本的性能相比 MySQL 5.7 出现了平均高达 &lt;strong&gt;20%&lt;/strong&gt; 的下降。而 MySQL 专家 Mark Callaghan 进一步进行了 &lt;a href=&#34;https://smalldatum.blogspot.com/2024/02/perf-regressions-in-mysql-from-5621-to.html&#34;&gt;详细的性能回归测试&lt;/a&gt;，确认了这一现象：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;mysql-perf.png&#34; src=&#34;/zh/blog/db/mysql-is-dead/mysql-perf.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MySQL 8.0.36 相比 5.6 ，QPS 吞吐量性能下降了 25% ～ 40% ！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;尽管 MySQL 的优化器在 8.x 有一些改进，一些复杂查询场景下的性能有所改善，但分析与复杂查询本来就不是 MySQL 的长处与适用场景，只能说聊胜于无。相反，如果作为基本盘的 OLTP CRUD 性能出了这么大的折损，那确实是完全说不过去的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://benchmark.clickhouse.com/&#34;&gt;&lt;img alt=&#34;clickbench-en.png&#34; src=&#34;/zh/blog/db/mysql-is-dead/clickbench-en.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ClickBench：MySQL 打这个榜确实有些不明智&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Peter Zaitsev 在博文《&lt;a href=&#34;/zh/blog/db/oracle-kill-mysql&#34;&gt;Oracle最终还是杀死了MySQL&lt;/a&gt;》中评论：“与 MySQL 5.6 相比，MySQL 8.x 单线程简单工作负载上的性能出现了大幅下滑。你可能会说增加功能难免会以牺牲性能为代价，但 MariaDB 的性能退化要轻微得多，而 PostgreSQL 甚至能在 &lt;a href=&#34;https://smalldatum.blogspot.com/2024/06/postgres-17beta1-vs-sysbench-on-large.html&#34;&gt;&lt;strong&gt;新增功能的同时显著提升性能&lt;/strong&gt;&lt;/a&gt;”。&lt;/p&gt;
&lt;p&gt;MySQL的性能随版本更新而逐步衰减，但在同样的性能回归测试中，PostgreSQL 性能却可以随版本更新有着稳步提升。特别是在最关键的写入吞吐性能上，最新的 PostgreSQL 17beta1 相比六年前的 PG 10 甚至有了 30% ～ 70% 的提升。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pg-mysql-write-qps.png&#34; src=&#34;/zh/blog/db/mysql-is-dead/pg-mysql-write-qps.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 Mark Callaghan 的 &lt;a href=&#34;https://smalldatum.blogspot.com/2023/10/postgres-vs-mysql-impact-of-cpu.html&#34;&gt;性能横向对比&lt;/a&gt; （sysbench 吞吐场景） 中，我们可以看到五年前 PG 11 与 MySQL 5.6 的性能比值（蓝），与当下 PG 16 与 MySQL 8.0.34 的性能比值（红）。PostgreSQL 和 MySQL 的性能差距在这五年间拉的越来越大。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pg-vs-mysql-qps.jpg&#34; src=&#34;/zh/blog/db/mysql-is-dead/pg-vs-mysql-qps.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;几年前的业界共识是 PostgreSQL 与 MySQL 在 &lt;strong&gt;简单 OLTP CRUD 场景&lt;/strong&gt; 下的性能基本相同。然而此消彼长之下，现在 PostgreSQL 的性能已经远远甩开 MySQL 了。
PostgreSQL 的各种读吞吐量相比 MySQL 高 25% ～ 100% 不等，在一些写场景下的吞吐量更是达到了 200% 甚至 500% 的恐怖水平。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL 赖以安身立命的性能优势，已经不复存在了。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;无可救药的质量水平&#34;&gt;无可救药的质量水平&lt;/h2&gt;
&lt;p&gt;如果新版本只是性能不好，总归还有办法来优化修补。但如果是质量出了问题，那真就是无可救药了。&lt;/p&gt;
&lt;p&gt;例如，Percona 最近刚刚在 MySQL 8.0.38 以上的版本（8.4.x, 9.0.0）中发现了一个 &lt;a href=&#34;https://perconadev.atlassian.net/browse/PS-9306&#34;&gt;严重Bug&lt;/a&gt; —— 如果数据库里表超过 1万张，那么重启的时候 MYSQL 服务器会直接崩溃！
一个数据库里有1万张表并不常见，但也并不罕见 —— 特别是当用户使用了一些分表方案，或者应用会动态创建表的时候。而直接崩溃显然是可用性故障中最严重的一类情形。&lt;/p&gt;
&lt;p&gt;但 MySQL 的问题不仅仅是几个软件 Bug，而是根本性的问题 —— 《&lt;a href=&#34;/zh/blog/db/bad-mysql&#34;&gt;MySQL正确性竟有如此大的问题？&lt;/a&gt;》一文指出，在&lt;strong&gt;正确性&lt;/strong&gt;这个体面数据库产品必须的基本属性上，MySQL 的表现一塌糊涂。&lt;/p&gt;
&lt;p&gt;权威的分布式事务测试组织 &lt;a href=&#34;https://jepsen.io/analyses/mysql-8.0.34&#34;&gt;JEPSEN&lt;/a&gt; 研究发现，MySQL 文档声称实现的 &lt;strong&gt;可重复读/RR&lt;/strong&gt; 隔离等级，实际提供的正确性保证要弱得多 —— MySQL 8.0.34 默认使用的 RR 隔离等级实际上并不可重复读，甚至既不&lt;strong&gt;原子&lt;/strong&gt;也不&lt;strong&gt;单调&lt;/strong&gt;，连 &lt;strong&gt;单调原子视图/MAV&lt;/strong&gt; 的基本水平都不满足。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/db/bad-mysql&#34;&gt;&lt;img alt=&#34;mysql-bad-case.png&#34; src=&#34;/zh/blog/db/mysql-is-dead/mysql-bad-case.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL 的 ACID 存在缺陷，且与文档承诺不符&lt;/strong&gt; —— 而轻信这一虚假承诺可能会导致严重的正确性问题，例如数据错漏与对账不平。对于一些数据完整性很关键的场景 —— 例如金融，这一点是无法容忍的。&lt;/p&gt;
&lt;p&gt;此外，能“避免”这些异常的 MySQL &lt;strong&gt;可串行化/SR&lt;/strong&gt; 隔离等级难以生产实用，也非官方文档与社区认可的最佳实践；尽管专家开发者可以通过在查询中显式加锁来规避此类问题，但这样的行为极其影响性能，而且容易出现死锁。&lt;/p&gt;
&lt;p&gt;与此同时，PostgreSQL 在 9.1 引入的 可串行化快照隔离（SSI） 算法可以用极小的性能代价提供完整可串行化隔离等级 —— 而且 PostgreSQL 的 SR 在正确性实现上毫无瑕疵 —— 这一点即使是 Oracle 也难以企及。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;consistency.png&#34; src=&#34;/zh/blog/db/mysql-is-dead/consistency.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;李海翔教授在《&lt;a href=&#34;https://mp.weixin.qq.com/s/_BhAjcMkmthTf8Zw3RWKDw&#34;&gt;一致性八仙图&lt;/a&gt;》论文中，系统性地评估了主流 DBMS 隔离等级的正确性，图中蓝/绿色代表正确用规则/回滚避免异常；黄A代表异常，越多则正确性问题就越多；红“D”指使用了影响性能的死锁检测来处理异常，红D越多性能问题就越严重；&lt;/p&gt;
&lt;p&gt;不难看出，这里正确性最好（无黄A）的实现是 PostgreSQL SR，与基于PG的 CockroachDB SR，其次是略有缺陷 Oracle SR；主要都是通过机制与规则避免并发异常；而 MySQL 出现了大面积的黄A与红D，正确性水平与实现手法糙地不忍直视。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;做正确的事很重要，而正确性是不应该拿来做利弊权衡的&lt;/strong&gt;。在这一点上，开源关系型数据库两巨头 MySQL 和 PostgreSQL 在早期实现上就选择了两条截然相反的道路： MySQL 追求性能而牺牲正确性；而学院派的 PostgreSQL 追求正确性而牺牲了性能。&lt;/p&gt;
&lt;p&gt;在互联网风口上半场中，MySQL 因为性能优势占据先机乘风而起。但当性能不再是核心考量时，正确性就成为了 MySQL 的&lt;strong&gt;致命出血点&lt;/strong&gt;。
更为可悲的是，MySQL 连牺牲正确性换来的性能，都已经不再占优了，这着实让人唏嘘不已。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;枯萎收缩的生态规模&#34;&gt;枯萎收缩的生态规模&lt;/h2&gt;
&lt;p&gt;对一项技术而言，用户的&lt;strong&gt;规模&lt;/strong&gt;直接决定了生态的繁荣程度。瘦死的骆驼比马大，烂船也有三斤钉。
MySQL 曾经搭乘互联网东风扶摇而起，攒下了丰厚的家底，它的 Slogan 就很能说明问题 —— “&lt;strong&gt;世界上最流行的开源关系型数据库&lt;/strong&gt;”。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;so-rank.jpg&#34; src=&#34;/zh/blog/db/mysql-is-dead/so-rank.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;不幸地是在 2023 年，至少根据全世界最权威的开发者调研之一的 &lt;a href=&#34;/zh/blog/pg/pg-is-no1&#34;&gt;StackOverflow Annual Developer Survey&lt;/a&gt; 结果来看，MySQL 的使用率已经被 PostgreSQL 反超了 —— &lt;strong&gt;最流行数据库的桂冠已经被 PostgreSQL 摘取&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;特别是，如果将过去七年的调研数据放在一起，就可以得到这幅 PostgreSQL / MySQL 在专业开发者中使用率的变化趋势图（左上） —— 在横向可比的同一标准下，PostgreSQL 流行与 MySQL 过气的趋势显得一目了然。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;so-trend.jpg&#34; src=&#34;/zh/blog/db/mysql-is-dead/so-trend.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;对于中国来说，此消彼长的变化趋势也同样成立。但如果对中国开发者说 PostgreSQL 比 MySQL 更流行，那确实是违反直觉与事实的。&lt;/p&gt;
&lt;p&gt;将 StackOverflow 专业开发者按照国家细分，不难看出在主要国家中（样本数 &amp;gt; 600 的 31 个国家），中国的 MySQL 使用率是最高的 —— 58.2% ，而 PG 的使用率则是最低的 —— 仅为 27.6%，MySQL 用户几乎是 PG 用户的一倍。&lt;/p&gt;
&lt;p&gt;与之恰好反过来的另一个极端是真正遭受国际制裁的俄联邦：由开源社区运营，不受单一主体公司控制的 PostgreSQL 成为了俄罗斯的数据库大救星 —— 其 PG 使用率以 60.5% 高居榜首，是其 MySQL 使用率 27% 的两倍。&lt;/p&gt;
&lt;p&gt;中国因为同样的自主可控信创逻辑，最近几年 PostgreSQL 的使用率也出现了显著跃升 ——  PG 的使用率翻了三倍，而 PG 与 MySQL 用户比例已经从六七年前的 5:1 ，到三年前的3:1，再迅速发展到现在的 2:1，相信会在未来几年内会很快追平并反超世界平均水平。
毕竟，有这么多的国产数据库，都是基于 PostgreSQL 打造而成 —— 如果你做政企信创生意，那么大概率已经在用 PostgreSQL 了。&lt;/p&gt;
&lt;p&gt;抛开政治因素，用户选择使用一款数据库与否，核心考量还是质量、安全、效率、成本等各个方面是否“&lt;strong&gt;先进&lt;/strong&gt;”。先进的因会反映为流行的果，流行的东西因为落后而过气，而先进的东西会因为先进变得流行，没有“先进”打底，再“流行”也难以长久。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;究竟是谁杀死了mysql&#34;&gt;究竟是谁杀死了MySQL？&lt;/h2&gt;
&lt;p&gt;究竟是谁杀死了 MySQL，难道是 PostgreSQL 吗？Peter Zaitsev 在《&lt;a href=&#34;/zh/blog/db/sakila-where-are-you-going&#34;&gt;Oracle最终还是杀死了MySQL&lt;/a&gt;》一文中控诉 —— &lt;strong&gt;Oracle 的不作为与瞎指挥最终害死了 MySQL&lt;/strong&gt;；并在后续《&lt;a href=&#34;https://pigsty.io/zh/blog/db/can-oracle-save-mysql&#34;&gt;Oracle还能挽救MySQL吗&lt;/a&gt;》一文中指出了真正的根因：&lt;/p&gt;
&lt;p&gt;MySQL 的知识产权被 Oracle 所拥有，它不是像 PostgreSQL 那种 “由社区拥有和管理” 的数据库，也没有 PostgreSQL 那样广泛的独立公司贡献者。不论是 MySQL 还是其分叉 MariaDB，它们都不是真正意义上像 Linux，PostgreSQL，Kubernetes 这样由社区驱动的的原教旨纯血开源项目，而是由单一商业公司主导。&lt;/p&gt;
&lt;p&gt;比起向一个商业竞争对手贡献代码，白嫖竞争对手的代码也许是更为明智的选择 —— AWS 和其他云厂商利用 MySQL 内核参与数据库领域的竞争，却不回馈任何贡献。于是作为竞争对手的 Oracle 也不愿意再去管理好 MySQL，而干脆自己也参与进来搞云 —— 仅仅只关注它自己的 MySQL heatwave 云版本，就像 AWS 仅仅专注于其 RDS 管控和 Aurora 服务一样。在 MySQL 社区凋零的问题上，云厂商也难辞其咎。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;dbms-market.png&#34; src=&#34;/zh/blog/db/mysql-is-dead/dbms-market.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;逝者不可追，来者犹可待。PostgreSQL 应该从 MySQL 的衰亡中吸取教训 —— 尽管 PostgreSQL 社区非常小心地避免出现一家独大的情况出现，但生态确实在朝着一家/几家巨头云厂商独大的不利方向在发展。&lt;a href=&#34;/zh/blog/cloud/paradigm&#34;&gt;&lt;strong&gt;云正在吞噬开源&lt;/strong&gt;&lt;/a&gt; —— 云厂商编写了开源软件的管控软件，组建了专家池，通过提供维护攫取了软件生命周期中的绝大部分价值，但却通过搭便车的行为将最大的成本 —— &lt;strong&gt;产研&lt;/strong&gt;交由整个开源社区承担。而 &lt;a href=&#34;/zh/blog/cloud/dba-vs-rds#%E4%BA%91%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%A8%A1%E5%BC%8F%E4%B8%8E%E6%96%B0%E6%8C%91%E6%88%98&#34;&gt;&lt;strong&gt;真正有价值的管控/监控代码却从来不回馈开源社区&lt;/strong&gt;&lt;/a&gt; —— 在数据库领域，我们已经在 MongoDB，ElasticSearch，Redis，以及 MySQL 上看到了这一现象，而 PostgreSQL 社区确实应当引以为鉴。&lt;/p&gt;
&lt;p&gt;好在 PG 生态总是不缺足够头铁的人和公司，愿意站出来维护生态的平衡，反抗公有云厂商的霸权。例如，我自己开发的 PostgreSQL 发行版 &lt;a href=&#34;https://pigsty.io&#34;&gt;Pigsty&lt;/a&gt;，旨在提供一个开箱即用、本地优先的开源云数据库 RDS 替代，将社区自建 PostgreSQL 数据库服务的底线，拔高到云厂商 RDS PG 的水平线。而我的《&lt;a href=&#34;/zh/blog/cloud&#34;&gt;云计算泥石流&lt;/a&gt;》系列专栏则旨在扒开云服务背后的信息不对称，从而帮助公有云厂商更加体面，亦称得上是成效斐然。&lt;/p&gt;
&lt;p&gt;尽管我是 PostgreSQL 的坚定支持者，但我也赞同 Peter Zaitsev 的观点：&lt;em&gt;“如果 MySQL 彻底死掉了，开源关系型数据库实际上就被 PostgreSQL 一家垄断了，而垄断并不是一件好事，因为它会导致发展停滞与创新减缓。PostgreSQL 要想进入全盛状态，有一个 MySQL 作为竞争对手并不是坏事”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;至少，MySQL 可以作为一个鞭策激励，让 PostgreSQL 社区保持凝聚力与危机感，不断提高自身的技术水平，并继续保持开放、透明、公正的社区治理模式，从而持续推动数据库技术的发展。&lt;/p&gt;
&lt;p&gt;MySQL 曾经也辉煌过，也曾经是“开源软件”的一杆标杆，但再精彩的演出也会落幕。MySQL 正在死去 —— 更新疲软，功能落后，性能劣化，质量出血，生态萎缩，此乃天命，实非人力所能改变。
而 PostgreSQL ，将带着开源软件的初心与愿景继续坚定前进 —— 它将继续走 MySQL 未走完的长路，写 MySQL 未写完的诗篇。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pg驶向云外mysql安魂九霄&#34;&gt;PG驶向云外，MySQL安魂九霄&lt;/h2&gt;
&lt;p&gt;我那些残梦，灵异九霄&lt;/p&gt;
&lt;p&gt;徒忙漫奋斗，满目沧愁&lt;/p&gt;
&lt;p&gt;在滑翔之后，完美坠落&lt;/p&gt;
&lt;p&gt;在四维宇宙，眩目遨游&lt;/p&gt;
&lt;p&gt;我那些烂曲，流窜九州&lt;/p&gt;
&lt;p&gt;云游魂飞奏，音愤符吼&lt;/p&gt;
&lt;p&gt;在宿命身后，不停挥手&lt;/p&gt;
&lt;p&gt;视死如归仇，毫无保留&lt;/p&gt;
&lt;p&gt;黑色的不是夜晚，是漫长的孤单&lt;/p&gt;
&lt;p&gt;看脚下一片黑暗，望头顶星光璀璨&lt;/p&gt;
&lt;p&gt;叹世万物皆可盼，唯真爱最短暂&lt;/p&gt;
&lt;p&gt;失去的永不复返，世守恒而今倍还&lt;/p&gt;
&lt;p&gt;摇旗呐喊的热情，携光阴渐远去&lt;/p&gt;
&lt;p&gt;人世间悲喜烂剧，昼夜轮播不停&lt;/p&gt;
&lt;p&gt;纷飞的滥情男女，情仇爱恨别离&lt;/p&gt;
&lt;p&gt;一代人终将老去，但总有人正年轻&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;train.jpg&#34; src=&#34;/zh/blog/db/mysql-is-dead/train.jpg&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;参考阅读&#34;&gt;参考阅读&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/db/can-oracle-save-mysql&#34;&gt;Oracle还能拯救MySQL吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/db/oracle-killed-mysql&#34;&gt;Oracle最终还是杀死了MySQL！&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/db/sakila-where-are-you-going&#34;&gt;MySQL性能越来越差，Sakila将何去何从？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/db/bad-mysql&#34;&gt;MySQL的正确性为何如此拉垮？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/pg/pg-eat-db-world&#34;&gt;PostgreSQL正在吞噬数据库世界&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/pg/pg-17-beta1&#34;&gt;PostgreSQL 17 Beta1 发布！牙膏管挤爆了！&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/pg/pg-for-everything&#34;&gt;为什么PostgreSQL是未来数据的基石？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/pg/pg-eat-db-world/&#34;&gt;PostgreSQL is eating the database world&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/pg/just-use-pg&#34;&gt;技术极简主义：一切皆用Postgres&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/pg/pg-is-no1&#34;&gt;PostgreSQL：世界上最成功的数据库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/pg/pg-performance&#34;&gt;PostgreSQL 到底有多强？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/db/svdb-is-dead&#34;&gt;专用向量数据库凉了吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/pg/vector-json-pg&#34;&gt;向量是新的JSON&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/dev/llm-and-pgvector/&#34;&gt;AI大模型与PGVECTOR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/cloud/dba-vs-rds&#34;&gt;云数据库的模式与新挑战&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/cloud&#34;&gt;云计算泥石流&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/db/redis-oss/&#34;&gt;Redis不开源是“开源”之耻，更是公有云之耻&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/blog/pg/pg-license/&#34;&gt;PostgreSQL会修改开源许可证吗？&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: CVE-2024-6387 SSH 漏洞修复</title>
      <link>/zh/blog/db/cve-2024-6387/</link>
      <pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/cve-2024-6387/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/cve-2024-6387/featured_hu0d054d2c652dfd6deb8c91154c84c20d_709893_640x0_resize_catmullrom_3.png" width="640" height="360"/>]]>
        
        &lt;p&gt;漏洞描述，CVE-2024-6387: &lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2024-6387&#34;&gt;https://nvd.nist.gov/vuln/detail/CVE-2024-6387&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基本上影响的都是比较新版本的操作系统，老的系统，比如 CentOS 7.9，RockyLinux 8.9 ，Ubuntu 20.04，Debian 11 因为 OpenSSH 版本老逃过一劫。&lt;/p&gt;
&lt;p&gt;在 Pigsty 支持的操作系统发行版中，RockyLinux 9.3，Ubuntu 22.04，Debian 12 受到影响：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh -V
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OpenSSH_8.7p1, OpenSSL 3.0.7 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; Nov &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2022&lt;/span&gt;                       &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# rockylinux 9.3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OpenSSH_8.9p1 Ubuntu-3ubuntu0.6, OpenSSL 3.0.2 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;15&lt;/span&gt; Mar &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2022&lt;/span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# ubuntu 22.04&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OpenSSH_9.2p1 Debian-2+deb12u2, OpenSSL 3.0.11 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;19&lt;/span&gt; Sep &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2023&lt;/span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# debian 12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;诊断方法&#34;&gt;诊断方法&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;featured.png&#34; src=&#34;/zh/blog/db/cve-2024-6387/featured.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;漏洞公告：&lt;/p&gt;
&lt;p&gt;RockyLinux 9+: &lt;a href=&#34;https://rockylinux.org/news/2024-07-01-openssh-sigalrm-regression&#34;&gt;https://rockylinux.org/news/2024-07-01-openssh-sigalrm-regression&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Debian 12+: &lt;a href=&#34;https://security-tracker.debian.org/tracker/CVE-2024-6387&#34;&gt;https://security-tracker.debian.org/tracker/CVE-2024-6387&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu 22.04+: &lt;a href=&#34;https://ubuntu.com/security/CVE-2024-6387&#34;&gt;https://ubuntu.com/security/CVE-2024-6387&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;处理方法&#34;&gt;处理方法&lt;/h2&gt;
&lt;p&gt;使用系统的默认包管理器升级 &lt;code&gt;openssh-server&lt;/code&gt; 即可。&lt;/p&gt;
&lt;p&gt;升级后的版本参考：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# rockylinux 9.3  : 8.7p1-34.el9      -------&amp;gt; 8.7p1-38.el9_4.1    &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# ubuntu 22.04    :                   -------&amp;gt; 8.9p1-3ubuntu0.6    &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# debian 12       :                   -------&amp;gt; 1:9.2p1-2+deb12u2   &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart sshd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;rocky93&#34;&gt;rocky9.3&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rpm -q openssh-server
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssh-server-8.7p1-34.el9.x86_64      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# vulnerable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yum install openssh-server
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssh-server-8.7p1-38.el9_4.1.x86_64  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# fixed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;debian12&#34;&gt;debian12&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ dpkg -s openssh-server
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ apt install openssh-server
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Version: 1:9.2p1-2+deb12u2              &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# fixed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;ubuntu2204&#34;&gt;ubuntu22.04&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ dpkg -s openssh-server
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ apt install openssh-server
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Version: 1:8.9p1-3ubuntu0.6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;后续改进&#34;&gt;后续改进&lt;/h2&gt;
&lt;p&gt;在 Pigsty 的下个版本 v2.8 中，默认会下载并安装当前最新版本的 &lt;code&gt;openssh-server&lt;/code&gt;，从而修复此漏洞。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 使用Pigsty,PG,PGVector自建Dify -- AI工作流平台</title>
      <link>/zh/blog/pg/dify-setup/</link>
      <pubDate>Sat, 22 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/dify-setup/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/dify-setup/featured_hu80851c5fc238a2ecfc4f1e548d26dda7_2214933_640x0_resize_catmullrom_3.png" width="640" height="592"/>]]>
        
        &lt;p&gt;&lt;a href=&#34;https://dify.ai/zh&#34;&gt;&lt;strong&gt;Dify&lt;/strong&gt;&lt;/a&gt; 是一个生成式 AI 应用创新引擎，开源的 LLM 应用开发平台。提供从 Agent 构建到 AI workflow 编排、RAG 检索、模型管理等能力，帮助用户轻松构建和运营生成式 AI 原生应用。&lt;/p&gt;
&lt;p&gt;当然，像这样的一个 AI 工作流编排软件，在底下也少不得用到数据库 —— Dify 便是用 PostgreSQL 存储数据的，当然还有 Redis 缓存，与一个专用的向量数据库。Docker 镜像拉起来本地玩玩可以，生产环境部署的话，数据库肯定不能这么搞，高可用，备份，监控啥都没有。
好在 Pigsty 就提供了开箱即用的生产级高可用 PostgreSQL 集群，也正好提供了 Dify 需要用到的 Redis 与 S3 （MinIO） 服务，也提供了 Nginx 可以对外暴露 Web 服务，堪称 Dify 最佳拍档。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/langgenius/dify/blob/main/docker/docker-compose.yaml&#34;&gt;&lt;img alt=&#34;docker-compose.png&#34; src=&#34;/zh/blog/pg/dify-setup/docker-compose.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有了 Pigsty，你只需要用 &lt;code&gt;docker compose&lt;/code&gt; 拉起无状态的蓝圈部分就好了，状态放在由外部服务由 Pigsty 管理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里我不得不吐槽一下 Dify 模板的设计，元数据都已经用 PostgreSQL 存储了，你直接加个 &lt;code&gt;pgvector&lt;/code&gt; 不就能拿来当向量数据库了？更让人想吐槽的是 &lt;code&gt;pgvector&lt;/code&gt; 竟然还是一个单独的镜像与容器，你直接用一个带 pgvector 的 PG 镜像不就行了？
Dify “支持” 了一堆花里胡哨的向量数据库，但你既然已经选定了 PostgreSQL 了，向量数据库默认也用 &lt;code&gt;pgvector&lt;/code&gt; 就是自然而然地选择了。同理，我觉得 Dify 官方应该考虑一下把 Redis 去掉，Celery 任务队列又不是不能用 PostgreSQL 作为后端存储，弄那么多数据库纯属吃饱了撑着。如无必要，勿增实体。&lt;/p&gt;
&lt;p&gt;所以 Pigsty 提供的 &lt;a href=&#34;https://github.com/Vonng/pigsty/tree/master/app/dify&#34;&gt;Dify Docker Compose 模板&lt;/a&gt; 也对官方的样例做了一些修改，把 &lt;code&gt;db&lt;/code&gt; 和 &lt;code&gt;redis&lt;/code&gt; 两个数据库镜像给去掉了，使用由 Pigsty 管理的实例，向量数据库固定使用 &lt;code&gt;pgvector&lt;/code&gt;，复用同一个 PostgreSQL 实例。&lt;/p&gt;
&lt;p&gt;最后上面那个架构就被简化为无状态的：&lt;code&gt;dify-api&lt;/code&gt;，&lt;code&gt;dify-web&lt;/code&gt;，&lt;code&gt;dify-worker&lt;/code&gt; 三个无状态容器，可以随意创建销毁。当然还有两个可选的 &lt;code&gt;ssrf_proxy&lt;/code&gt; 与 &lt;code&gt;nginx&lt;/code&gt;，用于提供代理与些许安全特性。
还有一点状态尾巴是 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/master/app/dify/docker-compose.yml#L128&#34;&gt;文件系统卷&lt;/a&gt;，存放私钥之类的东西，定期备份一下就好了，也可以使用 MinIO 替代。&lt;/p&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/langgenius/dify/&#34;&gt;GitHub: langgenius/Dify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/tree/master/app/dify&#34;&gt;Pigsty: Dify Docker Compose Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pigsty的准备工作&#34;&gt;Pigsty的准备工作&lt;/h2&gt;
&lt;p&gt;我们用 &lt;a href=&#34;/zh/docs/concept/arch/#%E5%8D%95%E6%9C%BA%E5%AE%89%E8%A3%85&#34;&gt;单机安装&lt;/a&gt; 的 Pigsty 为例，假设你有一台 IP 地址为 &lt;code&gt;10.10.10.10&lt;/code&gt; 的机器，已经 &lt;a href=&#34;/zh/docs/setup/install&#34;&gt;安装好了单机 Pigsty&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;当然，我们需要在 Pigsty 配置文件 &lt;code&gt;pigsty.yml&lt;/code&gt; 中定义一下我们所需的数据库集群。
这里定义了一个名为 &lt;code&gt;pg-meta&lt;/code&gt; 的集群，其中有一个名为 &lt;code&gt;dbuser_dify&lt;/code&gt; 的超级业务用户（它这个实现的有点挫，在 Migration 脚本里面执行了 &lt;code&gt;CREATE EXTENSION&lt;/code&gt; ），一个安装了 &lt;code&gt;pgvector&lt;/code&gt; 扩展插件的数据库 &lt;code&gt;dify&lt;/code&gt;，以及一条特定的防火墙规则，允许用户通过密码从任何地方访问数据库（你也可以将其限制为docker的网段 &lt;code&gt;172.0.0.0/8&lt;/code&gt; 之类更精确的范围）。&lt;/p&gt;
&lt;p&gt;同时，上面还定义了一个单实例的标准 Redis 集群 &lt;code&gt;redis-dify&lt;/code&gt;，设置了密码 &lt;code&gt;redis.dify&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg-meta&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_seq: 1, pg_role&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;primary } }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_cluster&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg-meta&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_users&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: dbuser_dify ,password: DBUser.Dify  ,superuser: true ,pgbouncer: true ,roles&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dbrole_admin ] } ]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_databases&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name: dify, owner: dbuser_dify, extensions&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pgvector } ] } ]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;pg_hba_rules&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user: dbuser_dify , db: all ,addr: world ,auth: pwd ,title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;allow dify user world pwd access&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;redis-dify&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;redis_node: 1 , redis_instances&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;6379&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;vars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;redis_cluster: redis-dify ,redis_password: &amp;#39;redis.dify&amp;#39; ,redis_max_memory&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;64MB }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里出于演示目的，我们全部使用单实例配置，你可以参考 Pigsty 文档部署 &lt;a href=&#34;/zh/docs/concept/ha&#34;&gt;高可用&lt;/a&gt; 的 PG 集群与 Redis 集群。总之，在定义完成后，使用以下命令创建 PG 和 Redis 。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bin/pgsql-add  pg-meta                &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# create the dify database cluster&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bin/redis-add  redis-dify             &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# create redis cluster&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然，您也可以在现有的 PostgreSQL 集群，例如 &lt;code&gt;pg-meta&lt;/code&gt; 上新定义业务用户与业务数据库，并通过以下命令创建：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bin/pgsql-user pg-meta dbuser_dify    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# create dify biz user&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bin/pgsql-db   pg-meta dify           &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# create dify biz database&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;您应该可以通过以下的连接串，访问到 PostgreSQL 与 Redis，当然连接信息请根据实际情况进行修改。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql postgres://dbuser_dify:DBUser.Dify@10.10.10.10:5432/dify -c &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;SELECT 1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;redis-cli -u redis://redis.dify@10.10.10.10:6379/0 ping
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当你确认这两个连接串可用后，大功告成，你可以开始部署 Dify 了。&lt;/p&gt;
&lt;p&gt;这里出于演示方便的原因，使用IP直连的土办法，如果是多节点的高可用 PG 集群，请参考 &lt;a href=&#34;/zh/docs/concept/svc/&#34;&gt;接入&lt;/a&gt; 一节。&lt;/p&gt;
&lt;p&gt;当然，上面的部分是假设你已经是 Pigsty 用户，了解如何部署 PostgreSQL 与 Redis 集群。你可以直接跳过下一节，查看 &lt;a href=&#34;/zh/blog/pg/dify-setup/#dify的配置工作&#34;&gt;Dify 如何配置&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;从零开始的一些说明&#34;&gt;从零开始的一些说明&lt;/h2&gt;
&lt;p&gt;如果您已经了解如何配置使用 Pigsty，可以略过本节。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/zh/docs/setup/install&#34;&gt;从零安装&lt;/a&gt; Pigsty 需要 &lt;a href=&#34;/zh/docs/setup/prepare/&#34;&gt;准备&lt;/a&gt; 一台符合要求的机器节点： Linux / x86_64，静态 IP，使用带有免密 &lt;code&gt;sudo&lt;/code&gt; 权限的用户，执行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -fsSL https://repo.pigsty.cc/get &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后依次完成以下步骤：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; ~/pigsty      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 下载源码包解压后进入 Pigsty 源码目录，完成后续 准备、配置、安装 三个步骤&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./bootstrap      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 【可选项】用于确保 Ansible 正常安装，如果 /tmp/pkg.tgz 离线包则使用它&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./configure      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 【可选项】执行环境检测，并生成相应的推荐配置文件，如果知道如何配置可以跳过&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# …… 这里请修改自动生成的配置 pigsty.yml ，将上面的集群定义填入 all.children 部分内&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./install.yml    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 根据生成的配置文件开始在当前节点上执行安装，使用离线安装包大概需要10分钟完成&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;您应当将上面的 PostgreSQL 集群与 Redis 集群定义填入 &lt;code&gt;pigsty.yml&lt;/code&gt; 文件中，然后执行 &lt;a href=&#34;/zh/docs/infra#infrayml&#34;&gt;&lt;code&gt;install.yml&lt;/code&gt;&lt;/a&gt; 完成安装。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redis安装问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pigsty 默认不会安装 Redis，所以您需要使用 &lt;a href=&#34;/zh/docs/redis#redisyml&#34;&gt;&lt;code&gt;redis.yml&lt;/code&gt;&lt;/a&gt; 剧本显式完成 Redis 安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./redis.yml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Docker安装问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pigsty 默认不会在当前节点安装 Docker，所以您需要使用 &lt;a href=&#34;/zh/docs/docker#dockeryml&#34;&gt;&lt;code&gt;docker.yml&lt;/code&gt;&lt;/a&gt; 剧本安装 Docker。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./docker.yml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Docker Hub 被墙问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;请注意，对于中国大陆用户来说，Docker Hub 与各镜像站点目前出于封锁状态，需要 “科学上网” 才能拉取 Dify 所需的镜像，您可以考虑 &lt;code&gt;docker save|load&lt;/code&gt;，或者为 Docker Daemon 配置代理。&lt;/p&gt;
&lt;p&gt;要为 Docker Daemon 配置代理，您需要在 &lt;a href=&#34;/zh/docs/reference/param#proxy_env&#34;&gt;&lt;code&gt;proxy_env&lt;/code&gt;&lt;/a&gt; 中指定 &lt;code&gt;http_proxy&lt;/code&gt; 与 &lt;code&gt;https_proxy&lt;/code&gt; 环境变量，该参数会在 &lt;code&gt;docker_config&lt;/code&gt; 任务中被写入 &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt; 中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;proxies&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;http-proxy&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://192.168.x.x:8118&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;https-proxy&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://192.168.x.x:8118&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;no-proxy&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;localhost,127.0.0.1,10.0.0.0/8,192.168.0.0/16,*.pigsty,*.aliyun.com,mirrors.*,*.myqcloud.com,*.tsinghua.edu.cn&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然您也可以直接在配置文件中填入您的 HTTP/HTTPS 代理地址，并使用 &lt;code&gt;systemctl restart docker&lt;/code&gt; 重启生效。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker compose pull
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;+&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; Pulling 5/5
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;✔ worker Skipped - Image is already being pulled by api
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;✔ web Pulled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;✔ api Pulled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;✔ ssrf_proxy Pulled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;✔ nginx Pulled
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;配置代理后，镜像都可以成功拉取了。当然您也可以使用其他可用的镜像站点，例如 quay.io 等。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;dify的配置工作&#34;&gt;Dify的配置工作&lt;/h2&gt;
&lt;p&gt;Dify 的配置参数一如往常地放在 &lt;a href=&#34;https://github.com/Vonng/pigsty/blob/master/app/dify/.env&#34;&gt;&lt;code&gt;.env&lt;/code&gt;&lt;/a&gt; 文件中，内容如下所示：&lt;/p&gt;
&lt;p&gt;所有参数都顾名思义，已经填入了在 &lt;a href=&#34;/zh/docs/setup/provision/&#34;&gt;Pigsty默认沙箱环境&lt;/a&gt; 中可以直接工作的默认值，数据库连接信息请根据您的真实配置，与上面 PG / Redis 集群配置保持一致即可。
我们建议你随便改一下这个 &lt;code&gt;SECRET_KEY&lt;/code&gt; 字段，可以使用 &lt;code&gt;openssl rand -base64 42&lt;/code&gt; 生成一个强密钥。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# meta parameter&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;DIFY_PORT&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8001&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# expose dify nginx service with port 8001 by default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;LOG_LEVEL&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;INFO &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# The log level for the application. Supported values are `DEBUG`, `INFO`, `WARNING`, `ERROR`, `CRITICAL`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;SECRET_KEY&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# A secret key for signing and encryption, gen with `openssl rand -base64 42`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# postgres credential&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;PG_USERNAME&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;dbuser_dify
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;PG_PASSWORD&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;DBUser.Dify
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;PG_HOST&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;10.10.10.10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;PG_PORT&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5432&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;PG_DATABASE&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;dify
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# redis credential&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;REDIS_HOST&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;10.10.10.10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;REDIS_PORT&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6379&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;REDIS_USERNAME&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;REDIS_PASSWORD&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;redis.dify
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# minio/s3 [OPTIONAL] when STORAGE_TYPE=s3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;STORAGE_TYPE&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;local&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;S3_ENDPOINT&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;https://sss.pigsty&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;S3_BUCKET_NAME&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;infra&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;S3_ACCESS_KEY&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;dba&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;S3_SECRET_KEY&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;S3User.DBA&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;S3_REGION&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;us-east-1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;填好连接信息后，我们就可以使用 Docker Compose 拉起 Dify 服务了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; pigsty/app/dify &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make up
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;使用nginx暴露web服务&#34;&gt;使用Nginx暴露Web服务&lt;/h2&gt;
&lt;p&gt;Dify 的 Docker Compose 模板里面已经包含了一个 Nginx Server，占据了宿主机的 80 端口。如果你的这台机器就是拿来专门跑 Dify 的那没问题。如果你用的是 Pigsty 单机安装，那么这台宿主机上的 80 端口已经被 Pigsty 部署的 Nginx Web Portal 占据了。&lt;/p&gt;
&lt;p&gt;所以，Pigsty 提供的模板中，&lt;code&gt;DIFY_PORT&lt;/code&gt; 默认使用了 &lt;code&gt;8001&lt;/code&gt;，并通过宿主机上 Pigsty 部署的 Nginx 转发至此端口。当然我们也提供选项B，你也可以直接在 &lt;code&gt;/etc/nginx/conf.d/dify.conf&lt;/code&gt; 里使用样例配置，直接指向 Dify 的 &lt;code&gt;web&lt;/code&gt; 与 &lt;code&gt;api&lt;/code&gt; 端口。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;pigsty.yml&lt;/code&gt; 配置文件中的 &lt;code&gt;infra_portal&lt;/code&gt; 参数中新增一行 Dify 的配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;infra_portal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                     &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# domain names and upstream servers&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;home         &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h.pigsty }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;grafana      &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: g.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:3000&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, websocket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;prometheus   &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: p.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:9090&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;alertmanager &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: a.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:9093&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;blackbox     &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:9115&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;loki         &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${admin_ip}:3100&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dify         &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;domain: dify.pigsty ,endpoint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;10.10.10.10:8001&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;, websocket&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;}&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行以下剧本，重新生成 Nginx 配置、证书并应用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./infra.yml -t nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然如果要通过域名访问，你要把自己的域名 &lt;code&gt;dify.pigsty&lt;/code&gt; 添加到域名服务器，或者简单地写入：&lt;code&gt;/etc/hosts&lt;/code&gt; 或 &lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt; 之类的静态域名解析文件。&lt;/p&gt;
&lt;p&gt;然后，你就可以从浏览器中，通过 &lt;a href=&#34;http://dify.pigsty&#34;&gt;http://dify.pigsty&lt;/a&gt; 访问 Dify IDE 了。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Oracle 还能挽救 MySQL 吗？</title>
      <link>/zh/blog/db/can-oracle-save-mysql/</link>
      <pubDate>Fri, 21 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/can-oracle-save-mysql/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/can-oracle-save-mysql/featured_hu2987e68cf81063d96724a18a545685d0_41623_640x0_resize_q75_catmullrom.jpg" width="640" height="274"/>]]>
        
        &lt;p&gt;Percona 作为 MySQL 生态的主要扛旗者，开发了一系列用户耳熟能详的工具：PMM 监控，XtraBackup 备份，PT 系列工具，以及 MySQL 发行版。
然而近日，Percona 创始人 Peter Zaitsev 在官方博客上公开表达了对 MySQL，及其知识产权属主 Oracle 的失望，以及对版本越高性能越差的不满，这确实是一个值得关注的信号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/1zlDPie_bVvP7eO6_uTkSw&#34;&gt;Oracle最终还是干死了MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/nKD00j84R-EcOU1VPL1ibA&#34;&gt;Percona：Sakila啊，你将何去何从？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：Percona Blog，Marco Tusa，MySQL 生态的重要贡献者，开发了知名的PT系列工具，MySQL备份工具，监控工具与发行版。&lt;/p&gt;
&lt;p&gt;译者：冯若航，网名 Vonng，Pigsty 作者，PostgreSQL 专家与布道师。下云倡导者，数据库下云实践者。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我之前写了篇文章 &lt;a href=&#34;/zh/blog/oracle-kill-mysql/&#34;&gt;Oracle最终还是杀死了MySQL&lt;/a&gt; ，引发了不少回应 —— 包括 The Register 上的几篇精彩文章（&lt;a href=&#34;https://www.theregister.com/2024/06/11/early_mysql_engineer_questions_whether/&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://www.theregister.com/2024/06/14/oracles_love_and_hate_relationship/&#34;&gt;2&lt;/a&gt;）。这确实引出了几个值得讨论的问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;AWS和其他云厂商参与竞争，却不回馈任何贡献，那你还指望 Oracle 做啥呢？&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先 —— 我认为 AWS 和其他云厂商如果愿意对 MySQL 作出更多贡献，那当然是一件好事。
不过我们也应该注意到， Oracle 与这些公司都是竞争关系，并且在 MySQL 这并没有一个公平的竞争环境（AWS 为什么会来参与这种不公平的竞争是另一个话题）。&lt;/p&gt;
&lt;p&gt;对你的竞争对手贡献知识产权可能并不是一个很好的商业决策，特别是 Oracle 还要求贡献者签署的 CLA（贡献者授权协议）。
只要 Oracle 拥有这些知识产权，合理的预期就是由 Oracle 自己来承担大部分维护、改进和推广 MySQL 的责任。&lt;/p&gt;
&lt;p&gt;没错 …… ，但如果 Oracle 不愿意，或不再有能力管理好 MySQL，而仅仅只关注它自己的云版本，就像 AWS 仅仅专注于其 RDS 和 Aurora 服务，我们又能怎么办呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有一个解决方案 —— Oracle 应该将 MySQL Community 转让给 Linux Foundation、Apache Foundation 或其他独立实体，允许公平竞争，并专注于他们的 Cloud（Heatwave）和企业级产品。&lt;/strong&gt; 有趣的是，Oracle 已经有了这样的先例：&lt;a href=&#34;https://www.zdnet.com/article/oracle-gives-openoffice-to-apache/&#34;&gt;将 OpenOffice 转交给 Apache 软件基金会&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;另一个很好的例子是 &lt;a href=&#34;https://linkerd.io/&#34;&gt;LinkerD&lt;/a&gt; —— 它由 Buoyant 公司 &lt;a href=&#34;https://linkerd.io/2017/01/24/linkerd-joins-the-cloud-native-computing-foundation/&#34;&gt;引入 CNCF&lt;/a&gt; —— 而 Buoyant 也在持续构建它的扩展版本 — &lt;a href=&#34;https://buoyant.io/linkerd-enterprise&#34;&gt;Buoyant Enterprise for LinkerD&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在这种情况下，维护和发展开源的 MySQL 成为了一个生态问题：我很确信，如果不是向竞争对手拥有的知识产权贡献，AWS 与其他云厂商肯定愿意参与更多。实际上我们确实可以在 PostgreSQL、Linux 或 Kubernetes 项目中看到云厂商在大力参与。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;有了 PostgreSQL；谁还需要 MySQL 呢？&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PostgreSQL 确实是一个出色的数据库，有着活跃的社区，并且近年来发展迅速。然而仍有很多人更偏好于 MySQL ，也有很多现有应用程序仍然在使用 MySQL —— 因此我们希望 MySQL 能继续健康发展，长命百岁。&lt;/p&gt;
&lt;p&gt;当然还有一点：如果 MySQL 死掉了，开源关系型数据库实际上就被 PostgreSQL 一家垄断了，在我看来，垄断并不是一件好事，因为它会导致发展停滞与创新减缓。PostgreSQL 要想进入全盛状态，有一个 MySQL 作为竞争对手并不是坏事。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;难道 MariaDB 不是一个新的、更好的、由社区管理的 MySQL 吗？&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我认为 MariaDB 的存在很好地向 Oracle 施加了压力，迫使其不得不投资 MySQL 。虽然我们没法确定地说如果没有 MariaDB 会怎样，但如果没有它，很可能 MySQL 很久以前就被 Oracle 忽视了。&lt;/p&gt;
&lt;p&gt;话虽如此，虽然 MariaDB 在组织架构上与 Oracle 大有不同，但它也显然不是像 PostgreSQL 那种 “由社区拥有和管理” 的数据库，也没有 PostgreSQL 那样广泛的独立公司贡献者。我认为 MariaDB 确实可以采取一些措施，争取 MySQL 领域的领导地位，但这值得另单一篇文章展开。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结一下&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PostgreSQL 和 MariaDB 是出色的数据库，如果没有它们，开源社区将被绑死在 Oracle 的贼船上，陷入糟糕的境地，但它们今天都还不能完全替代 MySQL。
MySQL 社区的最好结果应该是 Oracle 与达成协议，共同努力，尽可能一起建设好 MySQL。如果不行，MySQL 社区需要一个计划B。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;参考阅读&#34;&gt;参考阅读&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.percona.com/blog/can-oracle-save-mysql/&#34;&gt;Can Oracle Save MySQL?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pigsty.cc/zh/blog/db/sakila-where-are-you-going/&#34;&gt;MySQL性能越来越差，Sakila将何去何从？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pigsty.cc/zh/blog/db/bad-mysql/&#34;&gt;MySQL 的正确性为何如此垃圾？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.percona.com/blog/is-oracle-finally-killing-mysql/&#34;&gt;Is Oracle Finally Killing MySQL?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.percona.com/blog/can-oracle-save-mysql/&#34;&gt;Can Oracle Save MySQL?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.percona.com/blog/sakila-where-are-you-going/&#34;&gt;Sakila, Where Are You Going?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://smalldatum.blogspot.com/2023/10/postgres-vs-mysql-impact-of-cpu.html&#34;&gt;Postgres vs MySQL: the impact of CPU overhead on performance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://smalldatum.blogspot.com/2024/02/perf-regressions-in-mysql-from-5621-to.html&#34;&gt;Perf regressions in MySQL from 5.6.21 to 8.0.36 using sysbench and a small server&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;英文原文&#34;&gt;英文原文&lt;/h2&gt;
&lt;p&gt;I got quite a response to my article on whether &lt;a href=&#34;https://www.percona.com/blog/is-oracle-finally-killing-mysql/&#34;&gt;Oracle is Killing MySQL,&lt;/a&gt; including a couple of great write-ups on The Register (&lt;a href=&#34;https://www.theregister.com/2024/06/11/early_mysql_engineer_questions_whether/&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://www.theregister.com/2024/06/14/oracles_love_and_hate_relationship/&#34;&gt;2&lt;/a&gt;) on the topic. There are a few questions in this discussion that I think are worth addressing.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;AWS and other cloud vendors compete, without giving anything back, what else would you expect Oracle to do ?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First, yes. I think it would be great if AWS and other cloud providers would contribute more to MySQL. We should note, though, that Oracle is a competitor for many of those companies, and there is no “level playing field” when it comes to MySQL (the fact AWS is willing on this unlevel field is another point). Contributing IP to your competitor, especially considering CLA Oracle requires might not be a great business decision. Until Oracle owns that IP, it is reasonable to expect, for Oracle to have most of the burden to maintain, improve, and promote MySQL, too.&lt;/p&gt;
&lt;p&gt;Yes… but what if Oracle is unwilling or unable to be a great MySQL steward anymore and would rather only focus on its cloud version, similar to AWS being solely focused on its RDS and Aurora offerings?  *&lt;strong&gt;There is a solution for that – Oracle should transfer MySQL Community to Linux Foundation, Apache Foundation, or another independent entity, open up the level playing field, and focus on their Cloud (Heatwave) and Enterprise offering.*&lt;/strong&gt; Interestingly enough, there is already a precedent for that with Oracle &lt;a href=&#34;https://www.zdnet.com/article/oracle-gives-openoffice-to-apache/&#34;&gt;transferring OpenOffice to Apache Software Foundation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another great example would be&lt;a href=&#34;https://linkerd.io/&#34;&gt; LinkerD&lt;/a&gt; — which &lt;a href=&#34;https://linkerd.io/2017/01/24/linkerd-joins-the-cloud-native-computing-foundation/&#34;&gt;was brought to CNCF&lt;/a&gt; by Buyant — which continues to build its extended edition&lt;a href=&#34;https://buoyant.io/linkerd-enterprise&#34;&gt; – Buoyant Enterprise for LinkerD&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this case, maintaining and growing open source MySQL will become an ecosystem problem and I’m quite sure AWS and other cloud vendors will participate more when they are not contributing to IP owned by their competitors. We can actually see it with PostgreSQL, Linux, or Kubernetes projects which have great participation from cloud vendors.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;There is PostgreSQL; who needs MySQL anyway?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Indeed, PostgreSQL is a fantastic database with a great community and has been growing a lot recently. Yet there are still a lot of existing applications on MySQL and many folks who prefer MySQL, and so we need MySQL healthy for many years to come. But there is more; if MySQL were to die, we would essentially have a monopoly with popular open source relational databases, and, in my opinion, monopoly is not a good thing as it leads to stagnation and slows innovation. To have PostgreSQL to be as great as it can be it is very helpful to have healthy competition from MySQL!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Isn’t MariaDB a new, better, community-governed MySQL ?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think MariaDB’s existence has been great at putting pressure on Oracle to invest in MySQL. We can’t know for certain “what would have been,” but chances are we would have seen more MySQL neglect earlier if not for MariaDB. Having said that, while organizationally, MariaDB is not Oracle, it is not as cleanly “community owned and governed” as PostgreSQL and does not have as broad a number of independent corporate contributors as PostgreSQL.I think there are steps MariaDB can do to really take a leadership position in MySQL space… but it deserves another article.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To sum things up&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PostgreSQL and MariaDB are fantastic databases, and if not for them, the open source community would be in a very bad bind with Oracle’s current MySQL stewardship. Neither is quite a MySQL replacement today, and the best outcome for the MySQL community would be for Oracle to come to terms and work with the community to build MySQL into the best database it can be. If not, the MySQL community needs to come up with a plan B.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Oracle最终还是杀死了MySQL</title>
      <link>/zh/blog/db/oracle-kill-mysql/</link>
      <pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/oracle-kill-mysql/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/oracle-kill-mysql/featured_hue3f87ec8a4da851341c119062f705f52_45736_640x0_resize_q75_catmullrom.jpg" width="640" height="358"/>]]>
        
        &lt;p&gt;大约15年前，&lt;a href=&#34;https://www.oracle.com/corporate/pressrelease/oracle-buys-sun-042009.html&#34;&gt;Oracle收购了Sun公司&lt;/a&gt;，从而也拥有了MySQL，互联网上关于Oracle何时会“扼杀MySQL”的&lt;a href=&#34;https://www.quora.com/Did-Oracle-buy-MySQL-in-order-to-kill-it&#34;&gt;讨论&lt;/a&gt;此起彼伏。当时流传有各种理论：从彻底扼杀 MySQL 以减少对 Oracle 专有数据库的竞争，到干掉 MySQL 开源项目，只留下 “MySQL企业版” 作为唯一选择。这些谣言的传播对 MariaDB，PostgreSQL 以及其他小众竞争者来说都是好生意，因此在当时传播得非常广泛。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：Percona Blog，Marco Tusa，MySQL 生态的重要贡献者，开发了知名的PT系列工具，MySQL备份工具，监控工具与发行版。&lt;/p&gt;
&lt;p&gt;译者：冯若航，网名 Vonng，Pigsty 作者，PostgreSQL 专家与布道师。下云倡导者，数据库下云实践者。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然而实际上，Oracle 最终把 MySQL 管理得还不错。MySQL 团队基本都保留下来了，由 MySQL 老司机 Tomas Ulin 掌舵。MySQL 也变得更稳定、更安全。许多技术债务也解决了，许多现代开发者想要的功能也有了，例如 JSON支持和高级 SQL 标准功能的支持。&lt;/p&gt;
&lt;p&gt;虽然确实有 &lt;a href=&#34;https://www.mysql.com/products/enterprise/&#34;&gt;“MySQL企业版”&lt;/a&gt; 这么个东西，但它实际上关注的是开发者不太在乎的企业需求：可插拔认证、审计、防火墙等等。虽然也有专有的 GUI 图形界面、监控与备份工具（例如 MySQL 企业监控），但业内同样有许多开源和商业软件竞争者，因此也说不上有特别大的供应商锁定。&lt;/p&gt;
&lt;p&gt;在此期间我也常为 Oracle 辩护，因为许多人都觉得 MySQL 会遭受虐待，毕竟 —— Oracle 的名声确实比较糟糕。&lt;/p&gt;
&lt;p&gt;不过在那段期间，我认为 Oracle 确实遵守了这条众所周知的开源成功黄金定律：“&lt;strong&gt;转换永远不应该妨碍采用&lt;/strong&gt;”&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;conversion.png&#34; src=&#34;/zh/blog/db/oracle-kill-mysql/conversion.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：“Conversion should never compromise Adoption” 这句话指在开发或改进开源软件时，转换或升级过程中的任何变动都不应妨碍现有用户的使用习惯或新用户的加入。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然而随着近些年来 Oracle 推出了 “MySQL Heatwave”（一种 MySQL 云数据库服务），事情开始起变化了。&lt;/p&gt;
&lt;p&gt;MySQL Heatwave 引入了许多 MySQL 社区版或企业版中没有的功能，如 加速分析查询 与 机器学习。&lt;/p&gt;
&lt;p&gt;在“&lt;strong&gt;分析查询&lt;/strong&gt;”上，MySQL 的问题相当严重，到现在甚至都还不支持 &lt;strong&gt;并行查询&lt;/strong&gt;。市场上新出现的 CPU 核数越来越多，都到几百个了，但单核性能并没有显著增长，而不支持并行严重制约了 MySQL 的分析性能提升 —— 不仅仅影响分析应用的查询，日常事务性应用里面简单的 &lt;code&gt;GROUP BY&lt;/code&gt; 查询也会受影响。（备注：MySQL 8 对 DDL 有一些 &lt;a href=&#34;https://dev.mysql.com/blog-archive/mysql80-innodb-parallel-threads-ddl/&#34;&gt;并行支持&lt;/a&gt;，但查询没有这种支持）&lt;/p&gt;
&lt;p&gt;这么搞的原因，是不是希望用户能够有更多理由去买 MySQL Heatwave？但或者，人们其实也可以直接选择用分析能力更强的 PostgreSQL 和 ClickHouse。&lt;/p&gt;
&lt;p&gt;另一个开源 MySQL 极为拉垮的领域是 &lt;strong&gt;向量检索&lt;/strong&gt;。其他主流开源数据库都已经添加了向量检索功能，MariaDB 也正在努力实现这个功能，但就目前而言，MySQL 生态里只有云上限定的  &lt;a href=&#34;https://blogs.oracle.com/mysql/post/introducing-vector-store-and-generative-ai-in-mysql-heatwave&#34;&gt;MySQL Heatwave&lt;/a&gt; 才有这个功能，这实在是令人遗憾。&lt;/p&gt;
&lt;p&gt;然后就是最奇怪的决策了 —— Javascript 功能只在企业版中提供，我认为 MySQL 应该尽可能去赢得 Javascript 开发者的心，而现在很多 JS 开发者都已经更倾向于更简单的 MongoDB 了。&lt;/p&gt;
&lt;p&gt;我认为这些决策都违背了前面提到的开源黄金法则 —— 它们显然限制了 MySQL 的采用与普及 —— 不论是这些“XX限定”的特定功能，还是对 MySQL 未来政策变化的担忧。&lt;/p&gt;
&lt;p&gt;这还没完，MySQL 的性能也出现了严重下降，也许是因为 &lt;a href=&#34;https://smalldatum.blogspot.com/2024/04/sysbench-on-small-server-mariadb-and.html&#34;&gt;多年来无视性能工程部门&lt;/a&gt;。与MySQL 5.6 相比，MySQL 8.x 单线程简单工作负载上的性能出现了大幅下滑。你可能会说增加功能难免会以牺牲性能为代价，但 MariaDB 的性能退化要轻微得多，而 PostgreSQL 甚至能在 &lt;a href=&#34;https://smalldatum.blogspot.com/2023/10/postgres-vs-mysql-impact-of-cpu.html&#34;&gt;&lt;strong&gt;新增功能的同时 显著提升性能&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;显然，我不知道 Oracle 管理团队是怎么想的，也不能说这到底是蠢还是坏，但过去几年的这些产品决策，显然不利于 MySQL 的普及，特别是在同一时间，PostgreSQL 在引领用户心智上高歌猛进，根据 DB-Engines 热度排名，大幅缩小了与 MySQL 的差距；而根据 &lt;a href=&#34;https://survey.stackoverflow.co/2023/#technology-most-popular-technologies&#34;&gt;StackOverflow开发者调查&lt;/a&gt; ，甚至已经超过 MySQL 成为最流行的数据库了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-engine.png&#34; src=&#34;/zh/blog/db/oracle-kill-mysql/db-engine.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;无论如何，除非甲骨文转变其关注点，顾及现代开发者对关系数据库的需求，否则 MySQL 迟早要完 —— 无论是被 Oracle 的行为杀死，还是被 Oracle 的不作为杀死。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;参考阅读&#34;&gt;参考阅读&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://pigsty.cc/zh/blog/db/sakila-where-are-you-going/&#34;&gt;MySQL性能越来越差，Sakila将何去何从？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pigsty.cc/zh/blog/db/bad-mysql/&#34;&gt;MySQL 的正确性为何如此垃圾？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.percona.com/blog/is-oracle-finally-killing-mysql/&#34;&gt;Is Oracle Finally Killing MySQL?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.percona.com/blog/can-oracle-save-mysql/&#34;&gt;Can Oracle Save MySQL?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.percona.com/blog/sakila-where-are-you-going/&#34;&gt;Sakila, Where Are You Going?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://smalldatum.blogspot.com/2023/10/postgres-vs-mysql-impact-of-cpu.html&#34;&gt;Postgres vs MySQL: the impact of CPU overhead on performance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://smalldatum.blogspot.com/2024/02/perf-regressions-in-mysql-from-5621-to.html&#34;&gt;Perf regressions in MySQL from 5.6.21 to 8.0.36 using sysbench and a small server&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: MySQL性能越来越差，Sakila将何去何从？</title>
      <link>/zh/blog/db/sakila-where-are-you-going/</link>
      <pubDate>Wed, 19 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/sakila-where-are-you-going/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/sakila-where-are-you-going/featured_hu8ed8690932d8569a6d213e2ccba32157_57485_640x0_resize_q75_catmullrom.jpg" width="640" height="274"/>]]>
        
        &lt;p&gt;在 Percona，我们时刻关注用户的需求，并尽力满足他们。我们特别监控了 MySQL 版本的分布和使用情况，发现了一个引人注目的趋势：从版本 5.7 迁移到 8.x 的步伐明显缓慢。更准确地说，许多用户仍需坚持使用 5.7 版本。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;mysql_versions_adoption_trend.png&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/mysql_versions_adoption_trend.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;基于这一发现，我们采取了几项措施。首先，我们与一些仍在使用 MySQL 5.7 的用户聊了聊，探究他们不想迁移到 8.x 的原因。为此，我们制定了 EOL 计划，为 5.7 版本提供&lt;a href=&#34;https://www.percona.com/post-mysql-5-7-eol-support&#34;&gt;延长的生命周期支持&lt;/a&gt;，确保需要依赖旧版本、二进制文件及代码修复的用户能够得到专业支持。&lt;/p&gt;
&lt;p&gt;同时，我们对不同版本的 MySQL 进行了广泛测试，以评估是否有任何性能下降。虽然测试尚未结束，但我们已经收集了足够的数据，开始绘制相关图表。本文是对我们测试结果的初步解读。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;剧透警告：对于像我这样热爱 Sakila 的人来说，这些发现可能并不令人高兴。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;译者注：Sakila 是 MySQL 的吉祥物海豚&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：Percona Blog，Marco Tusa，MySQL 生态的重要贡献者，开发了知名的PT系列工具，MySQL备份工具，监控工具与发行版。&lt;/p&gt;
&lt;p&gt;译者：冯若航，网名 Vonng，Pigsty 作者，PostgreSQL 专家与布道师。下云倡导者，数据库下云实践者。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;测试&#34;&gt;测试&lt;/h2&gt;
&lt;h3 id=&#34;假设&#34;&gt;假设&lt;/h3&gt;
&lt;p&gt;测试的方法五花八门，我们当然明白，测试结果可能因各种要素而异，（例如：运行环境， MySQL 服务器配置）。但如果我们在同样的平台上，比较同一个产品的多个版本，那么可以合理假设，在不改变 MySQL 服务器配置的前提下，影响结果的变量可以最大程度得到控制。&lt;/p&gt;
&lt;p&gt;因此，我首先根据 &lt;strong&gt;MySQL 默认配置&lt;/strong&gt; 运行性能测试，这里的工作假设很明确，你发布产品时使用的默认值，通常来说是最安全的配置，也经过了充分的测试。&lt;/p&gt;
&lt;p&gt;当然，我还做了一些 &lt;a href=&#34;https://github.com/Tusamarco/blogs/blob/master/sakila_where_are_you_going/config_changes.txt&#34;&gt;&lt;strong&gt;配置优化&lt;/strong&gt;&lt;/a&gt; ，并评估优化后的参数配置会如何影响性能。&lt;/p&gt;
&lt;h3 id=&#34;我们进行哪些测试&#34;&gt;我们进行哪些测试？&lt;/h3&gt;
&lt;p&gt;我们跑了 &lt;a href=&#34;https://github.com/akopytov/sysbench&#34;&gt;sysbench&lt;/a&gt; 与 &lt;a href=&#34;https://www.tpc.org/tpcc/&#34;&gt;TPC-C Like&lt;/a&gt; 两种 Benchmark。
可以在这里找到完整的&lt;a href=&#34;https://github.com/Tusamarco/benchmarktools/blob/main/docs/plan.md&#34;&gt;测试方法与细节&lt;/a&gt;，实际执行的命令则可以在这里找到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Tusamarco/benchmarktools/blob/main/software/fill_sysbench_map.sh&#34;&gt;sysbench&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Tusamarco/benchmarktools/blob/main/software/fill_tpcc_map.sh&#34;&gt;TPC-C&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;结果&#34;&gt;结果&lt;/h2&gt;
&lt;p&gt;我们跑完了上面一整套测试，&lt;a href=&#34;https://github.com/Tusamarco/blogs/tree/master/sakila_where_are_you_going&#34;&gt;所有的结果都可以在这里找到&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;但为了保持文章的简洁和高质量，我在这里只对 Sysbench 读写测试和 TPC-C 的结果进行分析与介绍。 之所以选择这两项测试，是因为它们直接且全面地反映了 MySQL 服务器的表现，同时也是最常见的应用场景。其他测试更适合用来深入分析特定的问题。&lt;/p&gt;
&lt;p&gt;在此报告中，下面进行的 sysbench 读写测试中，写操作比例约为 36%，读操作比例约为 64%，读操作由点查询和范围查询组成。而在 TPC-C 测试中，读写操作的比例则均为 50/50 %。&lt;/p&gt;
&lt;h3 id=&#34;sysbench-读写测试&#34;&gt;sysbench 读写测试&lt;/h3&gt;
&lt;p&gt;首先我们用默认配置来测试不同版本的 MySQL。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;小数据集，默认配置：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;mysql_default_small.png&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/mysql_default_small.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;小数据集，优化后的结果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;mysql_optimized_small.png&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/mysql_optimized_small.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;大数据集，默认配置：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;mysql_default_large.png&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/mysql_default_large.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;大数据集，优化配置：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;mysql_optimized_large.png&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/mysql_optimized_large.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;前两幅图表很有趣，但很显然说明了一点，我们不能拿&lt;strong&gt;默认配置&lt;/strong&gt;来测性能，我们可以用它们作为基础，从中找出更好的默认值。&lt;/p&gt;
&lt;p&gt;Oracle 最近决定在 8.4 中修改许多参数的默认值，也证实了这一点（&lt;a href=&#34;https://lefred.be/content/mysql-8-4-lts-new-production-ready-defaults-for-innodb/&#34;&gt;参见文章&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;有鉴于此，我将重点关注通过优化参数配置后进行的性能评测结果。&lt;/p&gt;
&lt;p&gt;看看上面的图表，我们不难看出：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用默认值的 MySQL 5.7 ，在两种情况（大小数据集）下的表现都更好。&lt;/li&gt;
&lt;li&gt;MySQL 8.0.36 因为默认配置参数不佳，使其在第一种（小数据集）的情况表现拉垮。但只要进行一些优化调整，就能让它的性能表现超过 8.4，并更接近 5.7。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;tpc-c-测试&#34;&gt;TPC-C 测试&lt;/h3&gt;
&lt;p&gt;如上所述，TPC-C 测试应为写入密集型，会使用事务，执行带有 JOIN，GROUP，以及排序的复杂查询。&lt;/p&gt;
&lt;p&gt;我们使用最常用的两种 &lt;a href=&#34;/zh/blog/db/bad-mysql&#34;&gt;&lt;strong&gt;隔离等级&lt;/strong&gt;&lt;/a&gt;，可重复读（Repeatable Read），以及读已提交（Read Committed），来运行 TPC-C 测试。&lt;/p&gt;
&lt;p&gt;尽管我们在多次重复测试中遇到了一些问题，但都是因为一些锁超时导致的随机问题。因此尽管图中有一些空白，但都不影响大趋势，只是压力打满的表现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TPC-C，优化配置，RR隔离等级：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;tpcc-rr-optimized.png&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/tpcc-rr-optimized.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TPC-C，优化配置，RC隔离等级：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;tpcc-rc-optimized.png&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/tpcc-rc-optimized.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在本次测试中，我们可以观察到，MySQL 5.7 的性能比其他 MySQL 版本要更好。&lt;/p&gt;
&lt;h3 id=&#34;与-percona-的-mysql-和-mariadb-比会怎样&#34;&gt;与 Percona 的 MySQL 和 MariaDB 比会怎样？&lt;/h3&gt;
&lt;p&gt;为了简洁起见，我将仅在这里介绍优化参数配置的测试，原因上面说过了，默认参数没毛用没有。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;sysbench读写，小数据集的测试结果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;vs-percona-small.png&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/vs-percona-small.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;sysbench读写，大数据集的测试结果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;vs-percona-large.png&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/vs-percona-large.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当我们将 MySQL 的各个版本与 Percona Server MySQL 8.0.36 以及 MariaDB 11.3 进行对比时，
可以看到 MySQL 8.4 只有和 MariaDB 比时表现才更好，与 MySQL 8.0.36 比较时仍然表现落后。&lt;/p&gt;
&lt;h4 id=&#34;tpc-c&#34;&gt;TPC-C&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TPC-C，RR隔离等级的测试结果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;tpcc-rr-optimized-all.png&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/tpcc-rr-optimized-all.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TPC-C，RC隔离等级的测试结果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;tpcc-rc-optimized-all.png&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/tpcc-rc-optimized-all.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;正如预期的那样，MySQL 8.4 在这里的表现也不佳，只有 MariaDB 表现更差来垫底。
顺便一提，Percona Server for MySQL 8.0.36 是唯一能处理好并发争用增加的 MySQL。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;这些测试说明了什么&#34;&gt;这些测试说明了什么？&lt;/h2&gt;
&lt;p&gt;坦白说，我们在这里测出来的结果，也是我们大多数用户的亲身经历 —— &lt;strong&gt;MySQL 的性能随着版本增加而下降&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;当然，MySQL 8.x 有一些有趣的新增功能，但如果你将性能视为首要且最重要的主题，那么 MySQL 8.x 并没有更好。&lt;/p&gt;
&lt;p&gt;话虽如此，我们必须承认 —— 大多数仍在使用 MySQL 5.7 的人可能是对的（有成千上万的人）。为什么要冒着极大的风险进行迁移，结果发现却损失了相当大一部分的性能呢？&lt;/p&gt;
&lt;p&gt;关于这一点，可以用 TPC-C 测试结果来说明，我们可以把数据转换为每秒事务数吞吐量，然后比较性能损失了多少：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TPC-C，RR隔离等级，MySQL 8.4 的性能折损：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;tpcc_trx_lost_rr.jpg&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/tpcc_trx_lost_rr.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TPC-C，RC隔离等级，MySQL 8.4 的性能折损：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;tpcc_trx_lost_rc.jpg&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/tpcc_trx_lost_rc.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到，在两项测试中，MySQL 8.x 的性能劣化都非常明显，而其带来的好处（如果有的话）却并不显著。&lt;/p&gt;
&lt;p&gt;使用数据的绝对值：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TPC-C，RR隔离等级，MySQL 8.4 的性能折损：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;tpcc_trx_lost_rr-1.jpg&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/tpcc_trx_lost_rr-1.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TPC-C，RC隔离等级，MySQL 8.4 的性能折损：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;tpcc_trx_lost_rc-1.jpg&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/tpcc_trx_lost_rc-1.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;在这种情况下，我们需要问一下自己：我的业务可以应对这样的性能劣化吗？&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一些思考&#34;&gt;一些思考&lt;/h2&gt;
&lt;p&gt;当年 MySQL 被卖给 SUN Microsystems 时，我就在 MySQL AB 工作，我对这笔收购非常不高兴。
当 Oracle 接管 SUN 时，我非常担心 Oracle 可能会决定干掉 MySQL，我决定加入另一家公司继续搞这个。&lt;/p&gt;
&lt;p&gt;此后几年里，我改了主意，开始支持和推广 Oracle 在 MySQL 上的工作。从各种方面来看，我现在依然还在支持和推广它。&lt;/p&gt;
&lt;p&gt;他们在规范开发流程方面做得很好，代码清理工作也卓有成效。但是，其他代码上却没啥进展，我们看到的性能下降，就是这种缺乏进展的代价；请参阅 Peter 的文章《&lt;a href=&#34;/zh/blog/db/oracle-kill-mysql&#34;&gt;Oracle 最终会杀死 MySQL 吗？》。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另一方面，我们不得不承认 Oracle 确实在 OCI/MySQL/Heatwave 这些产品的性能和功能上投资了很多 —— 只不过这些改进没有体现在 MySQL 的代码中，无论是社区版还是企业版。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;再次强调，我认为这一点非常可悲，但我也能理解为什么&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;当 AWS 和 Google 等云厂商使用 MySQL 代码、对其进行优化以供自己使用、赚取数十亿美元，甚至不愿意将代码回馈时，凭什么 Oracle 就要继续免费优化 MySQL 的代码？&lt;/p&gt;
&lt;p&gt;我们知道这种情况已经持续了很多年了，我们也知道这对开源生态造成了极大的负面影响。&lt;/p&gt;
&lt;p&gt;MySQL 只不过是更大场景中的一块乐高积木而已，在这个场景中，&lt;strong&gt;云计算公司正在吞噬其他公司的工作成果，自己用来发大财&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我们又能做什么？我只能希望我们能很快看到不一样的东西：开放代码，投资项目，帮助像 MySQL 这样的社区收复失地。&lt;/p&gt;
&lt;p&gt;与此同时，我们必须承认，许多客户与用户使用 MySQL 5.7 是有非常充分的理由的。
在我们能解决这个问题之前，他们可能永远也不会决定迁移，或者，如果必须迁移的话，迁移到其他替代上，比如 PostgreSQL。&lt;/p&gt;
&lt;p&gt;然后，Sakila 将像往常一样，因为人类的贪婪而缓慢而痛苦地死去，从某种意义上说，这种事儿并不新鲜，但很糟糕。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;fin.jpg&#34; src=&#34;/zh/blog/db/sakila-where-are-you-going/fin.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;祝大家使用 MySQL 快乐。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;参考阅读&#34;&gt;参考阅读&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.percona.com/blog/sakila-where-are-you-going/&#34;&gt;Sakila, Where Are You Going?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://smalldatum.blogspot.com/2024/02/perf-regressions-in-mysql-from-5621-to.html&#34;&gt;Perf regressions in MySQL from 5.6.21 to 8.0.36 using sysbench and a small server&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 让PG停摆一周的大会：PGCon.Dev 2024 参会记</title>
      <link>/zh/blog/pg/pgcondev-2024/</link>
      <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/pgcondev-2024/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/pgcondev-2024/featured_hu0a21caae51d34f0e019bb67160944854_248465_640x0_resize_q75_catmullrom.jpg" width="640" height="480"/>]]>
        
        &lt;p&gt;PGCon.Dev 的前身是 PGCon —— 最知名的 PostgreSQL Hacker 年度聚会，也可以说是决定 PostgreSQL 未来的一场会。从 2007 年成立以来，一直都是在加拿大渥太华举办至今。
这次会议有些特殊，原来的主办者 Dan 交班给下一届大会组织者，举办地点也转移到了温哥华市的 SFU 港区活动中心，算是新班组开门红第一次大会，自然更为隆重。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;全都来参会了谁还在写代码&#34;&gt;全都来参会了，谁还在写代码？&lt;/h2&gt;
&lt;p&gt;有多隆重呢？PG 核心组的 Peter Eisentraut 在会后做了一个统计，在这次 PGCon.Dev 期间 PostgreSQL 一次代码提交都没有发生，出现了&lt;a href=&#34;https://peter.eisentraut.org/blog/2024/06/04/how-engaging-was-pgconfdev-really&#34;&gt;二十年来持续时间最长的停摆&lt;/a&gt; —— 整整六天半！为啥，因为开发者全都来参会啦！&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;intro.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/intro.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;考虑到前几次中断都发生在二十年前的项目早期……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;虽然我已经拥抱 PostgreSQL 十年了，但线下现场参加全球 PG Hacker 们的会议还是第一次，所以我非常感谢组织团队为组织这次活动所做的工作。&lt;/p&gt;
&lt;p&gt;PGCon.Dev 2024 已经于5月31日晚正式结束，理论上本文章本应在大会闭幕时写就，不过在紧接着探索温哥华与班夫国家公园的旅途中，我确实在高密度的旅途中把这件事不厚道地搁置了 那么今天就补上参会的见闻与记录吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;第零天扩展生态峰会&#34;&gt;第零天：扩展生态峰会&lt;/h2&gt;
&lt;p&gt;大会的第零天是领导层会议，我注册了下午的 Extension Ecosystem Summit 扩展生态峰会。&lt;/p&gt;
&lt;p&gt;说起来，这个扩展生态峰会也许跟我还有点关系。两个月前我写了一篇文章《&lt;a href=&#34;/zh/blog/pg/pg-eat-db-world&#34;&gt;PostgreSQL正在吞噬数据库世界&lt;/a&gt;》，主题是 PostgreSQL 的繁荣扩展生态是其独一无二的特点与成功的关键要素。
写完后将其翻译成了英文《&lt;a href=&#34;/zh/blog/pg/pg-eat-db-world/&#34;&gt;Postgres is eating the database world&lt;/a&gt;》发到了 &lt;a href=&#34;https://pigsty.cc/zh/blog/&#34;&gt;Pigsty 博客&lt;/a&gt;， &lt;a href=&#34;https://medium.com/@fengruohang/postgres-is-eating-the-database-world-157c204dcfc4&#34;&gt;Medium&lt;/a&gt; 与 &lt;a href=&#34;https://news.ycombinator.com/item?id=39759539&#34;&gt;HackNews&lt;/a&gt; 上，总共有几十万的阅览量，基本应该覆盖了整个 PG 社区。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/@fengruohang/postgres-is-eating-the-database-world-157c204dcfc4&#34;&gt;&lt;img alt=&#34;ecosystem.jpg&#34; src=&#34;/zh/blog/pg/pgcondev-2024/ecosystem.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此前，扩展机制的重要性并没有达成共识，即使在 PG 社区与一些资深成员的眼中，关于扩展他们只是觉得 PostGIS 和 PGVector 好像很不错 —— 前者是地理空间数据库的事实标准，后者是AI领域当红炸子鸡 —— 向量数据库的砸盘掀桌者。
但 PG 生态中强大的扩展绝不仅仅只有这两个，在抛出了这个极为繁荣的 PG 扩展生态 Landscape 后，立即引起了社区成员的极大兴趣与关注，很快关于PG扩展的讨论发酵了起来。&lt;/p&gt;
&lt;p&gt;在这次扩展峰会之前，PG 社区已经举办了&lt;a href=&#34;https://www.eventbrite.com/e/postgres-extension-ecosystem-mini-summit-tickets-851127263557&#34;&gt;六次迷你扩展峰会&lt;/a&gt;对此事进行了密集的讨论，六位主讲嘉宾兼主持人在最近两个月中，从不同的角度介绍了关于扩展生态的建设工作，并阐述了对 PG 扩展生态发展的愿景，&lt;a href=&#34;https://www.youtube.com/playlist?list=PL11N188AYb_aT6ulbJfrQJJziWb012jG3&#34;&gt;会议的视频回放&lt;/a&gt;可以在 Youtube 上看到。&lt;/p&gt;
&lt;p&gt;在这次大会中，有许多与扩展生态，可扩展性有关的议题，甚至还有一个专门的扩展峰会，也许确实是有点关系的。这场扩展峰会分了上下两场，每场都有几个 Topic，大家挑选感兴趣的主题参与。
我挑了 David Wheeler 的 Binary Packing 主题分会参与讨论，另外四个参与者是 PGDG Yum 仓库维护者 Devrim，Debian 仓库维护者大法师 Tomasz Rybak，以及 Neon 的 PG 主要贡献者 Andreas Scherbaum。都是些老前辈，好在我也算是 YUM/APT 仓库的建设者/维护者，能实质参与到讨论中。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;extension-summit.jpg&#34; src=&#34;/zh/blog/pg/pgcondev-2024/extension-summit.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;在上半场，来自 Temob 的 David 一直想做一个 PGXN v2，作为 PG 生态扩展分发的标准，搞一些 OCI 构建扩展的花活。当然，现有事实标准的维护者 Devrim 和 Tomasz 肯定是不乐意的。我支持这两位老爷子，毕竟我做的是 PG 发行版，内核组的活儿跟我直接关系不大，但 YUM/APT 仓库的负责人跟我的关系最紧密，RPM / Deb 包分发扩展已经是一种相当成熟可靠的方式了，整 OCI 这些我个人觉得意义不大。&lt;/p&gt;
&lt;p&gt;下半场，我参加了 Omnigres 创始人 Yurii Rashkovskii 主持的 Extension in Core 分会场，讨论了关于扩展目录结构，元数据，命名冲突，版本控制，二进制分发的一些想法。并且和负责 PG RPM 仓库的 Devrim 老爷子聊了很多关于扩展的问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/pgcondev-2024/devrim-keith.gif&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在扩展峰会后，Devrim 打出 “Keith粉丝团” 的 Slogan&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;第一天主题分享与酒吧社交&#34;&gt;第一天：主题分享与酒吧社交&lt;/h2&gt;
&lt;p&gt;PGCon.Dev 最核心的部分当然是大会议题，在  &lt;a href=&#34;https://mp.weixin.qq.com/s/4t1thBCDVS8y9dHiOxPZaA&#34;&gt;PG大会2024开幕&lt;/a&gt; 中我已经选定了感兴趣的主题，绝大多数分享都没有让我失望 —— 比起国内各种 XX 大会无聊的产品宣介，无关痛痒的技术细节与架构分享，PGConf.Dev 的分享要有趣且扎实得太多了。&lt;/p&gt;
&lt;p&gt;5月28号 / 周二举行了 PostgreSQL 开发者与领导层闭门会议，以及  &lt;a href=&#34;https://mp.weixin.qq.com/s/C0YyE52KbLLbnG1C2FqGRg&#34;&gt;PGCon.Dev 扩展生态峰会&lt;/a&gt;。大会正式的议程在周三，也就是 29 号开始。&lt;/p&gt;
&lt;p&gt;开场由 &lt;a href=&#34;https://jkatz05.com/&#34;&gt;Jonathan Katz&lt;/a&gt; 与 &lt;a href=&#34;https://postgresql.life/post/melanie_plageman/&#34;&gt;Melanie Plageman&lt;/a&gt; 主持，前者是 PG 核心组七人之一，AWS RDS 的首席产品经理；后者是新近成为 PG 提交者，来自微软的罕有的女性PG开发者。当然，开幕式上最精彩的一幕，就是发现了著名 &lt;code&gt;xz&lt;/code&gt; 后门的 &amp;ldquo;英雄开发者&amp;rdquo; Andres Freund 被拉上了台，披上了超级英雄的披风。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;andres-hero.jpeg&#34; src=&#34;/zh/blog/pg/pgcondev-2024/andres-hero.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;开幕式之后就开始了常规 Session Track，目前还没有会议的视频放出，但我相信以加拿大的办事效率，“用不了多久” 就能在 Youtube 上看到了。大部分的 Session 都是三选一的。我选了几个场次，下面是摘要：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;将扩展的边界推向新边疆&#34;&gt;将扩展的边界推向新边疆&lt;/h3&gt;
&lt;p&gt;第一场来自 Yurii ， “将 PG 扩展的边界推向新边疆”。讨论的内容其实是 PostgreSQL 应该提供什么样的扩展 API ？ PostgreSQL 有着极佳的可扩展性，但这一套 API 已经是十几年前 9.x 留下的了。尤里的提议旨在解决现有扩展机制的一些问题。比如：如何同时安装两个不同版本的扩展插件？如何避免一部分扩展插件安装后需要重启数据库的问题？如何让PG像管理数据一样管理扩展？如何处理扩展的依赖关系？&lt;/p&gt;
&lt;p&gt;Yurii 和 Viggy 创办了 &lt;a href=&#34;https://omnigres.com/&#34;&gt;Omnigres&lt;/a&gt; ，旨在让 PostgreSQL 直接成为一个应用开发平台（比如直接在数据库里跑 HTTP 服务器等任务）。为了做到这一点，他们为 PostgreSQL 设计的一套新的扩展 API 与管理机制。我认为一些改进很有创新性，是 PG 内核扩展机制的前沿探索实践。&lt;a href=&#34;https://slides.omnigr.es/pushing-boundaries-pgconfdev2024/1&#34;&gt;PDF地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;yurii-extension.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/yurii-extension.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我和 Viggy 与 Yurii 聊的非常愉快，Yurii 手把手带我编译安装试用了一把 Omni。而我也准备在下一个 Pigsty 的版本中，就加入对 Omni 系列扩展的支持，让这个强大的应用开发框架开箱即用。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;数据库中的无政府状态&#34;&gt;数据库中的无政府状态&lt;/h3&gt;
&lt;p&gt;第二场分享来自学术界（CMU），师从网红教授 Andy Pavlo 的阿比盖尔·金，主题为：数据库中的无政府状态 —— &lt;a href=&#34;https://abigalekim.github.io/assets/pdf/Anarchy_in_the_Database_PGConfDev2024.pdf&#34;&gt;数据库管理系统可扩展性的调查与评估&lt;/a&gt;。我对这个主题非常感兴趣，因为 Pigsty 将 PG可扩展性为首要价值主张，收录了 255 个扩展插件，而 Kim 的这个研究带来了一些有趣的发现。&lt;/p&gt;
&lt;p&gt;例如，&lt;strong&gt;PostgreSQL 是可扩展性最强的 DBMS&lt;/strong&gt;，在全部十项扩展点上支持其中九种（紧随其后的是 DuckDB，和PG同为我最看好的两款DBMS）。根据 Kim 的统计，PG 生态有 375+ 可用扩展，远远甩开其他数据库一个数量级。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;kim-extensibility.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/kim-extensibility.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;更有价值的是，Kim 定量分析了这些扩展之间的兼容性水平，得到了一个兼容性矩阵，并有一些有趣的发现 —— 例如，最为强大的 TimescaleDB 和 Citus 最容易与其他扩展发生冲突。而这样的信息对于用户与发行版维护者来说是非常有价值的。&lt;/p&gt;
&lt;p&gt;我跟 Kim 聊天时打趣说，你的这个研究大大的好 —— 可以有理有据地用数据说话，宣称 PostgreSQL 可扩展性天下无敌了。&lt;a href=&#34;https://abigalekim.github.io/assets/pdf/Anarchy_in_the_Database_PGConfDev2024.pdf&#34;&gt;PDF在线地址&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;postgresql是如何被误用与滥用的&#34;&gt;PostgreSQL是如何被误用与滥用的&lt;/h3&gt;
&lt;p&gt;下午的第一场，我听了来自 CrunchyData 的 Karen Jex 的分享，这是少有的来自用户（一位DBA，还是女性DBA，确实非常罕见），而不是开发者的分享。Karen 分享了一堆 PG 初学者会犯的可笑错误。Karen 的分享并没有什么我不知道的新知识，但确实让我确信了 —— 世界哪儿的初学者都一样，都会犯这些可笑的错误。但这样的视角对于 PG Hacker 来说确实是很新鲜的，很多大佬都听得津津有味。&lt;/p&gt;
&lt;h3 id=&#34;postgresql与人工智能生态&#34;&gt;PostgreSQL与人工智能生态&lt;/h3&gt;
&lt;p&gt;下午的第二场，Bruce Momjian 分享了这个主题。Bruce 是 PGDG 发起人，从一开始到现在一直都是 PG 核心委员，也是中国各种 PG 会议的老熟人与常客了。&lt;/p&gt;
&lt;p&gt;我本来以为分享的内容会是介绍一下PG生态的向量数据库扩展，或者类似 PGML，PG4ML 这样的机器学习扩展插件，结果竟然是如何利用 PostgreSQL 的多维数组与查询，实现神经网络的推理与训练。这样的把戏很好玩儿，但我很早也折腾过，没啥实用价值。&lt;/p&gt;
&lt;p&gt;和 Bruce 吃饭聊天的时候也提到这个话题，Bruce 解释说，Jonathan Katz 为了介绍PG生态的向量数据库扩展 PGVector，需要一个话题来作为综述引子，于是就把 Bruce 拉壮丁过来灌水了，哈哈… &lt;a href=&#34;https://momjian.us/main/writings/pgsql/AI.pdf&#34;&gt;PDF地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;bruce-ai.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/bruce-ai.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让我看看，Bruce在偷偷写什么代码？竟然是 ArgParser&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;会后和 Bruce 聊了很多有趣的的话题，往年国内 PG 技术大会都喜欢请 Bruce 过来，或者远程做一个开幕分享。Bruce 说他很非常想再来中国，不过现在国际形势冲突加剧，美国大使馆发布的中国旅游风险等级太高，他也不敢过来了，让人遗憾。&lt;/p&gt;
&lt;h3 id=&#34;构建pb级别的postgresql部署&#34;&gt;构建PB级别的PostgreSQL部署&lt;/h3&gt;
&lt;p&gt;下午的第三场，我听了 Chris Travers 的分享：他们原来用 ElasticSearch 存数据，保留30天，数据量1PB，体验极差，基本上处于不可用状态，也难以维护。于是他们改用了一个水平分片的 PostgreSQL 集群完美地解决了问题 —— 总共存储了 10 PB 的数据。&lt;/p&gt;
&lt;p&gt;通常来说出于各种因素，单机 PostgreSQL 的舒适区上界在几十TB ～ 几百TB 的数量级，PB 量级的部署我只听说过一例。即使是水平分片集群，10PB 量级也是极其罕见的了。尽管依然是中规中矩的分表/分布式实践，但数据量级确实让人印象深刻。&lt;a href=&#34;https://www.pgevents.ca/events/pgconfdev2024/sessions/session/135/slides/30/Bagger_Talk%20(3).pdf&#34;&gt;PDF地址&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;临时加场当数据库遇上新硬件&#34;&gt;临时加场：当数据库遇上新硬件&lt;/h3&gt;
&lt;p&gt;毫不夸张地说，这是本场最佳演讲，没有之一，也是我听过所有现场演讲中最富有激情与感染力的。演讲人 Margo Seltzer 是 UBC 的教授，以前是哈佛的教授，美国国家工程院院士，是数据库石破天祖师爷的亲传弟子，BerkeleyDB 的作者，她的老公也很有名，是 BSD / WiredTiger / nvi 的作者 Keith Bostic。&lt;/p&gt;
&lt;p&gt;Margo 的演讲极具激情与感染力，并一针见血地指出了数据库领域面临的几个核心问题。例如，数据库的瓶颈已经不再是磁盘的IO性能，而是主内存的速度瓶颈。而硬件领域的趋势 ——  &lt;strong&gt;HBM&lt;/strong&gt;，&lt;strong&gt;CXL&lt;/strong&gt; 也许是解决这些问题的答案，但具体怎么做，那就是在座的各位 PG Hacker 需要面对的挑战了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;margo.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/margo.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在各种国内会议听多了院士，教授念经一样的分享报告，Margo 院士的演讲风格给我带来了耳目一新的感觉，并极大地感染鼓舞了我。大会视频放出后，我强烈建议各位可以听一听她的演讲。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;酒吧社交活动&#34;&gt;酒吧社交活动&lt;/h3&gt;
&lt;p&gt;Margo 的分享结束后便是大会的官方 Social Event，在会场一街之隔的 Waterfront 车站里的 Rogue Kitchen &amp;amp; Wetbar， 位置极好 —— 窗外就是温哥华地标，太平洋海景。&lt;/p&gt;
&lt;p&gt;大家可以随意交流，结识新老朋友。我和许多人都聊了很多有趣的话题，比如 Devrim，Tomasz，Yurii，Keith 等等等等。同样作为发行版/RPM维护者，我和 Devrim 老爷子尤其详谈甚欢，许多积存已久的问题也得到了想要的答案。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;social-bar.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/social-bar.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;很多人都是老朋友了，难得相见一面，都聚在一起聊天。两杯啤酒下肚，许多人都打开心扉。再加上在场的都是 PG 同好，陌生人只要对个眼神也可以很轻松地聊起来。&lt;/p&gt;
&lt;p&gt;于是在三四个小时的觥筹交错中，我和在场的 PG Hacker 基本都混了个熟脸。餐后 Melanie 喊我们去玩桌游，但我的英语做个专业演讲还行，但还没好到和 Native Speaker 玩猜词游戏和狼人杀的程度，甚是遗憾。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;第二天的主题与活动&#34;&gt;第二天的主题与活动&lt;/h2&gt;
&lt;h3 id=&#34;postgresql-线程模型&#34;&gt;PostgreSQL 线程模型&lt;/h3&gt;
&lt;p&gt;第一天晚上的社交活动预热完，第二天大家就热情熟络得多了。今天的分享主题比较值得一提的是 “&lt;strong&gt;多线程 PostgreSQL&lt;/strong&gt;”，成功做到了座无虚席。大家都很关注 Heikki 发起的这场讨论。Heikki 介绍了PG进程模型与线程模型的利与弊，详细实现路径与当前进展。&lt;/p&gt;
&lt;p&gt;线程模型的收益有不少：更便宜的连接（等于内置连接池），共享的关系缓存，计划缓存，动态调整共享内存区域的能力，修改配置无需重启，Vacuum可以更加激进，运行中的 Explain Analyze，方便地限制每条连接的内存使用。但以 Tom Lane 为首的反对的声音也不小：这样可能会引入大量 Bug，丧失多进程模型隔离性的优势，以及 —— 引入大量的不兼容性，许多扩展都需要针对新的模型重写修改。&lt;/p&gt;
&lt;p&gt;Heikki 提出了目标与相当详细周密的计划供在座的 Hacker 们评审 —— 在五到七年内，完成到线程模型的转换，最终目标是没有中间状态。有趣的是，Heikki现场在 PPT 里引用了最大反对者 Tom Lane 的一段评论：“从历史上看，我认为这会是一场大灾难，导致大量代码悄无声息的崩坏，让事情脱离我们的控制”。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;heikki-multithread.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/heikki-multithread.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;虽然被当场揶揄，但这一次 Tom Lane 现场听着也是慈祥微笑，并没有直接表示反对。而最大的反对声音不是来自 Tom Lane，而是扩展维护者，一位维护了好几个扩展插件的老爷子问到扩展兼容性怎么办？（主要是分配/使用内存的方式）Heikki 表示只能要求这些扩展作者在五年左右的过渡阶段中国呢里重写修改适配新的模型。气得这位老爷子直接愤而离场出去了。&lt;/p&gt;
&lt;p&gt;鉴于线程模型对现有扩展生态的巨大冲击，我对这件事并不看好。我也与 Heikki 和 Tom lane 以及其他 Hacker 聊了一下关于线程模型的观点，总的来说，社区持谨慎观望态度。目前的进展也仅仅是在 PG 17 中重构了与 fork exec 有关的调用代码，并标记出使用的全局变量以便后续修改。即使真得发生，那也至少是 PG 2x 的事了。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;走廊社交与大厅闲聊&#34;&gt;走廊社交与大厅闲聊&lt;/h3&gt;
&lt;p&gt;第二天议题场次比第一天稍微水了一点点，所以更多的人参加的是  “Hallway Track”，就是在走廊大厅里和别人聊天。作为一个 i 人，我其实蛮不擅长这种场合的，但现场热烈的氛围很快就感染了我。再加上昨天晚上的酒吧社交环节大家也混了个脸熟，所以也算轻车熟路了。&lt;/p&gt;
&lt;p&gt;在这样的场合中，想要开启一场和陌生人的对话，其实非常简单。你也不需要主动搭讪或者咋样，就只要眼神接触一下，对话就自然而然地触发了。给我的感觉和打 RPG 游戏一样，按下空格触发 NPC 对话。然后自我介绍一下，说说自己干嘛的，这不是就顺便把 Pigsty 广告到 PG 社区的每一个角落啦？&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;hallway-track.jpg&#34; src=&#34;/zh/blog/pg/pgcondev-2024/hallway-track.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;作为第一次现场参加 PGCon.Dev 的人，我很惊讶地发现自己有着于与新人不匹配的知名度与关注度。有近半的参会者看到我的胸牌 Vonng / Pigsty 就认识我了 —— 主要还是归功于我之前写的那篇 PG 大爽文《&lt;a href=&#34;https://medium.com/@fengruohang/postgres-is-eating-the-database-world-157c204dcfc4&#34;&gt;PostgreSQL is eating the Database world&lt;/a&gt;》，Jonathan 跟我吐槽到说最近这篇文章天天出现在他的时间线上，整个 PG 社区的人基本上都看过了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;collect.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/collect.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;拍照基集：Tom, Bruce, Jonathan, Andres, Robert Hass, Devrim, Scherbaum, Heikki, Keith,&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然说起社交，最简单粗暴的诀窍就是礼多人不怪 —— 我准备了一盒胸针，PostgreSQL 的吉祥物 Logo &lt;strong&gt;Slonik&lt;/strong&gt;，镀金的，还带个小亚克力盒子。我给每一个和我聊天的 PG Hacker 都送了一个，这个胸针成为了本次大会备受欢迎的抢手货。好多人都在胸前或者会牌上别上了，而没拿到的人就在问：咦你们这个在哪里拿的，是贡献者奖励吗？&lt;/p&gt;
&lt;p&gt;Bruce 对这个胸针爱不释手，说：“哎呀这个精巧的徽章真是太可爱了，一看就不是那种便宜货”（但其实镀金其实不贵的），然后我就又送了他一个。总之，礼多人不怪，靠着 Pigsty，PG爽文，和 Slonik 小胸针，也算是在 PG 大会上吃开了。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;小聚多国社区会餐&#34;&gt;小聚：多国社区会餐&lt;/h3&gt;
&lt;p&gt;中午，瀚高做东，把美国PG社区，欧洲PG社区，还有日本PG社区的几位头面参会者拉到一起聚餐，一家温哥华的广东菜馆。图中从左前开始逆时针顺序分别是，瀚高北美研究院的 Grant Zhou，瀚高创始人苗健，欧洲PG用户组/ Neon 的 Andreas Scherbaum，有PG核心组/ 美国EDB 的 Bruce Momjiam，荣誉退休的前核心组成员 / pgEdge 的 Jan Wieck，制作各种PG贡献者硬币，社区周边的 Mark Wong，以及日本社区的 Tatsuro Yamada （山田達郎）与 Kyotaro Horiguchi （堀口恭太郎），最后是我。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;lunch.jpeg&#34; src=&#34;/zh/blog/pg/pgcondev-2024/lunch.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;在饭桌上我们聊了各种各样的话题，坐在我边上的两位日本 PG 社区友人很有趣，堀口桑是一位 PG 核心贡献者，在 WAL 复制 / 多字节字符串处理上有很多贡献，还是 pg_hint_plan 的作者。另一位山田桑也是 PG 贡献者，对 Pigsty 很感兴趣，在本次大会上进行了题为 《&lt;a href=&#34;https://www.pgevents.ca/events/pgconfdev2024/sessions/session/62-advice-is-seldom-welcome-but-efficacious/&#34;&gt;索引建议不受待见，但很管用&lt;/a&gt;》的分享。&lt;/p&gt;
&lt;p&gt;Mark Wong 也是 PG 社区的主要贡献者，PGUS 的组织者，开发了一系列 PG 监控扩展，但更有趣的是他还负责 PG 社区的周边，贡献者硬币，衣服，贴纸，还有这个特别可爱的毛线团小象也是他自己手工缝制的，让人爱不释手。据说他上次做的公仔在 PG Conf US 被人顺走了哈哈，所以这次看得可牢了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;elephant.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/elephant.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Bruce 是 PG 中文社区的老朋友了，上面介绍过了；来自德国的 Andreas Scherbaum 是欧洲 PG 大会的组织者，我们一起参加了扩展峰会的 Binary Distribution 讨论，也邀请我们到时候去参加；瀚高是唯一一个出现在 PGCon.Dev 的中国数据库厂商，苗总从山东飞过来参加，也跟我们分享了一些国产数据库的故事与密辛。&lt;/p&gt;
&lt;p&gt;在回会场的路上，我和 Jan Wieck 聊了很多，他是老一代光荣退休的 PG 核心组成员，也是 PL/pgSQL，PL/TCL，外键，视图，规则系统，TOAST，BGWriter，统计进程这些耳熟能详的PG核心功能的作者，他也是 Slony 的作者。路上我说我也想当一个 Major Contributor，他便与我分享了他参与 PG 贡献的故事：银行职员，工作需要用到数据库，就慢慢开始一步一步变成核心贡献者了 —— 他勉励我更多地参与到 PostgreSQL 贡献来，PG社区的未来就看你们年轻人的了。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;让pg社区参与更有包容性&#34;&gt;让PG社区参与更有包容性&lt;/h3&gt;
&lt;p&gt;第二天下午与昨天一样，有一个无需三选一的特殊场次，主题是&lt;strong&gt;社区建设&lt;/strong&gt;，由 Robert Hass 主持。3 位新晋的 PG 提交者轮流分享他们成为提交者的历程，与遇到的挑战和问题，分别是：泽田正彦，阿米特·兰格特，梅兰妮·普拉格曼。总体上社区参与面临的几个主要挑战是：非英语母语者的参与问题，时区差异，带有情绪的电子邮件沟通。&lt;/p&gt;
&lt;p&gt;Robert Hass 在会后的博客中提到：&lt;em&gt;&lt;strong&gt;他真的很想看到更多来自印度与日本的人参与到 PG 的高级职位中来，因为这两个国家有着庞大的开发者社区，却没有核心组成员，高级职位代表性不足&lt;/strong&gt;&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;robert-hass.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/robert-hass.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;说老实话，听着有些五味杂陈，因为在包容性的议题中没有提到&lt;strong&gt;中国&lt;/strong&gt;，而强调的是日本与印度。但这也是确实是没有办法的事情，中国在国际社区参与上，确实做的很拉垮。中国有三四百款国产数据库，其中很多都是基于 PG 魔改换皮套壳的，但这么多公司与用户，总共也只出了一个 PG 贡献者（ ——拓数派的 Richard Guo，原来在 Pivotal，今年刚晋为 Committer）。&lt;/p&gt;
&lt;p&gt;这次 PGCon.Dev ，中国过来参会的人，除了瀚高的四位就是我了，加起来正好一只手数过来。说来遗憾，中国技术界对 PostgreSQL 的认知水平与采纳程度仍然远远落后于全球，在生态上可能有10到15年的差距。要说语言挑战与障碍的问题，印度日本的英语口音也有不少沟通障碍，要说种族歧视啥的更是无稽之谈 —— 在场的华人面孔可绝对不算少。&lt;/p&gt;
&lt;p&gt;那么到底是为什么呢？如果你选择关门自嗨，土法炼钢造手搓数据库，白嫖社区，不参与到全球社区中来，那么别人自然也不会待见你。我希望我的参与能够 “Bootstrap” 并改善这一情况，让更多中国的 PG 用户、开发者，产品、开源项目，被全球社区所熟知，接纳，承认，让中文世界的用户也有更多的社区参与。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;闪电演讲&#34;&gt;闪电演讲&lt;/h3&gt;
&lt;p&gt;第二天下午的最后一个议程叫做： &lt;strong&gt;闪电演讲&lt;/strong&gt;。顾名思义，就是一个人只给5分钟，超时就立刻轰下来。大家都很干练，11 个主题整个才花了 45 分钟。在酒吧相谈甚欢的 Keith 分享了一些关于 PG Monitor 的改进，Peter Eisentraut 分享了关于 SQL 标准的跟进。当然，要说我最喜欢的分享，当属 Devrim Gündüz  关于 PG RPMs 的闪电演讲。昨天酒吧喝酒的时候，他神秘兮兮地说明天要放个大招，震撼全场，果不其然，在5分钟里讲完了 75 页的 PPT，气氛非常欢快～。&lt;/p&gt;
&lt;p&gt;说起 PostgreSQL，尽管这是个开源软件，但也许 99% 的用户都是直接使用 “官方” 编译好的成品二进制软件而不是从源码编译。Pigsty 作为一个数据库发行版，我自己维护了34个 RPM 扩展插件，但还有一百多个扩展，和各种生态工具都是直接来自 Devrim 老爷子维护的 PGDG 官方仓库的，我深深知道这项工作的不易。 Devrim 在用自己的信用，为这个世界上最先进，最流行的数据库软件质量把好最后一道关口。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;devrim.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/devrim.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Devrim 要是想干坏事，那破坏力说不定比 xz 要大多了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Devrim 老爷子是一个很有意思的人，土耳其人，现居伦敦，还兼职酒吧 DJ 打碟，身上有一个 PostgreSQL Logo 的纹身，是 PGDG RPM 仓库的维护者。我跟他聊了一个多小时，了解了 PGDG 仓库的方方面面，讨论了许多问题。比如，一个扩展想弄进 PGDG 仓库里，一般需要什么条件，是什么流程。Devrim 说他会去关注 PGXN ，以及社区讨论，像最近最近大火的 &lt;code&gt;pgvector&lt;/code&gt; 向量数据库扩展就是有人推荐给他，然后就收录进去了。我就白了一眼说：你看看&lt;a href=&#34;https://github.com/pgvector/pgvector/issues/76&#34;&gt;推给你的那个人莫不是我&lt;/a&gt;…，哈哈哈哈。&lt;/p&gt;
&lt;p&gt;说起来很有趣，在最近发布 &lt;a href=&#34;https://mp.weixin.qq.com/s/CzNUNAVnafO-hMCMdfxgZA&#34;&gt;Pigsty v2.7&lt;/a&gt; 中，我发现我维护的34个扩展里有4个 &lt;code&gt;pgsql-http&lt;/code&gt;, &lt;code&gt;pgsql-gzip&lt;/code&gt;, &lt;code&gt;pg_net&lt;/code&gt;, &lt;code&gt;pg_bigm&lt;/code&gt; 被纳入了进入了 PGDG 官方仓库。我一和 Devrim 提起这个事，他就笑眯眯地跟说我：我跑到你的 Pigsty 网站&lt;a href=&#34;/zh/docs/reference/extension/&#34;&gt;扩展列表&lt;/a&gt;上扒拉了一圈，发现有几个不错的，就弄进官方仓库了。我就问，我打包的那些不错的 RUST 扩展有没有机会弄进官方仓库里？他马上义正严辞地表态 —— 这些 Go 和 Rust 异端插件想也别想！但反正你不是自己弄了个 YUM / APT 软件仓库专门放这些扩展吗？&lt;/p&gt;
&lt;p&gt;我和 Devrim 聊得非常尽兴。最后我答应当一个 &lt;strong&gt;PG扩展猎手&lt;/strong&gt;，发掘新的 PG 插件。如果觉得不错就交给他，收纳进 PG 的官方仓库里。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;第三天unconference&#34;&gt;第三天：Unconference&lt;/h2&gt;
&lt;p&gt;如果说 PGCon.Dev 最精髓特色的节目是什么，那一定是 &lt;strong&gt;Unconference&lt;/strong&gt; （自组织会议）。Unconference 没有预设的议程，而是由参与者在现场决定讨论的主题。&lt;/p&gt;
&lt;p&gt;大会第三天全天的议程都是 Unconference，Joseph Conway 主持了 Unconference Organization 议程，愿意讲的人上去提交自己想介绍的主题，然后大家投票。当然我也上去提交了一个 Built-in Prometheus Metrics Exporter 的主题。&lt;/p&gt;
&lt;p&gt;提交完后，每个议题主讲人上台简介自己的 Topic，并尽可能合并同类项，我的话题不出意料地被合入 Jeremy 发起的 Observability 主题里了。接下来就是大家投票选出感兴趣的演讲。排名前三的主题是： 多线程（42票），可观测性（35票），增强社区参与（35票）。  最后选出的主题如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;unconference.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/unconference.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;unconference2.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/unconference2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;看得出来，大家都非常重视可观测性上的特性。在 PostgreSQL 可观测性上，我确实是当仁不让的专家，&lt;code&gt;pg_exporter&lt;/code&gt; 就是我写的。所以我抛出来的议题是：为 PostgreSQL 添加一个第一方的监控扩展，内置 Prometheus 监控端点，直接通过 HTTP 对外暴露监控指标。&lt;/p&gt;
&lt;p&gt;提出这个问题的原因是，&lt;code&gt;pg_exporter&lt;/code&gt; 虽好，但毕竟是外部组件，会引入额外的管理复杂度；而且如果 PostgreSQL 处于崩溃恢复无法接受新连接的状态，外部组件也难以知道内部的状态，只有将这个功能做成内核扩展，才能真正完整地提取这些信息。&lt;/p&gt;
&lt;p&gt;实现的方案是采用类似 &lt;code&gt;bgw_replstatus&lt;/code&gt; 扩展使用的后台工作进程，监听一个额外端口，通过 HTTP 对外暴露监控指标。内容上基本上也以我编写的 &lt;code&gt;pg_exporter&lt;/code&gt; 作为蓝本，除了少量系统关键指标外，所有指标都通过一张 Collector 配置表进行定义。&lt;/p&gt;
&lt;p&gt;这个想法得到了一些在座 PG Hacker 的关注。EDB ，CloudNativePG 的一些开发者也开始评估 &lt;code&gt;pg_exporter&lt;/code&gt; 能否直接用在他们的发行版中，作为监控解决方案的一部分。现场所有对可观测性感兴趣的成员成立了一个 Observability SIG，并通过邮件列表进行后续的讨论。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;议题关于对龙芯提供支持&#34;&gt;议题：关于对龙芯提供支持&lt;/h3&gt;
&lt;p&gt;在大会最后两天中，我还与几位 PG Hacker 讨论了一些关于国产芯片，国产操作系统，中文字符集相关的中国特色数据库议题。&lt;/p&gt;
&lt;p&gt;在之前发出的问题征集中，PG分会的类总提出了一个很好的建议，能不能让 PGDG 全球仓库支持龙芯 LoongArch 架构？国产芯片和国产操作系统厂商很乐意赞助这样的构建环境。带着这个问题，我询问了 RPM 仓库维护者 Devrim 老爷子；以及 Debian 侧的 Tomasz Rybak （备注：PGDG APT 仓库的维护者是 Christoph Berg，但 Tomasz 维护了 Debian 仓库中许多 PostgreSQL 相关的软件包），看看有没有可行性。&lt;/p&gt;
&lt;p&gt;不过可惜的是，目前龙芯架构对于PG社区构建二进制使用的 OS 还没有提供支持 —— 例如 EL 系的 CentOS 7，Rocky 8，Rocky 9 ，以及 Debian 10/11/12 都无法在龙芯上运行。所以 Devrim 老爷子的回答是 No：而且构建的 Pipeline 必须在他们自己的机器和环境上可以跑起来，所以赞助云服务器的方式可能是走不通的。Tomasz 对于这个问题持开放态度，因为据说后面龙芯可能会支持 Debian13 ，那么就可以考虑把一些 PG 包的支持加进来。&lt;/p&gt;
&lt;p&gt;总的来说，让 PG 官方 RPMs 支持龙芯架构估计没戏，但 APT 还是有可能的。但要龙芯支持主流开源社区 Linux OS Distro，这个事才有可能；如果是龙芯 + 一堆国产操作系统，那想都不要想，100% 没戏。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;议题关于服务端中文字符集支持&#34;&gt;议题：关于服务端中文字符集支持&lt;/h3&gt;
&lt;p&gt;Jeremy Schneider 在本次大会带来一场关于字符排序规则（ Collation） 的分享，我非常关注。这个分享抛出了一系列 Collate 规则变化导致的问题。说实话，我以前也专门&lt;a href=&#34;https://pigsty.cc/zh/blog/admin/collate/&#34;&gt;写过一篇文章研究过这个问题&lt;/a&gt;，最终结论与 Jeremy 高度一致，应该用 &lt;code&gt;C.UTF8&lt;/code&gt; ，我一直是这么做的，并制定开发规约，也在发行版中强制默认配置推行这一点，而 Jeremy 的分享，则详细阐述了&lt;a href=&#34;https://www.pgevents.ca/events/pgconfdev2024/sessions/session/95/slides/26/pgcon24_collation.pdf&#34;&gt;不这么做会导致哪些坑爹的结果&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;会后在大厅里，我和 Jeremy 进一步地讨论了这个问题，核心组的 Peter Eisentraut 也参与了进来。Jeremy 问我中国用户是怎样使用字符集与 Collation 的，我说新应用大体上都用的是 &lt;code&gt;C.UTF8&lt;/code&gt;，通常只有一些政企单位和传统行业的老系统才会去折腾服务端中文字符集。&lt;/p&gt;
&lt;p&gt;但这里确实有一个略尴尬的问题，例如 2023 年底中国发布的国标 GB18030 对信息系统提出了两条强制性要求：产品可以正确输入、输出、处理 GB18030 强制部分规定的全部汉字字符；产品可以正确识别 GB18030 强制性部分规定的全部汉字字符对应的编码。&lt;/p&gt;
&lt;p&gt;PostgreSQL 可以在&lt;strong&gt;客户端&lt;/strong&gt;支持 GB 18030 编码，也提供了 &lt;code&gt;convert_to&lt;/code&gt; 将字符串编码为 GB18030 编码字节串的编码方案支持，但是不支持直接在服务端使用此编码（支持的是 &lt;code&gt;EUC_CN&lt;/code&gt;），也没有通过 ICU 提供对 GB 18030 的支持。此外，我还向 Peter 提出了 &lt;code&gt;convert_to&lt;/code&gt; + &lt;code&gt;gb18030&lt;/code&gt; 大概有 20个新增汉字映射有误的问题。Jeremy 和 Peter 都表示会进一步跟进研究，看看怎么解决这些问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;闭幕式&#34;&gt;闭幕式&lt;/h3&gt;
&lt;p&gt;自组织会议聊完后，大会也进入到了最后的尾声。 Jonathan Katz 与 Melanie Plageman 主持了闭幕式。确实是一场非凡的大会，让人意犹未尽。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;closing.jpeg&#34; src=&#34;/zh/blog/pg/pgcondev-2024/closing.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;明年的 PGCon.Dev 2025 也会在加拿大举办，可能在温哥华，多伦多，渥太华或蒙特利尔四者之一。今年摸清楚了大会的调性与流程，我想明年可以去上台分享一个关于 Pigsty 或者 PG 可观测性的话题了。&lt;/p&gt;
&lt;p&gt;顺带一提，参会的效果确实很明显，参会后，Pigsty 的海外下载 CDN 流量（这还只是一家云上的一部分）出现显著增长，打掉了我接近大几百G 的流量。更多的国际友人了解到了国内的 PostgreSQL 数据库发行版 Pigsty，哈哈。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pigsty-traffic.png&#34; src=&#34;/zh/blog/pg/pgcondev-2024/pigsty-traffic.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;参会后来自海外的 CDN 流量有了一波暴增&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;大会的 PPT 一部分已经&lt;a href=&#34;https://www.pgevents.ca/events/pgconfdev2024/sessions/&#34;&gt;开放下载&lt;/a&gt;。当然，对 PostgreSQL 与 Pigsty 感兴趣的朋友也可以微信搜索 &lt;code&gt;pigsty-cc&lt;/code&gt; 加群直接下载或参与讨论。以及，下面是一些 PGCon.Dev 相关的博客与文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://andreas.scherbaum.la/post/2024-06-14_postgresql-development-conference-2024-review/&#34;&gt;Andreas Scherbaum PostgreSQL Development Conference 2024 - Review&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.postgresql.org/wiki/PgCon_2024_Developer_Meeting&#34;&gt;PgCon 2024 Developer Meeting&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rhaas.blogspot.com/2024/06/2024pgconfdev-and-growing-community.html&#34;&gt;Robert Haas: 2024.pgconf.dev and Growing the Community&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://peter.eisentraut.org/blog/2024/06/04/how-engaging-was-pgconfdev-really&#34;&gt;How engaging was PGConf.dev really?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.highgo.ca/2024/06/11/pgconf-dev-2024-shaping-the-future-of-postgresql-in-vancouver/&#34;&gt;Cary Huang: PGConf.dev 2024：在温哥华塑造 PostgreSQL 的未来&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/C0YyE52KbLLbnG1C2FqGRg&#34;&gt;PGCon.Dev 扩展生态峰会小记 @ 温哥华&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/4t1thBCDVS8y9dHiOxPZaA&#34;&gt;PG大会2024开幕，温哥华饭搭子驴友团呢？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: PostgreSQL 17 beta1 发布！</title>
      <link>/zh/blog/pg/pg-17-beta1/</link>
      <pubDate>Fri, 24 May 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/pg-17-beta1/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/pg-17-beta1/featured_hua7b9787f044c9b20266c80ef6a5bf4e6_487810_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;p&gt;PostgreSQL 全球开发组宣布，PostgreSQL 17 的首个 Beta 版本现已开放&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;下载&lt;/a&gt;。
这一版本包含了 PostgreSQL 17 正式发布时所有功能的预览，但在 Beta 测试期间，某些细节可能会有所调整。&lt;/p&gt;
&lt;p&gt;您可以在&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;发布说明&lt;/a&gt;中找到关于 PostgreSQL 17 的所有功能和变更的信息：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;https://www.postgresql.org/docs/17/release-17.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;秉承 PostgreSQL 开源社区的精神，我们强烈支持您在您的系统上测试 PostgreSQL 17 的新功能，帮助我们发现和修复潜在的错误或其他问题。
虽然我们不建议在生产环境中运行 PostgreSQL 17 Beta 1，但我们希望您能在测试环境中运行此 Beta 版本，并尽可能模拟您的实际工作负载。&lt;/p&gt;
&lt;p&gt;社区将持续确保 PostgreSQL 17 作为世界上最先进的开源关系型数据库的稳定性和可靠性，但这离不开您的测试与反馈。
详情请参阅我们的 &lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Beta 测试流程&lt;/a&gt;，以及您可以如何作出贡献：https://www.postgresql.org/developer/beta/&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;postgresql-17-亮点功能&#34;&gt;PostgreSQL 17 亮点功能&lt;/h2&gt;
&lt;h3 id=&#34;查询和写入性能改善&#34;&gt;查询和写入性能改善&lt;/h3&gt;
&lt;p&gt;PostgreSQL 17 最近的版本与构建，持续致力于整体的系统性能优化。负责回收存储空间的 PostgreSQL &lt;a href=&#34;https://www.postgresql.org/docs/17/routine-vacuuming.html&#34;&gt;Vacuum&lt;/a&gt; 进程使用了新的内部数据结构，使得垃圾回收过程的内存使用减少，最高可以减少 20 倍，同时减少了执行所需的时间。
此外 Vacuum 进程不再受到 &lt;code&gt;1GB&lt;/code&gt; 内存的使用限制，而由 &lt;a href=&#34;https://www.postgresql.org/docs/17/runtime-config-resource.html#GUC-MAINTENANCE-WORK-MEM&#34;&gt;&lt;code&gt;maintenance_work_mem&lt;/code&gt;&lt;/a&gt; 来控制，这意味着您可以为 Vacuum 进程分配更多资源。&lt;/p&gt;
&lt;p&gt;这个版本引入了流式 I/O 接口，使得执行顺序扫描和运行 &lt;a href=&#34;https://www.postgresql.org/docs/17/sql-analyze.html&#34;&gt;&lt;code&gt;ANALYZE&lt;/code&gt;&lt;/a&gt; 的性能有所提高。
PostgreSQL 17 还新增了配置参数，可控制 &lt;a href=&#34;https://www.postgresql.org/docs/17/runtime-config-resource.html#GUC-MULTIXACT-MEMBER-BUFFERS&#34;&gt;事务、子事务和 multixact 缓冲区&lt;/a&gt; 的大小。&lt;/p&gt;
&lt;p&gt;PostgreSQL 17 现在可以同时利用 Planner 的统计信息与 &lt;a href=&#34;https://www.postgresql.org/docs/17/queries-with.html&#34;&gt;公共表表达式 CTE&lt;/a&gt;（即 &lt;a href=&#34;https://www.postgresql.org/docs/17/queries-with.html&#34;&gt;&lt;code&gt;WITH&lt;/code&gt; 查询&lt;/a&gt;）结果中的排序顺序，进一步优化这些查询的速度。
此外，这个版本显著提高了带有 &lt;code&gt;IN&lt;/code&gt; 子句的查询，在使用 &lt;a href=&#34;https://www.postgresql.org/docs/17/indexes-types.html#INDEXES-TYPES-BTREE&#34;&gt;B-tree 索引&lt;/a&gt; 时的查询执行时间。
从这个版本开始，对于那些带有 &lt;code&gt;NOT NULL&lt;/code&gt; 约束的列，如果查询中带有冗余的 &lt;code&gt;IS NOT NULL&lt;/code&gt; 语句，PostgreSQL 会直接把它优化掉，同理，那些带有 &lt;code&gt;IS NULL&lt;/code&gt; 的查询也会直接优化掉，PostgreSQL 17 还支持并行构建 &lt;a href=&#34;https://www.postgresql.org/docs/17/brin.html&#34;&gt;BRIN&lt;/a&gt; 索引。&lt;/p&gt;
&lt;p&gt;高并发写入类的工作负载，可以显著受益于 PostgreSQL 17 的预写日志（&lt;a href=&#34;https://www.postgresql.org/docs/17/wal-intro.html&#34;&gt;WAL&lt;/a&gt;）锁管理改进，测试显示，性能提升 &lt;strong&gt;最多高达两倍&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;最后，PostgreSQL 17 添加了更多显式的 SIMD 指令，比如为 &lt;a href=&#34;https://www.postgresql.org/docs/17/functions-bitstring.html&#34;&gt;&lt;code&gt;bit_count&lt;/code&gt;&lt;/a&gt; 函数启用 AVX-512 指令支持。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;分区和分布式工作负载增强&#34;&gt;分区和分布式工作负载增强&lt;/h3&gt;
&lt;p&gt;PostgreSQL 17  的分区管理更为灵活，新增了&lt;strong&gt;拆分&lt;/strong&gt;与&lt;strong&gt;合并&lt;/strong&gt;分区的能力，并允许分区表使用 &lt;strong&gt;身份列（Identity Column）&lt;/strong&gt; 和&lt;strong&gt;排它约束&lt;/strong&gt;（Exclude Constraints）。
此外，&lt;a href=&#34;https://www.postgresql.org/docs/17/postgres-fdw.html&#34;&gt;PostgreSQL 外部数据包装器&lt;/a&gt;（&lt;a href=&#34;https://www.postgresql.org/docs/17/postgres-fdw.html&#34;&gt;&lt;code&gt;postgres_fdw&lt;/code&gt;&lt;/a&gt;）现在可以将 &lt;code&gt;EXISTS&lt;/code&gt; 和 &lt;code&gt;IN&lt;/code&gt; 子查询下推到远端服务器，从而提升性能。&lt;/p&gt;
&lt;p&gt;PostgreSQL 17 为逻辑复制添加了新功能，使其在高可用架构和大版本升级中更加易用。
从 PostgreSQL 17 使用  &lt;a href=&#34;https://www.postgresql.org/docs/17/pgupgrade.html&#34;&gt;&lt;code&gt;pg_upgrade&lt;/code&gt;&lt;/a&gt; 升级到更高版本时，不再需要删除 &lt;a href=&#34;https://www.postgresql.org/docs/17/logical-replication-subscription.html#LOGICAL-REPLICATION-SUBSCRIPTION-SLOT&#34;&gt;逻辑复制槽&lt;/a&gt; 了，从而避免了升级后需要重新同步数据的麻烦。
此外，你还可以控制逻辑复制的 Failover 过程，为高可用性架构中管理 PostgreSQL 提供了更好的可控制性。PostgreSQL 17 还允许逻辑复制的订阅者使用 &lt;code&gt;hash&lt;/code&gt; 索引进行查找，并引入了 &lt;code&gt;pg_createsubscriber&lt;/code&gt; 命令行工具，用于在使用物理复制的副本从库上创建逻辑复制。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;开发者体验&#34;&gt;开发者体验&lt;/h3&gt;
&lt;p&gt;PostgreSQL 17 继续深化了对 SQL/JSON 标准的支持，新增了 &lt;code&gt;JSON_TABLE&lt;/code&gt; 功能，可以将 JSON 转换为标准的 PostgreSQL 表，以及 SQL/JSON 构造函数（&lt;code&gt;JSON&lt;/code&gt;、&lt;code&gt;JSON_SCALAR&lt;/code&gt;、&lt;code&gt;JSON_SERIALIZE&lt;/code&gt;）和查询函数（&lt;code&gt;JSON_EXISTS&lt;/code&gt;、&lt;code&gt;JSON_QUERY&lt;/code&gt;、&lt;code&gt;JSON_VALUE&lt;/code&gt;）。
值得注意的是，这些功能最初计划在 PostgreSQL 15 中发布，但出于设计权衡考虑，在 Beta 期间被撤回 —— 这也是我们希望请您在 Beta 期间帮忙测试新功能的原因之一！此外，PostgreSQL 17 为 &lt;code&gt;jsonpath&lt;/code&gt; 的实现增添了更多功能，包括将 JSON 类型的值转换为各种不同特定数据类型的能力。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/sql-merge.html&#34;&gt;&lt;code&gt;MERGE&lt;/code&gt;&lt;/a&gt; 命令现在支持 &lt;code&gt;RETURNING&lt;/code&gt; 子句了，让您可以在同一条命令中进一步处理修改过的行。
您还可以使用新的 &lt;code&gt;merge_action&lt;/code&gt; 函数查看 &lt;code&gt;MERGE&lt;/code&gt; 命令修改了哪一部分。
PostgreSQL 17 还允许使用 &lt;code&gt;MERGE&lt;/code&gt; 命令更新视图，并新增了 &lt;code&gt;WHEN NOT MATCHED BY SOURCE&lt;/code&gt; 子句，允许用户指定当源中的行没有任何匹配时，应该执行什么操作。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/sql-copy.html&#34;&gt;&lt;code&gt;COPY&lt;/code&gt;&lt;/a&gt; 命令用于高效地从 PostgreSQL 批量加载与导出数据。在 PostgreSQL 17 中，&lt;strong&gt;导出大行时的性能最多有两倍的提升&lt;/strong&gt;。
此外，当源编码与目标编码相匹配时，&lt;code&gt;COPY&lt;/code&gt; 的性能也有所提升。COPY 新增了一个 &lt;code&gt;ON_ERROR&lt;/code&gt; 选项，即使插入行时出现错误也可继续进行。
此外在 PostgreSQL 17 中，驱动程序可以利用 libpq API 使用 &lt;a href=&#34;https://www.postgresql.org/docs/17/libpq-cancel.html&#34;&gt;异步和更为安全的查询取消方法&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;PostgreSQL 17 引入了内置的排序规则提供程序，该提供程序提供与 &lt;code&gt;C&lt;/code&gt; 排序规则类似的排序语义，但编码为 &lt;code&gt;UTF-8&lt;/code&gt; 而非 &lt;code&gt;SQL_ASCII&lt;/code&gt;。这种新的排序规则提供了不变性保证，确保您的排序结果在不同系统上都不会改变。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;安全功能&#34;&gt;安全功能&lt;/h3&gt;
&lt;p&gt;PostgreSQL 17 新增了一个新的连接参数 &lt;code&gt;sslnegotation&lt;/code&gt;，允许 PostgreSQL 在使用 &lt;a href=&#34;https://en.wikipedia.org/wiki/Application-Layer_Protocol_Negotiation&#34;&gt;ALPN&lt;/a&gt; 时直接进行 TLS 握手，减少一次网络往返。PostgreSQL 会在 ALPN 目录中注册为 &lt;code&gt;postgresql&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这个版本引入了新的 EventTrigger 事件 —— 当用户认证时触发。并且在 libpq 中提供了一个新的名为 &lt;code&gt;PQchangePassword&lt;/code&gt; 的 API，可以在客户端侧自动对密码取哈希，以防止在服务器中意外记录下明文密码。&lt;/p&gt;
&lt;p&gt;PostgreSQL 17 增加了一个新的 &lt;a href=&#34;https://www.postgresql.org/docs/17/predefined-roles.html&#34;&gt;预定义角色&lt;/a&gt;，名为 &lt;code&gt;pg_maintain&lt;/code&gt;，赋予用户执行 &lt;code&gt;VACUUM&lt;/code&gt;、&lt;code&gt;ANALYZE&lt;/code&gt;、&lt;code&gt;CLUSTER&lt;/code&gt;、&lt;code&gt;REFRESH MATERIALIZED VIEW&lt;/code&gt;、&lt;code&gt;REINDEX&lt;/code&gt; 和 &lt;code&gt;LOCK TABLE&lt;/code&gt; 的权限，
并确保  &lt;code&gt;search_path&lt;/code&gt; 对于 &lt;code&gt;VACUUM&lt;/code&gt;、&lt;code&gt;ANALYZE&lt;/code&gt;、&lt;code&gt;CLUSTER&lt;/code&gt;、&lt;code&gt;REFRESH MATERIALIZED VIEW&lt;/code&gt; 和 &lt;code&gt;INDEX&lt;/code&gt; 等维护操作是安全的。
最后，用户现在可以使用 &lt;code&gt;ALTER SYSTEM&lt;/code&gt; 来设置系统无法识别的未定义配置参数了。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;备份与导出管理&#34;&gt;备份与导出管理&lt;/h3&gt;
&lt;p&gt;PostgreSQL 17 可以使用 &lt;a href=&#34;https://www.postgresql.org/docs/17/app-pgbasebackup.html&#34;&gt;&lt;code&gt;pg_basebackup&lt;/code&gt;&lt;/a&gt; 进行增量备份，并增加了一个新的实用工具 &lt;a href=&#34;https://www.postgresql.org/docs/17/app-pgcombinebackup.html&#34;&gt;&lt;code&gt;pg_combinebackup&lt;/code&gt;&lt;/a&gt;，用于备份恢复过程中将备份合并。
该版本为 &lt;a href=&#34;https://www.postgresql.org/docs/17/app-pgdump.html&#34;&gt;&lt;code&gt;pg_dump&lt;/code&gt;&lt;/a&gt; 新增了一个参数项 &lt;code&gt;--filter&lt;/code&gt;，允许您指定一个文件来进一步指定在 dump 过程中要包含或排除哪些对象。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;监控&#34;&gt;监控&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/sql-explain.html&#34;&gt;&lt;code&gt;EXPLAIN&lt;/code&gt;&lt;/a&gt; 命令可以提供有关查询计划和执行详情的信息，现在它新增了两个选项：&lt;code&gt;SERIALIZE&lt;/code&gt; 会显示将数据序列化为网络传输形式时的耗时；&lt;code&gt;MEMORY&lt;/code&gt; 会报告优化器内存使用情况。此外，&lt;code&gt;EXPLAIN&lt;/code&gt; 现在还可以显示花费在 I/O 块读写上的时间。&lt;/p&gt;
&lt;p&gt;PostgreSQL 17 标准化了 &lt;a href=&#34;https://www.postgresql.org/docs/17/pgstatstatements.html&#34;&gt;&lt;code&gt;pg_stat_statements&lt;/code&gt;&lt;/a&gt; 中 &lt;code&gt;CALL&lt;/code&gt; 的参数，减少了频繁调用的存储过程所产生的记录数量。
此外，&lt;a href=&#34;https://www.postgresql.org/docs/devel/progress-reporting.html#VACUUM-PROGRESS-REPORTING&#34;&gt;&lt;code&gt;VACUUM&lt;/code&gt; 进度报告&lt;/a&gt; 现在会显示索引垃圾回收的进度。
PostgreSQL 17 还引入了一个新视图，&lt;a href=&#34;https://www.postgresql.org/docs/17/view-pg-wait-events.html&#34;&gt;&lt;code&gt;pg_wait_events&lt;/code&gt;&lt;/a&gt;，提供关于等待事件的描述，可以与 &lt;code&gt;pg_stat_activity&lt;/code&gt; 共同使用，以便深入了解活动会话出现等待的原因。
此外，&lt;a href=&#34;https://www.postgresql.org/docs/17/monitoring-stats.html#MONITORING-PG-STAT-BGWRITER-VIEW&#34;&gt;&lt;code&gt;pg_stat_bgwriter&lt;/code&gt;&lt;/a&gt; 视图中的一些信息，现在被拆分到新的 &lt;a href=&#34;https://www.postgresql.org/docs/17/monitoring-stats.html#MONITORING-PG-STAT-CHECKPOINTER-VIEW&#34;&gt;&lt;code&gt;pg_stat_checkpointer&lt;/code&gt;&lt;/a&gt; 视图中了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;其他功能&#34;&gt;其他功能&lt;/h2&gt;
&lt;p&gt;PostgreSQL 17 还有许多其他新功能与改进，很多改进都可能会对您的用例有所帮助。请参阅&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;发布说明&lt;/a&gt;以获取完整的新功能和变更列表：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;https://www.postgresql.org/docs/17/release-17.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;错误和兼容性测试&#34;&gt;错误和兼容性测试&lt;/h2&gt;
&lt;p&gt;每个 PostgreSQL 版本的稳定性，在很大程度上依赖于诸位 PG社区用户，您可以用你们的工作负载和测试工具来测试即将发布的版本，以便在 PostgreSQL 17 正式发布前发现错误并完成回归。由于这是一个 Beta 版本，针对数据库行为、功能细节和 API 的小改动仍然可能会发生。您的反馈和测试将有助于调整并敲定这些新功能，因此请在近期进行测试。用户测试的质量有助于我们确定何时可以进行最终发布。&lt;/p&gt;
&lt;p&gt;PostgreSQL wiki 中公开提供了&lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_17_Open_Items&#34;&gt;开放问题&lt;/a&gt;列表。您可以使用 PostgreSQL 网站上的此表单&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;报告错误&lt;/a&gt;：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;https://www.postgresql.org/account/submitbug/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;beta-时间表&#34;&gt;Beta 时间表&lt;/h2&gt;
&lt;p&gt;这是 PostgreSQL 17 的第一个 Beta 版本。PostgreSQL 项目将根据测试需要发布更多的 Beta 版本，随后是一或多个 RC 版本，最终版本大约会在 2024 年 9 月或 10 月发布。详细信息请参阅 &lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Beta 测试&lt;/a&gt; 页面。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;链接&#34;&gt;链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34;&gt;下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/developer/beta/&#34;&gt;Beta 测试信息&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/docs/17/release-17.html&#34;&gt;PostgreSQL 17 Beta 发布说明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.postgresql.org/wiki/PostgreSQL_17_Open_Items&#34;&gt;PostgreSQL 17 开放问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/featurematrix/&#34;&gt;功能矩阵&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/account/submitbug/&#34;&gt;提交错误&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/postgresql&#34;&gt;在 X/Twitter 上关注 @postgresql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/about/donate/&#34;&gt;捐赠&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Ahrefs不上云，省下四亿美元</title>
      <link>/zh/blog/cloud/ahrefs-saving/</link>
      <pubDate>Wed, 22 May 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/ahrefs-saving/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/ahrefs-saving/featured_hu00302667d3701b11bccc08ee71ddf5da_303152_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;https://tech.ahrefs.com/how-ahrefs-saved-us-400m-in-3-years-by-not-going-to-the-cloud-8939dd930af8&#34;&gt;How Ahrefs Saved US$400M in 3 Years by NOT Going to the Cloud&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近云计算在 IT 基础设施领域非常流行，上云成为一种趋势。基础设施即服务云（IaaS）确实有很多优点：灵活、部署敏捷、伸缩简便、在全球多地区都能即时上线，等等等等。&lt;/p&gt;
&lt;p&gt;云服务提供商已经成为专业的 IT 服务外包供应商，提供便捷且易用的服务 —— 通过出色的营销、会议、认证和精心挑选的使用案例，他们很容易让人以为，云计算是现代企业 IT 的唯一合理选择。&lt;/p&gt;
&lt;p&gt;但是，这些外包云计算服务的成本，有时高到离谱，高到我们担心如果基础设施 100% 依赖云计算，我们的业务是否还能存在。这促使我们基于事实，进行实际的比较。以下是比较结果：&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;ahrefs-自有硬件概览&#34;&gt;Ahrefs 自有硬件概览&lt;/h2&gt;
&lt;p&gt;Ahrefs 在新加坡租用了一个托管数据中心 —— 高度同质化的标准基础设施。我们核算了这个数据中心的所有成本，并分摊到每台服务器上，然后与 Amazon Web Services (AWS) 云中进行类似的规格进行了成本对比（因为 AWS 是 IaaS 领导者，所以我们将其用作对比的标杆）&lt;/p&gt;
&lt;figure class=&#34;card rounded p-2 td-post-card mb-4 mt-4&#34; style=&#34;max-width: 276px&#34;&gt;
&lt;img class=&#34;card-img-top&#34; src=&#34;/zh/blog/cloud/ahrefs-saving/server1_hu0fc518b27bb3d90eb3dc4138277e8696_1073778_800x400_fit_q75_h2_catmullrom_2.webp&#34; width=&#34;266&#34; height=&#34;400&#34;&gt;
&lt;figcaption class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
&lt;p class=&#34;card-text&#34;&gt;
&lt;p&gt;Ahrefs 服务器&lt;/p&gt;
&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;我们的硬件相对较新。托管合同始于 2020 年中 —— 即 COVID-19 疫情高峰期。所有设备也都是从那时候起新买的。我们在该数据中心的服务器配置基本都是一致的，唯一的区别是 CPU 有两种代际，但核数相同。我们每台服务器都有很高的核数，2TB 内存和两个 100G 网口，硬盘的话，平均每台服务器有16块 15TB 的硬盘。&lt;/p&gt;
&lt;p&gt;为了计算每月成本，我们把所有硬件按五年摊销归零核算，超过五年后继续用算白赚。因此这些设备的 &lt;strong&gt;启动成本&lt;/strong&gt;，会摊销到 60 个月中进行核算。&lt;/p&gt;
&lt;p&gt;所有的 &lt;strong&gt;持续性成本&lt;/strong&gt;，例如租金和电费，均以 2022 年 10 月的价格计算。尽管通货膨胀也会有影响，但这里把通胀算上就太复杂了，所以我们先忽略通胀因素。&lt;/p&gt;
&lt;p&gt;我们的托管费用由两部分组成：&lt;strong&gt;租金&lt;/strong&gt;，以及 &lt;strong&gt;实际消耗的电费&lt;/strong&gt;。自 2022 年初以来，电价大幅上涨。我们计算的时候使用的是最新的高电价，而不是整个租赁周期的的平均电价，这样计算上会让 AWS 占些便宜。&lt;/p&gt;
&lt;p&gt;此外，我们还要支付 IP 网络传输费用，和数据中心与我们驻地之间的暗光纤费用（暗光纤：已经铺设但是没有投入使用的光缆）。&lt;/p&gt;
&lt;p&gt;下表显示了我们每台服务器的月度支出。服务器硬件占整体月度支出的 2/3，而数据中心租金和电费 (DC)、互联网服务提供商 (ISP) 的 IP 传输费用、暗光纤 (DF) 和内部网络硬件 (Network HW) 构成了剩余的三分之一。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;自建成本项&lt;/th&gt;
&lt;th&gt;每月成本（美元）&lt;/th&gt;
&lt;th&gt;每月成本（人民币）&lt;/th&gt;
&lt;th&gt;百分比&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;服务器&lt;/td&gt;
&lt;td&gt;$ 1,025&lt;/td&gt;
&lt;td&gt;¥ 7,380&lt;/td&gt;
&lt;td&gt;66%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据中心、ISP、DF、网络硬件&lt;/td&gt;
&lt;td&gt;$ 524&lt;/td&gt;
&lt;td&gt;¥ 3,772.8&lt;/td&gt;
&lt;td&gt;34%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;自建总成本&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;$ 1,550&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;¥ 11,160&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;100%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;我们的自有本地硬件成本结构&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;aws-成本结构&#34;&gt;AWS 成本结构&lt;/h2&gt;
&lt;p&gt;由于我们托管的数据中心位于新加坡，所以我们使用 AWS 亚太地区（新加坡）区域的价格进行对比。&lt;/p&gt;
&lt;p&gt;AWS 的成本结构与托管中心不同。不幸的是，AWS 没有提供与我们服务器核数相匹配的 EC2 服务器实例。因此，我们找到了CPU &amp;amp; 内存正好是一半的相应 AWS 实例，然后将一台 Ahrefs 服务器的成本，与两台这种 EC2 实例的成本进行对比。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;译注：EC2 定价正比与核数与内存配比，这样成本对比没有问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此外我们考虑了长期折扣，因此我们使用 EC2 实例的最低价格 —— 三年预留，与五年摊销的本地自建服务器进行对比。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;译注：AWS EC2 三年 Reserved All Upfront 即提供最好的折扣&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;除了 EC2 实例外，我们还添加了弹性块存储 (EBS) ，它并不是直接附加存储的精准替代品 —— 因为我们在服务器中使用的是大容量且快速的 NVMe 盘。为了简化计算，我们选择了更便宜的 gp3 EBS（尽管这种盘速度比我们的慢很多）。其成本由两部分组成：存储大小和 IOPS 费用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;译注：EBS &lt;code&gt;gp3&lt;/code&gt; 延迟在 ms 量级，&lt;code&gt;io2&lt;/code&gt; 在百微秒量级，本地盘在 55/9µs 量级&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We keep two copies of a data chunk on our servers. But we only order usable space in EBS that takes care of the replication for us. So we should consider the price of the &lt;em&gt;gp3&lt;/em&gt; storage size equal to the size of our drives divided by 2: (1&lt;em&gt;1TB + 16&lt;/em&gt;15TB)/2 ≈ 120TB per server.&lt;/p&gt;
&lt;p&gt;因为我们自己用磁盘的时候会复制一份，但是买 EBS 的时候只买实际存储空间，EBS 替你处理数据复制。
所以在成本对比时，我们购买的 &lt;code&gt;gp3&lt;/code&gt; 存储大小是本地磁盘的一半：(1TB + 15TB 16块) / 2 ≈ 每台服务器 120TB。&lt;/p&gt;
&lt;p&gt;我们还没有把 IOPS 的成本算进来，也忽略了 EBS gp3 的各种限制；例如，gp3 云盘的最大吞吐量/实例为 &lt;strong&gt;10GB/s&lt;/strong&gt;。而单个 PCIe Gen 4 NVMe 驱动器的性能为 &lt;strong&gt;6-7GB/s&lt;/strong&gt;，而我们有 16 个并行工作的磁盘，总吞吐要大的多。因此，这完全不是一个维度上的公平比较。这种比较方法显著低估了 AWS 上的存储成本，并进一步让 AWS 在比较中占尽便宜。&lt;/p&gt;
&lt;p&gt;关于网络流量费用，AWS 与托管机房不同，AWS 不是按照带宽来计费的，而是按每GB下行流量来收费。因此，我们大致估算了每台服务器的平均下行流量，然后使用 AWS 网络计费方法进行估算。&lt;/p&gt;
&lt;p&gt;将所有三项成本组合起来，我们得到了 AWS 上的的成本分布，如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;AWS 成本项&lt;/th&gt;
&lt;th&gt;每月成本（美元）&lt;/th&gt;
&lt;th&gt;每月成本（人民币）&lt;/th&gt;
&lt;th&gt;百分比&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;EBS 成本&lt;/td&gt;
&lt;td&gt;$ 11,486&lt;/td&gt;
&lt;td&gt;¥ 82,699.2&lt;/td&gt;
&lt;td&gt;65%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;EC2 成本&lt;/td&gt;
&lt;td&gt;$ 5,607&lt;/td&gt;
&lt;td&gt;¥ 40,370.4&lt;/td&gt;
&lt;td&gt;32%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据传输&lt;/td&gt;
&lt;td&gt;$ 464&lt;/td&gt;
&lt;td&gt;¥ 3,340.8&lt;/td&gt;
&lt;td&gt;3%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;AWS 总成本&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;$ 17,557&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;¥ 126,410.4&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;100%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;AWS成本结构&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;自建与aws对比&#34;&gt;自建与AWS对比&lt;/h2&gt;
&lt;p&gt;综合以上两个表格不难看出，AWS 上的支出比想象中要高得多。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;自建成本项&lt;/th&gt;
&lt;th&gt;月成本 $&lt;/th&gt;
&lt;th&gt;占比&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;AWS 成本项目&lt;/th&gt;
&lt;th&gt;月消 $&lt;/th&gt;
&lt;th&gt;占比&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;服务器&lt;/td&gt;
&lt;td&gt;1,025&lt;/td&gt;
&lt;td&gt;66%&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;EBS 成本&lt;/td&gt;
&lt;td&gt;11,486&lt;/td&gt;
&lt;td&gt;65%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DC、ISP、DF、网络硬件&lt;/td&gt;
&lt;td&gt;524&lt;/td&gt;
&lt;td&gt;34%&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;EC2 成本&lt;/td&gt;
&lt;td&gt;5,607&lt;/td&gt;
&lt;td&gt;32%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;数据传输&lt;/td&gt;
&lt;td&gt;464&lt;/td&gt;
&lt;td&gt;3%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;本地总成本&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1,550&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;100%&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;AWS 总成本&lt;/td&gt;
&lt;td&gt;17,557&lt;/td&gt;
&lt;td&gt;100%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;我们的自建成本与 AWS EC2 月消费对比：一台 AWS 服务器成本粗略等于 11.3 台 Ahrefs 自建服务器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 AWS 上一台具有相似可用 SSD 空间的替代 EC2 实例的成本，大致相当于托管数据中心中 &lt;strong&gt;11.3&lt;/strong&gt; 台服务器的成本。相应来说，如果上了云，我们这 20 台服务器的机架就只能剩下大约 2 台服务器了！&lt;/p&gt;
&lt;figure class=&#34;card rounded p-2 td-post-card mb-4 mt-4&#34; style=&#34;max-width: 276px&#34;&gt;
&lt;img class=&#34;card-img-top&#34; src=&#34;/zh/blog/cloud/ahrefs-saving/server2_hu47ced090e95deffa932625253b67d13c_612938_800x400_fit_q75_h2_catmullrom_2.webp&#34; width=&#34;266&#34; height=&#34;400&#34;&gt;
&lt;figcaption class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
&lt;p class=&#34;card-text&#34;&gt;
&lt;p&gt;20 台 Ahrefs 服务器的成本与 2 台 AWS 服务器相当&lt;/p&gt;
&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;那么用我们在自建数据中心里实际使用了两年半的这 850 台服务器来计算，算出总成本数字后，不难看到极其惊人的差异！&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;自建本地服务器&lt;/th&gt;
&lt;th&gt;每月成本 $&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;AWS EC2 实例&lt;/th&gt;
&lt;th&gt;每月成本 $&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;850台服务器每月成本&lt;/td&gt;
&lt;td&gt;1,317,301&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;850台服务器每月成本&lt;/td&gt;
&lt;td&gt;14,923,154&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30个月总成本&lt;/td&gt;
&lt;td&gt;39,519,025&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;30个月总成本&lt;/td&gt;
&lt;td&gt;447,694,623&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;AWS成本 - 自建成本&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;$ 408,175,598&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;850 台服务器用30个月的成本：AWS vs 自建&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;假设我们在实际的 2.5 年数据中心使用期间运行 850 台服务器。计算后可以看到显著的差异。&lt;/p&gt;
&lt;p&gt;如果我们选择在 2020 年使用新加坡区域的 AWS，而不是自建，那我们需要向 AWS 支付 &lt;strong&gt;超过 4 亿美元&lt;/strong&gt; 这样一笔天文数字 ，才能让自己的基础设施跑起来！&lt;/p&gt;
&lt;p&gt;有人可能会想，“或许 Ahrefs 能付得起？”&lt;/p&gt;
&lt;p&gt;确实，Ahrefs 是一家盈利且自给自足可持续的公司，所以让我们来看一下它的营收，并算一算。尽管我们是一家私有公司，不必公布我们的财务数据。但在《海峡时报》关于 &lt;a href=&#34;https://www.straitstimes.com/fastest-growing-companies-2022&#34;&gt;2022&lt;/a&gt; 年和 &lt;a href=&#34;https://www.straitstimes.com/fastest-growing-companies-2023&#34;&gt;2023&lt;/a&gt; 年新加坡增长最快的公司的文章中可以找到一些 Ahrefs 的收入信息。这些文章提供了 Ahrefs 在 2020 年和 2021 年的收入数据。&lt;/p&gt;
&lt;p&gt;我们还可以线性外推出 2022 年的收入。这是一个粗略估计，但足以让我们得出一些结论了。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;年份&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;收入, 新币&lt;/th&gt;
&lt;th&gt;SGD/USD&lt;/th&gt;
&lt;th&gt;收入, 美元&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2020&lt;/td&gt;
&lt;td&gt;实际&lt;/td&gt;
&lt;td&gt;SGD 86,741,880&lt;/td&gt;
&lt;td&gt;0.7253&lt;/td&gt;
&lt;td&gt;USD 62,913,886&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021&lt;/td&gt;
&lt;td&gt;实际&lt;/td&gt;
&lt;td&gt;SGD 115,335,291&lt;/td&gt;
&lt;td&gt;0.7442&lt;/td&gt;
&lt;td&gt;USD 85,832,524&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2022&lt;/td&gt;
&lt;td&gt;外推&lt;/td&gt;
&lt;td&gt;???&lt;/td&gt;
&lt;td&gt;0.7265&lt;/td&gt;
&lt;td&gt;USD 108,751,162&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;总计&lt;/td&gt;
&lt;td&gt;USD 257,497,571&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;Ahrefs 2020 - 2022 营收估计&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从上表可以看出，Ahrefs 在过去三年的&lt;strong&gt;总收入&lt;/strong&gt;约为 2.57 亿美元。但我们也计算出，如果将&lt;strong&gt;这样一个&lt;/strong&gt;自建数据中心替换为 AWS，成本约为 4.48 亿美元。因此，公司收入甚至无法覆盖这 2.5 年的 AWS 使用成本。&lt;/p&gt;
&lt;p&gt;这是一个令人震惊的结果！&lt;/p&gt;
&lt;p&gt;但是我们的利润会去哪儿呢？&lt;/p&gt;
&lt;p&gt;正如波音公司 Dr. LJ Hart-Smith 在这份 &lt;a href=&#34;https://www.documentcloud.org/documents/69746-hart-smith-on-outsourcing.html&#34;&gt;已有 20 年历史的报告&lt;/a&gt;中所述：“如果原厂或总包商无法通过将工作外包来获利，那么谁会受益呢？当然是分包商。”&lt;/p&gt;
&lt;p&gt;需要记住的是，我们已经在计算时让 AWS 占尽便宜了 —— 自建数据中心算电费时使用高于平均水平的电价，算EBS 云盘存储价格时只算了空间部分没算 IOPS，并无视了 EBS 其实非常拉垮的慢。而且，这个数据中心并不是我们唯一的成本中心。我们在其他数据中心、服务器、服务、人员、办公室、营销活动上也有支出。&lt;/p&gt;
&lt;p&gt;因此，如果我们主要的基础设施放在云上，Ahrefs 几乎无法生存。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其他考虑因素&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这篇文章没有考虑其他使比较更加复杂的方面。这些方面包括人员技能、财务控制、现金流、根据负载类型进行的容量规划等。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;
&lt;p&gt;Ahrefs 省下了约 4 亿美元，因为在过去的两年半中，基础设施没有 100% 上云。这个数字还在增加，因为目前我们又在一个新地方，用新硬件搞了另一个大型托管数据中心。&lt;/p&gt;
&lt;p&gt;Ahrefs 利用 AWS 的优势，在世界各地托管我们的前端，但 Ahrefs 基础设施的绝大部分，隐藏在托管数据中心的自有硬件上。如果我们的产品完全依赖 AWS，Ahrefs 将无法盈利，甚至无法存在。&lt;/p&gt;
&lt;p&gt;如果我们采用只用云的方式，我们的基础设施成本将高出 10 倍以上。但正因为我们没有这样做，我们可以将节省下来的资金，用于实际的产品改进和开发。而且也带来了更快、更好的结果 —— 因为（考虑到云上的限制），我们的服务器比云计算能提供的速度更快。我们的报表也生成得更快且更全面，因为每份报告所需的时间更短。&lt;/p&gt;
&lt;p&gt;基于此，我建议那些对可持续增长感兴趣的 CFO、CEO 和企业主们，仔细考虑并定期重新评估云计算的优势与实际成本。虽然云计算是早期创业公司的自然选择，或者说 100% 吧。但随着公司及其基础设施的增长，完全依赖云计算可能会使公司陷入困境。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;而这里就出现了两难：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一旦上了云，想要离开是很复杂的&lt;/strong&gt;。云计算很方便，但会带来供应商锁定。而且，仅仅是出于更高的成本而放弃云计算基础设施，可能并不是工程团队想要的。他们可能会正确地认为 —— 云计算比传统的砖瓦数据中心和物理服务器环境更容易、更灵活。&lt;/p&gt;
&lt;p&gt;对于更成熟阶段的公司，&lt;a href=&#34;https://world.hey.com/dhh/we-stand-to-save-7m-over-five-years-from-our-cloud-exit-53996caa&#34;&gt;下云迁移到自有基础设施是困难的&lt;/a&gt;。在迁移过程中保持公司生存也是一个挑战。但这种痛苦的转变可能是拯救公司的关键，因为它可以避免将收入越来越多的一部分不断支付给云厂商。&lt;/p&gt;
&lt;p&gt;大公司，尤其是 FAANG 多年来吸走了大量人才。他们一直在招聘工程师来运营他们庞大的数据中心和基础设施，给小公司留下的机会很少。但最近几个月大科技公司的大规模裁员，带来了重新评估云计算的机会 —— 确实可以考虑一下招聘数据中心领域资深专业人士，并从云上搬迁下来。&lt;/p&gt;
&lt;p&gt;如果你要创办一家新公司，考虑一下这种方案：买个机架和服务器，把它们放在你家的地下室。也许这样能从第一天起就提高你们公司的可持续性。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;下云老冯评论&#34;&gt;下云老冯评论&lt;/h2&gt;
&lt;p&gt;很高兴又看到一个难以忍受天价云租金的大客户站出来，发起对云厂商的控诉。 Ahrefs 的经验与我们一致 —— 云上服务器的综合持有成本在是本地自建的 10 倍左右 —— 即使考虑了最好的 Saving Plan 与深度折扣。37 Signal 的 DHH 则提供了&lt;a href=&#34;/zh/blog/cloud/odyssey&#34;&gt;&lt;strong&gt;另一个更有代表性的下云案例&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;同时在 Ahrefs 成本核算中我们不难看出成本的结构化差异 —— 自建的存储成本是服务器成本的一半，而云上的存储成本却是服务器成本的一倍 —— 我有一篇文章专门聊过这个问题 —— &lt;a href=&#34;/zh/blog/cloud/ebs&#34;&gt;&lt;strong&gt;云盘是不是杀猪盘&lt;/strong&gt;&lt;/a&gt;？&lt;/p&gt;
&lt;p&gt;在几个关键例子上，云的成本都极其高昂 —— 无论是&lt;a href=&#34;/zh/blog/cloud/rds&#34;&gt;&lt;strong&gt;大型物理机数据库&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&#34;/zh/blog/cloud/ebs&#34;&gt;&lt;strong&gt;大型 NVMe 存储&lt;/strong&gt;&lt;/a&gt;，或者只是&lt;a href=&#34;/zh/blog/cloud/ecs&#34;&gt;&lt;strong&gt;最新最快的算力&lt;/strong&gt;&lt;/a&gt;。在这些用例上，云上的客户不得不忍受高昂到荒诞的定价带来的羞辱 —— 租生产队的驴所花的钱是如此高昂，以至于几个月甚至几周的租金就能与直接购买它的价格持平。在这种情况下，你应该直接直接把这头驴买下来，而不是给赛博领主交租！&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: v2.7：集异璧之大成</title>
      <link>/zh/blog/releases/v2.7.0/</link>
      <pubDate>Tue, 21 May 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/releases/v2.7.0/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/releases/v2.7.0/featured_hu61c9ed491845f6401f680b49988e393c_1001474_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;p&gt;2024-05-20，Pigsty v2.7 发布了。在这个版本中收录的可用扩展插件数量，达到了惊人的 &lt;strong&gt;255&lt;/strong&gt; 个，成功让 PostgreSQL 的&lt;strong&gt;全能性&lt;/strong&gt;又达到了一个全新高度！&lt;/p&gt;
&lt;p&gt;同时，我们提供了一些新的 Docker 应用模板，例如开源的企业 ERP 软件全家桶 —— &lt;strong&gt;Odoo&lt;/strong&gt;，&lt;strong&gt;Jupyter&lt;/strong&gt; Notebook，并率先提供了 &lt;strong&gt;Supabase&lt;/strong&gt; GA 版本的支持。
同时，我们还为后续容器版本的推出扫清了障碍；提供了帮助用户应付国产信创检查的方案 —— PolarDB 支持；并正式进行了专业版与开源版的产品功能区分。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/releases/v2.7.0/#扩展尽入吾彀中&#34;&gt;扩展尽入吾彀中！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/releases/v2.7.0/#pg集异璧之大成&#34;&gt;PG集异璧之大成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/releases/v2.7.0/#国产信创数据库？&#34;&gt;国产信创数据库？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/releases/v2.7.0/#开箱即用的erp&#34;&gt;开箱即用的ERP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/releases/v2.7.0/#pitr与监控面板&#34;&gt;PITR与监控面板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/releases/v2.7.0/#专业版与开源版&#34;&gt;专业版与开源版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;扩展尽入吾彀中&#34;&gt;扩展尽入吾彀中&lt;/h2&gt;
&lt;p&gt;在《&lt;a href=&#34;/zh/blog/pg/pg-eat-db-world&#34;&gt;PostgreSQL正在吞噬数据库世界&lt;/a&gt;》一文中，我抛出了一个观点：PostgreSQL 并不是一个简单的关系型数据库，而是一个数据管理的抽象框架，具有囊括一切，吞噬整个数据库世界的力量。&lt;/p&gt;
&lt;p&gt;而 PG 之所以能做到这一点，除了&lt;strong&gt;开源&lt;/strong&gt;、&lt;strong&gt;先进&lt;/strong&gt;这两点外，真正的秘诀在于 &lt;strong&gt;扩展&lt;/strong&gt; —— &lt;strong&gt;极致可扩展性，与繁荣的扩展生态&lt;/strong&gt; 是 PostgreSQL 独一无二的特点，也是它从无数数据库中脱颖而出的法宝与秘诀。&lt;/p&gt;
&lt;p&gt;因此，在 Pigsty v2.7 版本中，我们重新审视了整个 PostgreSQL 生态的所有扩展插件，将其中一些佼佼者收录其中，我们新收录的扩展如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;扩展&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;版本&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/supabase/pg_jsonschema&#34;&gt;pg_jsonschema&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.3.1&lt;/td&gt;
&lt;td&gt;提供JSON Schema校验能力&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/supabase/wrappers&#34;&gt;wrappers&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.3.1&lt;/td&gt;
&lt;td&gt;Supabase提供的外部数据源包装器捆绑包&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/alitrack/duckdb_fdw&#34;&gt;duckdb_fdw&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.1&lt;/td&gt;
&lt;td&gt;DuckDB 外部数据源包装器 (libduck 0.10.2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/paradedb/paradedb/tree/dev/pg_search&#34;&gt;pg_search&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.7.0&lt;/td&gt;
&lt;td&gt;ParadeDB BM25算法全文检索插件，ES全文检索&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/paradedb/paradedb/tree/dev/pg_lakehouse&#34;&gt;pg_lakehouse&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.7.0&lt;/td&gt;
&lt;td&gt;ParadeDB 湖仓分析引擎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/paradedb/pg_analytics&#34;&gt;pg_analytics&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.6.1&lt;/td&gt;
&lt;td&gt;加速 PostgreSQL 内部的分析查询处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/tembo-io/pgmq&#34;&gt;pgmq&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.5.2&lt;/td&gt;
&lt;td&gt;轻量级消息队列，类似于 AWS SQS 和 RSMQ.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/tembo-io/pg_tier&#34;&gt;pg_tier&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.0.3&lt;/td&gt;
&lt;td&gt;支将将冷数据分级存储到 AWS S3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/tembo-io/pg_vectorize&#34;&gt;pg_vectorize&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.15.0&lt;/td&gt;
&lt;td&gt;在 PG 中实现 RAG 向量检索的封装&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/tembo-io/pg_later&#34;&gt;pg_later&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.1.0&lt;/td&gt;
&lt;td&gt;现在执行 SQL，并在稍后获取结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/VADOSWARE/pg_idkit&#34;&gt;pg_idkit&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.2.3&lt;/td&gt;
&lt;td&gt;生成各式各样的唯一标识符：UUIDv6, ULID, KSUID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kaspermarstal/plprql&#34;&gt;plprql&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.1.0&lt;/td&gt;
&lt;td&gt;在PostgreSQL使用PRQL——管线式关系查询语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/zhuobie/pgsmcrypto&#34;&gt;pgsmcrypto&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.1.0&lt;/td&gt;
&lt;td&gt;为PostgreSQL提供商密算法支持：SM2,SM3,SM4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kelvich/pg_tiktoken&#34;&gt;pg_tiktoken&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.0.1&lt;/td&gt;
&lt;td&gt;计算 OpenAI 使用的 Token 数量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/rustprooflabs/pgdd&#34;&gt;pgdd&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.5.2&lt;/td&gt;
&lt;td&gt;提供通过标准SQL查询数据库目录集簇的能力&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/pgspider/parquet_s3_fdw&#34;&gt;parquet_s3_fdw&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.1.0&lt;/td&gt;
&lt;td&gt;针对S3/MinIO上的Parquet文件的外部数据源包装器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/plv8/plv8&#34;&gt;plv8&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3.2.2&lt;/td&gt;
&lt;td&gt;PL/JavaScript (v8) 可信过程程序语言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/tvondra/md5hash&#34;&gt;md5hash&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.0.1&lt;/td&gt;
&lt;td&gt;提供128位MD5的原生数据类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Percona-Lab/pg_tde&#34;&gt;pg_tde&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.0-alpha&lt;/td&gt;
&lt;td&gt;PostgreSQL 的实验性加密存储引擎。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/df7cb/pg_dirtyread&#34;&gt;pg_dirtyread&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2.6&lt;/td&gt;
&lt;td&gt;从 PostgreSQL 表中读取未清理的死元组，用于脏读&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这里面有许多使用 Rust 和 &lt;strong&gt;pgrx&lt;/strong&gt; 开发的扩展插件，许多扩展都提供了非常强大的能力 —— 比如说：&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Supabase 出品的 &lt;a href=&#34;https://github.com/supabase/wrappers&#34;&gt;&lt;strong&gt;wrappers&lt;/strong&gt;&lt;/a&gt; 看上去是一个扩展，但它其实提供了一个用 Rust 编写 FDW 的插件，提供了对&lt;strong&gt;十种&lt;/strong&gt;外部数据源的包装访问！&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;FDW&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Read&lt;/th&gt;
&lt;th&gt;Modify&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HelloWorld&lt;/td&gt;
&lt;td&gt;A demo FDW to show how to develop a basic FDW.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BigQuery&lt;/td&gt;
&lt;td&gt;A FDW for Google &lt;a href=&#34;https://cloud.google.com/bigquery&#34;&gt;BigQuery&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clickhouse&lt;/td&gt;
&lt;td&gt;A FDW for &lt;a href=&#34;https://clickhouse.com/&#34;&gt;ClickHouse&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Stripe&lt;/td&gt;
&lt;td&gt;A FDW for &lt;a href=&#34;https://stripe.com/&#34;&gt;Stripe&lt;/a&gt; API&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Firebase&lt;/td&gt;
&lt;td&gt;A FDW for Google &lt;a href=&#34;https://firebase.google.com/&#34;&gt;Firebase&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Airtable&lt;/td&gt;
&lt;td&gt;A FDW for &lt;a href=&#34;https://airtable.com/&#34;&gt;Airtable&lt;/a&gt; API&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;S3&lt;/td&gt;
&lt;td&gt;A FDW for &lt;a href=&#34;https://aws.amazon.com/s3/&#34;&gt;AWS S3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Logflare&lt;/td&gt;
&lt;td&gt;A FDW for &lt;a href=&#34;https://logflare.app/&#34;&gt;Logflare&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Auth0&lt;/td&gt;
&lt;td&gt;A FDW for &lt;a href=&#34;https://auth0.com/&#34;&gt;Auth0&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SQL Server&lt;/td&gt;
&lt;td&gt;A FDW for &lt;a href=&#34;https://www.microsoft.com/en-au/sql-server/&#34;&gt;Microsoft SQL Server&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Redis&lt;/td&gt;
&lt;td&gt;A FDW for &lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS Cognito&lt;/td&gt;
&lt;td&gt;A FDW for &lt;a href=&#34;https://aws.amazon.com/cognito/&#34;&gt;AWS Cognito&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅&lt;/td&gt;
&lt;td&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这意味着，你现在可以用 PostgreSQL &lt;strong&gt;读写&lt;/strong&gt; BigQuery, ClickHouse, 以及支付服务 Stripe 数据了。Firebase，Airtable，S3，Logflare，Auth0，SQL Server，Redis，Cognito 也提供了通过 PostgreSQL ，使用 SQL 读取的能力。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;再比如 &lt;a href=&#34;https://prql-lang.org/&#34;&gt;&lt;strong&gt;&lt;code&gt;plprql&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; 扩展，提供了一种类似于 SQL 的全新数据库查询语言 PRQL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;invoices&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;invoice_date&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1970&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;derive&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;transaction_fees&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;income&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;total&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;transaction_fees&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;income&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;group&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customer_id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;aggregate&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;average&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;total&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sum_income&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;sum&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;income&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ct&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;total&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sort&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sum_income&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;take&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;join&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customers&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customer_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;derive&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{c.last_name}, {c.first_name}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customer_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sum_income&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;derive&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;db_version&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;version()&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同时，新加入 Pigsty 的 &lt;strong&gt;plv8&lt;/strong&gt; 扩展，允许你使用 Javascript 在 PostgreSQL 中编写存储过程，PostgreSQL 的存储过程语言支持之丰富，实在是让人惊叹！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/releases/v2.7.0/pl.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;再比如说 &lt;strong&gt;parquet_s3_fdw&lt;/strong&gt; ，看上去只是让你访问 S3 上存储的 Parquet 文件，但它的意义是 —— PG 可以成为真正的湖仓了 —— 等效于新增了一个没有存储容量限制的分析引擎！&lt;/p&gt;
&lt;p&gt;构建在它基础上的 &lt;a href=&#34;https://github.com/tembo-io/pg_tier&#34;&gt;&lt;strong&gt;&lt;code&gt;pg_tier&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; ，更是提供了便利的分级冷存储功能 —— 你可以将 PG 中很少访问的海量冷存储，用 SQL 轻松归档到 S3 / MinIO 上去！&lt;/p&gt;
&lt;p&gt;如果您觉得仅仅是 Parquet 太不过瘾，那么由 ParadeDB 提供的 &lt;a href=&#34;https://github.com/paradedb/paradedb/tree/dev/pg_lakehouse&#34;&gt;&lt;strong&gt;&lt;code&gt;pg_lakehouse&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;，则把这件事拔高到了一个新高度 —— 你现在可以直接将PG作为湖仓使用，读取 S3 / MinIO / 本地文件系统上的 Parquet，CSV，JSON，Avro，DeltaLake，以及 后续的 ORC 格式文件，用于湖仓数据分析！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;EXTENSION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pg_lakehouse&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FOREIGN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DATA&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;WRAPPER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s3_wrapper&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;HANDLER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s3_fdw_handler&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;VALIDATOR&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s3_fdw_validator&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- Provide S3 credentials
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SERVER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s3_server&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FOREIGN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DATA&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;WRAPPER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s3_wrapper&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;OPTIONS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;region&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;us-east-1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;allow_anonymous&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- Create foreign table
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FOREIGN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;trips&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;VendorID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;tpep_pickup_datetime&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;tpep_dropoff_datetime&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;passenger_count&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;       &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;BIGINT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;trip_distance&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;         &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DOUBLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRECISION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;RatecodeID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DOUBLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRECISION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;store_and_fwd_flag&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;TEXT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;PULocationID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;REAL&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;DOLocationID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;REAL&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;payment_type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DOUBLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRECISION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;fare_amount&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;           &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DOUBLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRECISION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;extra&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;                 &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DOUBLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRECISION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;mta_tax&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;               &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DOUBLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRECISION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;tip_amount&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DOUBLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRECISION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;tolls_amount&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DOUBLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRECISION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;improvement_surcharge&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DOUBLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRECISION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;total_amount&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DOUBLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRECISION&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SERVER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s3_server&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;OPTIONS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;s3://paradedb-benchmarks/yellow_tripdata_2024-01.parquet&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;extension&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;parquet&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- Success! Now you can query the remote Parquet file like a regular Postgres table
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;trips&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;---------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2964624&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;row&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然，同样由 ParadeDB 出品的 &lt;strong&gt;pg_analytics&lt;/strong&gt; 与 &lt;strong&gt;pg_search&lt;/strong&gt; 扩展也非常值得一提，前者提供了第一梯队的分析性能，而后者提供了 ElasticSearch BM25 全文检索能力的的 PG 替代品。&lt;/p&gt;
&lt;p&gt;此外，Tembo 也提供了四个使用 Rust 编写的实用 PG 扩展，例如，他们出品的 &lt;strong&gt;pgmq&lt;/strong&gt; 就可以在 PG 上提供一个轻量的消息队列 API，类似于 AWS 的 SQS 与 RSMQ，作为 &lt;strong&gt;pgq&lt;/strong&gt; 的替代与补充。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在 AI 人工智能方向上，&lt;a href=&#34;https://github.com/pgvector/pgvector&#34;&gt;&lt;strong&gt;pgvector&lt;/strong&gt;&lt;/a&gt; 0.7 引入了重大的升级，现在支持稀疏向量（让 &lt;strong&gt;pg_sparse&lt;/strong&gt; 原地退役了！），支持 &lt;strong&gt;half&lt;/strong&gt; &lt;strong&gt;float&lt;/strong&gt; 量化，向量最大维度翻倍到了 &lt;strong&gt;4000&lt;/strong&gt; 维，添加了 &lt;strong&gt;binary&lt;/strong&gt; 量化模式（维度可达 64K ），添加了两种新的距离度量与相应的索引。最重要的是，现在还支持用 SIMD 指令了，性能相比一年前有了翻天覆地的改善！&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Added halfvec type&lt;/li&gt;
&lt;li&gt;Added sparsevec type&lt;/li&gt;
&lt;li&gt;Added support for indexing bit type&lt;/li&gt;
&lt;li&gt;Added support for indexing L1 distance with HNSW&lt;/li&gt;
&lt;li&gt;Added binary_quantize function&lt;/li&gt;
&lt;li&gt;Added hamming_distance function&lt;/li&gt;
&lt;li&gt;Added jaccard_distance function&lt;/li&gt;
&lt;li&gt;Added l2_normalize function&lt;/li&gt;
&lt;li&gt;Added subvector function&lt;/li&gt;
&lt;li&gt;Added concatenate operator for vectors&lt;/li&gt;
&lt;li&gt;Added CPU dispatching for distance functions on Linux x86-64&lt;/li&gt;
&lt;li&gt;Updated comparison operators to support vectors with different dimensions&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pgvector/pgvector/blob/master/CHANGELOG.md&#34;&gt;v0.7 changelog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然，还有其他一些 AI 相关的扩展插件，例如 &lt;strong&gt;pg_vectorize&lt;/strong&gt; 可以帮助你封装实现一个 RAG 服务，新的 &lt;strong&gt;pg_tiktoken&lt;/strong&gt; 可以帮助你在 PG 中，计算调用 OpenAI 模型时所需的 Token 数量。此外，&lt;strong&gt;pg_similarity&lt;/strong&gt; 可以提供17种额外的距离度量函数，&lt;strong&gt;imgsmlr&lt;/strong&gt; 可以提供图片相似度处理函数, &lt;strong&gt;bigm&lt;/strong&gt; 可以提供基于二元组的全文检索支持, &lt;strong&gt;zhparser&lt;/strong&gt; 可以提供中文分词能力。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在新的数据类型支持上，&lt;strong&gt;md5hash&lt;/strong&gt; 允许你直接高效存储 128 位的 MD5 摘要，而不是一长串字符文本。 &lt;strong&gt;pg_idkit&lt;/strong&gt; 允许你在数据库中直接生成十多种不同类型的 ID 方案（UUIDv6, UUIDv7, nanoid, ksuid, ulid, Timeflake, PushID, xid, cuid, cuid 等），&lt;strong&gt;rrule&lt;/strong&gt; 扩展更是允许你在数据库中存储、解析、处理“日历重复事件”这一神奇的数据类型。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;此外，还有一些扩展，能在数据库管理上提供帮助。&lt;strong&gt;pgdd&lt;/strong&gt; 允许你直接使用 SQL ，管理与访问 PG 的数据库目录，&lt;strong&gt;pg_later&lt;/strong&gt; 允许你异步执行 SQL 命令并取回结果。&lt;strong&gt;pg_dirtyread&lt;/strong&gt; 允许你进行脏读，读取尚未被垃圾回收的数据，进行数据抢救，&lt;strong&gt;pg_show_plans&lt;/strong&gt; 可以显示出当前正在运行查询的执行计划！&lt;/p&gt;
&lt;p&gt;在加密能力上，&lt;strong&gt;pg_tde&lt;/strong&gt; 扩展提供了一个实验性的PG透明加密的存储引擎，用于确保即使你的硬盘被人拔了，数据也不会泄漏。 &lt;strong&gt;pgsmcrypto&lt;/strong&gt; 则为 PostgreSQL 提供了 “国产数据库” 的商密算法（SM2,3,4）支持。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pg集异璧之大成&#34;&gt;PG集异璧之大成&lt;/h2&gt;
&lt;p&gt;加上 &lt;a href=&#34;https://mp.weixin.qq.com/s/y3qY9eBfOic6tQYOiErIHg&#34;&gt;以前的扩展&lt;/a&gt;，在 Pigsty v2.7 中，在所有操作系统上可用的 PG 扩展数量达到了 &lt;strong&gt;255&lt;/strong&gt; 个之多。
我们可以自豪地说，在整个 PostgreSQL 生态中，没有一个发行版或者服务提供商，能达到我们的收录的这个扩展数量：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/releases/v2.7.0/extensions.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在EL系操作系统上，总共有 &lt;strong&gt;230&lt;/strong&gt; 个可用的 RPM 扩展插件，其中包括 73 个 PG 自带的扩展和 157 个第三方扩展，其中由 Pigsty 维护的占 34 个。
在 Debian 与 Ubuntu 系操作系统上，总共有 &lt;strong&gt;189&lt;/strong&gt; 个可用的 DEB 扩展插件，其中包括 73 个 PG 自带的扩展和 116 个第三方扩展，其中由 Pigsty 维护的占 10 个。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;完整的扩展列表，请参考 &lt;a href=&#34;https://pigsty.cc/zh/docs/reference/extension&#34;&gt;&lt;strong&gt;扩展列表&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所有的扩展，被我们按照功能与用途分为了 &lt;strong&gt;11&lt;/strong&gt; 个大类，方便用户根据主题选用：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;类目&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;扩展&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;TYPE&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pg_uuidv7, pgmp, semver, timestamp9, uint, roaringbitmap, unit, prefix, md5hash, ip4r, asn1oid, pg_rrule, pg_rational, debversion, numeral, pgfaceting&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;GIS&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pointcloud, pgrouting, h3, address_standardizer_data_us, postgis_tiger_geocoder, postgis_topology, postgis_raster, postgis_sfcgal, address_standardizer, postgis, h3_postgis, pointcloud_postgis, geoip, mobilitydb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;SHARD&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pg_fkpart, pg_partman, plproxy, citus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;TEST&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pgtap, faker, dbt2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;SEARCH&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pg_bigm, pg_search, zhparser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ETL&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pg_bulkload, wal2json, pg_fact_loader, decoderbufs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;REPL&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pglogical_origin, pglogical, repmgr, londiste, mimeo, pglogical_ticker&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;SEC&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pgaudit, pgsodium, anon, passwordcracklib, supabase_vault, pgauditlogtofile, set_user, login_hook, pgcryptokey, pg_jobmon, logerrors, pg_auth_mon, pgsmcrypto, pg_tde, credcheck, table_log, pg_snakeoil&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;OLAP&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pg_lakehouse, duckdb_fdw, citus_columnar, parquet_s3_fdw, columnar, pg_analytics, timescaledb, pg_tier&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;FUNC&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;count_distinct, pgsql_tweaks, tdigest, topn, pgjwt, pg_net, extra_window_functions, http, gzip, pg_later, pg_idkit, pg_background, pgpcre, first_last_agg, icu_ext, q3c, pg_sphere&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;FDW&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;hdfs_fdw, mysql_fdw, pgbouncer_fdw, mongo_fdw, sqlite_fdw, tds_fdw, ogr_fdw, oracle_fdw, multicorn, db2_fdw, wrappers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;LANG&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;plpgsql_check, plsh, pllua, plr, plluau, pldbgapi, plv8, plprql, pg_tle, pljava, hstore_plluau, hstore_pllua, omnidb_plpgsql_debugger&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;SIM&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;orafce, pg_extra_time, pgmemcache, pg_dbms_job, mysqlcompat, pg_dbms_metadata, pg_dbms_lock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ADMIN&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pg_readonly, pg_squeeze, pgfincore, pgl_ddl_deploy, prioritize, ddlx, pgagent, pg_repack, pg_cron, pgpool_recovery, pgpool_regclass, pgpool_adm, pg_dirtyread, pgdd, pgautofailover, safeupdate, toastinfo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;STAT&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pg_permissions, pg_qualstats, pg_stat_kcache, pg_stat_monitor, pg_track_settings, pg_wait_sampling, plprofiler, powa, pgexporter_ext, system_stats, pg_store_plans, pgmeminfo, pg_profile, pg_show_plans, pg_statviz&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;AI&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;pg_tiktoken, imgsmlr, svector, pg_similarity, pgml, vectorize, vector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;FEAT&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;periods, pg_ivm, jsquery, hll, pgtt, rum, pg_hint_plan, age, temporal_tables, table_version, pg_graphql, pgq, pgmq, pg_strom, pg_jsonschema, hypopg, emaj, pgq_node, pre_prepare, rdkit&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这些扩展之间，许多都可以相互组合使用，产生协同效应，产生 1+1 &amp;raquo; 2 的神奇效果。&lt;/p&gt;
&lt;p&gt;正如 TimescaleDB CEO Ajay 在 《&lt;a href=&#34;/zh/blog/pg/pg-for-everything&#34;&gt;为什么PostgreSQL是未来数据的基石？&lt;/a&gt;》 一文中所述，&lt;strong&gt;PostgreSQL 正在成为事实上的数据库标准&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;通过极致可扩展性的魔法，PostgreSQL &lt;strong&gt;集异璧之大成&lt;/strong&gt;，做到了守正出奇，实现了主干极致稳定性与功能敏捷性的统一**。**扎实的基本盘配上惊人的演进速度，让它成为了数据库世界中的一个异数，彻底改变了数据库世界的游戏规则。&lt;/p&gt;
&lt;p&gt;时至当下，PostgreSQL 已是不可挡。而 Pigsty 让 PostgreSQL 如虎添翼，插上一对起飞的翅膀。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;国产信创数据库&#34;&gt;国产信创数据库？&lt;/h2&gt;
&lt;p&gt;在中国做数据库赛道，绕不开的一个问题就是“&lt;strong&gt;国产化&lt;/strong&gt;”与“信创”。关于这个主题，我已经写过很多文章深入探讨过了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《&lt;a href=&#34;https://mp.weixin.qq.com/s/hWbcc9cMM9qTjPJ0m6G0Kg&#34;&gt;基础软件需要什么样的自主可控？&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href=&#34;https://mp.weixin.qq.com/s/AqcYpOgVj91JnkB1B3s4sA&#34;&gt;国产数据库到底能不能打？&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href=&#34;https://mp.weixin.qq.com/s/aLXC7f2iYUfATNWsnyotkA&#34;&gt;国产数据库是大炼钢铁吗？&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href=&#34;https://mp.weixin.qq.com/s/79_PnX-a5iSfDMgz_VUx5A&#34;&gt;中国对PostgreSQL的贡献约等于零吗？&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href=&#34;https://mp.weixin.qq.com/s/xHG8OURTYlmnQTorFkzioA&#34;&gt;EL系操作系统发行版哪家强？&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我的观点是：整个国产信创数据库行业完全基于一个事实上根本不成立的假设 —— 所谓 “数据库卡脖子” 的风险。在开源的 PostgreSQL 面前，所谓卡脖子是个伪命题
—— 如果被欧美严厉制裁的俄国企业们数据库没有崩溃，中国也完全可以同样拿 PG 做同样的事，而不是弄出一堆换皮魔改或土法炼钢的劣质轮子出来。&lt;/p&gt;
&lt;p&gt;许多国产数据库都是这样的：企业花点钱买一套“国产xxx”放在那里，上面来检查了，就拿出来糊弄一下，实际上该用啥还是继续用啥（我要给这种务实的态度点个赞！👍）
但是很多时候，即使客户想要用的就是原生 PG，但没有一块 “&lt;strong&gt;国产&lt;/strong&gt;” 的牌子，确实是很难走立项采购流程的，我们就有一些客户面临这样让人头大的难题。&lt;/p&gt;
&lt;p&gt;不过大部分用户也不愿意当傻狍子和冤大头，许多有国产化要求的企业都是这样的：花点钱买一套“国产xxx”放在那里，上面来检查了，就拿出来糊弄一下，实际上该用啥还是继续用啥（我要给这种务实的态度点个赞！👍）
但是很多时候，即使客户想要用的就是原生 PG，但没有一块 “&lt;strong&gt;国产&lt;/strong&gt;” 的牌子，确实是很难走立项采购流程的，我们就有一些客户面临这样让人头大的难题。&lt;/p&gt;
&lt;p&gt;因此，我们想了一个绝妙的折衷办法 —— PolarDB for PostgreSQL。根据 【&lt;a href=&#34;http://www.itsec.gov.cn/aqkkcp/cpgg/202312/t20231226_162074.html&#34;&gt;安全可靠测评结果公告（2023年第1号）&lt;/a&gt;】，附表三、集中式数据库：
PolarDB 属于自主可控，安全可靠的国产信创数据库。（中国信息安全测评中心-产品测评公告，证书编号：&lt;a href=&#34;http://www.itsec.gov.cn/cp/cpcpgg/202205/t20220510_107153.html&#34;&gt;CNITSEC2022I&amp;amp;OE0047&lt;/a&gt;）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;中国信息安全测评中心-产品测评公告&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;证号：&lt;/td&gt;
&lt;td&gt;CNITSEC2022I&amp;amp;OE0047&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;发证日期：&lt;/td&gt;
&lt;td&gt;2022-04-26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;截至时间：&lt;/td&gt;
&lt;td&gt;2025-04-25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;产品名称：&lt;/td&gt;
&lt;td&gt;阿里云PolarDB V2.0内核核心模块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;厂商：&lt;/td&gt;
&lt;td&gt;阿里云计算有限公司&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;认证级别：&lt;/td&gt;
&lt;td&gt;自主原创&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;认证评价：&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;最妙的是，PolarDB PG 是开源的。所以 Pigsty 提供了对 PolarDB PG 的完整监控支持，以及使用 Docker 进行部署的能力，可以帮助客户快速拉起一个“国产数据库”稻草人，无论是应付检查，还是作为立项采购的名头，都非常好用！
而且相对于其他那些过时落后，魔改的亲妈都不认识的杂种 PG 国产库，PolarDB 的含 P 量很高，所以如果想用，真的是可以拿来当成一个 PG 11 用起来的。&lt;/p&gt;
&lt;p&gt;最后说点实际的，如果你问我，有什么功能是“国产数据库”有，而 PostgreSQL 没有的，我还真知道一个 —— 所谓的 “商密” 算法。最主要的是三个：
用于替代 RSA 的 SM2 算法，用于替代 MD5/SHA 的 SM3 算法，用于替代 DES/AES 的 SM4 算法。但现在，原生的 PostgreSQL 也可以通过 &lt;code&gt;smcrypto&lt;/code&gt; 扩展插件也可以提供商密算法支持了！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;开箱即用的erp&#34;&gt;开箱即用的ERP&lt;/h2&gt;
&lt;p&gt;与 “国产数据库” 类似，许多国产 ERP 软件也是处在一个很尴尬的位置上，因为已经有一个足够好的开源 ERP 系统了 —— &lt;strong&gt;Odoo&lt;/strong&gt; （原名 OpenERP）。&lt;/p&gt;
&lt;p&gt;不少 Pigsty 的用户是拿着 PG 去跑 Odoo 的，这引起了我的好奇，于是我也混入了 Odoo 社区学习，也自己搭了一套试了一把，确实非常牛逼，要是早点试试这么好的东西，就不去折腾什么土法建站了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;odoo-intro.png&#34; src=&#34;/zh/blog/releases/v2.7.0/odoo-intro.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Odoo 插件非常多，功能强大远超我想象，堪称企业应用全家桶大王。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作为开源免费的软件，Odoo靠高级扩展插件收钱，这个订阅价格也不算贵。要是一分都不想花，Odoo社区也提供了这些高级扩展插件的免费开源平替版本… —— 高级付费插件（比如财务模块）也有社区开源版！&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;odoo-module.png&#34; src=&#34;/zh/blog/releases/v2.7.0/odoo-module.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Odoo 使用，且仅使用了 PostgreSQL 作为数据存储。整套 ERP 软件，只需要一个 PG 数据库，一个 Docker 镜像就可以搞定了！堪称是 PostgreSQL 杀手级应用的典范。&lt;/p&gt;
&lt;p&gt;作为一个 PostgreSQL 发行版，我没理由不去支持 Odoo。因此在 Pigsty v2.7 中提供了一个 Docker Compose 模板，可以一键拉起 Odoo。你还可以复用 Pigsty 提供的基础设施，轻松通过 Nginx 对外暴露 Web 服务，提供 HTTPS 接入。&lt;/p&gt;
&lt;p&gt;最后能实现的效果是，在一台裸虚拟机上，你只需要几行命令就可以拉起生产质量的企业级 ERP 系统！关于 Odoo ，后面我会专门出一期教程，介绍如何利用 Pigsty 自建 ERP 系统。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pitr与监控面板&#34;&gt;PITR与监控面板&lt;/h2&gt;
&lt;p&gt;像 Odoo 这样的 ERP 系统，对数据库的要求与传统互联网行业非常不一样。例如：我在 Odoo 社区看到了如下对话：“&lt;em&gt;我的 Odoo 已经用了好几年了，现在 PostgreSQL 里的数据量已经到 2.5GB 了&lt;/em&gt;”，下面朋友回复 —— “&lt;em&gt;那真的是非常大了！&lt;/em&gt;”&lt;/p&gt;
&lt;p&gt;2.5 GB的数据量，对于互联网规模的应用来说简直是微不足道。但是对于一个 ERP 系统来说，这已经是一个非常大的数据库了。比起性能 &amp;amp; 高可用，像 ERP 这样的系统更关注的是数据完整性与机密性，很多时候，也就是拿一台服务器就跑起来了，不要 HA，只要有备份与 &lt;strong&gt;时间点恢复&lt;/strong&gt; （PITR） 就行。&lt;/p&gt;
&lt;p&gt;Pigsty 已经提供了开箱即用的 PITR ，允许用户回滚到任意时间点。但是这个过程所需的信息和反馈却散落在监控系统中的不同角落中，因此在 Pigsty v2.7 中，Pigsty 提供了一个专用的监控面板 PGSQL PITR，用于提供 PITR 时间点回复过程的上下文。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pitr.png&#34; src=&#34;/zh/blog/releases/v2.7.0/pitr.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;后面，我们会专门出一期教程，介绍如何利用 Pigsty 的 &lt;a href=&#34;/zh/docs/concept/pitr&#34;&gt;&lt;strong&gt;PITR&lt;/strong&gt;&lt;/a&gt; 功能，实现企业级的数据备份与恢复。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;开源版与专业版&#34;&gt;开源版与专业版&lt;/h2&gt;
&lt;p&gt;在 《&lt;a href=&#34;https://mp.weixin.qq.com/s/NlNGwUXZPa058ZDk_tdtew&#34;&gt;Pigsty v2.6：PostgreSQL 踢馆 OLAP&lt;/a&gt;》 中，我已经提到过我们将区分 Pigsty 开源版与 &lt;a href=&#34;/zh/docs/about/service/&#34;&gt;专业版&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在 Pigsty v2.7 中，我们将开源版支持的操作系统发行版收敛到 Redhat, Debian, Ubuntu 这三个主干上来。我们提供 PostgreSQL 16 在 EL8, Debian12, Ubuntu22.04 的第一类支持，并提供可以无需互联网进行安装的开源版离线软件包。
当然，EL7, EL9, Debian11, Ubuntu20.04 这些系统还是可以继续使用 Pigsty 的，但是不会有离线软件包，只能通过联网安装的模式进行首次部署。&lt;/p&gt;
&lt;div class=&#34;td-card-group card-group p-0 mb-4&#34;&gt;

&lt;div class=&#34;td-card card border me-4&#34;&gt;
&lt;div class=&#34;card-header&#34;&gt;
      &lt;strong&gt;Pigsty 开源版&lt;/strong&gt;
    &lt;/div&gt;
&lt;div class=&#34;card-body&#34;&gt;
    &lt;h5 class=&#34;card-title&#34;&gt;
        开源免费！&lt;/h5&gt;
    &lt;h6 class=&#34;card-title ms-2 text-muted&#34;&gt;
        自给自足的开源老司机&lt;/h6&gt;
    &lt;p class=&#34;card-text&#34;&gt;
        

&lt;p&gt;&lt;b&gt;PG支持：16&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;OS支持：三系主力版本&lt;/b&gt;&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;EL 8.9&lt;/li&gt;
&lt;li&gt;Debian 12&lt;/li&gt;
&lt;li&gt;Ubuntu 22.04&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;功能：&lt;a href=&#34;/zh/docs/about/module#核心模块&#34;&gt;核心模块&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;SLA：无&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;社区公益支持答疑&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/zh/docs/about/community&#34;&gt;微信讨论群组&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/issues/&#34;&gt;GitHub Issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://discord.gg/j5pG8qfKxU&#34;&gt;Discord Channel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;
      &lt;/div&gt;
  &lt;div class=&#34;card-footer&#34;&gt;
      自给自足的开源老司机&lt;/div&gt;
  &lt;/div&gt;



&lt;div class=&#34;td-card card border me-4&#34;&gt;
&lt;div class=&#34;card-header&#34;&gt;
      &lt;strong&gt;Pigsty 基础版&lt;/strong&gt;
    &lt;/div&gt;
&lt;div class=&#34;card-body&#34;&gt;
    &lt;h5 class=&#34;card-title&#34;&gt;
        50,000 ¥ / 年&lt;/h5&gt;
    &lt;h6 class=&#34;card-title ms-2 text-muted&#34;&gt;
        或 5,000 ¥/月&lt;/h6&gt;
    &lt;p class=&#34;card-text&#34;&gt;
        

&lt;p&gt;&lt;b&gt;PG支持：15，16&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;OS支持：五系最新小版本&lt;/b&gt;&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;EL 7.9 / 8.9 / 9.3 &lt;/li&gt;
&lt;li&gt;Ubuntu 20.04 / 22.04&lt;/li&gt;
&lt;li&gt;Debian 11 / 12&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;功能：&lt;a href=&#34;/zh/docs/about/module&#34;&gt;所有模块&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;SLA：工作日时效内响应&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;提供基础咨询服务：&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;软件缺陷修复&lt;/li&gt;
&lt;li&gt;疑难杂症分析&lt;/li&gt;
&lt;li&gt;升级路径支持&lt;/li&gt;
&lt;/ul&gt;


&lt;/p&gt;
      &lt;/div&gt;
  &lt;div class=&#34;card-footer&#34;&gt;
      需要兜底的成熟团队&lt;/div&gt;
  &lt;/div&gt;


&lt;div class=&#34;td-card card border me-4&#34;&gt;
&lt;div class=&#34;card-header&#34;&gt;
      &lt;strong&gt;Pigsty 专业版&lt;/strong&gt;
    &lt;/div&gt;
&lt;div class=&#34;card-body&#34;&gt;
    &lt;h5 class=&#34;card-title&#34;&gt;
        150,000 ¥ / 年&lt;/h5&gt;
    &lt;h6 class=&#34;card-title ms-2 text-muted&#34;&gt;
        或 15,000 ¥/月&lt;/h6&gt;
    &lt;p class=&#34;card-text&#34;&gt;
        

&lt;p&gt;&lt;b&gt;PG支持：12 - 16&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;OS支持：五系全部小版本&lt;/b&gt;&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;EL 7.x / 8.x / 9.x &lt;/li&gt;
&lt;li&gt;Ubuntu 20.x / 22.x&lt;/li&gt;
&lt;li&gt;Debian 11.x / 12.x&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;功能：&lt;a href=&#34;/zh/docs/about/module&#34;&gt;所有模块&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;SLA：5 x 8 (&lt;4h)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;提供专业咨询服务：&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;软件缺陷修复&lt;/li&gt;
&lt;li&gt;疑难杂症分析&lt;/li&gt;
&lt;li&gt;升级路径支持&lt;/li&gt;
&lt;li&gt;备份合规建议&lt;/li&gt;
&lt;li&gt;DBA答疑解惑&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;
      &lt;/div&gt;
  &lt;div class=&#34;card-footer&#34;&gt;
      普通用户的默认之选&lt;/div&gt;
  &lt;/div&gt;




&lt;div class=&#34;td-card card border me-4&#34;&gt;
&lt;div class=&#34;card-header&#34;&gt;
      &lt;strong&gt;Pigsty 企业版&lt;/strong&gt;
    &lt;/div&gt;
&lt;div class=&#34;card-body&#34;&gt;
    &lt;h5 class=&#34;card-title&#34;&gt;
        400,000 ¥ / 年&lt;/h5&gt;
    &lt;h6 class=&#34;card-title ms-2 text-muted&#34;&gt;
        或 40,000 ¥/月&lt;/h6&gt;
    &lt;p class=&#34;card-text&#34;&gt;
        

&lt;p&gt;&lt;b&gt;PG支持：9.0 - 16&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;OS支持：按需定制&lt;/b&gt;&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;EL, Debian, Ubuntu&lt;/li&gt;
&lt;li&gt;云上 Linux 操作系统&lt;/li&gt;
&lt;li&gt;国产操作系统与ARM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;功能：&lt;a href=&#34;/zh/docs/about/module&#34;&gt;所有模块&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;SLA：7 x 24 (紧急on-call)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;提供企业级咨询服务：&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;软件缺陷修复&lt;/li&gt;
&lt;li&gt;疑难杂症分析&lt;/li&gt;
&lt;li&gt;升级路径支持&lt;/li&gt;
&lt;li&gt;备份合规建议&lt;/li&gt;
&lt;li&gt;DBA答疑解惑&lt;/li&gt;
&lt;li&gt;故障根因定位&lt;/li&gt;
&lt;li&gt;年度架构评估&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;
      &lt;/div&gt;
  &lt;div class=&#34;card-footer&#34;&gt;
      严格 SLA 的关键场景&lt;/div&gt;
  &lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Pigsty 专业版与开源的区别主要在于兼容性与功能模块，例如 PostgreSQL 大版本支持范围，操作系统大版本支持范围，芯片架构支持范围。&lt;/p&gt;
&lt;p&gt;在原本的功能设计中，开源版将只包括 INFRA, NODE, PGSQL, ETCD 四个与 PostgreSQL 服务紧密关联的核心模块，我纠结了很久是否要将 MinIO, Redis, FerretDB (Mongo), 以及 Docker 四个 &lt;strong&gt;扩展模块&lt;/strong&gt; 划到专业版中，但最终还是决定将其保留在开源版里 —— 因为它们已经开源了，没道理再阉割掉。
但是与 PostgreSQL 相关性不大的其他模块以及后续的新功能模块，例如 Greenplum，MySQL，DuckDB，Kafka，Mongo, SealOS (Cloud) 都一定会划归专业版中。&lt;/p&gt;
&lt;p&gt;在兼容性上，Pigsty 专业版将提供 PG完整生命周期 12 - 16 五个大版本，在七个主力大版本与其兼容系统上的支持，专业版采用按需定制的方式，交付专业版源码包，以及用户所需操作系统精准小版本的全功能离线软件安装包，包含所有生命周期内 PG 大版本的所有可用扩展插件。
另外，在这个版本中，我们自己维护了完整的 ARM64 Prometheus &amp;amp; Grafana 软件源，也可以在专业版中提供 Arm64 的芯片架构支持了，如果有需要跑在 arm 服务器，或者 “国产芯片” 上，这是一个不错的特性。&lt;/p&gt;
&lt;p&gt;总的来说，Pigsty v2.7 的开源/专业版区分，在不影响开源用户使用体验的前提下，又给了企业用户一个充分的付费理由 ；）。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;展望未来&#34;&gt;展望未来&lt;/h2&gt;
&lt;p&gt;总的来说， Pigsty 已经达到我心目中比较理想的状态了。在功能上，它已经做的足够好了！在某些方面已经远超 RDS 了（比如扩展支持与监控系统）。&lt;/p&gt;
&lt;p&gt;但正所谓，酒香也怕巷子深 —— 所以接下来的工作重点会更多地转移到运营、营销、销售上去。开源项目的持续运营离不开用户与客户的支持，如果 Pigsty 帮助到了您，欢迎考虑赞助我们，或采购我们的服务订阅～。&lt;/p&gt;
&lt;p&gt;当然，说起运营 —— 就在下周，也就是五月28号，我将去温哥华参加 2024 PostgreSQL 开发者大会，a.k.a 第一届 PGConf.Dev （以前叫 PG Con）。共同探讨 PostgreSQL 的未来，并更进一步地把 Pigsty 推向全球！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;v270-发布注记&#34;&gt;v2.7.0 发布注记&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;亮点特性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;新增了大量强力扩展插件，特别是一些使用 &lt;code&gt;rust&lt;/code&gt; 与 &lt;code&gt;pgrx&lt;/code&gt; 进行开发的强力扩展：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/paradedb/paradedb/tree/dev/pg_search&#34;&gt;pg_search&lt;/a&gt; v0.7.0：使用 BM25 算法对 SQL 表进行全文搜索&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/paradedb/paradedb/tree/dev/pg_lakehouse&#34;&gt;pg_lakehouse&lt;/a&gt; v0.7.0：在对象存储（如 S3）和表格式（如 DeltaLake）上进行查询的引擎&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/paradedb/pg_analytics&#34;&gt;pg_analytics&lt;/a&gt; v0.6.1：加速 PostgreSQL 内部的分析查询处理&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/supabase/pg_graphql&#34;&gt;pg_graphql&lt;/a&gt; v1.5.4：为 PostgreSQL 数据库提供 GraphQL 支持&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/supabase/pg_jsonschema&#34;&gt;pg_jsonschema&lt;/a&gt; v0.3.1：提供 JSON Schema 校验的 PostgreSQL 扩展&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/supabase/wrappers&#34;&gt;wrappers&lt;/a&gt; v0.3.1：由 Supabase 提供的 PostgreSQL 外部数据封装器集合&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tembo-io/pgmq&#34;&gt;pgmq&lt;/a&gt; v1.5.2：轻量级消息队列，类似于 AWS SQS 和 RSMQ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tembo-io/pg_tier&#34;&gt;pg_tier&lt;/a&gt; v0.0.3：支将将冷数据分级存储到 AWS S3&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tembo-io/pg_vectorize&#34;&gt;pg_vectorize&lt;/a&gt; v0.15.0: 在 PG 中实现 RAG 向量检索的封装&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tembo-io/pg_later&#34;&gt;pg_later&lt;/a&gt; v0.1.0：现在执行 SQL，并在稍后获取结果&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/VADOSWARE/pg_idkit&#34;&gt;pg_idkit&lt;/a&gt; v0.2.3：生成多种流行类型的标识符（UUID）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kaspermarstal/plprql&#34;&gt;plprql&lt;/a&gt; v0.1.0：在 PostgreSQL 中使用 PRQL 查询语言&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zhuobie/pgsmcrypto&#34;&gt;pgsmcrypto&lt;/a&gt; v0.1.0：PostgreSQL 的国密 SM 算法扩展&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kelvich/pg_tiktoken&#34;&gt;pg_tiktoken&lt;/a&gt; v0.0.1：计算 OpenAI 使用的 Token 数量&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rustprooflabs/pgdd&#34;&gt;pgdd&lt;/a&gt; v0.5.2：通过纯 SQL 接口，访问数据目录的元数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，也有一些使用原生 C 和 C++ 开发的强力扩展：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pgspider/parquet_s3_fdw&#34;&gt;parquet_s3_fdw&lt;/a&gt; 1.1.0：从 S3 存取 Parquet 格式文件，作为湖仓之用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/plv8/plv8&#34;&gt;plv8&lt;/a&gt; 3.2.2：使用 V8 引擎，允许在 PostgreSQL 中使用 Javascript 语言编写存储过程&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tvondra/md5hash&#34;&gt;md5hash&lt;/a&gt; 1.0.1：用于存储原生MD5哈希数据类型，而非文本。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Percona-Lab/pg_tde&#34;&gt;pg_tde&lt;/a&gt; 1.0 alpha：PostgreSQL 的实验性加密存储引擎。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/df7cb/pg_dirtyread&#34;&gt;pg_dirtyread&lt;/a&gt; 2.6：从 PostgreSQL 表中读取未清理的死元组，用于脏读&lt;/li&gt;
&lt;li&gt;新的 deb PGDG 扩展：&lt;code&gt;pg_roaringbitmap&lt;/code&gt;, &lt;code&gt;pgfaceting&lt;/code&gt;, &lt;code&gt;mobilitydb&lt;/code&gt;, &lt;code&gt;pgsql-http&lt;/code&gt;, &lt;code&gt;pg_hint_plan&lt;/code&gt;, &lt;code&gt;pg_statviz&lt;/code&gt;, &lt;code&gt;pg_rrule&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;新的 rpm PGDG 扩展：&lt;code&gt;pg_profile&lt;/code&gt;, &lt;code&gt;pg_show_plans&lt;/code&gt;, 使用 PGDG 的 &lt;code&gt;pgsql_http&lt;/code&gt;, &lt;code&gt;pgsql_gzip&lt;/code&gt;, &lt;code&gt;pg_net&lt;/code&gt;, &lt;code&gt;pg_bigm&lt;/code&gt; 替代 Pigsty 维护的 RPM。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新特性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;允许 Pigsty 在特定 Docker 虚拟机镜像中运行。&lt;/li&gt;
&lt;li&gt;针对 Ubuntu 与 EL 系操作系统发行版准备了 INFRA &amp;amp; PGSQL 模块的 arm64 软件包&lt;/li&gt;
&lt;li&gt;新安装脚本，可从 cloudflare 下载软件，可以指定版本，提供更完善的提示信息。&lt;/li&gt;
&lt;li&gt;新增的 PGSQL PITR 监控面板，用于在 PITR 过程中提供更好的可观测性&lt;/li&gt;
&lt;li&gt;针对在 Docker 虚拟机镜像中运行 Pigsty 进行了一系列铺垫与准备。&lt;/li&gt;
&lt;li&gt;新增了 &lt;a href=&#34;https://github.com/Vonng/pigsty/issues/402&#34;&gt;防呆设计&lt;/a&gt;，避免在非 Pigsty 纳管的节点上运行 pgsql.yml 剧本 （&lt;a href=&#34;https://github.com/AdamYLK&#34;&gt;AdamYLK&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;针对每个支持的发行版大版本配置了独立的配置文件：el7, el8, el9, debian11, debian12, ubuntu20, ubuntu22&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Docker应用模板&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/tree/master/app/odoo&#34;&gt;Odoo&lt;/a&gt;：开源 ERP 软件与插件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/tree/master/app/jupyter&#34;&gt;Jupyter&lt;/a&gt;：使用容器运行 Jupyter Notebook&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/tree/master/app/polardb&#34;&gt;PolarDB&lt;/a&gt;：运行“国产数据库” PolarDB，应付信创检查！&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/tree/master/app/supabase&#34;&gt;supabase&lt;/a&gt;：更新至最近的 GA 版本&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/tree/master/app/bytebase&#34;&gt;bytebase&lt;/a&gt;：使用 &lt;code&gt;latest&lt;/code&gt; 标签替代特定版本号。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Vonng/pigsty/tree/master/app/pg_exporter&#34;&gt;pg_exporter&lt;/a&gt;：更新了 Docker 镜像的例子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;软件版本升级&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PostgreSQL 16.3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Patroni 3.3.0&lt;/li&gt;
&lt;li&gt;pgBackRest 2.51&lt;/li&gt;
&lt;li&gt;VIP-Manager v2.5.0&lt;/li&gt;
&lt;li&gt;Haproxy 2.9.7&lt;/li&gt;
&lt;li&gt;Grafana 10.4.2&lt;/li&gt;
&lt;li&gt;Prometheus 2.51&lt;/li&gt;
&lt;li&gt;Loki &amp;amp; Promtail: 3.0.0 (警告：大版本非兼容性变更！)&lt;/li&gt;
&lt;li&gt;Alertmanager 0.27.0&lt;/li&gt;
&lt;li&gt;BlackBox Exporter 0.25.0&lt;/li&gt;
&lt;li&gt;Node Exporter 1.8.0&lt;/li&gt;
&lt;li&gt;pgBackrest Exporter 0.17.0&lt;/li&gt;
&lt;li&gt;duckdb 0.10.2&lt;/li&gt;
&lt;li&gt;etcd 3.5.13&lt;/li&gt;
&lt;li&gt;minio-20240510014138 / mcli-20240509170424&lt;/li&gt;
&lt;li&gt;pev2 v1.8.0 -&amp;gt; v1.11.0&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pgvector&lt;/strong&gt; 0.6.1 -&amp;gt; 0.7.0&lt;/li&gt;
&lt;li&gt;pg_tle: v1.3.4 -&amp;gt; v1.4.0&lt;/li&gt;
&lt;li&gt;hydra: v1.1.1 -&amp;gt; v1.1.2&lt;/li&gt;
&lt;li&gt;duckdb_fdw: v1.1.0 重新针对 libduckdb 0.10.2 进行编译&lt;/li&gt;
&lt;li&gt;pg_bm25 0.5.6 -&amp;gt; pg_search 0.7.0&lt;/li&gt;
&lt;li&gt;pg_analytics: 0.5.6 -&amp;gt; 0.6.1&lt;/li&gt;
&lt;li&gt;pg_graphql: 1.5.0 -&amp;gt; 1.5.4&lt;/li&gt;
&lt;li&gt;pg_net 0.8.0 -&amp;gt; 0.9.1&lt;/li&gt;
&lt;li&gt;pg_sparse (deprecated)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺陷修复&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修复了 pg_exporters 角色中的变量空白问题。&lt;/li&gt;
&lt;li&gt;修复了 &lt;code&gt;minio_cluster&lt;/code&gt; 变量没有在全局配置中注释掉的问题&lt;/li&gt;
&lt;li&gt;修复了 EL7 模板中的 &lt;code&gt;postgis34&lt;/code&gt; 插件名称问题，应该使用 &lt;code&gt;postgis33&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修复了 EL8 &lt;code&gt;python3.11-cryptography&lt;/code&gt; 依赖名的问题，上游现在变更为 &lt;code&gt;python3-cryptography&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;修复了 &lt;code&gt;/pg/bin/pg-role&lt;/code&gt; 无法在非交互式 Shell 模式下获取操作系统用户名的问题&lt;/li&gt;
&lt;li&gt;修复了 &lt;code&gt;/pg/bin/pg-pitr&lt;/code&gt; 无法正确提示 &lt;code&gt;-X&lt;/code&gt; &lt;code&gt;-P&lt;/code&gt; 选项的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;API变更&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新参数 &lt;code&gt;node_write_etc_hosts&lt;/code&gt;，用于控制是否向目标节点的 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件写入静态 DNS 解析记录&lt;/li&gt;
&lt;li&gt;新增了 &lt;code&gt;prometheus_sd_dir&lt;/code&gt; 参数，用于指定 Prometheus 静态服务发现的目标文件目录&lt;/li&gt;
&lt;li&gt;configure 脚本新增了 &lt;code&gt;-x|--proxy&lt;/code&gt; 参数，用于将当前环境的代理信息写入配置文件 by @waitingsong in &lt;a href=&#34;https://github.com/Vonng/pigsty/pull/405&#34;&gt;https://github.com/Vonng/pigsty/pull/405&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;不再使用 Promtail &amp;amp; Loki 解析 Infra 节点上的 Nginx 日志细节标签，因为这样会导致标签基数爆炸。&lt;/li&gt;
&lt;li&gt;在 Prometheus 配置中使用 alertmanager API v2 替代 v1&lt;/li&gt;
&lt;li&gt;在 PGSQL 模块中，使用 &lt;code&gt;/pg/cert/ca.crt&lt;/code&gt; 代替 &lt;code&gt;/etc/pki/ca.crt&lt;/code&gt;，降低对节点根证书的依赖。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新的贡献者&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@NeroSong made their first contribution in &lt;a href=&#34;https://github.com/Vonng/pigsty/pull/373&#34;&gt;https://github.com/Vonng/pigsty/pull/373&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;@waitingsong made their first contribution in &lt;a href=&#34;https://github.com/Vonng/pigsty/pull/405&#34;&gt;https://github.com/Vonng/pigsty/pull/405&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;完整的变更日志&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Vonng/pigsty/compar&#34;&gt;https://github.com/Vonng/pigsty/compar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;离线软件包校验和&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ec271a1d34b2b1360f78bfa635986c3a  pigsty-pkg-v2.7.0.el8.x86_64.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f3304bfd896b7e3234d81d8ff4b83577  pigsty-pkg-v2.7.0.debian12.x86_64.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5b071c2a651e8d1e68fc02e7e922f2b3  pigsty-pkg-v2.7.0.ubuntu22.x86_64.tgz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: 为什么PostgreSQL是未来数据库的事实标准？</title>
      <link>/zh/blog/pg/pg-for-everything/</link>
      <pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/pg/pg-for-everything/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/pg/pg-for-everything/featured_hu0adb0cba2e58006a0b8485a8554ea3ed_782106_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;p&gt;如今，软件开发中最大的趋势之一，是 PostgreSQL 正在成为事实上的数据库标准。已经有一些博客阐述了如何做到 万物皆用 PostgreSQL，但还没有多少文章能解释这一现象背后的原因。（更重要的是，为什么这件事很重要） —— 所以我写下了这篇文章。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文作者为 Ajay Kulkarni，TimescaleDB CEO ，原文发表于 TimescaleDB 博客：《&lt;a href=&#34;https://www.timescale.com/blog/postgres-for-everything/&#34;&gt;Why PostgreSQL Is the Bedrock for the Future of Data&lt;/a&gt;》。&lt;/p&gt;
&lt;p&gt;译者冯若航，PostgreSQL 专家，开源 RDS PG —— Pigsty 作者。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;01 PostgreSQL 正成为事实上的数据库标准&lt;/li&gt;
&lt;li&gt;02 万物都开始计算机化&lt;/li&gt;
&lt;li&gt;03 PostgreSQL 王者归来&lt;/li&gt;
&lt;li&gt;04 解放双手，构建未来，拥抱 PostgreSQL&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;postgresql-正成为事实上的数据库标准&#34;&gt;PostgreSQL 正成为事实上的数据库标准&lt;/h2&gt;
&lt;p&gt;在过去几个月里，“一切皆可用 PostgreSQL 解决” 已经成为开发者们的战斗口号：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PostgreSQL 并不是一个简单的关系型数据库，而是一个数据管理的抽象框架，具有吞噬整个数据库世界的力量。而这也是正在发生的事情 —— “一切皆用 Postgres” 已经不再是少数精英团队的前沿探索，而是成为了一种进入主流视野的最佳实践。&lt;/p&gt;
&lt;p&gt;—— 《&lt;a href=&#34;https://pigsty.io/zh/blog/pg/pg-eat-db-world/&#34;&gt;PostgreSQL正在吞噬数据库世界&lt;/a&gt;》，冯若航（me！）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在初创公司中简化技术栈、减少组件、加快开发速度、降低风险并提供更多功能特性的方法之一就是**“一切皆用 Postgres”**。Postgres 能够取代许多后端技术，包括 Kafka、RabbitMQ、ElasticSearch，Mongo和 Redis ，至少到数百万用户时都毫无问题。&lt;/p&gt;
&lt;p&gt;——《&lt;a href=&#34;https://pigsty.io/zh/blog/pg/just-use-pg/&#34;&gt;技术极简主义：一切皆用Postgres&lt;/a&gt;》， Stephan Schmidt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;听说 Postgres 被称为“数据库届的瑞士军刀”，嗯…… 是的，听起来很准确！ 不确定是谁第一个提出来的，但这是一个非常恰当的观察！ —— &lt;a href=&#34;https://twitter.com/GergelyOrosz/status/1780210365369885009&#34;&gt;Gergely Orosz&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;PostgreSQL 天生自带护城河。它发展稳定，一直保持着对SQL标准的坚实支持，如今已成为数据库的热门选择。它有着极佳的文档质量（是我迄今见过的最好的之一）。与PostgreSQL集成非常容易，最近我看到的每一个数据工具初创公司通常都将 PostgreSQL 作为其第一个数据源连接选择。（我相信这也是因为PG功能丰富并有着强大的社区支持）—— &lt;a href=&#34;https://twitter.com/StalwartCoder/status/1780216838166581418&#34;&gt;Abhishek&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;学习 Postgres 无疑是我职业生涯中投资回报率最高的技术之一。如今，像 @neondatabase，@supabase，和 @TimescaleDB 这样的优秀公司都是基于 PostgreSQL 构建的。现在它对我非常重要，足以与 React 和 iOS 开发并驾齐驱 —— &lt;a href=&#34;https://twitter.com/htormey/status/1780285782554706405&#34;&gt;Harry Tormey&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;YouTube视频：&lt;a href=&#34;https://www.youtube.com/watch?v=VEWXmdjzIpQ&amp;t=2s&#34;&gt;等等&amp;hellip;PostgreSQL能做什么？&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“当我第一次听说 Postgres 时（那时候MySQL绝对是主导者），有人对我说这是“那些数学怪咖弄出来的数据库”，然后我意识到：没错，就是这些人，才适合做数据库。”  —— &lt;a href=&#34;https://twitter.com/mesetatron/status/1780436890602307733&#34;&gt;Yuan Gao&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“PG实现了惊人的复兴：现在 NoSQL 已经没落，Oracle 又拥有了MySQL，你还有什么选择呢？”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;—— &lt;a href=&#34;https://twitter.com/mjkhanga/status/1780230248728350730&#34;&gt;Manoj Khangaonkar&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;*“Postgres不仅仅是一个关系数据库，它是一种生活方式。” —— &lt;a href=&#34;https://news.ycombinator.com/item?id=39874270&#34;&gt;ilaksh&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;凭借其坚如磐石的基础，加上其原生功能与扩展插件带来的强大功能集，开发者现在可以单凭 PostgreSQL 解决所有问题，用简洁明了的方式，取代复杂且脆弱的数据架构。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/pg-for-everything/pg-for-everything-1.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;来源：&lt;a href=&#34;https://www.amazingcto.com/postgres-for-everything/&#34;&gt;Just Use Postgres for Everything&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这也许可以解释为什么去年 PostgreSQL 在专业开发者中，在最受欢迎的数据库排行榜上，从MySQL手中夺得了榜首位置（60,369 名受访者）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/pg-for-everything/pg-for-everything-2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在过去一年中，你在哪些数据库环境中进行了大量开发工作，以及在接下来的一年中你想在哪些数据库环境中工作？超过49%的受访者选择了PostgreSQL。&lt;/strong&gt; —— 来源：&lt;a href=&#34;/zh/&#34;&gt;StackOverflow 2023 年度用户调研&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这些结果来自 2023 年的 &lt;a href=&#34;https://survey.stackoverflow.co/2023/#most-popular-technologies-database-prof&#34;&gt;Stack Overflow开发者调查&lt;/a&gt;。如果纵观过去几年，可以看到 PostgreSQL 的使用率在过去几年中有着稳步增长的趋势：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/pg-for-everything/pg-for-everything-3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 2020 ~ 2022 年间，根据 StackOverflow 的开发者调查显示，PostgreSQL 是第二受欢迎的数据库，其使用率持续上升。来源： &lt;a href=&#34;https://survey.stackoverflow.co/2020#technology-databases&#34;&gt;&lt;strong&gt;2020&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&#34;https://survey.stackoverflow.co/2021/#section-most-popular-technologies-databases&#34;&gt;&lt;strong&gt;2021&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&#34;https://survey.stackoverflow.co/2022#section-most-popular-technologies-databases&#34;&gt;&lt;strong&gt;2022&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这不仅仅是小型初创公司和业余爱好者里的趋势。实际上，在各种规模的组织中，PostgreSQL 的使用率都在增长。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/pg-for-everything/pg-for-everything-4.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PostgreSQL 使用率变化，按公司规模划分（ &lt;a href=&#34;https://www.timescale.com/state-of-postgres/2023&#34;&gt;TimescaleDB 2023 社区调研&lt;/a&gt;）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 Timescale，我们这一趋势对我们并不陌生。我们已经是 PostgreSQL 的信徒近十年了。这就是为什么我们的业务建立在 PostgreSQL 之上，以及为什么我们是 &lt;a href=&#34;https://www.linkedin.com/posts/ajaykulkarni_edb-just-published-the-most-recent-analysis-activity-7163189940648947712-amIR?utm_source=share&amp;utm_medium=member_desktop&#34;&gt;PostgreSQL 的顶级贡献者之一&lt;/a&gt;，为什么我们每年举办 &lt;a href=&#34;https://www.timescale.com/state-of-postgres/2023&#34;&gt;PostgreSQL 社区调研&lt;/a&gt;（上述提到），以及为什么我们支持 PostgreSQL 的 Meetup 与大会。就个人而言，我已经使用 PostgreSQL 超过 13 年了（当时我从 MySQL 转换过来）。&lt;/p&gt;
&lt;p&gt;已经有一些博客文章讨论了 &lt;strong&gt;如何&lt;/strong&gt; （How）将 PostgreSQL 用于一切问题，但还没有讨论 &lt;strong&gt;为什么&lt;/strong&gt; （Why）会这样发生（更重要的是，&lt;em&gt;为什么这很重要&lt;/em&gt;）。&lt;/p&gt;
&lt;p&gt;直到现在。&lt;/p&gt;
&lt;p&gt;但要理解为什么会发生这种情况，我们必须先了解一个更为基础的趋势以及这个趋势是如何改变人类现实的基本性质的。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;02-一切都变成了电脑&#34;&gt;02 一切都变成了电脑&lt;/h2&gt;
&lt;p&gt;一切都变成了计算机 —— 我们的汽车、家庭、城市、农场、工厂、货币以及各种事物，包括我们自己，也正在变得更加数字化。我们每年都在更进一步地数字化自己的身份和行为：如何购物，如何娱乐，如何收藏艺术，如何寻找答案，如何交流和连接，以及如何表达自我。&lt;/p&gt;
&lt;p&gt;二十二年前，这种 “无处不在的计算” 还是一个大胆的想法。那时，我是麻省理工学院人工智能实验室的研究生，还在搞着智能环境的&lt;a href=&#34;https://dspace.mit.edu/bitstream/handle/1721.1/8078/51181976-MIT.pdf;sequence=2&#34;&gt;论文&lt;/a&gt;。我的研究得到了麻省理工学院&lt;a href=&#34;http://oxygen.lcs.mit.edu/Overview.html&#34;&gt;氧气计划&lt;/a&gt;的支持，该计划有一个崇高而大胆的目标：让计算像我们呼吸的空气一样无处不在。就那时候而言，我们自己的服务器架设在一个小隔间中。&lt;/p&gt;
&lt;p&gt;但从那以后，很多事情都变了。计算现在无处不在：在我们的桌面上，在我们的口袋里，在我们的 “云” 中，以及在我们的各种物品中。我们预见到了这些变化，但没有预见到这些变化的二级效应：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;无处不在的计算导致了无处不在的数据&lt;/strong&gt;。随着每一种新的计算设备的出现，我们收集了更多关于我们现实世界的信息：人类数据、机器数据、商业数据、环境数据和合成数据。这些数据正在淹没我们的世界。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据的洪流引发了数据库的寒武纪大爆炸&lt;/strong&gt;。所有这些新的数据源需要新的存储地点。二十年前，可能只有五种可行的数据库选项。而如今，有数百种，大多数都是针对特定的数据而特别设计的，且每个月都在涌现新的数据库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更多的数据和数据库导致了更多的软件复杂性&lt;/strong&gt;。正确选择适合你软件工作负载的数据库已不再简单。相反，开发者被迫拼凑复杂的架构，这可能包括：关系数据库（因其可靠性）、非关系数据库（因其可伸缩性）、数据仓库（因其分析能力）、对象存储（因其便宜归档冷数据的能力）。这种架构甚至可能会有更为专业特化的组件，例如时序数据库或向量数据库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更多的复杂性意味着留给构建软件的时间越短&lt;/strong&gt;。架构越复杂，它就越脆弱，就需要更复杂的应用逻辑，并且会拖慢开发速度，留给开发的时间就越少。复杂性不是一项优点，而是一项真正的成本。&lt;/p&gt;
&lt;p&gt;随着计算越来越普遍，我们的现实生活越来越与计算交织在一起。我们把计算带入了我们的世界，也把我们自己带入了计算的世界。我们不再仅仅有着线下的身份，而是一个线下与线上所作所为的混合体。&lt;/p&gt;
&lt;p&gt;在这个新现实中，软件开发者是人类的先锋。正是我们构建了那些塑造这一新现实的软件。&lt;/p&gt;
&lt;p&gt;但是，开发者现在被数据淹没，被淹没在数据库的复杂性中&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这意味着开发者 ——  花费越来越多的时间，在管理内部架构上，而不是去塑造未来。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们是如何走到这一步的？&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第一部分逐波递进的计算浪潮&#34;&gt;第一部分：逐波递进的计算浪潮&lt;/h3&gt;
&lt;p&gt;无处不在的计算带来了无处不在数据，这一变化并非一夜之间发生，而是在几十年中逐波递进：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主机/大型机 (1950 年代+)&lt;/li&gt;
&lt;li&gt;个人计算机 (1970 年代+)&lt;/li&gt;
&lt;li&gt;互联网 (1990 年代+)&lt;/li&gt;
&lt;li&gt;手机 (2000 年代+)&lt;/li&gt;
&lt;li&gt;云计算 (2000 年代+)&lt;/li&gt;
&lt;li&gt;物联网 (2010 年代+)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每一波技术浪潮都使计算机变得更小、更强大且更普及。每一波也在前一波的基础上进行建设：个人计算机是小型化的主机；互联网是连接计算机的网络；智能手机则是连接互联网的更小型计算机；云计算民主化了计算资源的获取；物联网则是将智能手机的组件重构为连接到云的其他物理设备。&lt;/p&gt;
&lt;p&gt;但在过去二十年中，计算技术的进步不仅仅出现在物理世界中，也体现在数字世界中，反映了我们的混合现实：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;社交网络 (2000 年代+)&lt;/li&gt;
&lt;li&gt;区块链 (2010 年代+)&lt;/li&gt;
&lt;li&gt;生成式人工智能 (2020 年代+)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每一波新的计算浪潮，我们都能从中获取有关我们混合现实的新信息源：人类的数字残留数据、机器数据、商业数据和合成数据。未来的浪潮将创造更多数据。所有这些数据都推动了新的技术浪潮，其中最新的是生成式人工智能，进一步塑造了我们的现实。&lt;/p&gt;
&lt;p&gt;计算浪潮不是孤立的，而是像多米诺骨牌一样相互影响。最初的数据涓流很快变成了数据洪流。接着，数据洪流又促使越来越多的数据库的创建。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第二部分数据库持续增长&#34;&gt;第二部分：数据库持续增长&lt;/h3&gt;
&lt;p&gt;所有这些新的数据来源，都需要新的地方来存储 —— 即数据库。&lt;/p&gt;
&lt;p&gt;大型机从 &lt;a href=&#34;https://en.wikipedia.org/wiki/Integrated_Data_Store&#34;&gt;Integrated Data Store&lt;/a&gt;（1964 年）开始，以及后来的 &lt;a href=&#34;https://en.wikipedia.org/wiki/IBM_System_R&#34;&gt;System R&lt;/a&gt;（1974 年） —— 第一个 SQL 数据库。个人计算机推动了第一批商业数据库的崛起：受 System R 启发的 &lt;a href=&#34;https://en.wikipedia.org/wiki/Oracle_Corporation&#34;&gt;Oracle&lt;/a&gt;（1977 年）；还有 &lt;a href=&#34;https://en.wikipedia.org/wiki/IBM_Db2&#34;&gt;DB2&lt;/a&gt;（1983 年）；以及微软对 Oracle 的回应： &lt;a href=&#34;https://en.wikipedia.org/wiki/Microsoft_SQL_Server&#34;&gt;SQL Server&lt;/a&gt;（1989 年）。&lt;/p&gt;
&lt;p&gt;互联网的协作力量促进了开源软件的崛起，包括第一个开源数据库：&lt;a href=&#34;https://en.wikipedia.org/wiki/MySQL&#34;&gt;MySQL&lt;/a&gt;（1995 年），&lt;a href=&#34;https://en.wikipedia.org/wiki/PostgreSQL&#34;&gt;PostgreSQL&lt;/a&gt;（1996 年）。智能手机推动了 &lt;a href=&#34;https://en.wikipedia.org/wiki/SQLite&#34;&gt;SQLite&lt;/a&gt;（2000 年）的广泛传播。&lt;/p&gt;
&lt;p&gt;互联网还产生了大量数据，这导致了第一批非关系型（NoSQL）数据库的出现：&lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_Hadoop&#34;&gt;Hadoop&lt;/a&gt;（2006 年）；&lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_Cassandra&#34;&gt;Cassandra&lt;/a&gt;（2008 年）；&lt;a href=&#34;https://en.wikipedia.org/wiki/MongoDB&#34;&gt;MongoDB&lt;/a&gt;（2009 年）。有人将这个时期称为 “大数据” 时代。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第三部分数据库爆炸式增长&#34;&gt;第三部分：数据库爆炸式增长&lt;/h3&gt;
&lt;p&gt;大约在 2010 年，我们开始达到一个临界点。在此之前，软件应用通常依赖单一数据库 —— 例如 Oracle、MySQL、PostgreSQL —— 选型是相对简单的。&lt;/p&gt;
&lt;p&gt;但 “大数据” 越来越大：物联网带来了机器数据的大爆炸；得益于 iPhone 和 Android，智能手机使用开始呈指数级增长，排放出了更多的人类数字 “废气”；云计算让计算和存储资源的获取变得普及，并加剧了这些趋势。生成式人工智能最近使这个问题更加严重 —— 它拉动了向量数据。&lt;/p&gt;
&lt;p&gt;随着被收集的数据量增长，我们看到了专用数据库的兴起：&lt;a href=&#34;https://en.wikipedia.org/wiki/Neo4j&#34;&gt;Neo4j&lt;/a&gt; 用于图形数据（2007 年），&lt;a href=&#34;https://en.wikipedia.org/wiki/Redis&#34;&gt;Redis&lt;/a&gt; 用于基础键值存储（2009 年），&lt;a href=&#34;https://en.wikipedia.org/wiki/InfluxDB&#34;&gt;InfluxDB&lt;/a&gt; 用于时序数据（2013 年），&lt;a href=&#34;https://en.wikipedia.org/wiki/ClickHouse&#34;&gt;ClickHouse&lt;/a&gt; 用于大规模分析（2016 年），Pinecone 用于向量数据（2019 年），等等。&lt;/p&gt;
&lt;p&gt;二十年前，可行的数据库选项可能只有五种。如今，却有&lt;a href=&#34;https://db-engines.com/en/ranking&#34;&gt;数百种&lt;/a&gt;，它们大多专为特定用例设计，每个月都有新的数据库出现。虽然早期数据库已经承诺 &lt;em&gt;通用的全能性&lt;/em&gt;，这些专用的数据库提供了&lt;em&gt;特定场景下的利弊权衡&lt;/em&gt;，而这些权衡是否有意义，取决于您的具体用例。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第四部分数据库越多问题越多&#34;&gt;第四部分：数据库越多，问题越多&lt;/h3&gt;
&lt;p&gt;面对这种数据洪流，以及各种具有不同利弊权衡的专用数据库，开发者别无选择，只能拼凑复杂的架构。&lt;/p&gt;
&lt;p&gt;这些架构通常包括一个关系数据库（为了可靠性）、一个非关系数据库（为了可扩展性）、一个数据仓库（用于数据分析）、一个对象存储（用于便宜的归档），甚至更专用的组件，如时间序列或向量数据库，用于那些特定的用例。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/pg-for-everything/pg-for-everything-5.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是，越复杂的架构就越脆弱，就需要更复杂的应用逻辑，并且会拖慢开发速度，留给开发的时间就越少。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这意味着开发者 ——  花费越来越多的时间，在管理内部架构上，而不是去塑造未来。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有更好的办法解决这个问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;postgresql王者归来&#34;&gt;PostgreSQL王者归来&lt;/h2&gt;
&lt;p&gt;故事在这里发生转折，我们的主角不再是一个崭新的数据库，而是一个老牌数据库，它的名字只有 &lt;del&gt;核心&lt;/del&gt;开发人员才会喜欢：PostgreSQL。&lt;/p&gt;
&lt;p&gt;起初，PostgreSQL 在 MySQL 之后居于第二位，且与其相距甚远。MySQL 使用起来更简单，背后有公司支持，而且名字朗朗上口。但后来 MySQL 被 Sun Microsystems 收购（2008年），随后又被 Oracle 收购（2009年）。于是在那时，软件开发者们开始重新考虑使用什么数据库 —— 他们原本视 MySQL 为摆脱昂贵的 Oracle 专制统治的自由软件救星。&lt;/p&gt;
&lt;p&gt;与此同时，一个由几家小型独立公司赞助的分布式开发者社区，正在慢慢地让 PostgreSQL 变得越来越好。他们默默地添加了强大的功能，例如全文检索（2008年）、窗口函数（2009年）和 JSON 支持（2012年）。他们还通过流复制、热备份、原地升级（2010年）、逻辑复制（2017年）等功能，使数据库更加坚固可靠，同时勤奋地修复缺陷，并优化粗糙的边缘场景。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;postgresql-已经成为一个平台&#34;&gt;PostgreSQL 已经成为一个平台&lt;/h3&gt;
&lt;p&gt;在此期间，PostgreSQL 添加的最具影响力的功能之一，是支持 &lt;strong&gt;扩展&lt;/strong&gt;（Extension）：可以为 PostgreSQL 添加功能的软件模块（2011年）。&lt;a href=&#34;https://www.timescale.com/learn/postgres-extensions&#34;&gt;扩展让更多开发者能够独立、迅速且几乎无需协调地为 PostgreSQL 添加功能&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;得益于扩展机制，PostgreSQL 开始变成不仅仅是一个出色的关系型数据库。得益于 PostGIS，它成为了一个出色的地理空间数据库；得益于 TimescaleDB，它成为了一个出色的时间序列数据库；+ hstore，键值存储数据库；+ AGE，图数据库；+ pgvector，向量数据库。PostgreSQL 成为了一个平台。&lt;/p&gt;
&lt;p&gt;现在，开发者出于各种目的选用 PostgreSQL。例如为了可靠性、为了可伸缩性（替代NoSQL）、为了数据分析（替代数仓）。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;大数据则何如&#34;&gt;大数据则何如？&lt;/h3&gt;
&lt;p&gt;此时，聪明的读者应该会问，“那么大数据呢？”  —— 这是个好问题。从历史上看，“大数据”（例如，几百TB甚至上PB）—— 及相关的分析查询，曾经对于 PostgreSQL 这种本身不支持水平扩展的数据库来说，并不是合适的场景。&lt;/p&gt;
&lt;p&gt;但这里的情况也在改变，去年十一月，我们推出了 “&lt;a href=&#34;https://www.timescale.com/blog/scaling-postgresql-for-cheap-introducing-tiered-storage-in-timescale/&#34;&gt;分层存储&lt;/a&gt;”，它可以自动将你的数据在磁盘和对象存储（S3）之间进行分级存储，实际上实现了 &lt;strong&gt;无限存储表&lt;/strong&gt; 的能力。&lt;/p&gt;
&lt;p&gt;所以从历史上看，虽然 “大数据” 曾经是 PostgreSQL 的短板，但很快将没有任何工作负载是太大而处理不了的。&lt;/p&gt;
&lt;p&gt;PostgreSQL 是答案。PostgreSQL 是我们解放自我，并构建未来的方式。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;解放自我构建未来拥抱-postgresql&#34;&gt;解放自我，构建未来，拥抱 PostgreSQL&lt;/h2&gt;
&lt;p&gt;相比于在各种异构数据库系统中纠结（每一种都有自己的查询语言和怪癖！），我们可以依靠世界上功能最丰富，而且可能是最可靠的数据库：PostgreSQL。我们可以不再耗费大量时间在基础设施上，而将更多时间用于构建未来。&lt;/p&gt;
&lt;p&gt;而且 PostgreSQL 还在不断进步中。PostgreSQL 社区在不断改进内核。而现在有更多的公司参与到 PostgreSQL 的开发中，包括那些巨无霸供应商。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pigsty-ecosystem.png&#34; src=&#34;/img/pigsty/ecosystem.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;今天的 PostgreSQL 生态 —— 《&lt;a href=&#34;https://pigsty.io/zh/blog/pg/pg-eat-db-world/&#34;&gt;PostgreSQL正在吞噬数据库世界&lt;/a&gt;》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;同样，也有更多创新的独立公司围绕着 PostgreSQL 内核开发，以改善其使用体验：&lt;a href=&#34;https://supabase.com/&#34;&gt;Supabase&lt;/a&gt;（2020年）正在将 PostgreSQL 打造成一个适用于网页和移动开发者的 Firebase 替代品；&lt;a href=&#34;https://neon.tech/&#34;&gt;Neon&lt;/a&gt;（2021年）和 &lt;a href=&#34;https://xata.io/&#34;&gt;Xata&lt;/a&gt;（2022年）都在实现将 PostgreSQL “伸缩至零”， 以适应间歇性 Serverless 工作负载；&lt;a href=&#34;https://tembo.io/&#34;&gt;Tembo&lt;/a&gt;（2022年）为各种用例提供开箱即用的技术栈；&lt;a href=&#34;https://www.thenile.dev/&#34;&gt;Nile&lt;/a&gt;（2023年）正在使 PostgreSQL 更易于用于 SaaS 应用；还有许多其他公司。当然，还有我们，&lt;a href=&#34;https://www.timescale.com/&#34;&gt;&lt;strong&gt;Timescale&lt;/strong&gt;&lt;/a&gt;（2017年）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;此处省略三节关于 TimescaleDB 的介绍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;尾声尤达&#34;&gt;尾声：尤达？&lt;/h2&gt;
&lt;p&gt;我们的现实世界，无论是物理的还是虚拟的，离线的还是在线的，都充满着数据。正如尤达所说，数据环绕着我们，约束着我们。这个现实越来越多地由软件所掌控，而这些软件正是由我们这些开发者编写的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/pg/pg-for-everything/pg-for-everything-yoda.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;这一点值得赞叹。特别是不久之前，在2002年，当我还是MIT的研究生时，世界曾经对软件失去了信心。我们当时正在从互联网泡沫破裂中复苏。主流媒体 “&lt;a href=&#34;https://hbr.org/2003/05/it-doesnt-matter&#34;&gt;IT并不重要&lt;/a&gt;”。那时对一个软件开发者来说，在金融行业找到一份好工作比在科技行业更容易——这也是我许多 MIT 同学所选择的道路，我自己也是如此。&lt;/p&gt;
&lt;p&gt;但今天，特别是在这个生成式AI的世界里，我们是塑造未来的人。我们是未来的建设者。我们应该感到惊喜。&lt;/p&gt;
&lt;p&gt;一切都在变成计算机。这在很大程度上是一件好事：我们的汽车更安全，我们的家居环境更舒适，我们的工厂和农场更高效。我们比以往任何时候都能即时获取更多的信息。我们彼此之间的联系更加紧密。有时，它让我们更健康，更幸福。&lt;/p&gt;
&lt;p&gt;但并非总是如此。就像原力一样，算力也有光明和黑暗的一面。越来越多的证据表明，手机和社交媒体直接导致了&lt;a href=&#34;https://www.amazon.com/Anxious-Generation-Rewiring-Childhood-Epidemic-ebook/dp/B0C9F37G28/ref=sr_1_3&#34;&gt;青少年心理疾病的全球流行&lt;/a&gt;。我们仍在努力应对&lt;a href=&#34;https://www.amazon.com/Coming-Wave-Technology-Twenty-first-Centurys-ebook/dp/B0BSKW45KB/ref=sr_1_1&#34;&gt;AI于合成生物学&lt;/a&gt;的影响。当我们拥抱更强大的力量时，应该意识到这也伴随着相应的责任。&lt;/p&gt;
&lt;p&gt;我们掌管着用于构建未来的宝贵资源：我们的时间和精力。我们可以选择把这些资源花在管理基础设施上，或者全力拥抱 PostgreSQL，构建正确的未来。&lt;/p&gt;
&lt;p&gt;我想你已经知道我们的立场了。&lt;/p&gt;
&lt;p&gt;感谢阅读。#Postgres4Life&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 删库：Google云爆破了大基金的整个云账户</title>
      <link>/zh/blog/cloud/gcp-unisuper/</link>
      <pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/gcp-unisuper/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/gcp-unisuper/featured_hu50ab7c4fbc198efd9360dce2beeed295_606930_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;p&gt;由于“&lt;em&gt;&lt;strong&gt;前所未有的配置错误&lt;/strong&gt;&lt;/em&gt;”，Google Cloud 误删了 &lt;strong&gt;UniSuper&lt;/strong&gt; 的云账户。&lt;/p&gt;
&lt;p&gt;澳洲养老金基金负责人与 Google Cloud 全球首席执行官联合发布声明，为这一“极其令人沮丧和失望”的故障表示道歉。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/gcp-unisuper/gcp-unisuper.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://x.com/0xdabbad00/status/1789011008549450025&#34;&gt;https://x.com/0xdabbad00/status/1789011008549450025&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因为一次 Google Cloud “&lt;strong&gt;举世无双&lt;/strong&gt;” 的配置失误，澳洲养老金基金 Unisuper 的整个云账户被误删了，超过五十万名 UniSuper 基金会员一周都无法访问他们的养老金账户。故障发生后，服务于上周四开始恢复，UniSuper 表示将尽快更新投资账户的余额。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;UniSuper首席执行官 Peter Chun 在周三晚上向62万名成员解释，此次中断非由网络攻击引起，且无个人数据在此次事件中泄露。Chun 明确指出问题源于 Google的云服务。&lt;/p&gt;
&lt;p&gt;在 Peter Chun 和 Google Cloud 全球CEO Thomas Kurian 的联合声明中，两人为此次故障向成员们致歉，称此事件“极其令人沮丧和失望”。他们指出，由于配置错误，导致 UniSuper 的云账户被删除，&lt;strong&gt;这是 Google Cloud 上前所未有的事件&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.unisuper.com.au/about-us/media-centre/2024/a-joint-statement-from-unisuper-and-google-cloud&#34;&gt;&lt;img src=&#34;/zh/blog/cloud/gcp-unisuper/announcement.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.unisuper.com.au/about-us/media-centre/2024/a-joint-statement-from-unisuper-and-google-cloud&#34;&gt;UniSuper CEO 与 Google云 CEO 联合声明&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Google Cloud CEO Thomas Kurian 确认了这次故障的原因是，在设定 UniSuper 私有云服务过程中的一次疏忽，最终导致 UniSuper 的私有云订阅被删除。两人表示，这是一次孤立的、前所未有的事件，Google Cloud 已采取措施确保类似事件不再发生。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;虽然 UniSuper 通常在两个不同的地理区域设置了备份，以便于服务故障或丢失时能够迅速恢复，&lt;strong&gt;但此次删除云订阅的同时，两地的备份也同时被删除了&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;万幸的是，因为 UniSuper 在另一家供应商里还有一个备份，所以最终成功恢复了服务。这些备份在极大程度上挽回了数据损失，并显著提高了 UniSuper 与 Google Cloud 完成恢复的能力。&lt;/p&gt;
&lt;p&gt;“UniSuper 私有云实例的全面恢复，离不开双方团队的极大专注努力，以及双方的密切合作” 通过 UniSuper 与 Google Cloud 的共同努力与合作，我们的私有云得到了全面恢复，包括 &lt;strong&gt;数百台虚拟机、数据库和应用程序&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;UniSuper 目前管理着大约 &lt;strong&gt;1250 亿美元&lt;/strong&gt; 的基金。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;下云老冯评论&#34;&gt;下云老冯评论&lt;/h3&gt;
&lt;p&gt;如果说 &lt;a href=&#34;/zh/blog/cloud/aliyun&#34;&gt;&lt;strong&gt;阿里云全球服务不可用&lt;/strong&gt;&lt;/a&gt; 大故障称得上是 “&lt;strong&gt;史诗级&lt;/strong&gt;”，那么 Google 云上的这一次故障堪称 “&lt;strong&gt;无双级&lt;/strong&gt;” 了。前者主要涉及服务的&lt;strong&gt;可用性&lt;/strong&gt;，而这次故障直击许多企业的命根 —— &lt;strong&gt;数据完整性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;据我所知这应当是云计算历史上的新纪录 —— 第一次如此大规模的删库。上一次类似的数据完整性受损事件还是 &lt;a href=&#34;/zh/blog/cloud/sla.md#%E6%B6%88%E5%A4%B1%E7%9A%84%E5%8F%AF%E9%9D%A0%E6%80%A7&#34;&gt;&lt;strong&gt;腾讯云与 “前言数控” 的案例&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;但一家小型创业公司与掌管千亿美金的大基金完全不可同日而语；影响的范围与规模也完全不可同日而语 —— &lt;strong&gt;整个云账户下的所有东西都没了！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这次事件再次展示了（异地、多云、不同供应商）&lt;strong&gt;备份&lt;/strong&gt;的重要性 —— UniSuper 是幸运的，他们在别的地方还有其他备份。&lt;/p&gt;
&lt;p&gt;但如果你相信公有云厂商在其他的区域 / 可用区的数据备份可以帮你“兜底”，那么请记住这次案例 —— &lt;strong&gt;避免 Vendor Lock-in，并且 Always has Plan B&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&#34;https://www.unisuper.com.au/about-us/media-centre/2024/a-joint-statement-from-unisuper-and-google-cloud&#34;&gt;英国卫报关于此次事件的报道&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 云上黑暗森林：打爆云账单，只需要S3桶名</title>
      <link>/zh/blog/cloud/s3-scam/</link>
      <pubDate>Tue, 30 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/s3-scam/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/s3-scam/featured_hu436558a25437dcda71194f4874eb71f8_399896_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;p&gt;公有云上的黑暗森林法则出现了：&lt;strong&gt;只要你的 S3 对象存储桶名暴露，任何人都有能力刷爆你的云账单。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/s3-scam/featured.webp&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;试想一下，你在自己喜欢的区域创建了一个空的、&lt;strong&gt;私有的&lt;/strong&gt; AWS S3 存储桶。第二天早上，你的 AWS 账单会是什么样子？&lt;/p&gt;
&lt;p&gt;几周前，我开始为客户开发一个文档索引系统的概念验证原型 (PoC)。我在 &lt;code&gt;eu-west-1&lt;/code&gt; 区域创建了一个 S3 存储桶，并上传了一些测试文件。两天后我去查阅 AWS 账单页面，主要是为了确认我的操作是否在免费额度内。结果显然事与愿违 —— 账单超过了 &lt;strong&gt;1300美元&lt;/strong&gt;，账单面板显示，执行了将近 &lt;strong&gt;1亿次&lt;/strong&gt; S3 PUT 请求，仅仅发生在一天之内！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/s3-scam/bill.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我的 S3 账单，按每天/每个区域计费&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;这些请求从哪儿来&#34;&gt;这些请求从哪儿来？&lt;/h2&gt;
&lt;p&gt;默认情况下，AWS 并不会记录对你的 S3 存储桶的请求操作。但你可以通过 &lt;a href=&#34;https://docs.aws.amazon.com/AmazonS3/latest/userguide/cloudtrail-logging.html&#34;&gt;&lt;strong&gt;AWS CloudTrail&lt;/strong&gt;&lt;/a&gt; 或 &lt;a href=&#34;https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerLogs.html&#34;&gt;&lt;strong&gt;S3 服务器访问日志&lt;/strong&gt;&lt;/a&gt; 启用此类日志记录。开启 CloudTrail 日志后，我立刻发现了成千上万的来自不同账户的写请求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为何会有第三方账户对我的 S3 存储桶发起未授权请求？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是针对我的账户的类 DDoS 攻击吗？还是针对 AWS 的？事实证明，&lt;strong&gt;一个流行的开源工具的默认配置，会将备份存储至 S3 中。这个工具的默认存储桶名称竟然和我使用的完全一致&lt;/strong&gt;。这就意味着，每一个部署该工具且未更改默认设置的实例，都试图将其备份数据存储到我的 S3 存储桶中！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;备注：遗憾的是，我不能透露这个工具的名称，因为这可能会使相关公司面临风险（详情将在后文解释）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以，大量未经授权的第三方用户，试图在我的私有 S3 存储桶中存储数据。但为何我要为此买单？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对未授权的请求，S3也会向你收费！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在我与 AWS 支持的沟通中，这一点得到了证实，他们的回复是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;是的，S3 也会对未授权请求（4xx）收费，这是符合预期的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此，如果我现在打开终端输入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aws s3 cp ./file.txt s3://your-bucket-name/random_key
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我会收到 &lt;strong&gt;&lt;code&gt;AccessDenied&lt;/code&gt;&lt;/strong&gt; 错误，&lt;strong&gt;但你要为这个请求买单&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;还有一个问题困扰着我：为什么我的账单中有一半以上的费用来自 &lt;strong&gt;us-east-1&lt;/strong&gt; 区域？我在那里根本没有存储桶！原来，未指定区域的 S3 请求默认发送至 &lt;strong&gt;us-east-1&lt;/strong&gt;，然后根据具体情况进行重定向。而你还需要支付重定向请求的费用。&lt;/p&gt;
&lt;h3 id=&#34;安全层面的问题&#34;&gt;安全层面的问题&lt;/h3&gt;
&lt;p&gt;现在我明白了，为什么我的 S3 存储桶会收到数以百万计的请求，以及为什么我最终面临一笔巨额的 S3 账单。当时，我还想到了一个点子。如果所有这些配置错误的系统，都试图将数据备份到我的 S3 存储桶，如果我将其设置为 “&lt;strong&gt;公共写入&lt;/strong&gt;” 会怎样？我将存储桶公开不到 30 秒，就在这短短时间内收集了超过 10GB 的数据。当然，我不能透露这些数据的主人是谁。但这种看似无害的配置失误，竟可能导致严重的数据泄漏，令人震惊！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;我从中学到了什么&#34;&gt;我从中学到了什么？&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;第一课：任何知道你S3存储桶名的人，都可以随意打爆你的AWS账单&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;除了删除存储桶，你几乎无法防止这种情况发生。当直接通过 S3 API 访问时，你无法使用 CloudFront 或 WAF 来保护你的存储桶。标准的 S3 PUT 请求费用仅为每一千请求 0.005 美元，但一台机器每秒就可以轻松发起数千次请求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二课：为你的存储桶名称添加随机后缀可以提高安全性。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这种做法可以降低因配置错误或有意攻击而受到的威胁。至少应避免使用简短和常见的名称作为 S3 存储桶的名称。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第三课：执行大量 S3 请求时，确保明确指定 AWS 区域。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这样你可以避免因 API 重定向而产生额外的费用。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;尾声&#34;&gt;尾声&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;我向这个脆弱开源工具的维护者报告了我的发现。他们迅速修正了默认配置，不过已部署的实例无法修复了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我还向 AWS 安全团队报告了此事。我希望他们可能会限制这个不幸的 S3 存储桶名称，但他们不愿意处理第三方产品的配置不当问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我向在我的存储桶中发现数据的两家公司报告了此问题。他们没有回复我的邮件，可能将其视为垃圾邮件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AWS 最终同意取消了我的 S3 账单，但强调了这是一个例外情况。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;感谢你花时间阅读我的文章。希望它能帮你避免意外的 AWS 费用！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;下云老冯评论&#34;&gt;下云老冯评论&lt;/h2&gt;
&lt;p&gt;公有云上的黑暗森林法则出现了：&lt;strong&gt;只要你的 S3 对象存储桶名暴露，任何人都有能力刷爆你的 AWS 账单&lt;/strong&gt;。只需要知道你的存储桶名称，别人不需要知道你的 ID，也不需要通过认证，直接强行 PUT / GET 你的桶，不管成败，都会被收取费用。&lt;/p&gt;
&lt;p&gt;这引入了一种类似于 DDoS 的新攻击类型 —— DoCC （Denial of Cost Control），刷爆账单攻击。&lt;/p&gt;
&lt;p&gt;在一些群里，AWS 的售后，与工程师给出了他们的解释 —— “AWS设计收费策略有一个原则：就是如果AWS产生了成本（用户本身有一定原因），就一定要向用户收费”，AWS 销售给出的解释则是这个客户不会使用 AWS ，应该参加 AWS SA 考试培训后再上岗。&lt;/p&gt;
&lt;p&gt;但从常理来看，这完全不合理 —— 由别人发起的，连 Auth 都没有通过的请求，为什么要向用户收费？而用户除了选择不用这一个选项之外，似乎压根没有办法防止这种情况发生 —— 这是一个设计上的漏洞，也是一个安全上的漏洞。&lt;/p&gt;
&lt;p&gt;但是在 AWS 看来，该特性被视为 Feature，而不是安全漏洞或者 Bug，可以用来咔咔爆用户的金币。同样的设计逻辑贯穿在 AWS 的产品设计逻辑中，例如，Route53 查询没有解析的域名也会收费，所以知道域名是 AWS 解析的话，也可以进行 DDoS。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我并不确定本土云厂商是否使用了同样的处理逻辑。但他们基本都是直接或间接借鉴 AWS 的。所以有比较大的概率，也会是一样的情况。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/s3-scam/ddos.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作为信安专业出身，我很清楚业界的一些玩法，比如打DDoS 卖高防 —— 来自某群友的截图&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;在 《&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487400&amp;idx=1&amp;sn=cf5b94165d2791030e0e874dca8383c7&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;Cloudflare圆桌访谈&lt;/strong&gt;&lt;/a&gt;》中，我也提到过安全问题，比如监守自盗刷流量的问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最后我想说一下安全，我认为安全才是 Cloudflare 核心价值主张。为什么这么说，还是举一个例子。有一个独立站长朋友用了某个头部本土云 CDN ，最近两年有莫名其妙的超多流量。一个月海外几个T流量，一个IP 过来吃个10G 流量然后消失掉。后来换了个地方提供服务，这些奇怪的流量就没了。运行成本变为本来的 1/10，这就有点让人细思恐极 —— &lt;strong&gt;是不是这些云厂商坚守自盗，在盗刷流量？或者是是云厂商本身（或其附属）组织在有意攻击，从而推广他们的高防 IP 服务？&lt;/strong&gt; 这种例子其实我是有所耳闻的。&lt;/p&gt;
&lt;p&gt;因此，在使用本土云 CDN 的时候，很多用户会有一些天然的顾虑与不信任。但 Cloudflare 就解决了这个问题 —— 第一，流量不要钱，按请求量计费，所以刷流量没意义；第二，它替你抗 DDoS，即使是 Free Plan 也有这个服务，CF不能砸自己的招牌 —— 这解决了一个用户痛点，就是把账单刷爆的问题 —— 我确实有见过这样的案例，公有云账号里有几万块钱，一下子给盗刷干净了。用 Cloudflare 就彻底没有这个问题，我可以确保账单有高度的确定性 —— 如果不是确定为零的话。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well，总的来说，账单被刷爆，也算一种公有云上独有的安全风险了 —— 希望云用户保持谨慎小心，一点小失误，也许就会在账单上立即产生难以挽回的损失。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/s3-scam/aws-joke.jpg&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 20刀好兄弟PolarDB：论数据库该卖什么价？</title>
      <link>/zh/blog/db/cheap-polar/</link>
      <pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/cheap-polar/</guid>
      <description>
        
        
        &lt;p&gt;昨天一篇中标新闻引起关注与热议：《&lt;a href=&#34;https://mp.weixin.qq.com/s/hw2pVyf-Y6VX6ZA_mbFylQ&#34;&gt;IT 行业烂了。。。1610 万大单。。。290 万（中）。。。维保 0.01 元。。。PolarDB 单价 130 元&lt;/a&gt;》。刚看到这个标题时，我也没特别惊讶，因为云上 PolarDB 数据库的单价我是非常清楚的，每vCPU·每月的价格在 ¥250 - ¥400，考虑到大客可以干到两三折的折扣也就是 50 ～ 120 块钱，“单价” 130 ¥ 并不算是什么离谱的报价数字。&lt;/p&gt;
&lt;p&gt;所以当我看到 PolarDB 130块单价计费单位是 ”节点“ 时，绷不住了。这个“单价”指的不是云上常用的 ”每vCPU·包月“ 单价，而是线下私有化部署数据库部署，每个物理机节点的许可证单价，这就挺离谱。&lt;/p&gt;
&lt;p&gt;PolarDB V2.0 不是什么魔改换皮的野鸡数据库，也算是正儿八经通过两次国测的国产信创数据库。这样一门Oracle能卖上亿的生意，现在卖出了总价两千块的白菜价。这让几万块一个节点的国产数据库友商们情何以堪？国内 IT 已经卷到这个阶段了吗？&lt;/p&gt;
&lt;p&gt;今天我们就来聊一聊，数据库到底应该卖什么价？&lt;/p&gt;
&lt;h2 id=&#34;商业数据库卖多少钱&#34;&gt;商业数据库卖多少钱？&lt;/h2&gt;
&lt;p&gt;数据库管理系统软件，曾经（现在依然）是一门非常有利可图的生意。&lt;/p&gt;
&lt;p&gt;作为商业数据库软件的标杆，&lt;a href=&#34;https://www.oracle.com/a/ocom/docs/corporate/pricing/technology-price-list-070617.pdf&#34;&gt;Oracle 数据库的许可证授权&lt;/a&gt; ，以常规买 Enterprise + RAC (47500 $ / 4vCPU + 23000 $ / 4vCPU) 计，约合 50 万人民币。一次性购买许可后，还有每年 22% 的&lt;strong&gt;服务费&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;但是请注意，Oracle 上面单价的 “计费单位” 是 Processor，等于两个 Intel 物理核，4 线程 vCPU 虚拟核。也就是说如果折算成当代常用单位 vCPU·月，那么单个 vCPU 核的价格就是 12.7 万的一次性许可 + 2.8 万/年的服务费。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1 Oracle Processor = 2 Intel Core = 4 vCPU Thread-&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;假设你有一台 64 核的服务器用于跑 Oracle 数据库，那么许可证成本就是八百万，然后加上每年两百万的服务费。对了，所谓服务就是你有问题提个工单，原厂的人给你答疑。如果你要找人上门来服务，还有单独的人天费用。&lt;/p&gt;
&lt;p&gt;当然众所周知，Oracle 使用 Paper License，你可以随便下载用（盗版）。当然 Oracle 最强大的部门 —— 法务也不是吃素的 —— 对中小用户来说还没这么快 —— 你可以先买一份 50万的许可证交个保护费份子钱，然后这事暂时就过去了。然后等肥了，这些欠下的保护费可是一分都少不了的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.oracle.com/a/ocom/docs/corporate/pricing/technology-price-list-070617.pdf&#34;&gt;https://www.oracle.com/a/ocom/docs/corporate/pricing/technology-price-list-070617.pdf&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;总的来说，传统商业数据库的定价模型就是这样的，按 processor 计费，单价几十万。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Oracle： y = a * x + b, a = 28K, b = 127K&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然，要我说的话，这种商业模式已经不合时宜了 —— 硬件已经今非昔比：当年处理器也就几核，现代物理机动辄就是小几百核；更重要的是，软件也有了开源平替：开源的 PostgreSQL 和 MySQL（划掉）已经足够好了。&lt;/p&gt;
&lt;h2 id=&#34;开源数据库卖多少钱&#34;&gt;开源数据库卖多少钱？&lt;/h2&gt;
&lt;p&gt;Oracle 的 CEO Larry 说过：“一旦开源替代变得足够好，与其竞争是疯狂与愚蠢的”。而现在，Oracle 的开源替代 “PostgreSQL” 已经远远超过 “足够好” 的程度了，实际上，它正如当年 Linux 横扫操作系统领域一样，正在疯狂吞噬着整个数据库世界，并且在最近已经隐晦地喊出了 “干翻 Oracle” 的口号。&lt;/p&gt;
&lt;p&gt;像&lt;strong&gt;PostgreSQL&lt;/strong&gt; / &lt;strong&gt;MySQL&lt;/strong&gt; 为代表的的&lt;strong&gt;开源数据库&lt;/strong&gt;，可以省掉软件 &lt;strong&gt;许可证&lt;/strong&gt; 的费用。也就是说，你爱跑多少核就跑多少核，软件本身的成本归零了。实际上，这正是互联网繁荣的核心原因之一：Linux ，MySQL，PG，Apache，PHP 这样的开源软件让建设网站的软件边际成本无限趋近于零。&lt;/p&gt;
&lt;p&gt;然而，这对于绝大多数的公司与企业来说并不是一个可行的选择。因为真正能玩转开源数据库的专家要比商业数据库 DBA 稀缺得多，而且大多数这类专家都集中在互联网公司中且待遇优惠，薪资不菲。对于许多中小公司来说，第一；很难找得到，认得出对的人；第二：不一定付得起这个钱，专家也不见得愿意去那里。&lt;/p&gt;
&lt;p&gt;开源真正的 “商业模式”其实是：免费的开源软件吸引用户，用户需求产生开源专家岗位，开源软件专家作为企业的代理人，从开源世界公共软件池中汲取力量，并作为产销合一者产出更好的开源软件。&lt;strong&gt;所以，开源模式中，软件是不卖钱的，卖的本质上是专家服务。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;买 RHEL，EDB 名义上买的是 “操作系统”，“数据库”，本质上买的是专家服务，更具体的说就是答疑咨询与人天。用开源数据库的成本，核心是人的成本。开源数据库卖多少钱，取决于专家应该卖多少钱。有人觉得用开源就一分钱不用花了，这就纯属YY —— 能把开源数据库用到商业数据库水平的专家可真不便宜。&lt;/p&gt;
&lt;p&gt;专家的定价，取决于专家的质量水平，供需关系。有一种简单可靠的锚定方法就是，对标 Oracle / SQL Server 那个每年加收许可 20% 的“支持服务”，这一部分实际上就是市场对专家服务的定价。我们可以看到像 EDB，Fujitsu 这样的公司就是按照这个思路来定价的。&lt;/p&gt;
&lt;p&gt;例如，&lt;a href=&#34;https://swc.saas.ibm.com/en-us/redhat-marketplace/products/fujitsu-enterprise-postgres/pricing&#34;&gt;富士通卖 PG 服务&lt;/a&gt;支持的价格是 3200 $ / 物理Core，也就是每 vCPU 1.1 万¥/年。EDB 的价格没有公开，但据我所知的单价比富士通贵一倍，也就是差不多与 Oracle 每年 20% 那个支持费用接近。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PostgreSQL： y = a * vCPU , a = 11K ~ 22K&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然，专家可以从专业服务公司租，也可以直接去市场上租 —— 只要你的规模足够大，直接买断专家总是更合算的 （例如弄两个年薪百万的专家 = 2000K / 20K = 100 vCPU ）你可以直接把数据库的成本模型从与 vCPU 的线性增长，转变为对数增长或固定常数 —— 前提是你真的能找到，人家也愿意。但即使如此，绝大部分中小公司也是不愿意或者没有能力支付这个最小规模的启动成本的，于是就有了云数据库。&lt;/p&gt;
&lt;h2 id=&#34;云数据库卖多少钱&#34;&gt;云数据库卖多少钱？&lt;/h2&gt;
&lt;p&gt;无论是雇佣专家，还是购买专业数据库服务，都有一个启动成本与最小规模 —— 在时间上是一年起步，在空间上一般好几个核起卖，起步成本在十几万到几十万这个数量级。云数据库用于解决这个问题：它用批发的方式采购专家，然后揉碎进行零售，极好地解决了中小型企业起步的需求。&lt;/p&gt;
&lt;p&gt;云数据库的计费模式与商业数据库/开源服务支持一脉相承，采用与 CPU 规模绑定的做法。即定价模型为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;y = a * vCPU&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个 &lt;code&gt;a&lt;/code&gt; ，就是云数据库的核月单价。国际上，云数据库的单价，在 150 $ ~ 250 $ / vCPU·月 上下浮动，再加上存储部分的钱，也就是这个 a 大概会在 13K ~ 21K 这个范围内。基本与开源数据库公司提供的服务支持在一个范围。考虑到 AWS 这些云厂商还提供了硬件，起步规模更小，也更省事，不挑客户，在中小规模的竞争力还是非常显著的。&lt;/p&gt;
&lt;p&gt;当然，国内云厂商比较卷，专家的平均水平也比国际同行拉垮不少，所以云数据库也卖的便宜些。例如：国内，以阿里云为例，RDS / PolarDB 的单价在 250 ～ 400 ¥ / vCPU·月 上下浮动。那么这里的 a 就是 3K ～ 5K。&lt;/p&gt;
&lt;p&gt;总体来说，云数据库的定价依然锚定的是专家服务费用，更具体的说就是盯着传统企业级市场数据库专业服务的定价设计的。只不过针对 SMB 极小微场景会有一些优待 —— 因为凑补的超卖实例反正也没啥成本。像 Neon / Supabase 干脆就对这种场景直接免费了。&lt;/p&gt;
&lt;p&gt;当然，一核数据库一年一两万（PolarDB 大约三五千）听上去不贵，但考虑到现在一个机柜就能塞下&lt;strong&gt;小几千核&lt;/strong&gt;的服务器，对于那些有着很大规模数据库的用户来讲，每年几千万与上亿的成本就很骇人了 —— 毕竟单从健全直觉来讲，这样的事找两个数据库专家用硬件自建，也就千万出头。&lt;/p&gt;
&lt;p&gt;例如最近由雷锋网爆料的《&lt;a href=&#34;https://mp.weixin.qq.com/s/DWw_C01zRD6kbbT_NRqSvw&#34;&gt;独家丨米哈游或将大幅「下云」，对某云大厂预算减半&lt;/a&gt;》就讲到一个鲜活的案例 —— PolarDB 的标杆案例米哈游在数据库上暴砍近四亿预算……&lt;/p&gt;
&lt;p&gt;换个角度看，云上年消费过百万的公司，就应该开始仔细算帐了；过千万就该全面下云了；云上年消费上亿的公司如果还不自建，那真的就是在头上顶着一个 “人傻钱多” 的肉猪 Flag，招杀猪盘。米哈游下云，亡羊补牢为时未晚，至于这种规模还要往云上搬的小红书，那就祝他们好运了。&lt;/p&gt;
&lt;h2 id=&#34;数据库自建要多少钱&#34;&gt;数据库自建要多少钱？&lt;/h2&gt;
&lt;p&gt;无论是商业数据库的订阅支持，还是开源数据库专业服务，还是云数据库，都不难看出这里的核心生产要素是 “专家”，而不是 “软件” 和 ”硬件“。&lt;/p&gt;
&lt;p&gt;从成本上看，当下的综合硬件单位成本约 60 ~ 300 ¥/ vCPU · 年，在数据库服务中的成本可以说微不足道。因为开源数据库的出现，绝大多数商业数据库产品的许可证价值直接归零；很多国产数据库也就是 PG 换皮，没有什么研发成本；所以核心成本就是专家和销售的成本。&lt;/p&gt;
&lt;p&gt;因此在2024年的当下，靠 &lt;strong&gt;许可&lt;/strong&gt; 赚钱的数据库，要么是垄断/供应商锁定的保护费，要么是认知不对称的杀猪钱。要么本质上还是挂羊头卖狗肉，把专家费摊丁入亩抹入到许可费用中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据库公司，真正出售的不是软件，而是专家的服务支持&lt;/strong&gt;。从上面的例子不难看出，专家的服务支持价格与数据库规模绑定，国际市场公允售价为  &lt;strong&gt;1 ～ 2 万人民币 / vCPU 每年&lt;/strong&gt;。无论从数据库服务公司采购，还是从云厂商采购，都差不多是这个范围。&lt;/p&gt;
&lt;p&gt;当然，如果你的数据库规模足够大，vCPU 核数足够多，那么最经济的做法就是直接雇佣数据库专家，而不是从别处租赁。比如，如果你有 100 vCPU 规模的数据库，那么就对应着 100 ～ 200 万的专家维护预算，在当下招聘一个足够好的数据库专家是完全可行的。如果你有 10000 vCPU，也许需要两到三个数据库专家，但他们的工资相比上亿的采购费用可是有数量级的差距 …&lt;/p&gt;
&lt;p&gt;当然，理想很美好，现实很骨感。实事求是的讲，数据库专家也并不是那么好招的。别说小厂小甲方了，大云厂商巨头也照样找不到留不住这些人。&lt;/p&gt;
&lt;p&gt;例如，Apple 当年在上海招聘一个 PostgreSQL 专家的坑位，一直找了两年没有找到合适的人选。其实逻辑也很简单，真正牛逼的专家干嘛不自己开个公司赚上面的 1～2 万 ¥/vCPU 每年的钱，而跑过来给雇主打工呢？&lt;/p&gt;
&lt;p&gt;最典型的例子就是 PolarDB 的创始人曹伟，花名鸣嵩，前年就从阿里云跑出来单干，搞了个数据库管控公司 Kubeblocks。此外还有斗佛叶正盛的九章科技等。根据投中网报道：&lt;em&gt;&lt;strong&gt;一位早期投资人告诉我们，最近一两年，她接触的从阿里出来做数据库创业者已经达到两位数了。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;回到二十块好兄弟&#34;&gt;回到二十块好兄弟&lt;/h2&gt;
&lt;p&gt;回过头来看我们单价二十刀乐好兄弟 PolarDB ，按照市场定价，每 vCPU 每年费用在 1 ～ 2 万是体面数据库服务的公允价。咱们就考虑比较低端的场景，（挺好玩的事：很多云厂商把 4c8g 的规格标记为“入门企业级服务器”），弄个 4c8thread 低端服务器，那一个节点的报价也应该在10万块左右（前提是含对应的专家支持服务）。130 块钱那纯属倒贴，还不够销售收钱的打车钱呢。&lt;/p&gt;
&lt;p&gt;很明显这不是一个符合市场规律的报价，而是想要倒贴钱做标杆案例。毕竟是人民银行，做成了之后销售出去吹牛腰杆都要硬几分。不过价格战可是双刃剑，你报 130 块单价搅乱市场，自然会有各种同行报1块钱倒贴更多，拼老命赔钱也要给你拉下马 —— 绝对不能让你做成这种标杆案例。&lt;/p&gt;
&lt;p&gt;这里再解释一下，PolarDB 并不是单一数据库，而是一个数据库品牌。品牌的意思就是这个篮子里有好几个数据库，有 PolarDB for MySQL（拳头产品），PolarDB for PostgreSQL（开源），以及 PolarDB for Oracle (for PG 改)，blahblah。这里打人行单子打 PolarDB v2.0 其实是 PolarDB for Oracle ，这是一个在 PolarDB for PG 的基础上修改的 Oracle 兼容版。&lt;/p&gt;
&lt;p&gt;当然，PolarDB for MySQL 在云上卖的不错。作为国内早期大规模的 MySQL 用户，阿里在 MySQL 上有很深厚的功力，向输出了许多 MySQL 专家， PolarDB for MySQL 其实是也是 PolarDB 里的拳头产品。作为标杆案例的米哈游，用的也是这个。但线下私有化部署和国产信创的  for PostgreSQL/Oracle 还没有 for MySQL 像米哈游这样的标杆。&lt;/p&gt;
&lt;p&gt;但现在，下云开始成为一种潮流，根据雷锋网报道，PolarDB MySQL 标杆大客米哈游一口气砍了四亿（每年）数据库预算 ……  四亿是什么概念呢？虽然阿里云每年营收千亿，&lt;a href=&#34;https://mp.weixin.qq.com/s/wUJiCKusK8GRe9yQd8inIQ&#34;&gt;但过去一年利润也就是不到九十个亿&lt;/a&gt;。数据库的毛利率都是 50% 起步，70% 也不让人惊奇，这一刀下去，确实太伤了。&lt;/p&gt;
&lt;p&gt;那么，云上遭遇滑铁卢，自然就要开辟第二战场，打造第二增长曲线，做线下私有化部署。虽然阿里云嘴上喊着公有云优先，但 PolarDB 身体还是很诚实的去搞了那个信安国测，弄了个自主可控国产数据库的身份。看着庶长子 OceanBase 四处收割眼热，教练我也要打篮球！我也要做国产数据库！&lt;/p&gt;
&lt;h2 id=&#34;数据库老司机评论&#34;&gt;数据库老司机评论&lt;/h2&gt;
&lt;p&gt;作为数据库老司机，我认为庶长子 OceanBase 的技术路线双重押错宝了，首先押分布式，这在当代硬件条件下已经成了一个伪需求；其次押 MySQL 生态，天花板已经锁死了。而阿里数据库嫡子 PolarDB （PG/Oracle）认清现状，在技术路线上拨乱反正，重新回到 RAC 集中式，PostgreSQL 生态的道路上来，很明显在产品/技术路线上前途要光明的多。&lt;/p&gt;
&lt;p&gt;当然，有前途没前途都是相对其他“国产数据库“来说的，基于开源数据库主干提供专家服务，发行版，扩展，等增量价值才是正路，土法自研是封闭僵化的老路，魔改开源是改旗易帜的邪路。PolarDB for PostgreSQL 总体来说对 PostgreSQL 的魔改程度不大，基本可以复用 PG 生态的扩展，工具与组件，这一点我觉得是非常明智的。&lt;/p&gt;
&lt;p&gt;所以，在我们的开源开箱即用 PostgreSQL 发行版 Pigsty v3.0 中，我们也提供了针对开源的 PolarDB for PostgreSQL 的支持，意思是你可以直接用 PolarDB for PostgreSQL 替换掉原生的 PG 内核，拥有开箱即用的监控系统，高可用，备份恢复，IaC，连接池，负载均衡，故障自愈能力，把一个 RPM 包变成一套本地运行的企业级 RDS 服务。至于 PolarDB for Oracle，因为是基于 for PG 的版本做的，所以也支持，但为了支持国产数据库事业，这个部分就不开源免费了，关于 Pigsty 与 PolarDB v2 打包的国产化本地 RDS 方案，欢迎感兴趣的朋友联系我。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 国产数据库到底能不能打？</title>
      <link>/zh/blog/db/db-china/</link>
      <pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/db-china/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/db-china/featured_hu4643ceb19c6411359f77cd031d0fb4ef_23130_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="439"/>]]>
        
        &lt;p&gt;总有朋友问我，国产数据库到底能不能打？说实话，&lt;strong&gt;是个得罪人的问题&lt;/strong&gt;。所以我们不妨试试用数据说话 —— 希望本文提供的图表，能够帮助读者了解数据库生态格局，并建立更为准确的比例感认知。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;数据来源与研究方法&#34;&gt;数据来源与研究方法&lt;/h2&gt;
&lt;p&gt;评价一个数据库“能不能打”有许多种方式，但 “&lt;strong&gt;流行度&lt;/strong&gt;” 是最常见的指标。对一项技术而言，流行度决定了用户的规模与生态的繁荣程度，唯有这种最终存在意义上的结果才能让所有人心服口服。&lt;/p&gt;
&lt;p&gt;关于数据库流行度这个问题，我认为有三份数据可以作为参考：&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485933&amp;idx=3&amp;sn=ea360aa7a59a4cd23ad5f9a9f415a0a0&amp;chksm=fe4b3c36c93cb520bda4596136e927d7cf92c597a76c04077c256588b2428202bdb7f004c08b&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;StackOverflow 全球开发者调研&lt;/strong&gt;&lt;/a&gt;[1]，&lt;strong&gt;DB-Engine 数据库流行度排行榜&lt;/strong&gt;[2]，以及&lt;strong&gt;墨天轮国产数据库排行榜&lt;/strong&gt;[3]。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;其中最有参考价值的是 StackOverflow 2017 - 2023 年的全球开发者问卷调研 —— 样本调查获取的第一手数据具有高度的可信度与说服力，并且具有极好的 &lt;strong&gt;横向可比性&lt;/strong&gt;（在不同数据库之间水平对比）；连续七年的调查结果也有着足够的 &lt;strong&gt;纵向可比性&lt;/strong&gt; （某数据库和自己过去的历史对比）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-1.png&#34; src=&#34;/zh/blog/db/db-china/db-china-1.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;其次是 &lt;strong&gt;DB-Engine&lt;/strong&gt; 数据库流行度排行榜， DB-Engine 属于综合性热搜指数，将 Google, Bing, Google Trends，StackOverflow，DBA Stack Exchange，Indeed, Simply Hired， LinkedIn，Twitter 上的间接数据合成了一个&lt;strong&gt;热搜指数&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-2.png&#34; src=&#34;/zh/blog/db/db-china/db-china-2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;热度指数有着很好的 &lt;strong&gt;纵向可比性&lt;/strong&gt; —— 我们可以用它来判断某个数据库的流行度走势 —— 是更流行了还是更过气了，因为评分标准是一样的。但在 &lt;strong&gt;横向可比性&lt;/strong&gt; 上表现不佳 —— 例如你没办法细分用户搜索的目的。所以热度指标在&lt;strong&gt;横向对比&lt;/strong&gt;不同数据库时只能作为一个模糊的参考 —— 但在&lt;strong&gt;数量级&lt;/strong&gt;上的准确性还是OK的。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;第三份数据是墨天轮的 “&lt;strong&gt;国产数据库排行榜&lt;/strong&gt;”，这份榜单收录了 287 个国产数据库，主要价值是给我们提供了一份国产数据库名录。这里我们简单认为 —— 收录在这里的数据库，就算“**国产数据库”**了 —— 尽管这些数据库团队不一定会自我认知为国产数据库。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-3.png&#34; src=&#34;/zh/blog/db/db-china/db-china-3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;有了这三份数据，我们就可以尝试回答这个问题 —— 国产数据库在国际上的流行度与影响力到底是什么水平？&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;锚点tidb&#34;&gt;锚点：TiDB&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TiDB&lt;/strong&gt; 是唯一一个，同时出现在三个榜单里的数据库，因此可以作为&lt;strong&gt;锚点&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在 &lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485933&amp;idx=3&amp;sn=ea360aa7a59a4cd23ad5f9a9f415a0a0&amp;chksm=fe4b3c36c93cb520bda4596136e927d7cf92c597a76c04077c256588b2428202bdb7f004c08b&amp;scene=21#wechat_redirect&#34;&gt;StackOverflow 2023 调研&lt;/a&gt; 中，TiDB 作为最后一名，首次出现在数据库流行度榜单里，也是唯一入选的 “国产数据库”。图左中，TiDB 的开发者使用率为 &lt;strong&gt;0.20%&lt;/strong&gt;，与排名第一的 PostgreSQL (45.55%) 和排名第二的 MySQL (41.09%) 相比，流行度相差了大约 &lt;strong&gt;两三百倍&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-4.png&#34; src=&#34;/zh/blog/db/db-china/db-china-4.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;第二份 DB-Engine 数据可以交叉印证这一点 —— TiDB 在 DB-Engine 上的评分是国产数据库中最高的 —— 在2024年4月份，为 &lt;strong&gt;5.14&lt;/strong&gt; 分。关系型数据库四大天王（ &lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487055&amp;idx=1&amp;sn=9d7bd8b6d9b07478dba7f87d0a663535&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486710&amp;idx=1&amp;sn=261e4754df6c85954b50d8f68f277abe&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;MySQL&lt;/strong&gt;&lt;/a&gt;，Oracle，SQL Server）相比，也是&lt;strong&gt;小几百倍&lt;/strong&gt;的差距。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-5.png&#34; src=&#34;/zh/blog/db/db-china/db-china-5.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在墨天轮国产数据库排名中，TiDB 曾经长时间占据了榜首的位置，尽管最近两年前面加塞了 OceanBase， PolarDB，openGauss 三个数据库，但它还在第一梯队里，称其为国产数据库标杆没有太大问题。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-6.png&#34; src=&#34;/zh/blog/db/db-china/db-china-6.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果我们以 TiDB 作为参考锚点，将这三份数据融合，立即就能得出一个有趣的结论：&lt;strong&gt;国产数据库看上去人才济济，群英荟萃，但即使是最能打的国产数据库，流行度与影响力也不及头部开源数据库的百分之一… 。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;整体来看，这些被归类为“国产数据库”的产品，绝大多数在国际上的影响力可以评为：&lt;strong&gt;微不足道&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;微不足道的战五渣&#34;&gt;微不足道的战五渣&lt;/h2&gt;
&lt;p&gt;在 DB-Engine 收录的全球 &lt;strong&gt;478&lt;/strong&gt; 款数据库中，可以找到 &lt;strong&gt;46&lt;/strong&gt; 款列入墨天轮国产数据库名单的产品。将其过去十二年间的流行度绘制在图表上，得到下图 —— 乍看之下，好一片 “欣欣向荣”，蓬勃发展的势头。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-7.png&#34; src=&#34;/zh/blog/db/db-china/db-china-7.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;然而，当我们把关系数据库四大天王：&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487055&amp;idx=1&amp;sn=9d7bd8b6d9b07478dba7f87d0a663535&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486710&amp;idx=1&amp;sn=261e4754df6c85954b50d8f68f277abe&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;MySQL&lt;/strong&gt;&lt;/a&gt;，Oracle，SQL Server 的热度趋势同样画在这张图上后，看上去就变得大不一样了 —— 你几乎看不到任何一个“国产数据库”了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-8.png&#34; src=&#34;/zh/blog/db/db-china/db-china-8.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;把整个国产数据库的热度分数全加起来，也甚至还达不到 PostgreSQL 流行度的零头。&lt;/strong&gt; 整体合并入 “其他” 统计项中毫无任何违和感。&lt;img alt=&#34;图片&#34; src=&#34;https://mmbiz.qpic.cn/mmbiz_png/Wkpr3rA9wF3tOia3iaRAvic4V4zEatQO3wLvX52CbYSbcH1a6EYHA7ysth94JZj6miaic3SKtMunLCiabpLCmQP0KlXw/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;如果把所有国产数据库视作一个整体，在这个榜单里面可以凭 34.7 分排到第 26 名，占总分数的&lt;strong&gt;千分之五&lt;/strong&gt;。（最上面一条黑带）&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-9.png&#34; src=&#34;/zh/blog/db/db-china/db-china-9.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个数字，差不多就是国产数据库国际影响力（DB-Engine）的一个摘要概括：&lt;strong&gt;尽管在数量上占了 1/10&lt;/strong&gt;（如果以墨天轮算可以近半），&lt;strong&gt;但总影响力只有千分之五。其中的最强者 TiDB，战斗力也只有5 ……&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-10.png&#34; src=&#34;/zh/blog/db/db-china/db-china-10.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当然再次强调，热度/指数类数据横向可比性非常一般，仅适合在数量级层面用作参考 —— 但这也足够得出一些结论了……&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-11.jpeg&#34; src=&#34;/zh/blog/db/db-china/db-china-11.jpeg&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;过气中的数据库们&#34;&gt;过气中的数据库们&lt;/h2&gt;
&lt;p&gt;从 DB-Engine 的热度趋势上看，国产数据库从 2017 - 2020 年开始起势，从 2021 年进入高潮，在 23年5月进入平台期，从今年年初开始，出现掉头过气的趋势。这和许多业内专家的判断一致 —— 2024 年，国产数据库进入洗牌清算期 —— 大量数据库公司将倒闭破产或被合并收编。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-12.png&#34; src=&#34;/zh/blog/db/db-china/db-china-12.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果我们去掉个别出海开源做的还不错的头部“国产”数据库 —— 这个掉头而下的过气趋势会更加明显。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-13.png&#34; src=&#34;/zh/blog/db/db-china/db-china-13.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;但过气这件事，并非国产数据库所独有&lt;/strong&gt; — &lt;strong&gt;其实绝大多数的数据库其实都正在过气中&lt;/strong&gt;。DB-Engine 过去12 年中的流行度数据趋势可以揭示这一点 —— 尽管 DB-Engine 热度指标的的横向可比性很一般，但纵向可比性还是很不错的 —— 因此在判断流行 &amp;amp; 过气趋势上仍然有很大的参考价值。&lt;/p&gt;
&lt;p&gt;我们可以对图表做一个加工处理 —— 以某一年为零点，来看热度分数从此刻起的变化，从而看出那些数据库正在繁荣发展，哪些数据库正在落伍过气。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果我们将目光聚焦在最近三年，不难发现在所有数据库中，只有 PostgreSQL 与 Snowflake 的流行度有显著增长&lt;/strong&gt;。而最大的输家是 SQL Server，Oracle，MySQL，与 MongoDB …… 。分析数仓类组件（广义上的数据库）在最近三年有少量增长，&lt;strong&gt;而绝大部分其他数据库都处在过气通道中&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-14.png&#34; src=&#34;/zh/blog/db/db-china/db-china-14.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;如果我们以 DB-Engine 最早有记录的 2012-11 作为参考零点，&lt;strong&gt;那么 PostgreSQL 是过去 12 年中数据库领域的最大赢家&lt;/strong&gt;；而最大的输家依然是 SQL Server，Oracle，MySQL 御三家关系型数据库。&lt;/p&gt;
&lt;p&gt;NoSQL 运动的兴起，让 MongoDB ，ElasticSearch，Redis 在 2012 - 2022 互联网黄金十年中获得了可观的增长，但这个增长的势头在最近几年已经结束了，并进入过气下降通道中，进入吃存量老本的状态。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-15.png&#34; src=&#34;/zh/blog/db/db-china/db-china-15.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;至于 NewSQL 运动，即所谓的新一代分布式数据库。如果说 NoSQL 起码辉煌过，那么可以说 NewSQL 还没辉煌就已经熄火了。“分布式数据库” 在国内营销炒作的非常火热，以至于大家好像把它当作一个可以与 “集中式数据库” 分庭抗礼的数据库品类来看待。但如果我们深入研究就不难发现 —— &lt;strong&gt;这其实只是一个非常冷门的数据库小众领域&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;一些 NoSQL 组件的流行度还能和 PostgreSQL 放到同一个坐标图中而不显突兀，而所有 NewSQL 玩家加起来的流行度分数也比不上 PostgreSQL 的零头 —— 和“国产数据库”一样。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-16.png&#34; src=&#34;/zh/blog/db/db-china/db-china-16.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这些数据为我们揭示出数据库领域的基本格局：除了 PostgreSQL 之外的主要数据库都在过气中…&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-17.png&#34; src=&#34;/zh/blog/db/db-china/db-china-17.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;改头换面的-postgresql-内战&#34;&gt;改头换面的 PostgreSQL 内战&lt;/h2&gt;
&lt;p&gt;这几份数据为我们揭示出数据库领域的基本格局 —— &lt;strong&gt;除了 PostgreSQL 之外的主要数据库都在过气中&lt;/strong&gt;，无论是 SQL，NoSQL，NewSQL，还是 &lt;strong&gt;国产数据库&lt;/strong&gt; 。这确实抛出了一个有趣的问题，让人想问 —— &lt;strong&gt;为什么？&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;对于这个问题，我在 《&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487055&amp;idx=1&amp;sn=9d7bd8b6d9b07478dba7f87d0a663535&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;PostgreSQL 正在吞噬数据库世界&lt;/strong&gt;&lt;/a&gt;》中提出了一种简单的解释：&lt;strong&gt;PostgreSQL 正在凭借其强大的扩展插件生态，内化吞噬整个数据库世界&lt;/strong&gt;。根据奥卡姆剃刀原理 —— 最简单的解释往往也最接近真相。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-18.png&#34; src=&#34;/zh/blog/db/db-china/db-china-18.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;整个数据库世界的核心焦点，都已经聚焦在了金刚大战哥斯拉上：两个开源巨无霸数据库 &lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487055&amp;idx=1&amp;sn=9d7bd8b6d9b07478dba7f87d0a663535&amp;scene=21#wechat_redirect&#34;&gt;PostgreSQL&lt;/a&gt; 与 &lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486710&amp;idx=1&amp;sn=261e4754df6c85954b50d8f68f277abe&amp;scene=21#wechat_redirect&#34;&gt;MySQL&lt;/a&gt; 的使用率与其他数据库远远拉开了距离。其他一切议题与之相比都显得微不足道，无论是 NewSQL 还是 国产数据库。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-19.png&#34; src=&#34;/zh/blog/db/db-china/db-china-19.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;看上去这场搏杀还要再过几年才能结束，但在远见者眼中，这场纷争几年前就已经尘埃落定了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Linux 内核一统服务器操作系统天下后，曾经的同台竞争者 BSD，Solaris，Unix 都成为了时代的注脚。而我们正在目睹同样的事情在数据库领域发生 —— &lt;strong&gt;在这个时代里，想发明新的实用数据库内核，约等于堂吉柯德撞风车。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;好比今天尽管市面上有这么多的 Linux 操作系统发行版，但大家都选择使用同样的 Linux 内核，吃饱了撑着魔改 OS 内核属于没有困难创造困难也要上，会被业界当成 &lt;strong&gt;山炮&lt;/strong&gt; 看待。&lt;/p&gt;
&lt;p&gt;所以，&lt;strong&gt;并非所有国产数据库都不能打，而是能打的国产数据库，其实是改头换面的 PostgreSQL 与 MySQL&lt;/strong&gt; 。如果 PostgreSQL 注定成为数据库领域的 Linux 内核，那么谁会成为 Postgres 的 Debian / Ubuntu / Suse / RedHat ？&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/W7EtaJAw3k2Fwk7vuatkdQ&#34;&gt;&lt;img alt=&#34;db-china-20.png&#34; src=&#34;/zh/blog/db/db-china/db-china-20.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;国产数据库的竞争，变成了 PostgreSQL / MySQL 生态内部的竞争&lt;/strong&gt;。一个国产数据库能打与否，取决于其 “&lt;strong&gt;含P量&lt;/strong&gt;” —— 含有 PostgreSQL 内核的纯度与版本新鲜度。版本越新，魔改越少，附加值越高，使用价值就越高，也就越能打。&lt;/p&gt;
&lt;p&gt;国产数据库看起来最能打的阿里 PolarDB （唯一入选 Gartner 领导者象限），基于三年前的 PostgreSQL 14 进行定制，且保持了 PG 内核的主体完整性，拥有最高的含P量。相比之下，openGauss 选择基于 12 年前的 PG 9.2 进行分叉，并魔改的亲爹都不认识了，所以含P量较低。介于两者中间的还有：PG 13 的 AntDB，PG 12 的人大金仓，PG 11 的老 Polar，PG XL 的 TBase ，……&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;因此，国产数据库到底能不能打 —— 真正的本质问题是：谁能代表 PostgreSQL 世界的先进生产力？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;做内核的厂商不温不火，MariaDB 作为 MySQL 的亲爹 Fork 甚至都已经濒临退市，而白嫖内核自己做服务与扩展卖 RDS 的 AWS 可以赚的钵满盆翻，甚至凭借这种模式一路干到了全球数据库市场份额的榜首 —— 毫无疑问地证明：&lt;strong&gt;数据库内核已经不重要了，市场上稀缺的是服务能力整合&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-21.png&#34; src=&#34;/zh/blog/db/db-china/db-china-21.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在这场竞赛中，公有云 RDS 拿到了第一张入场券。而尝试在本地提供更好、更便宜、 RDS for PostgreSQL 的 &lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485518&amp;idx=1&amp;sn=3d5f3c753facc829b2300a15df50d237&amp;chksm=fe4b3d95c93cb4833b8e80433cff46a893f939154be60a2a24ee96598f96b32271301abfda1f&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;Pigsty&lt;/strong&gt;&lt;/a&gt; 对云数据库这种模式提出了挑战，同时还有十几款尝试用 云原生方式解决 RDS 本地化挑战的 &lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486587&amp;idx=1&amp;sn=16521d6854711a4fe429464aeb2df6bd&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;Kubernetes Operator&lt;/strong&gt;&lt;/a&gt; 正在摩拳擦掌，跃跃欲试，要把 RDS 拉下马来。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;db-china-22.png&#34; src=&#34;/zh/blog/db/db-china/db-china-22.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;真正的竞争发生在服务/&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486903&amp;idx=1&amp;sn=01c57499f41e8f51045bb8dd52586595&amp;chksm=fe4b386cc93cb17a2d2fad903e809107162cc1e67e8ad7c8bfdd51de657c97f32f912cabe550&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;管控&lt;/strong&gt;&lt;/a&gt;维度，而不是内核。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据库领域正在从寒武纪大爆发走向侏罗纪大灭绝&lt;/strong&gt;，&lt;strong&gt;在这一过程中，1% 的种子将会继承 99% 的未来，并演化出新的生态与规则&lt;/strong&gt;。我希望数据库用户们可以明智地选择与决策，站在未来与希望的一侧，而不要把生命浪费在没有前途的事物上，比如……&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;
&lt;p&gt;注：本文使用的图表与数据，公开发布于 Pigsty Demo 站点：https://demo.pigsty.cc/d/db-analysis/&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[1]&lt;/code&gt; StackOverflow 全球开发者调研: &lt;em&gt;&lt;a href=&#34;https://survey.stackoverflow.co/2023/?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=dev-survey-results-2023&amp;utm_content=survey-results#most-popular-technologies-database-prof&#34;&gt;https://survey.stackoverflow.co/2023/?utm_source=so-owned&amp;utm_medium=blog&amp;utm_campaign=dev-survey-results-2023&amp;utm_content=survey-results#most-popular-technologies-database-prof&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[2]&lt;/code&gt; DB-Engine 数据库流行度排行榜: &lt;em&gt;&lt;a href=&#34;https://db-engines.com/en/ranking_trend&#34;&gt;https://db-engines.com/en/ranking_trend&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[3]&lt;/code&gt; 墨天轮国产数据库排行榜: &lt;em&gt;&lt;a href=&#34;https://www.modb.pro/dbRank&#34;&gt;https://www.modb.pro/dbRank&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[4]&lt;/code&gt; DB-Engine 数据分析: &lt;em&gt;&lt;a href=&#34;https://demo.pigsty.cc/d/db-analysis&#34;&gt;https://demo.pigsty.cc/d/db-analysis&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[5]&lt;/code&gt; StackOverflow 7年调研数据: &lt;strong&gt;&lt;a href=&#34;https://demo.pigsty.cc/d/sf-survey&#34;&gt;https://demo.pigsty.cc/d/sf-survey&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Cloudflare圆桌访谈与问答录</title>
      <link>/zh/blog/cloud/cf-interview/</link>
      <pubDate>Tue, 23 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/cf-interview/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/cf-interview/featured_hu04231d9bc7cd3ef23d4bb4ec3641bb94_410122_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;p&gt;上周我作为圆桌嘉宾受邀参加了 Cloudflare 在深圳举办的 Immerse 大会，在 Cloudflare Immerse 鸡尾酒会和晚宴上，我与 Cloudflare 亚太区CMO，大中华区技术总监，以及一线工程师深入交流探讨了许多关于 Cloudflare 的问题。&lt;/p&gt;
&lt;p&gt;本文是圆桌会谈纪要与问答采访的摘录，从用户视角点评 Cloudflare 请参考本号前一篇文章：《&lt;a href=&#34;/zh/blog/cloud/cloudflare&#34;&gt;&lt;strong&gt;吊打公有云的赛博佛祖 Cloudflare&lt;/strong&gt;&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/jU418HAlObe1nWgzEsLrJQ&#34;&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/featured.webp&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;第一部分圆桌访谈&#34;&gt;第一部分：圆桌访谈&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;您与 Cloudflare 如何结缘？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我是冯若航，现在做 &lt;strong&gt;PostgreSQL&lt;/strong&gt; 数据库发行版 &lt;a href=&#34;https://pigsty.io/zh/&#34;&gt;&lt;strong&gt;Pigsty&lt;/strong&gt;&lt;/a&gt;，运营着一个开源社区，同时作为一个数据库 &amp;amp; 云计算领域的 KOL，在国内宣扬下云理念。在 Cloudflare 的场子里讲下云挺有意思，但我并不是来踢馆的。&lt;/p&gt;
&lt;p&gt;事实上我与 Cloudflare 还有好几层缘分，所以今天很高兴在这里和大家分享一下我的&lt;strong&gt;三重视角&lt;/strong&gt; ：作为一个独立开发者终端用户，作为一个开源社区的成员与运营者，作为一个公有云计算反叛军，我是如何看待 Cloudflare 的。&lt;/p&gt;
&lt;p&gt;作为一个&lt;strong&gt;开源软件供应商&lt;/strong&gt;，我们需要一种稳定可靠的软件分发方式。我们最开始使用了本土的阿里云与腾讯云，在国内的体验尚可，但当我们需要走出海外，面向国外用户时，使用体验确实不尽如人意。我们尝试了 AWS，Package Cloud ，但最终选择了 Cloudflare。包括我们有几个网站也托管到了CF。&lt;/p&gt;
&lt;p&gt;作为 &lt;strong&gt;PostgreSQL 社区的一员&lt;/strong&gt;，我们知道 Cloudflare 深度使用了 PostgreSQL 作为底层存储的数据库。并且不同于其他云厂商喜欢将其包装为 RDS 白嫖社区，Cloudflare 一直是杰出的开源社区参与者与建设者。甚至像 Pingora 和 Workerd 这样的核心组件都是开源的。我对此给出高度评价，这是开源软件社区与云厂商共存的典范。&lt;/p&gt;
&lt;p&gt;作为&lt;strong&gt;下云理念的倡导者&lt;/strong&gt;，我一直认为传统公有云使用了一种非常不健康的商业模式。所以在中国引领着一场针对公有云的&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486813&amp;idx=1&amp;sn=ffb126fdd061c1e27626dd558f6fa26a&amp;chksm=fe4b3886c93cb190e2acf7af6cfd25f298199f6ee73da566bed050c066b96753b913e3453d4f&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;下云运动&lt;/strong&gt;&lt;/a&gt;。我认为 Cloudflare 也许是这场运动中的重要盟友 —— 传统 IDC 开源自建，难以解决 “在线” 的问题，而 Cloudflare 的接入能力，边缘计算能力，都弥补了这一块短板。所以我非常看好这种模式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-1.jpg&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;您用到了哪些 Cloudflare的服务，打动你的是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我用到了 Cloudflare 的静态网站托管服务 Pages，对象存储服务 R2 和边缘计算 Worker。最打动我的有这么几点：易用性，成本，质量，安全，专业的服务态度，以及这种模式的前景与未来。&lt;/p&gt;
&lt;p&gt;首先聊一聊&lt;strong&gt;易用性&lt;/strong&gt;吧，我使用的第一项服务是 Pages。我自己有一个网站，静态 HTML 托管在这里。我把这个网站搬上 Cloudflare 用了多长时间？一个小时！我只是创建了一个新的 GitHub Repo，把静态内容提交上去，然后在 Cloudflare 点点按钮，绑定一个新的子域名，链接到 GitHub Repo，整个网站瞬间就可以被全世界访问，你不需要操心什么高可用，高并发，全球部署，HTTPS 证书，抗 DDoS 之类的问题 —— 这种丝滑的用户体验让我非常舒适，并很乐意在这上面花点钱解锁额外功能。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;再来聊一聊&lt;strong&gt;成本&lt;/strong&gt;吧。在独立开发者，个人站长这个圈子里，我们给 Cloudflare 起了一个外号 —— “&lt;strong&gt;赛博佛祖&lt;/strong&gt;”。这主要是因为 Cloudflare 提供了非常慷慨的免费计划。Cloudflare 有着相当独特的商业模式 —— &lt;strong&gt;免流量费，靠安全赚钱&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;比如说 R2，我认为这就是专门针对 AWS S3 进行啪啪打脸的。我曾经作为大甲方对各种云服务与自建的成本进行过精算 —— 得出会让普通用户感到震惊的结论。云上的&lt;a href=&#34;/zh/blog/cloud/s3&#34;&gt;&lt;strong&gt;对象存储&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247485745&amp;idx=4&amp;sn=93746ecea381afd8e2f9820447b09ec7&amp;chksm=fe4b3ceac93cb5fc44f33ffff226747bc317854acbb3882aeb0d9a7e196eeb5df002d0e77275&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;块存储&lt;/strong&gt;&lt;/a&gt; 比本地自建贵了两个数量级，堪称史诗级杀猪盘。AWS S3 标准档价格 0.023 $/GB·月，而 Cloudflare R2 价格 0.015 $/GB·月，看上去只是便宜了 1/3 。但重要的是&lt;strong&gt;流量费全免&lt;/strong&gt;！这就带来质变了！&lt;/p&gt;
&lt;p&gt;比如，我自己那个网站也还算有点流量，最近一个月跑了 300GB ，没收钱，我有一个朋友每月跑掉 3TB 流量，没收钱；然后我在推特上看到有个朋友 Free Plan 跑黄网图床，每月 1PB 流量，这确实挺过分了，于是 CF 联系了他 —— 建议购买企业版，也仅仅是 “建议”。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;接下来我们来聊一聊&lt;strong&gt;质量&lt;/strong&gt;。我讲下云的一个前提是：各家公有云厂商卖的是没有不可替代性的大路货标准品。比如那种在&lt;a href=&#34;/zh/blog/cloud/luo-live&#34;&gt;&lt;strong&gt;老罗直播间&lt;/strong&gt;&lt;/a&gt;中，夹在吸尘器与牙膏中间卖的云服务器。但是 Cloudflare 确实带来了一些不一样的东西。&lt;/p&gt;
&lt;p&gt;举个例子，Cloudflare Worker 确实很有意思，比起传统云上笨拙的开发部署体验来说，CF worker 真正做到了让开发者爽翻天的 Serverless 效果。开发者不需要操心什么数据库连接串，AccessPoint，AK/SK密钥管理，用什么数据库驱动，怎么管理本地日志，怎么搭建 CI/CD 流程这些繁琐问题，最多在环境变量里面指定一下存储桶名称这类简单信息就够了。写好 Worker 胶水代码实现业务逻辑，命令行一把梭就可以完成全球部署上线。&lt;/p&gt;
&lt;p&gt;与之对应的是传统公有云厂商提供的各种所谓 Serverless 服务，比如 RDS Serverless，就像一个恶劣的笑话，单纯是一种计费模式上的区别 —— 既不能 Scale to Zero，也没什么易用性上的改善 —— 你依然要在控制台去点点点创建一套 RDS，而不是像 Neon 这种真 Serverless 一样用连接串连上去就能直接迅速拉起一个新实例。更重要的是，稍微有个几十上百的QPS，相比包年包月的账单就要爆炸上天了 —— 这种平庸的 “Serverless” 确实污染了这个词语的本意。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;最后我想说一下&lt;strong&gt;安全&lt;/strong&gt;，我认为安全才是 Cloudflare 核心价值主张。为什么这么说，还是举一个例子。有一个独立站长朋友用了某个头部本土云 CDN ，最近两年有莫名其妙的超多流量。一个月海外几个T流量，一个IP 过来吃个10G 流量然后消失掉。后来换了个地方提供服务，这些奇怪的流量就没了。运行成本变为本来的 1/10，这就有点让人细思恐极 —— &lt;strong&gt;是不是这些云厂商坚守自盗，在盗刷流量？或者是是云厂商本身（或其附属）组织在有意攻击，从而推广他们的高防 IP 服务&lt;/strong&gt;？这种例子其实我是有所耳闻的。&lt;/p&gt;
&lt;p&gt;因此，在使用本土云 CDN 的时候，很多用户会有一些天然的顾虑与不信任。但 Cloudflare 就解决了这个问题 —— 第一，流量不要钱，按请求量计费，所以刷流量没意义；第二，它替你抗 DDoS，即使是 Free Plan 也有这个服务，CF不能砸自己的招牌 —— 这解决了一个用户痛点，就是把账单刷爆的问题 —— 我确实有见过这样的案例，公有云账号里有几万块钱，一下子给盗刷干净了。用 Cloudflare 就彻底没有这个问题，我可以确保账单有高度的确定性 —— 如果不是确定为零的话。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;专业的服务态度指的是？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本土云厂商在面对大故障时，体现出相当业余的专业素养与服务态度，这一点我专门写了好几篇文章进行批判。说起来特别赶巧，去年双十一，阿里云出了一个史诗级&lt;a href=&#34;/zh/blog/cloud/aliyun&#34;&gt;&lt;strong&gt;全球大故障&lt;/strong&gt;&lt;/a&gt;。Cloudflare 也出了个机房断电故障。一周前 4.8 号，腾讯云也出了个翻版&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487267&amp;idx=1&amp;sn=7d31d44e89560356b5c5a2e7a40bb1e1&amp;chksm=fe4b3af8c93cb3ee9b8000cd90a12a798395f67205d4ba5b0c77b8c5b6ce9ea448d9fc014921&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;全球故障&lt;/strong&gt;&lt;/a&gt;，Cloudflare 也恰好在同一天又出了 Code Orange 机房断电故障。作为一个工程师，我理解故障是难以避免的 —— &lt;strong&gt;但出现故障后，体现出来的专业素养和服务态度是天差地别的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;首先，阿里云和腾讯云的故障都是人为操作失误/糟糕的软件工程/架构设计导致的，而 Cloudflare 的问题是机房断电，某种程度上算不可抗力的天灾。其次，在处理态度上，阿里云到现在都没发布一个像样的故障复盘，我替它做了一个&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247486468&amp;idx=1&amp;sn=7fead2b49f12bc2a2a94aae942403c22&amp;chksm=fe4b39dfc93cb0c92e5d4c67241de0519ae6a23ce6f07fe5411b95041accb69e5efb86a38150&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;非官方故障复盘&lt;/strong&gt;&lt;/a&gt;；至于腾讯云，我干脆连故障通告都替他们发了 —— 比官网还快10分钟。腾讯云倒是在前天发布了一个&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzU5ODAyNTM5Ng==&amp;mid=2247487348&amp;idx=1&amp;sn=412cf2afcd93c3f0a83d65219c4a28e8&amp;chksm=fe4b3aafc93cb3b900cef33bd0510c7c86367d71877b0ee65d4847da0ae1298e2b1fd88d0b3f&amp;scene=21#wechat_redirect&#34;&gt;&lt;strong&gt;故障复盘&lt;/strong&gt;&lt;/a&gt;，但是也比较敷衍，专业素养不足，这种复盘报告拿到 Apple 和 Google 都属于不合格的 Post-Mortem ……&lt;/p&gt;
&lt;p&gt;Cloudflare 则恰恰相反，在故障的当天 CEO 亲自出来撰写故障复盘，细节翔实，态度诚恳，你见过本土云厂商这么做吗？没有!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;您对 Cloudflare 未来有什么期待？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我主张下云理念，是针对中型以上规模的企业。像我之前任职的探探，以及美国 DHH 37 Signal 这样的。但是 IDC 自建有个问题，&lt;strong&gt;接入&lt;/strong&gt;的问题，&lt;strong&gt;在线的问题&lt;/strong&gt; —— 你可以自建KVM，K8S，RDS，甚至是对象存储。但你不可能自建 CDN 吧？Cloudflare 就很好地弥补了这个缺憾。&lt;/p&gt;
&lt;p&gt;我认为，Cloudflare 是下云运动的坚实盟友。Cloudflare 并没有提供传统公有云上的那些弹性计算、存储、&lt;strong&gt;K8S&lt;/strong&gt;、&lt;strong&gt;RDS&lt;/strong&gt; 服务。但幸运地是，Cloudflare 可以与公有云 / IDC 良好地配合协同 —— 从某种意义上来说，因为 Cloudflare 成功解决了 “在线” 的问题，这使得传统数据库中心 IDC 2.0 也同样可以拥有比肩甚至超越公有云的 “在线” 能力，两者配合，在事实上摧毁了一些公有云的护城河，并挤压了传统公有云厂商的生存空间。&lt;/p&gt;
&lt;p&gt;我非常看好 Cloudflare 这种模式，实际上，这种丝滑的体验才配称的上是云，配享太庙，可以心安理得吃高科技行业的高毛利。实际上，&lt;strong&gt;我认为 Cloudflare 应该主动出击，去与传统公有云抢夺云计算的定义权&lt;/strong&gt; —— 我希望未来人们说起云的时候，指的应该是 Cloudflare 这种慷慨体面的连接云，而不是传统公有杀猪云。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;第二部分互动问答&#34;&gt;第二部分：互动问答&lt;/h2&gt;
&lt;p&gt;在 Cloudflare Immerse 鸡尾酒会和晚宴上，我与 Cloudflare 亚太区CMO，大中华区技术总监，以及一线工程师深入交流探讨了许多关于 Cloudflare 的问题，收获颇丰，这里给出了一些适合公开的问题与答案。因为我也不会录音，因此这里的文字属于我的事后回忆与阅读理解，&lt;strong&gt;仅供参考，不代表 CF 官方观点&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-2.jpg&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 如何定位自己，和 AWS 这种传统公有云是什么关系？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其实 Cloudflare 不是传统公有云，而是一种 &lt;strong&gt;SaaS&lt;/strong&gt;。我们现在管自己叫做 “Connectivity Cloud”（翻译为：&lt;strong&gt;全球联通云&lt;/strong&gt;），旨在为所有事物之间建立连接，与所有网络相集成；内置情报防范安全风险，并提供统一、简化的界面以恢复&lt;strong&gt;可见性&lt;/strong&gt;与&lt;strong&gt;控制&lt;/strong&gt;。从传统的视角来看，我们做的像是安全、CDN与边缘计算的一个整合。AWS 的 CloudFront 算是我们的竞品。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-3.png&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 为什么提供了如此慷慨的免费计划，到底靠什么赚钱？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cloudflare 的免费服务就像 Costco 的5美元烤鸡一样。实际上除了免费套餐，那个 Workers 和 Pages 的付费计划也是每月五美元，跟白送的一样，Cloudflare 也不是从这些用户身上赚钱的。&lt;/p&gt;
&lt;p&gt;Cloudflare 的核心商业模式是&lt;strong&gt;安全&lt;/strong&gt;。相比于只服务付费客户，更多的免费用户可以带来更深入的数据洞察 —— 也就能够发现更为广泛的攻击与威胁情报，为付费用户提供更好的安全服务。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;我们的 Free 计划有何优势？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 Cloudflare，我们的使命是帮助建立更好的互联网。我们认为 web 应该是开放和免费的，所有网站和 web 用户，无论多小，都应该是安全、稳固、快速的。由于&lt;a href=&#34;https://webmasters.stackexchange.com/questions/88659/how-can-cloudflare-offer-a-free-cdn-with-unlimited-bandwidth&#34;&gt;种种原因&lt;/a&gt;，Cloudflare 始终都提供慷慨的免费计划。&lt;/p&gt;
&lt;p&gt;我们努力将网络运营成本降至最低，从而能在我们的 Free 计划中提供巨大价值。最重要的是，通过保护更多网站，我们能就针对我们网络的各类攻击获得更完善的数据，从而能为所有网站提供更佳的安全和保护。&lt;/p&gt;
&lt;p&gt;作为隐私第一的公司，我们绝不出售您的数据。事实上，Cloudflare 承认个人数据隐私是一项基本人权，并已采取&lt;a href=&#34;https://blog.cloudflare.com/certifying-our-commitment-to-your-right-to-information-privacy/&#34;&gt;一系列措施&lt;/a&gt;来证明我们对隐私的承诺。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实际上 Cloudflare 的 CEO 在 StackOverflow &lt;a href=&#34;https://webmasters.stackexchange.com/questions/88659/how-can-cloudflare-offer-a-free-cdn-with-unlimited-bandwidth&#34;&gt;亲自对这个问题作出过回答&lt;/a&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-4.webp&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Five reasons we offer a free version of the service and always will:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Data: we see a much broader range of attacks than we would if we only had our paid users. This allows us to offer better protection to our paid users.&lt;/li&gt;
&lt;li&gt;Customer Referrals: some of our most powerful advocates are free customers who then &amp;ldquo;take CloudFlare to work.&amp;rdquo; Many of our largest customers came because a critical employee of theirs fell in love with the free version of our service.&lt;/li&gt;
&lt;li&gt;Employee Referrals: we need to hire some of the smartest engineers in the world. Most enterprise SaaS companies have to hire recruiters and spend significant resources on hiring. We don&amp;rsquo;t but get a constant stream of great candidates, most of whom are also CloudFlare users. In 2015, our employment acceptance rate was 1.6%, on par with some of the largest consumer Internet companies.&lt;/li&gt;
&lt;li&gt;QA: one of the hardest problems in software development is quality testing at production scale. When we develop a new feature we often offer it to our free customers first. Inevitably many volunteer to test the new code and help us work out the bugs. That allows an iteration and development cycle that is faster than most enterprise SaaS companies and a MUCH faster than any hardware or boxed software company.&lt;/li&gt;
&lt;li&gt;Bandwidth Chicken &amp;amp; Egg: in order to get the unit economics around bandwidth to offer competitive pricing at acceptable margins you need to have scale, but in order to get scale from paying users you need competitive pricing. Free customers early on helped us solve this chicken &amp;amp; egg problem. Today we continue to see that benefit in regions where our diversity of customers helps convince regional telecoms to peer with us locally, continuing to drive down our unit costs of bandwidth.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Today CloudFlare has 70%+ gross margins and is profitable (EBITDA)/break even (Net Income) even with the vast majority of our users paying us nothing.&lt;/p&gt;
&lt;p&gt;Matthew Prince Co-founder &amp;amp; CEO, CloudFlare&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;创始人的情怀与愿景其实挺重要的 …… ，Cloudflare 早期的许多服务一直都是免费提供的，第一个付费服务其实是 SSL 证书，现在也不要钱了。总的来说，就是靠企业级客户为安全付费。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare付费用户都是什么样的？怎么从免费用户成为付费用户的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们的免费客户转变为企业级付费客户的主要契机是安全问题。Cloudflare 控制台上有个 “&lt;strong&gt;遭受攻击&lt;/strong&gt;” 的按钮 —— 是这样的，只要用户在控制台上点这个 “Under Attack” 按钮，即使是免费客户，我们也会第一时间有人响应，帮助客户解决问题。例如在疫情期间，某头部视频会议厂商遭受到了安全攻击。我们立即抽调人手替客户解决问题 —— 他们很满意，我们就签了单子。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-5.webp&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 的免费套餐有可能会在未来取消吗？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Costco 有个 1.5 美元的热狗汽水套餐，创始人承诺永远不会提高热狗和苏打水套餐的价格。我知道像 Vercel，Planetscale 之类的 SaaS 厂商开始削减免费套餐，但我认为这事基本不太可能发生在 Cloudflare 上。因为如上所述，我们有充分的理由继续提供免费计划。实际上我们的大多数客户都没付钱，在使用 Free Plan。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-6.webp&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;为什么Cloudflare 会在故障后由 CEO 亲自出马复盘？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们的 CEO 是技术出身，工程师背景。出现故障的时候 IM 里一堆人在掰扯，CEO 跳出来说：够了，我来写故障复盘报告 —— 然后故障当天就发出来了，这种事放在公有云厂商里绝对是相当罕见的了… 我们其实也很震惊…。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-7.webp&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 在中国区域访问为什么这么慢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;中国区域带宽/流量费用太贵了，所以普通用户访问其实访问的其实主要是北美地区的机房与节点。我们在 全世界 95% 的地区都有非常优秀的延迟表现（比），但剩下 5% 嘛主要指的就是 …… ，在这里&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-8.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果你的主要用户群体都是国内，又比较在乎速度，可以考虑一下 Cloudflare 企业版，或者是本土 CDN 厂商。我们和京东云有合作，企业级客户在国内也可以使用他们提供的这些节点。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;中国区域用户使用 Cloudflare 的主要动机是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;主要是因为&lt;strong&gt;安全&lt;/strong&gt;：Cloudflare 即使是免费计划中，也提供了抗 DDoS 服务。中国的用户使用 Cloudflare 主要是为了出海。而那些纯粹面向本土的中国客户，宁可慢一点也要用 CF 的主要动机就是安全（抗DDoS）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 会在中国被封禁吗？有什么运营风险吗？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我觉得这件事不太可能会发生，你知道现在有多少网站托管在 Cloudflare 上面吗 … 这一炮打下去，大半个互联网都访问不了了。Cloudflare 本身并没有在中国地区运营…… ，在中国也主要服务于 C2G （China to Global）业务。
你刚才问为什么 Cloudflare 域名不备案为什么就能访问，就是这个原因 —— 我们压根没在中国运营。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;在与本土云厂商合作中，资源互换主要是一种什么形式？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有一些本土云厂商通过资源互换的方式合作，所谓资源互换嘛，&lt;code&gt;&amp;lt;Redacted&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;你们如何看待腾讯云模仿你们的产品 EdgeOne ？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;做生意和气生财，我们不好公开评论其他云。但私下里说，CopyCat……&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 企业版的主要价值点在于？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;流量优先级。举个例子你出海的流量大概率是从上海的某一根跨海光纤出去的，平时这条线路的使用率是 &lt;code&gt;&amp;lt;Redacted&amp;gt;&lt;/code&gt; % ，但是在高峰期，我们就会优先保证企业级用户的服务质量。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cf-interview/cf-interview-9.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cloudflare 考虑推出托管的 RDS，Postgres数据库服务吗？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在那个 D1 其实是 SQLite，目前没有计划做这种托管数据库服务，但是生态里已经有可以满足这种需求的供应商了，你看有不少在 Worker 里使用 Neon （Serverless Postgres）的例子。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 我们能从腾讯云大故障中学到什么?</title>
      <link>/zh/blog/cloud/qcloud/</link>
      <pubDate>Sun, 14 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/qcloud/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/qcloud/featured_hub66694ad4eb732902c5255ff25185583_250704_640x0_resize_q75_h2_catmullrom_2.webp" width="640" height="366"/>]]>
        
        &lt;p&gt;故障过去八天后，腾讯云发布了 4.8 号大故障的&lt;a href=&#34;https://mp.weixin.qq.com/s/2e2ovuwDrmwlu-vW0cKqcA&#34;&gt;&lt;strong&gt;复盘报告&lt;/strong&gt;&lt;/a&gt;。我认为是一件好事，因为阿里云&lt;a href=&#34;https://mp.weixin.qq.com/s/cTge3xOlIQCALQc8Mi-P8w&#34;&gt;双十一大故障&lt;/a&gt;的官方故障复盘至今仍然是拖欠着的。公有云厂商想要真正成为 —— &lt;strong&gt;提供水与电的公共基础设施&lt;/strong&gt;，那就需要承担起责任，接受公众监督 —— 云厂商有义务披露自己故障原因，并提出切实的可靠性改进方案与措施。&lt;/p&gt;
&lt;p&gt;那么我们就来看一看这份复盘报告，看看里面有哪些信息，以及可以从中学到什么教训。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/qcloud/#事实是什么&#34;&gt;事实是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/qcloud/#原因是什么&#34;&gt;原因是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/qcloud/#影响是什么&#34;&gt;影响是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/qcloud/#评论与观点&#34;&gt;评论与观点？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zh/blog/cloud/qcloud/#能学到什么&#34;&gt;能学到什么？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;事实是什么&#34;&gt;事实是什么？&lt;/h2&gt;
&lt;p&gt;按照腾讯云官方给出的复盘报告（官方发布的“权威事实”）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;15:23，监测到故障，立即执行服务的恢复，同时进行原因的排查；&lt;/li&gt;
&lt;li&gt;15:47，发现通过回滚版本没能完全恢复服务，进一步定位问题；&lt;/li&gt;
&lt;li&gt;15:57，定位出故障根因是配置数据出现错误，紧急设计数据修复方案；&lt;/li&gt;
&lt;li&gt;16:02，对全地域进行数据修复工作，API服务逐地域恢复中；&lt;/li&gt;
&lt;li&gt;16:05，观测到除上海外的地域API服务均已恢复，进一步定位上海地域的恢复问题；&lt;/li&gt;
&lt;li&gt;16:25，定位到上海的技术组件存在API循环依赖问题，决定通过流量调度至其他地域来恢复；&lt;/li&gt;
&lt;li&gt;16:45，观测到上海地域恢复了，此时API和依赖API的PaaS服务彻底恢复，但控制台流量剧增，按九倍容量进行了扩容；&lt;/li&gt;
&lt;li&gt;16:50，请求量逐渐恢复到正常水平，业务稳定运行，控制台服务全部恢复；&lt;/li&gt;
&lt;li&gt;17:45，持续观察一小时，未发现问题，按预案处理过程完毕。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;复盘报告给出的原因是：&lt;strong&gt;云API服务新版本向前兼容性考虑不够和配置数据灰度机制不足的问题&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本次API升级过程中，由于新版本的接口协议发生了变化，在后台发布新版本之后对于旧版本前端传来的数据处理逻辑异常，导致生成了一条错误的配置数据，由于灰度机制不足导致异常数据快速扩散到了全网地域，造成整体API使用异常。&lt;/p&gt;
&lt;p&gt;发生故障后，按照标准回滚方案将服务后台和配置数据同时回滚到旧版本，并重启API后台服务，但此时因为承载API服务的容器平台也依赖API服务才能提供调度能力，即发生了循环依赖，导致服务无法自动拉起。通过运维手工启动方式才使API服务重启，完成整个故障恢复。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这份复盘报告中有一个存疑的点：复盘报告将故障归因为：向前兼容考虑不足。&lt;strong&gt;向前兼容性&lt;/strong&gt;（Forward Compatibility）指的是老的版本的代码可以使用新版本的代码产生的数据。如果管控回滚到旧版本，无法读取由新版本产生的脏数据 —— 那这是确实是一个前向兼容性问题。但在下面的解释中：是新版本代码没有处理好旧版本数据 —— 而这是一个典型的&lt;strong&gt;向后兼容性&lt;/strong&gt;（Backward）问题。对于一个 ToB 服务产品，我认为这样的严谨性是有问题的。&lt;/p&gt;
&lt;h2 id=&#34;原因是什么&#34;&gt;原因是什么？&lt;/h2&gt;
&lt;p&gt;作为客户，我也在此前获取了私下流传的故障复盘过程，一份具有高置信度的小道消息：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;15:25 平台监控到云API进程故障告警,工程师立即介入分析;&lt;/li&gt;
&lt;li&gt;15:36 排查发现异常集中在云API现网版本,旧版本运行正常,开始进行回滚操作;&lt;/li&gt;
&lt;li&gt;15:47 官网控制台所用集群回滚完成,通过监控确定恢复;&lt;/li&gt;
&lt;li&gt;15:50 开始回滚非控制台集群;&lt;/li&gt;
&lt;li&gt;15:57 定位出故障根因是配置系统中存在错误数据;&lt;/li&gt;
&lt;li&gt;16:02 删除配置数据的错误数据,各地域集群开始自动恢复;&lt;/li&gt;
&lt;li&gt;16:05 由于历史配置不规范,导致上海集群无法通过回滚快速恢复,决策采用流量调度方式恢复上海集群;&lt;/li&gt;
&lt;li&gt;16:40 上海集群流量全量切换到其他地域集群;&lt;/li&gt;
&lt;li&gt;16:45 经过观测和现网监控,确认上海集群已经恢复。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;应该说，官方发布的版本在关键点上基本上和几天前私下流出的版本是一致的，只是私下流传的版本更加详细地指出了根因： &lt;strong&gt;相较旧版本，现网版本新引入逻辑存在对空字典配置数据兼容的bug，在读取数据场景下触发bug逻辑，引发云API服务进程异常 Crash&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;根据这两份故障复盘信息，我们可以确定，这是一次由&lt;strong&gt;人为失误&lt;/strong&gt;导致的故障，而不是因为天灾（硬件故障，机房断电断网）导致的。我们基本上可以&lt;strong&gt;推断&lt;/strong&gt;出故障发生的过程分为两个阶段 —— 两个子问题。&lt;/p&gt;
&lt;p&gt;第一个问题是，管控 API 没有保持良好的双向兼容性 —— 新管控 API 因为老配置数据中的空字典崩掉了。这体现出一系列软件工程上的问题 —— 处理空对象的代码基本功，处理异常的逻辑，测试的覆盖率，发布的灰度流程。&lt;/p&gt;
&lt;p&gt;第二个问题是，循环依赖（容器平台与管控API）导致系统无法自动拉起，需要运维手工介入进行 Bootstrap。这反映出 —— 架构设计的问题，以及 —— &lt;strong&gt;腾讯云并没有从去年阿里云的大故障中吸取最核心的教训&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;影响是什么&#34;&gt;影响是什么？&lt;/h2&gt;
&lt;p&gt;在复盘报告中，腾讯云用了大篇幅来描述故障的影响，解释管控面故障与数据面故障的区别。用了一些酒店前台的比喻。其实类似的故障在去年阿里云双十一大故障已经出现过了 —— 管控面挂了，数据面正常，在《&lt;a href=&#34;https://mp.weixin.qq.com/s/OIlR0rolEQff9YfCpj3wIQ&#34;&gt;我们能从阿里云史诗级故障中学到什么&lt;/a&gt;》中，我们也分析过，管控面挂了确实不会影响继续使用现有纯 IaaS 资源。但是会影响云厂商的核心服务 —— 比如，对象存储在腾讯云上叫 COS。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对象存储 COS 实在是太重要了&lt;/strong&gt;，可以说是云计算的“定义性服务”，也许是唯一能在所有云上基本达成共识标准的服务。云厂商的各种“上层”服务或多或少都直接/间接地依赖 COS，例如 CVM/ RDS 虽然可以运行，但 CVM 快照和 RDS 备份显然是深度依赖 COS 的，CDN 回源是依赖 COS 的，各个服务的日志往往也是写入 COS 的**。所以，任何涉及到基础服务的故障，都不应该糊弄敷衍过去**。&lt;/p&gt;
&lt;p&gt;当然最让人生气的其实是腾讯云傲慢的态度 —— 我自己作为腾讯云的用户，提了一个工单，用于测试云上的 SLA 到底好不好使 —— 事实证明：&lt;strong&gt;不主张就不赔付，主张了不认账也可以不赔付 —— 这个 SLA 确实跟厕纸一样。&lt;/strong&gt;《&lt;a href=&#34;https://mp.weixin.qq.com/s/mgkOybNeEH3LO0gRa1rQBQ&#34;&gt;云 SLA 是安慰剂还是厕纸合同&lt;/a&gt;》&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;评论与观点&#34;&gt;评论与观点&lt;/h2&gt;
&lt;p&gt;马斯克的推特 X 和 DHH 的 37 Signal &lt;a href=&#34;/zh/blog/cloud/cloud-exit/&#34;&gt;通过下云省下了千万美元真金白银&lt;/a&gt;，创造了降本增效的“奇迹”，让下云开始成为一种潮流。云上的用户在对着账单犹豫着是否要下云，未上云的用户更是内心纠结。&lt;/p&gt;
&lt;p&gt;在这样的背景下，作为本土云领导者的阿里云先出现史诗级大故障，紧接着腾讯云又再次出现了这种全球性管控面故障，对于犹豫观望者的信心无疑是沉重的打击。如果说阿里云大故障是公有云&lt;strong&gt;拐点级别的标志性事件&lt;/strong&gt;，那么腾讯云大故障再次确认了这条投射线的方向。&lt;/p&gt;
&lt;p&gt;这次故障再次揭示出关键基础设施的巨大风险 —— 大量依托于公有云的网络服务&lt;strong&gt;缺乏最基本的自主可控&lt;/strong&gt;能力：当故障发生时没有任何自救能力，除了等死做不了别的事情。它也反映出了&lt;strong&gt;垄断中心化基础设施的脆弱性&lt;/strong&gt;：互联网这个&lt;strong&gt;去中心化&lt;/strong&gt;的世界奇观现在主要是在少数几个大公司/云厂商拥有的服务器上运行 —— 某个云厂商本身成为了最大的业务单点，这可不是互联网设计的初衷！&lt;/p&gt;
&lt;p&gt;根据海恩法则，一次严重故障的背后有几十次轻微事故，几百起未遂先兆，以及上千条事故隐患。这样的事故对于腾讯云的品牌形象绝对是致命打击，甚至&lt;strong&gt;对整个行业的声誉都有严重的损害&lt;/strong&gt;。Cloudflare 月初的管控面故障后，CEO 立即撰写了详细的&lt;a href=&#34;https://blog.cloudflare.com/post-mortem-on-cloudflare-control-plane-and-analytics-outage/&#34;&gt;事后复盘分析&lt;/a&gt;，挽回了一些声誉。腾讯云这次发布的故障复盘报告不能说及时，但起码比起遮遮掩掩的阿里云要好多了。&lt;/p&gt;
&lt;p&gt;通过故障复盘，提出改进措施，让用户看到改进的态度，对于用户的信心非常重要。做一个故障复盘，也许会暴露更多草台班子的糗态 —— 我不会收回 “草台班子” 的评价。但重要的是 —— 技术/管理菜是可以想办法改进的，服务态度傲慢则是无药可医的。&lt;/p&gt;
&lt;p&gt;公有云厂商想要真正成为 —— &lt;strong&gt;提供水与电的公共基础设施&lt;/strong&gt;，那就需要承担起责任来，并敢于接受公众与用户的公开监督。我在《&lt;a href=&#34;https://mp.weixin.qq.com/s/PgduTGIvWSUgHZhVfnb7Bg&#34;&gt;腾讯云：颜面尽失的草台班子&lt;/a&gt;》与《&lt;a href=&#34;https://mp.weixin.qq.com/s/mgkOybNeEH3LO0gRa1rQBQ&#34;&gt;云 SLA 是安慰剂还是厕纸合同&lt;/a&gt;》中指出了腾讯云面对故障时的问题 —— 故障信息发布不及时，不准确，不透明。在这一点上，我欣慰的看到在复盘报告改进措施中，腾讯云能够承认这些问题并承诺进行改进。但我无法原谅的是 ——  腾讯云选择在微信公众号上文章审核封口。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;能学到什么&#34;&gt;能学到什么？&lt;/h2&gt;
&lt;p&gt;往者不可留，逝者不可追，比起哀悼无法挽回的损失，更重要的是从损失中吸取教训 —— 要是能从别人的损失中吸取教训那就更好了。所以，我们能从腾讯云这场史诗级故障中学到什么？&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;不要把鸡蛋放在同一个篮子里&lt;/strong&gt;，准备好 PlanB，比如，业务域名解析一定要套一层 CNAME，且 CNAME 域名用不同服务商的解析服务。这个中间层对于阿里云、腾讯云这样的全局云厂商故障非常重要，用另外一个 DNS 供应商，至少可以给你一个把流量切到别的地方去的选择，而不是干坐在屏幕前等死，毫无自救能力。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;谨慎依赖需要云基础设施&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;云 API 是云服务的基石，大家都期待它可以始终正常工作 —— 然而越是人们感觉不可能出现故障的东西，真的出现故障时产生的杀伤力就越是毁天灭地。如无必要，勿增实体，更多的依赖意味着更多的失效点，更低的可靠性：正如在这次故障中，使用自身认证机制的 CVM/RDS 本身就没有受到直接冲击。深度使用云厂商提供的 AK/SK/IAM 不仅会让自己陷入供应商锁定，更是将自己暴露在公用基础设施的单点风险里。&lt;/p&gt;
&lt;p&gt;我的朋友/对手，公有云的鼓吹者瑞典马工和他的朋友AK王老板，一直主张呼吁用 IAM / RAM 做访问控制，并深度利用云上的基础设施。但是在这两次故障后，马工的原话是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“我一直鼓吹大家用 IAM 做访问控制，结果两家云都出大故障，纷纷打我的脸。云厂商不管是 PR 还是 SRE，都在用实际行动向客户证明：“&lt;em&gt;别听马工的，你用他那一套，我就让你系统完蛋&lt;/em&gt;”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;谨慎使用云服务，优先使用纯资源&lt;/strong&gt;。在本次故障中，&lt;strong&gt;云服务&lt;/strong&gt;受到影响，但&lt;strong&gt;云资源&lt;/strong&gt;仍然可用。类似 CVM/云盘 这样的&lt;strong&gt;纯资源&lt;/strong&gt;，以及单纯使用这两者的 RDS，可以不受管控面故障影响可以继续运行。基础云资源（CVM/云盘）是所有云厂商的提供服务的&lt;strong&gt;最大公约数&lt;/strong&gt;，只用资源有利于用户在不同公有云、以及本地自建中间择优而选。不过，很难想象在公有云上却不用对象存储 —— 在 CVM 和天价云盘 上用 MinIO 自建对象存储服务并不是真正可行的选项，这涉及到公有云商业模式的核心秘密：&lt;a href=&#34;/zh/blog/cloud/s3&#34;&gt;廉价S3获客&lt;/a&gt;，&lt;a href=&#34;/zh/blog/cloud/ebs/&#34;&gt;天价EBS杀猪&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;自建是掌握自身命运的终极道路&lt;/strong&gt;：如果用户想真正掌握自己的命运，最终恐怕早晚会走上自建这条路。互联网先辈们平地起高楼创建了这些服务，而现在做这件事只会容易得多：IDC 2.0 解决硬件资源问题，开源平替解决软件问题，大裁员释放出的专家解决了人力问题。短路掉公有云这个中间商，直接与 IDC 合作显然是一个更经济实惠的选择。稍微有点规模的用户&lt;a href=&#34;/zh/blog/cloud/finops/&#34;&gt;下云省下的钱&lt;/a&gt;，可以换几个从大厂出来的资深SRE 还能盈余不少。更重要的是，自家人出问题你可以进行奖惩激励督促其改进，但是云出问题能赔给你几毛钱的代金券？&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;明确云厂商的 SLA 是营销工具，而非战绩承诺&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在云计算的世界里，&lt;a href=&#34;/zh/blog/cloud/sla/&#34;&gt;&lt;strong&gt;服务等级协议&lt;/strong&gt;&lt;/a&gt;（SLA）曾被视为云厂商对其服务质量的承诺。然而，当我们深入研究这些由一堆9组成的协议时，会发现它们并不能像期望的那样“兜底”。与其说是 SLA 是对用户的补偿，不如说 SLA 是对云厂商服务质量没达标时的“惩罚”。比起会因为故障丢掉奖金与工作的专家来说，SLA 的惩罚对于云厂商不痛不痒，更像是自罚三杯。如果惩罚没有意义，云厂商也没有动力去提供更好的服务质量。所以，SLA 对用户来说不是兜底损失的保险单。在最坏的情况下，它是堵死了实质性追索的哑巴亏；在最好的情况下，它才是提供情绪价值的安慰剂。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 吊打公有云的赛博佛祖 Cloudflare</title>
      <link>/zh/blog/cloud/cloudflare/</link>
      <pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/cloudflare/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/cloudflare/featured_huf46615db3e2baa55dbab3d6562c83645_104649_640x0_resize_q75_catmullrom.jpg" width="640" height="640"/>]]>
        
        &lt;p&gt;是在今天的 2024 开发者周上，Cloudflare 发布了一系列令人激动的新特性，例如 Python Worker 以及 Workers AI，把应用开发与交付的便利性拔高到了一个全新的程度。与 Cloudflare 的 Serverless 开发体验相比，传统云厂商号称 Serverless 的各种产品都显得滑稽可笑。&lt;/p&gt;
&lt;p&gt;Cloudflare 更广为人知的是它的慷慨免费套餐，一些中小型网站几乎能以零成本运行在这里。在 Cloudflare 的鲜明对比之下，天价出租 &lt;a href=&#34;/zh/blog/cloud/ecs&#34;&gt;CPU&lt;/a&gt;、&lt;a href=&#34;/zh/blog/cloud/ebs&#34;&gt;磁盘&lt;/a&gt;、&lt;a href=&#34;/zh/blog/cloud/cdn&#34;&gt;带宽&lt;/a&gt; 的公有云厂商显得面目可憎。Cloudflare 这样的云带来的开发体验，才真正配得上“云”的称号。在我看来， Cloudflare 应该主动出击，与传统公有云厂商抢夺云计算的定义权。&lt;/p&gt;
&lt;p&gt;利益相关：Cloudflare 没给我钱，我倒是给 Cloudflare 付了钱。纯粹是因为 Cloudflare 产品非常出色，极好地解决了我的需求，让我非常乐意付点费支持一下，并告诉更多朋友有这项福利。与之相反的是，我付钱给传统公有云厂商之后的感受是这做的都是什么玩意 —— 必须写文章&lt;a href=&#34;/zh/blog/cloud&#34;&gt;狠狠地骂他们&lt;/a&gt;，才能缓解内心的精神损失。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cloudflare-是什么&#34;&gt;Cloudflare 是什么&lt;/h2&gt;
&lt;p&gt;Cloudflare是一家提供内容分发网络（CDN）、互联网安全性、抗DDoS（分布式拒绝服务）和分布式DNS服务的美国公司。全世界互联网流量的 20% 由它服务。如果你挂着 VPN 访问一些网站，经常可以看到 Cloudflare 的抗 DDoS 验证码页面和 Logo。他们提供：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;内容分发网络（CDN）&lt;/strong&gt;：Cloudflare的CDN服务通过全球分布的数据中心缓存客户网站的内容，加快网站加载速度并减少服务器压力。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网站安全性&lt;/strong&gt;：提供SSL加密、防止SQL注入和跨站脚本攻击的安全措施，增强网站的安全性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DDoS防护&lt;/strong&gt;：具备先进的DDoS防护功能，能够抵御各种规模的攻击，保护网站不受干扰。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能路由&lt;/strong&gt;：使用Anycast网络技术，能够智能识别数据传输的最佳路径，减少延迟。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自动HTTPS重定向&lt;/strong&gt;：自动将访问转换为HTTPS，增强通信的安全性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Workers平台&lt;/strong&gt;：提供Serverless架构，允许在Cloudflare的全球网络上运行JavaScript或WASM（WebAssembly）代码，无需管理服务器。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然，Cloudflare 还有一些非常不错的服务，例如托管网站的 Pages，对象存储 R2，分布式数据库D1 等，开发者体验非常不错。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cloudflare/cloudflare-1.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cloudflare.com/zh-cn/what-is-cloudflare/&#34;&gt;Cloudflare 官网介绍&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pages简单易用的网站托管&#34;&gt;Pages：简单易用的网站托管&lt;/h2&gt;
&lt;p&gt;举个例子，如果您要托管一个静态网站。用 Cloudflare 有多简单？首先在 GitHub 创建一个 Repo，把网站内容丢进去，然后在 Cloudflare 链接到你的 &lt;a href=&#34;https://developers.cloudflare.com/pages/configuration/git-integration/&#34;&gt;Git Repo&lt;/a&gt;，分配一个子域名，然后你的网站就自动部署到全世界的各个角落了。如果你要更新网站内容，只要 git push 到特定分支就足够了。&lt;/p&gt;
&lt;p&gt;如果你使用特定的 &lt;a href=&#34;https://developers.cloudflare.com/pages/framework-guides/&#34;&gt;&lt;strong&gt;网站框架&lt;/strong&gt;&lt;/a&gt;，甚至还可以直接在线从仓库内容中构建：Blazor、Brunch、Docusaurus、Gatsby、Gridsome、Hexo、Hono、Hugo、Jekyll、Next.js、Nuxt、Pelican、Preact、Qwik、React、Remix、Solid、Sphinx、Svelte、Vite 3、Vue、VuePress、Zola、Angular、Astro、Elder.js、Eleventy、Ember、MkDocs。&lt;/p&gt;
&lt;p&gt;我从完全没接触过 Cloudflare，到把 Pigsty 的网站搬运到 CF 上并完成部署，只用了一个小时左右。我不需要操心什么服务器，CI/CD / HTTPS 证书，安全高防抗 DDoS，Cloudflare 已经把一切都替我做好了 —— 更重要的是流量费全免，我唯一做的就是绑了个信用卡花了十几块钱买了个域名，但实际上根本不需要什么额外费用 —— 都已经包含在免费计划中了。&lt;/p&gt;
&lt;p&gt;更令我震惊的是，虽然访问速度慢了一些，但在中国大陆是可以直接访问 CF 上的网站的，甚至不需要备案！说来也滑稽，本土云厂商虽然可以很快替你完成网站资源置备这件事，但耗时最久的步骤往往是卡在备案上。这一点确实算是 Cloudflare 的一个福利特性了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;worker极致的-serverless-体验&#34;&gt;Worker：极致的 Serverless 体验&lt;/h2&gt;
&lt;p&gt;尽管你可以把许多业务逻辑放在前端在浏览器中用 Javascript 解决，但一个复杂的动态网站也是需要一些后端开发的。而 Cloudflare 也把这一点简化到了极致 —— &lt;strong&gt;你只需要编写业务逻辑的 Javascript 函数就可以了&lt;/strong&gt;。当然，也可以使用 Typescript，现在更是支持 Python 了 —— 直接调用 AI 模型，难以想象后面会出现多少新的花活！&lt;/p&gt;
&lt;p&gt;用户编写的这个函数会被部署在 Cloudflare 全世界 CDN 边缘服务器节点上，执行用户定义的业务逻辑。你可以 &lt;a href=&#34;https://developers.cloudflare.com/workers/examples/&#34;&gt;&lt;strong&gt;干各种各样的事情&lt;/strong&gt;&lt;/a&gt;，返回动态的HTML与JSON，自定义路由、重定向、转发、过滤、缓存、A/B测试，重写请求，聚合请求，执行认证。当然，你也可以直接使用业务代码中调用对象存储 R2 与 SQL 数据库 D1，或者把请求转发到你自己的数据中心服务器上处理。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Env&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// If you set another name in wrangler.toml as the value for &amp;#39;binding&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// replace &amp;#34;DB&amp;#34; with the variable name you defined.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;DB&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;D1Database&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fetch&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;request&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Request&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Env&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pathname&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;URL&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;request&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pathname&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/api/beverages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// If you did not use `DB` as your binding name, change it here
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;results&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DB&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;prepare&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;SELECT * FROM Customers WHERE CompanyName = ?&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bind&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Bs Beverages&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Response&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;json&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;results&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Response&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Call /api/beverages to see everyone who works at Bs Beverages&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://developers.cloudflare.com/d1/get-started/#write-queries-within-your-worker&#34;&gt;在 Worker 中查询 D1&lt;/a&gt;，简单到就是调用个变量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[[d1_databases]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;binding&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;DB&amp;#34; # available in your Worker on env.DB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;database_name&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;prod-d1-tutorial&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;database_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;unique-ID-for-your-database&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;也不需要什么配置，指定一下D1数据库/R2对象存储名称就好了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比起传统云上笨拙的开发部署体验来所，CF worker 真正做到了让开发者爽翻天的 Serverless 效果。开发者不需要操心什么数据库连接串，AccessPoint，AK/SK密钥管理，用什么数据库驱动，怎么管理本地日志，怎么搭建 CI/CD 流程这些繁琐问题，最多在环境变量里面指定一下存储桶名称这类简单信息就够了。写好 Worker 胶水代码实现业务逻辑，命令行一把梭就可以完成全球部署上线。&lt;/p&gt;
&lt;p&gt;与之对应的是传统公有云厂商提供的各种所谓 Serverless 服务，比如 RDS Serverless，就像一个恶劣的笑话，单纯是一种计费模式上的区别 —— 既不能 Scale to Zero，也没什么易用性上的改善 —— 你依然要在控制台去点点点创建一套 RDS，而不是像 Neon 这种真 Serverless 一样用连接串连上去就能直接迅速拉起一个新实例。更重要的是，稍微有个几十上百的QPS，相比包年包月的账单就要爆炸上天了 —— 这种平庸的 “Serverless” 确实污染了这个词语的本意。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;r2吊打-s3-的对象存储&#34;&gt;R2：吊打 S3 的对象存储&lt;/h2&gt;
&lt;p&gt;Cloudflare R2 提供了对象存储服务。与 AWS S3 相比，便宜了也许能有一个数量级 —— 我的意思是，尽管单纯看存储的价格 $ / GB·月，Cloudflare（0.015 $）价格与 S3 (0.023 $) 差距并不大，但 Cloudflare 的 R2 是免流量费的！&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;每月免费额度&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Cloudflare R2&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Amazon S3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;存储&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;10 GB / 月&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5 GB / 月&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;写请求&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1 M / 月&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2 K / 月&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;读请求&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;10 M / 月&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;20 K / 月&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;数据传输&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;无限量！&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;100 GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;超出免费额度后的价格&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;存储&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 0.11 / GB&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 0.17 / GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;写请求&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 32.63 / 百万请求&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 36.25 / 百万请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;读请求&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 2.61 / 百万请求&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 2.9 / 百万请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;流量费&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;免费！&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;¥ 0.65 / GB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;Cloudflare &lt;a href=&#34;https://www.cloudflare.com/pg-cloudflare-r2-vs-aws-s3/&#34;&gt;R2 定价&lt;/a&gt; 与 AWS S3 对比&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;举个例子，我的网站，R2 在过去一个月内消耗了 300 GB 流量，按照本土云 1GB 流量八毛钱左右的价格，需要支付 240 元，但我一分钱也没付。而且，我还知道更极端的例子 —— 比如一个月消耗了 3TB 流量，也依然在免费套餐中……&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cloudflare/cloudflare-3.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;Cloudflare R2 是与 CDN 二合一的。在传统的云服务商中，你还需要操心额外的 CDN 配置，回源流量，CDN流量包，抗DDoS等等问题。但 Cloudflare 不需要，只要勾选配置启用，你的 R2 Bucket 可以直接被全世界读取，而最重要的是，而你根本不用担心账单被刷爆的问题 —— 我知道好几个在传统云厂商上，因为攻击把 CDN 流量刷爆，几万块钱余额一夜耗干欠费的案例。（包括我自己还亲历过一个因为云厂商自己SB的CDN回源设计，&lt;a href=&#34;/zh/blog/cloud/cdn&#34;&gt;爆刷CDN流量的案例&lt;/a&gt;）但是在 Cloudflare 上，你不需要像斗牛犬和猫头鹰一样监视着 &lt;a href=&#34;/zh/blog/cloud/finops&#34;&gt;&lt;strong&gt;账单&lt;/strong&gt;&lt;/a&gt; 与流量，首先，Cloudflare 流量免费…… ，更强的是， Cloudflare 已经有了智能的抗 DDoS 服务了，即使是免费的 Plan 也默认提供这项服务，可以有效避免恶意攻击（在传统云厂商，这玩意单独卖几千上万的所谓高防IP服务）。再加上每月慷慨的免费 1千万读取请求（对于放图片、软件包来说这已经非常大了！），可以确保在这上面的费用是高度确定性的 —— 如果不是零的话。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cloudflare在线的价值&#34;&gt;Cloudflare：在线的价值&lt;/h2&gt;
&lt;p&gt;王坚博士那本讲云计算的书《在线》其实说得很明白，云计算的真正价值是 &lt;strong&gt;在线&lt;/strong&gt;（而不是什么弹性、敏捷、便宜之类的东西）。举个例子：我有一些下云的客户与用户，虽然已经把主体业务从公有云上搬到了 IDC 或者自己办公室的服务器上，但依然在云上留一些 ECS 和 RDS 的尾巴 —— 因为他们收取数据的 API 放在那里，感觉公有云提供的网络接入要比自己的机房/办公室更稳定可靠 —— 注意是网络接入而不是存储计算。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/cloudflare/cloudflare-4.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;很多云上的客户，&lt;a href=&#34;/zh/blog/cloud/ebs&#34;&gt;在算力上付出了几倍到十几倍溢价&lt;/a&gt;，&lt;a href=&#34;/zh/blog/cloud/ebs&#34;&gt;在存储上付出了几十倍到上百倍的溢价&lt;/a&gt;，都是为了这个网络 “在线” 的能力。但 Cloudflare 这样遍布全球的，带有边缘计算能力的 CDN ，将 “在线” 的能力拔高到了一个全新的高度上，比传统公有云更好地解决了这个问题。例如，AI 当红炸子鸡 OpenAI 的网站和 API 就是这么做的 —— 通过 CF 对外提供接入。&lt;/p&gt;
&lt;p&gt;在这种模式下，用户完全可以把网站与 API 通过 Cloudflare 对外提供接入，而将重量级的存储与计算放在 IDC 中，而不是在传统公有云上用几倍的价格进行租赁。Cloudflare 提供的 Worker 可以在边缘用于发送、收取数据，并将请求转发至您自己的数据中心进行处理。如果希望实现更可靠的容灾，您还可以利用 Cloudflare 上的 R2 与 D1 作为临时性本地缓存，预处理汇总数据后，统一拉取到 IDC 进行处理。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cf-与-idc-从两头挤压公有云&#34;&gt;CF 与 IDC 从两头挤压公有云&lt;/h2&gt;
&lt;p&gt;在 IT 规模光谱的一侧 —— 个人站长与小微企业上，新一代云服务 / SaaS（CF，Neon，Vercel，Supabase） 赛博菩萨们的免费套餐，对公有云产生了明显的替代与冲击 —— 别说 99 块钱包年的云服务器了，9块9 都不一定香了 —— &lt;strong&gt;再便宜能便宜过免费吗？&lt;/strong&gt; —— 更何况用 CF 建站的体验比云服务器自建要好太多了。&lt;/p&gt;
&lt;p&gt;但更重要的是，在光谱另一侧的中大型企业中，新出现的 IDC 2.0 与开源管控软件替代合流，短路掉公有云这个中间商，利用好&lt;a href=&#34;https://mp.weixin.qq.com/s/1OSRcBfd58s0tgZTUZHB9g&#34;&gt;硬件摩尔定律&lt;/a&gt;的累积优势，成为&lt;a href=&#34;https://mp.weixin.qq.com/s/Yp_PU8nmyK-NVq0clD98RQ&#34;&gt;终极FinOps实践&lt;/a&gt;，实现极为&lt;a href=&#34;https://mp.weixin.qq.com/s/CicctyvV1xk5B-AsKfzPjw&#34;&gt;惊人的降本增效能力&lt;/a&gt;。Cloudflare 的出现补齐了开源IDC自建模式的最后一块短板 —— “&lt;strong&gt;在线&lt;/strong&gt;” 能力。&lt;/p&gt;
&lt;p&gt;Cloudflare 并没有提供传统公有云上的那些弹性计算、存储、&lt;a href=&#34;/zh/blog/db/k8s&#34;&gt;K8S&lt;/a&gt;、&lt;a href=&#34;/zh/blog/cloud/rds&#34;&gt;RDS&lt;/a&gt; 服务。但幸运地是，Cloudflare 可以与公有云 / IDC 良好地配合协同 —— 从某种意义上来说，因为 Cloudflare 成功解决了 “在线” 的问题，这使得传统数据库中心 IDC 2.0 也同样可以拥有比肩甚至超越公有云的 “在线” 能力，两者配合，在事实上摧毁了一些公有云的护城河，并挤压了传统公有云厂商的生存空间。&lt;/p&gt;
&lt;p&gt;我非常看好 Cloudflare 这种模式，实际上，这种丝滑的体验才配称的上是云，配享太庙，可以心安理得吃高科技行业的高毛利。传统的 IDC 2.0 也在不断进步，租赁机柜、裸金属服务器的体验也并不逊色传统公有云（无非是服务器从两分钟到位变成几个小时到位）。而无法提供更多技术附加值，产品不可替代性的公有云厂商，生存空间会越来越小 —— &lt;a href=&#34;/zh/blog/cloud/profit&#34;&gt;最终回退到传统 IDC / IaaS 业务中去&lt;/a&gt;。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 罗永浩救不了牙膏云？</title>
      <link>/zh/blog/cloud/luo-live/</link>
      <pubDate>Mon, 01 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/cloud/luo-live/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/cloud/luo-live/featured_hu02aa61ae1d9de35cbe238d2676170cb9_533872_640x0_resize_q75_catmullrom.jpg" width="640" height="366"/>]]>
        
        &lt;p&gt;老罗曾是一位很牛B的数码产品经理，算与 IT 行业沾边。但隔行如隔山，老罗卖云，就好像同时卖肉菜蛋奶和 Office 光盘的路边摊。事实也是如此 —— 老罗直播间先铺垫卖了半个小时的扫地机器人，接着姗姗来迟的老罗照本宣科念台词卖了四十分钟”云计算“ —— 然后马不停蹄地卖起了 高露洁无水酵素牙膏 —— 留下在云计算与牙膏间迷惑凌乱的观众。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/luo-live/luo-live-1.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这牙膏确实还不错，但这云服务器嘛…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;云计算可以2c吗&#34;&gt;云计算可以2C吗？&lt;/h2&gt;
&lt;p&gt;云计算是 ToB 业务，行业翘楚 AWS 的服务对象和营销焦点，显然是面向企业级开发者的。尽管一些个人站长，博主，学生或初创企业可能会因为低价而在直播间拍板购买云服务器，但这显然非常滑稽。更滑稽的是直播间的云服务器也没有更便宜 ——  99 块钱的云服务器活动&lt;a href=&#34;https://mp.weixin.qq.com/s/Nh28VahZkQMdR8fDoi0_rQ&#34;&gt;从去年双十一就开始并持续至今&lt;/a&gt;……&lt;/p&gt;
&lt;p&gt;把云服务器卖给个人用户这种滑稽想法，可能源于最近爆火的《幻兽帕鲁》自建服务器需求。我的朋友 SealOS 的创始人方海涛写了一篇《&lt;a href=&#34;https://mp.weixin.qq.com/s/Org8pee_cxGkzOYsMFu6sA&#34;&gt;自建幻兽帕鲁私服的教程&lt;/a&gt;》，尝到了泼天富贵 SaaS 的美味。然后各家公有云厂商也快速跟进卷了起来 —— 一路从3分钟开服到30秒到3秒种开服。正如 《&lt;a href=&#34;/zh/&#34;&gt;国内云：有大厂，没大哥&lt;/a&gt;》一文形容地那样，丝毫不顾颜面，撸起袖子下场，干起了浩方对战平台应该干的事情。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/luo-live/luo-live-2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;另一种 ToC 的典型场景是学生和个人站长。在以前，个人站长拿个 2C 2G 3M带宽的小虚拟机弄个网站还是挺不错的 —— 但是自从有了赛博佛祖 Cloudflare，别说 99 块钱的云服务器了，9块9 都不香了 —— &lt;strong&gt;再便宜能便宜过免费吗？&lt;/strong&gt;  —— 何况用 CF 建站的体验比云服务器要好太多了 —— 都不用说各种Free Plan，就凭流量免费这一点，就足以让“送的几兆带宽”都统统变垃圾……&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/zh/blog/cloud/luo-live/luo-live-3.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 IT 规模光谱的一侧 —— 个人站长与小微企业上，新一代云服务/SaaS（CF，Neon，Vercel，Supabase），赛博菩萨们的免费套餐，对公有云产生了明显的替代与冲击；在光谱的另一侧 —— 中大型企业组织中，新出现的 IDC 2.0 与开源管控软件替代合流，短路掉公有云这个中间商，利用好&lt;a href=&#34;https://mp.weixin.qq.com/s/1OSRcBfd58s0tgZTUZHB9g&#34;&gt;硬件摩尔定律&lt;/a&gt;的累积优势，成为&lt;a href=&#34;https://mp.weixin.qq.com/s/Yp_PU8nmyK-NVq0clD98RQ&#34;&gt;终极FinOps实践&lt;/a&gt;，实现极为&lt;a href=&#34;https://mp.weixin.qq.com/s/CicctyvV1xk5B-AsKfzPjw&#34;&gt;惊人的降本增效能力&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;公有云冥灯亮起&#34;&gt;公有云冥灯亮起&lt;/h2&gt;
&lt;p&gt;任何行业的发展基本都遵从：技术主导 → 产品主导→ 运营主导的脉络。而在当下，除了大模型之外，公有云几乎没有什么独一无二的技术，不可替代的产品了。虚拟机、对象存储、云数据库成为了各家都有售的标品大锅饭，开源的云管控软件比如 SealOS 与 Pigsty 也将自建的能力普及。行业卷成了一片血海，大家从拼技术、拼产品的阶段走向了终局 —— 拼运营，也就是&lt;a href=&#34;https://mp.weixin.qq.com/s/2w0bLJI7TvUNp1tzLYbvsA&#34;&gt;拼销售、打价格战&lt;/a&gt;的阶段。&lt;/p&gt;
&lt;p&gt;对云计算来说，ToC 这种生意只能算蚊子腿。我们可以简单假设估算一下 —— 帕鲁爆卖了两千万份，十分之一中国玩家；作为单机游戏假设又有十分之一的用户有联机需求；这百分之几的本土联机用户一个月内玩腻，最后能产生个十几万核·月的云服务需求，分别从 A、B、C、D 等诸家云厂商采购 —— 每家分到个小几百万的市场规模。听上去不少，够养活一个创业公司了 —— 但随便一个云上 KA 企业客户年消，或者几个程序员工资就这个数了 —— 这显然不是云厂商应该干的事情。&lt;/p&gt;
&lt;p&gt;公有云行业的增长已经到顶，原来看不上的蚊子腿，现在也变成了香饽饽 —— 各家云厂商的营收增速已经从原来的几十下降到了个位数，勉强靠着租GPU和大模型续了一口。但原本主营业务的增量市场没有了，市场萎缩，进入了零和博弈与斗兽厮杀阶段。营销也用出了各种荒腔走板草台班子的招数 —— 比如，&lt;a href=&#34;https://www.bilibili.com/video/BV1kp4y1o7mP&#34;&gt;女大学生第一次买服务器&lt;/a&gt;这种没品噱头，买数据库送天猫超市购物券这种滑稽戏，以及新出现的淘宝直播卖云服务器的新节目。&lt;/p&gt;
&lt;p&gt;实际上，罗老师在 &lt;a href=&#34;https://mp.weixin.qq.com/s/fxOFHBrgqIbu1Sl_cJhwxA&#34;&gt;行业晴雨表的能力上有着出色的的声誉&lt;/a&gt;  —— 冥灯为谁而亮，丧钟为谁而鸣？这种行为艺术有着一语成谶的潜力。牙膏云逐渐从代表先进生产力的本土云计算领头羊，变成了只能够打价格战的计算资源提供商，&lt;a href=&#34;https://mp.weixin.qq.com/s/BYu8nZjqAQbWc2yT8K_pFQ&#34;&gt;&lt;strong&gt;自己把自己玩坏了&lt;/strong&gt;&lt;/a&gt;，确实不禁让人嘘唏。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Redis不开源是“开源”之耻，更是公有云之耻</title>
      <link>/zh/blog/db/redis-oss/</link>
      <pubDate>Mon, 25 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>/zh/blog/db/redis-oss/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/zh/blog/db/redis-oss/featured_huf0f94727527e7e470168c5bbabb04c03_511315_640x0_resize_q75_catmullrom.jpg" width="640" height="360"/>]]>
        
        &lt;p&gt;最近 Redis 修改其协议引发了争议：它从 7.4 起使用 RSALv2 与 SSPLv1，不再满足 OSI 关于 “开源软件” 的定义。但不要搞错：&lt;strong&gt;Redis “不开源” 不是 Redis 的耻辱，而是“开源/OSI”的耻辱&lt;/strong&gt; —— 它反映出开源&lt;a href=&#34;https://opensource.org/&#34;&gt;&lt;strong&gt;组织&lt;/strong&gt;&lt;/a&gt;/理念的过气。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当下软件自由的头号敌人是公有云服务&lt;/strong&gt;。“&lt;strong&gt;开源&lt;/strong&gt;” 与 “&lt;strong&gt;闭源&lt;/strong&gt;” 也不再是软件行业的核心矛盾，斗争的焦点变为 “&lt;strong&gt;云上服务&lt;/strong&gt;” 与 “&lt;strong&gt;本地优先&lt;/strong&gt;”。公有云厂商搭着开源软件的便车白嫖社区的成果，这注定会引发社区的强烈反弹。&lt;/p&gt;
&lt;p&gt;在抵御云厂商白嫖的实践中，修改协议是最常见的做法：但AGPLv3 过于严格容易敌我皆伤，SSPL 因为明确表达这种敌我歧视，不被算作开源。业界需要一种新的歧视性软件许可证协议，来达到名正言顺区分敌我的效果。&lt;/p&gt;
&lt;p&gt;真正重要的事情一直都是软件自由，而“开源”只是实现软件自由的一种手段。而如果“开源”的理念无法适应新阶段矛盾斗争的需求，甚至会妨碍软件自由，它一样会过气，并不再重要，并最终被新的理念与实践所替代。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;修改协议的开源软件&#34;&gt;修改协议的开源软件&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;“&lt;strong&gt;我想直率地说：多年来，我们就像个傻子一样，他们拿着我们开发的东西大赚了一笔&lt;/strong&gt;”。&lt;/p&gt;
&lt;p&gt;Redis Labs 首席执行官 Ofer Bengal&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Redis 在过去几年中一直都是开发者最喜爱的数据库系统（&lt;a href=&#34;/zh/blog/pg/pg-is-no1&#34;&gt;在去年被 PostgreSQL 超过&lt;/a&gt;），采用了非常友善的 BSD-3 Clause 协议，并被广泛应用在许多地方。然而，几乎所有的公有云上都可以看到云 Redis 数据库服务，云厂商靠它赚的钵满盆翻，而支付研发成本的 Redis 公司和开源社区贡献者被搁在一边。这种不公平的生产关系，注定会招致猛烈的反弹。&lt;/p&gt;
&lt;p&gt;Redis 切换为更为严格的 SSPL 协议的核心原因，用 Redis Labs CEO 的话讲就是：“&lt;strong&gt;多年来，我们就像个傻子一样，他们拿着我们开发的东西大赚了一笔&lt;/strong&gt;”。“他们”是谁？ —— &lt;strong&gt;公有云&lt;/strong&gt;。切换 SSPL 的目的是，试图通过法律工具阻止这些云厂商白嫖吸血开源，成为体面的社区参与者，将软件的管理、监控、托管等方面的代码开源回馈社区。&lt;/p&gt;
&lt;p&gt;不幸的是，你可以强迫一家公司提供他们的 GPL/SSPL 衍生软件项目的源码，但你不能强迫他们成为开源社区的好公民。公有云对于这样的协议往往也嗤之以鼻，大多数云厂商只是简单拒绝使用AGPL许可的软件：要么使用一个采用更宽松许可的替代实现版本，要么自己重新实现必要的功能，或者直接购买一个没有版权限制的商业许可。&lt;/p&gt;
&lt;p&gt;当 Redis 宣布更改协议后，马上就有 AWS 员工跳出来 Fork Redis —— “Redis 不开源了，我们的分叉才是真开源！” 然后 AWS CTO 出来&lt;a href=&#34;https://twitter.com/Werner/status/1771324218506108995&#34;&gt;叫好&lt;/a&gt;，并假惺惺的说：这是我们员工的个人行为 —— 堪称是现实版杀人诛心。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/Werner/status/1771324218506108995&#34;&gt;&lt;img src=&#34;/zh/blog/db/redis-oss/twitter.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;图：AWS CTO &lt;a href=&#34;https://twitter.com/Werner/status/1771324218506108995&#34;&gt;转评&lt;/a&gt;员工 Fork Redis&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;被这样搞过的并非只有 Redis 一家。发明 SSPL 的 MongoDB 也是这个样子 —— 当 2018 年 MongoDB 切换至 SSPL 时，AWS 就搞了一个所谓 “API兼容“ 的 &lt;a href=&#34;https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/govcloud-dcdb.html&#34;&gt;DocumentDB&lt;/a&gt; 来恶心它。ElasticSearch 修改协议后，AWS 就推出了 &lt;a href=&#34;https://opensearch.org/&#34;&gt;OpenSearch&lt;/a&gt; 作为替代。头部 NoSQL 数据库都已经切换到了 SSPL，而 AWS 也都搞出了相应的“开源替代”。&lt;/p&gt;
&lt;p&gt;因为引入了额外的限制与所谓的“歧视”条款，OSI 并没有将 SSPL 认定为开源协议。因此使用 SSPL 的举措被解读为 —— “Redis 不再开源”，而云厂商的各种 Fork 是“开源”的。从法律工具的角度来说，这是成立的。但从朴素道德情感出发，这样的说法对于 Redis 来说是极其不公正地抹黑与羞辱。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;正如罗翔老师所说：法律工具的判断永远不能超越社区成员朴素的道德情感。如果协和与华西不是三甲，那么丢脸的不是这些医院，而是三甲这个标准。如果年度游戏不是巫师3，荒野之息，博德之门，那么丢脸的不是这些厂商，而是评级机构。如果 Redis 不再算“开源”，真正应该感到耻辱的是OSI，与开源这个理念。&lt;/p&gt;
&lt;p&gt;越来越多的知名开源软件，都开始切换到敌视针对云厂商白嫖的许可证协议上来。不仅仅是 Redis，MongoDB，与 ElasticSearch 。MinIO 与 Grafana 分别在 2020，2021年从 Apache v2 协议切换到了 AGPLv3 协议。HashipCrop 的各种组件，MariaDB MaxScale， Percona MongoDB 也都使用了风格类似的 BSL 协议。&lt;/p&gt;
&lt;p&gt;一些老牌的开源项目例如 PostgreSQL ，正如PG核心组成员 Jonathan 所说，三十年的声誉历史沉淀让它们已经&lt;a href=&#34;/zh/blog/pg/pg-license&#34;&gt;在事实上无法变更开源协议&lt;/a&gt; 了。但我们可以看到，许多新强力的 PostgreSQL &lt;a href=&#34;/zh/docs/about/license#%E5%8D%8F%E8%AE%AE%E6%B8%85%E5%8D%95&#34;&gt;扩展插件&lt;/a&gt;开始使用 AGPLv3 作为默认的开源协议，而不是以前默认使用的 BSD-like / PostgreSQL 友善协议。例如分布式扩展 Citus，列存扩展 Hydra，ES全文检索替代扩展 BM25，OLAP 加速组件 PG Analytics …… 等等等等。&lt;/p&gt;
&lt;p&gt;包括我们自己的 PostgreSQL 发行版 Pigsty，也在 2.0 的时候由 Apache 协议切换到了 &lt;a href=&#34;/zh/docs/about/license&#34;&gt;AGPLv3 协议&lt;/a&gt;，背后的动机都是相似的 —— 针对软件自由的最大敌人 —— 云厂商进行反击。我们改变不了存量，但对于增量功能，是可以做出有效的回击与改变的。&lt;/p&gt;
&lt;p&gt;在抵御云厂商白嫖的实践中，修改协议是最常见的做法：AGPLv3 是一种比较主流的实践，更激进的 SSPL 因为明确表达这种敌我歧视，不被算作开源。使用双协议进行明确的边界区分，也开始成为一种主流的开源商业化实践。但重要的是：&lt;strong&gt;业界需要一种新的歧视性软件许可证协议，达到名正言顺辨识敌我，区别对待的效果 —— 来解决软件自由在当下面临的最大挑战 —— 云服务。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;软件行业的范式转移&#34;&gt;软件行业的范式转移&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;软件吞噬世界，开源吞噬软件，云吞噬开源。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在当下，软件自由的头号敌人是云计算租赁服务。&lt;strong&gt;“开源” 与 “闭源” 也不再是软件行业的核心矛盾，斗争的焦点变为 “云上服务” 与 “本地优先”&lt;/strong&gt;。要理解这一点，我们要回顾一下软件行业的几次主要范式转移，以数据库为例：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Yp6L0hh4b4HuJQRPD3aJYw&#34;&gt;&lt;img alt=&#34;paradigm-title.png&#34; src=&#34;/zh/blog/db/redis-oss/fish.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最初，软件吞噬世界&lt;/strong&gt;，以 Oracle 为代表的商业数据库，用软件取代了人工簿记，用于数据分析与事务处理，极大地提高了效率。不过 Oracle 这样的商业数据库非常昂贵，vCPU·月光是软件授权费用就能破万，往往只有金融行业，大型机构才用得起，即使像如淘宝这样的互联网巨头，上了量后也不得不”去O“。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接着，开源吞噬软件&lt;/strong&gt;，像 PostgreSQL 和 MySQL 这样”&lt;strong&gt;开源&lt;/strong&gt;免费“的数据库应运而生。软件开源本身是免费的，每核每月只需要几十块钱的硬件成本。大多数场景下，如果能找到一两个数据库专家帮企业用好开源数据库，那可是要比傻乎乎地给 Oracle 送钱要实惠太多了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;然后，云吞噬开源&lt;/strong&gt;。公有云软件，是互联网大厂将自己使用开源软件的能力产品化对外输出的结果。公有云厂商把开源数据库内核套上壳，包上管控软件跑在托管硬件上，并建设共享开源专家池提供咨询与支持，便成了&lt;strong&gt;云数据库服务&lt;/strong&gt; （RDS）。20 ¥/核·月的硬件资源通过包装，变为了 300 ～ 1300 ¥/核·月的天价 RDS 服务。&lt;/p&gt;
&lt;p&gt;曾经，&lt;strong&gt;软件自由的最大敌人是商业闭源软件&lt;/strong&gt;，以微软，甲骨文为代表 —— 许多开发者依然对拥抱开源之前的微软名声有着深刻印象，甚至可以说整个自由软件运动正是源于 1990 年代的反微软情绪。但是，自由软件与开源软件的概念已经彻底改变了软件世界：商业软件公司耗费了海量资金与这个想法斗争了几十年。最终还是难以抵挡开源软件的崛起 —— 开源软件打破了商业软件的垄断，让软件这种IT业的核心生产资料变为全世界开发者公有，按需分配。开发者各尽所能，人人为我，我为人人，这直接催生了互联网的黄金繁荣时代。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开源并不是一种商业模式，甚至是一种强烈违反商业化逻辑的模式&lt;/strong&gt;。然而，任何可持续发展的模式都需要获取资源以支付成本，开源也不例外。开源真正的模式是 —— 通过免费的软件创造高薪技术专家岗位。分散在不同企业组织中的开源专家，产消合一者 (Pro-sumer)，是（纯血）开源软件社区的核心力量 —— &lt;strong&gt;免费的开源软件吸引用户，用户需求产生开源专家岗位，开源专家共创出更好的开源软件&lt;/strong&gt;。开源专家作为组织的代理人，从开源社区，集体智慧成果中汲取力量。组织享受到了开源软件的好处（软件自由，无商业软件授权费），而分散的雇主可以轻松兜住住这些专家的薪资成本。&lt;/p&gt;
&lt;p&gt;然而公有云，特别是云软件的出现破坏了这种生态循环 —— 几个云巨头尝试垄断开源专家供给，重新尝试在 &lt;strong&gt;用好开源软件&lt;/strong&gt;（服务）这个维度上，实现商业软件没能实现的垄断。 云厂商编写了开源软件的管控软件，组建了专家池，通过提供维护攫取了软件生命周期中的绝大部分价值，并通过搭便车的行为将最大的成本 —— &lt;strong&gt;产研&lt;/strong&gt;交由整个开源社区承担。而 &lt;a href=&#34;/zh/blog/cloud/dba-vs-rds#%E4%BA%91%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%A8%A1%E5%BC%8F%E4%B8%8E%E6%96%B0%E6%8C%91%E6%88%98&#34;&gt;&lt;strong&gt;真正有价值的管控/监控代码却从来不回馈开源社区&lt;/strong&gt;&lt;/a&gt;。而更大的伤害在于 —— 公有云就像头部带货主播消灭大量本地便利店一样，摧毁了大量的开源就业岗位，掐断了开源社区的人才流动与供给。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;计算自由的头号敌人&#34;&gt;计算自由的头号敌人&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;在 2024 年，软件自由的真正敌人，是云服务软件！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;开源软件带来了巨大的行业变革，可以说，&lt;strong&gt;互联网的历史就是开源软件的历史&lt;/strong&gt;。互联网公司是依托开源软件繁荣起来的，而公有云是从头部互联网公司孵化出来的。公有云的历史，就是一部屠龙勇者变为新恶龙的故事。&lt;/p&gt;
&lt;p&gt;云刚出现的时候，它也曾经是一位依托开源 挑战传统 IT 市场恶龙的勇者，挥舞着大棒砸烂“企业级”杀猪盘。他们关注的是硬件 / &lt;strong&gt;IaaS&lt;/strong&gt;层 ：存储、带宽、算力、服务器。云厂商的初心故事是：让计算和存储资源像水电一样，自己扮演基础设施的提供者的角色。这是一个很有吸引力的愿景：公有云厂商可以通过规模效应，压低硬件成本并均摊人力成本；理想情况下，在给自己留下足够利润的前提下，还可以向公众提供比 IDC 价格更有优势，更有弹性的存储算力（&lt;a href=&#34;/zh/blog/cloud/ecs&#34;&gt;&lt;strong&gt;实际上也并不便宜&lt;/strong&gt;！&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;然而随着时间的推移，这位曾经的屠龙英雄逐渐变成了他曾经发誓打败的恶龙 —— 一个新的“杀猪盘”，对用户征收高昂无专家税与“保护费”。这对应着云软件（ PaaS / SaaS ），它与&lt;strong&gt;云硬件&lt;/strong&gt;有着迥然不同的商业逻辑：云硬件靠的是规模效应，优化整体效率赚取资源池化超卖的钱，算是一种效率进步。而&lt;strong&gt;云软件&lt;/strong&gt;则是靠共享专家，提供运维外包来收取服务费。公有云上大量的&lt;strong&gt;软件&lt;/strong&gt;，本质是吸血白嫖开源社区搭便车，抢了分散在各个企业中开源工程师的饭碗，依靠的是信息不对称、专家垄断、用户锁定收取天价服务费，是一种价值的攫取转移，对原有的生态模式的破坏。&lt;/p&gt;
&lt;p&gt;不幸的是，出于混淆视线的目的，云软件与云硬件都使用了“云”这个名字。因而在云的故事中，同时混掺着将算力普及到千家万户的理想主义光辉，与达成垄断攫取不义利润的贪婪。&lt;/p&gt;


&lt;div class=&#34;alert alert-danger&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;在 2024 年，软件自由的真正敌人，是云服务软件！&lt;/h4&gt;

    

&lt;/div&gt;

&lt;p&gt;云软件，即主要在供应商的服务器上运行的软件，而你的所有数据也存储在这些服务器上。以云数据库为代表的 PaaS ，以及各类只能通过租赁提供服务的 SaaS 都属于此类。这些“云软件”也许有一个客户端组件（手机App，网页控制台，跑在你浏览器中的 JavaScript），但它们只能与供应商的服务端共同工作。而云软件存在很多问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果云软件供应商倒闭或停产，您的云软件就歇菜了，而你用这些软件创造的文档与数据就被锁死了。例如，很多初创公司的 SaaS 服务会被大公司收购，而大公司没有兴趣继续维护这些产品。&lt;/li&gt;
&lt;li&gt;云服务可能在没有任何警告和追索手段的情况下突然暂停您的服务（例如 Parler ）。您可能在完全无辜的情况下，被自动化系统判定为违反服务条款：其他人可能入侵了你的账户，并在你不知情的情况下使用它来发送恶意软件或钓鱼邮件，触发违背服务条款。因而，你可能会突然发现自己用各种云文档或其它App创建的文档全部都被永久锁死无法访问。&lt;/li&gt;
&lt;li&gt;运行在你自己的电脑上的软件，即使软件供应商破产倒闭，它也可以继续跑着，想跑多久跑多久。相比之下，如果云软件被关闭，你根本没有保存的能力，因为你从来就没有服务端软件的副本，无论是源代码还是编译后的形式。&lt;/li&gt;
&lt;li&gt;云软件极大加剧了软件的定制与扩展难度，在你自己的电脑上运行的闭源软件，至少有人可以对它的数据格式进行逆向工程，这样你至少有个使用其他替代软件的PlanB。而云软件的数据只存储在云端而不是本地，用户甚至连这一点都做不到了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果所有软件都是免费和开源的，这些问题就都自动解决了。然而，&lt;strong&gt;开源和免费实际上并不是解决云软件问题的必要条件；即使是收钱的或者闭源的软件，也可以避免上述问题&lt;/strong&gt;：只要它运行在你自己的电脑、服务器、机房上，而不是供应商的云服务器上就可以。拥有源代码会让事情更容易，但这并不是不关键，&lt;strong&gt;最重要的还是要有一份软件的本地副本&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在当今，&lt;strong&gt;云软件，而不是闭源软件或商业软件，成为了软件自由的头号威胁&lt;/strong&gt;。云软件供应商可以在您无法审计，无法取证，无法追索的情况下访问您的数据，或突然心血来潮随心所欲地锁定你的所有数据，这种可能性的潜在危害，要比无法查看和修改软件源码的危害大得多。与此同时，也有不少公有云厂商渗透进入开源社区，并将“开源”视作一种获客营销包装、或形成垄断标准的手段，作为吸引用户的钓饵，而不是真正追求“软件自由”的目的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;”开源“ 与 ”闭源“ 已经不再是软件行业中最核心的矛盾，斗争的焦点变为 “云” 与 “本地优先”。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;自由世界如何应对挑战&#34;&gt;自由世界如何应对挑战？&lt;/h2&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;重要的事情，一直都是软件自由&lt;/h4&gt;

    

&lt;/div&gt;

&lt;p&gt;有力，就会有反作用力，云软件的崛起会引发新的制衡力量。面对云服务的挑战，已经有许多软件组织/公司做出了反应，包括但不限于：使用歧视性开源协议，法律工具与集体行动，抢夺云计算的定义权。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;修改开源许可证&#34;&gt;修改开源许可证&lt;/h3&gt;
&lt;p&gt;软件社区应对云服务挑战的最常见反应是修改许可证，如 Grafana，MinIO，Pigsty 那样修改为 AGPLv3，或者像 Redis，MongoDB，ElasticSearch 那样修改为 SSPL，或者使用双协议 / BSL 的方式。大的方向是一致的 —— &lt;strong&gt;重新划定社区共同体边界，将竞争者、与敌人直接排除在社区之外。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;友善、自由的互联网/软件世界离我们越来越远 —— 大爱无疆，一视同仁，始终无私奉献的圣母精神固然值得敬佩，但真正能靠自己力量活下来的，是爱憎分明，以德报德，以直报怨的勇者。这里的核心问题在于 &lt;strong&gt;“歧视”&lt;/strong&gt; / 区别对待 —— 对待同志要像春天般的温暖，对待敌人要像严冬一样残酷。&lt;/p&gt;
&lt;p&gt;业界需要一种实践来做到这一点。AGPL，SSPL，BSL 这样的协议就是一种尝试 —— 这些协议通常并不影响终端用户使用这些软件；也不影响普通的服务提供商在遵循开源义务的前提下提供支持与咨询服务；而是专门针对公有云厂商设计的 —— &lt;a href=&#34;/zh/blog/cloud/dba-vs-rds#dba%E7%9A%84%E5%B7%A5%E4%BD%9C%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E6%8E%A7&#34;&gt;&lt;strong&gt;管控软件&lt;/strong&gt;&lt;/a&gt; 作为公有云厂商摇钱树，在事实上是难以选择开源的，因此公有云厂商被歧视性地排挤出软件社区之外。&lt;/p&gt;
&lt;p&gt;使用 Copyleft 协议族可以将公有云厂商排除在社区之外，从而保护软件自由。然而这些协议也容易出现伤敌一千，自损一百的情况。 在更为严格的许可要求下，一部分软件自由也受到了不必要的连带损失，例如：Copyleft 协议族也与其他广泛使用的许可证不兼容，这使得在同一个项目中使用某些库的组合变得更为困难。因此业界需要更好的实践来真正落实好这一点。&lt;/p&gt;
&lt;p&gt;例如，我们的自由 PostgreSQL 发行版 Pigsty 使用了 AGPLv3 协议，但我们添加了对普通用户的 &lt;a href=&#34;/zh/docs/about/license#%E8%A1%A5%E5%85%85%E6%9D%A1%E6%AC%BE&#34;&gt;补充豁免条款&lt;/a&gt; —— 我们只保留对公有云供应商，与换皮套壳魔改同行进行违规追索的权利，对于普通终端用户来说实际执行的是 Apache 2.0 等效条款 —— 采购我们服务订阅的客户也可以得到书面承诺：不就违反 AGPLv3 的协议进行任何追索 —— 从某种意义上来说，这也是一种 “双协议” 实践。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;法律工具与集体行动&#34;&gt;法律工具与集体行动&lt;/h3&gt;
&lt;p&gt;Copyleft软件许可证是一种法律工具，它试图迫使更多的软件供应商公开其源码。但是对于促进软件自由而言，&lt;a href=&#34;/zh/blog/db/goodbye-gpl#%E4%BF%83%E8%BF%9B%E8%BD%AF%E4%BB%B6%E8%87%AA%E7%94%B1%E7%9A%84%E6%B3%95%E5%BE%8B%E5%B7%A5%E5%85%B7&#34;&gt;Martin Keppmann 相信更有前景的法律工具是政府监管&lt;/a&gt;。例如，GDPR提出了&lt;a href=&#34;https://ico.org.uk/for-organisations/guide-to-data-protection/guide-to-the-general-data-protection-regulation-gdpr/individual-rights/right-to-data-portability/&#34;&gt;数据可移植权&lt;/a&gt;，这意味着用户必须可以能将他们的数据从一个服务转移到其它的服务中。另一条有希望的途径是，推动 &lt;a href=&#34;https://joinup.ec.europa.eu/sites/default/files/document/2011-12/OSS-procurement-guideline-final.pdf&#34;&gt;公共部门的采购倾向于开源、本地优先的软件&lt;/a&gt;，而不是闭源的云软件。这为企业开发和维护高质量的开源软件创造了积极的激励机制，而版权条款却没有这样做。&lt;/p&gt;
&lt;p&gt;我认为，有效的改变来自于对大问题的集体行动，而不仅仅来自于一些开源项目选择一种许可证而不是另一种。公有云反叛军联盟应该团结一切可以团结的有生力量 —— 开源平替软件社群，开发者与用户；服务器与硬件厂商，坚守 IaaS 阵地的资源云，运营商云，IDC 与 IDC 2.0，甚至是公有云厂商的 IaaS 部门。采取一切法律框架内允许的行动去推进这一点。&lt;/p&gt;
&lt;p&gt;一种有效的对抗措施是为整个云计算技术栈提供开源替代品，例如在《&lt;a href=&#34;https://mp.weixin.qq.com/s/Fit7MtSDQdp9IcedmWdYQg&#34;&gt;云计算反叛军&lt;/a&gt;》中就提到 —— 云计算世界需要一个能代表开源价值观的替代解决方案。开源软件社区可以与云厂商比拼生产力 —— 组建一个反叛军同盟采取集体行动。&lt;strong&gt;针对公有云厂商提供服务所必不可少的管控软件，逐一研发开源替代&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在云软件没有出现开源/本地优先的替代品前，公有云厂商可以大肆收割，攫取垄断利润。而一旦更好用，更简易，成本低得多的开源替代品出现，好日子便将到达终点。例如，Kubernetes /  SealOS / OpenStack / KVM / Proxmox，可以理解为云厂商 EC2 / ECS / VPS 管控软件的开源替代；MinIO / Ceph 旨在作为为云厂商 S3 / OSS 管控软件的开源替代；而 &lt;strong&gt;Pigsty&lt;/strong&gt; / 各种数据库 Operator 就是 RDS 云数据库管控软件的开源替代。这些开源替代品将直接击碎公有云计算的核心技术壁垒 —— 管控软件，让云的能力民主化，直接普及到每一个用户手中。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;抢夺云计算的定义权&#34;&gt;抢夺云计算的定义权&lt;/h3&gt;
&lt;p&gt;公有云可以渗透到开源社区中兴风作浪，那么开源社区也可以反向渗透，抢夺云计算的定义权。例如，对于 Cloud Native 的不同解释就生动地体现了这一点。云厂商将 &lt;strong&gt;Native&lt;/strong&gt; 解释 “原生”：“原生诞生在公有云环境里的软件” 以混淆视听；但究其目的与效果而言，&lt;strong&gt;Native&lt;/strong&gt; 真正的含义应为 “本地”，即与 &lt;strong&gt;Cloud&lt;/strong&gt; 相对应的 “&lt;strong&gt;Local&lt;/strong&gt;” —— 本地云 / 私有云 / 专有云 / 原生云 / 主权云，叫什么不重要，重要的是它运行在用户想运行的任何地方（包括云服务器），而不是仅仅是只能从公有云租赁！&lt;/p&gt;
&lt;p&gt;这一理念，用一个单独的术语，可以概括为 “本地优先”，它与云服务针锋相对。“&lt;strong&gt;本地优先&lt;/strong&gt;” 与 “&lt;strong&gt;云&lt;/strong&gt;” 的对立体现为多种不同的形式：有时候是 “&lt;strong&gt;Native Cloud&lt;/strong&gt;” vs “&lt;strong&gt;Cloud Native&lt;/strong&gt;”，有时候叫体现为 “私有云” vs “公有云”，大部分时候与 ”开源“ vs “闭源”重叠，某种意义上也牵扯着 “自主可控” vs “仰人鼻息”。&lt;/p&gt;
&lt;p&gt;本地优先的软件在您自己的硬件上运行，并使用本地数据存储，但也不排斥运行在云 IaaS 上，同时也保留云软件的优点，比如实时协作，简化运维，跨设备同步，资源调度，灵活伸缩等等。开源的本地优先的软件当然非常好，但这并不是必须的，本地优先软件90%的优点同样适用于闭源的软件。同理，免费的软件当然好，但本地优先的软件也不排斥商业化与收费服务。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;理直气壮地争取资源&#34;&gt;理直气壮地争取资源&lt;/h3&gt;
&lt;p&gt;最后，不得不说的一点，就是开源商业化，收钱的问题。开源软件社区应该理直气壮地赚钱与筹款 —— &lt;strong&gt;自由不是免费的！&lt;/strong&gt;  Freedom is not free 早已经是老生常谈。然而，相当一部分开源贡献者与开源用户都对开源软件有着不切实际的期待与错觉。&lt;/p&gt;
&lt;p&gt;一些用户误以为他们与维护者的关系是商业关系，因此期望获得商业供应商的客户服务标准；而一些开源贡献者也期待开源用户给予金钱、声望、场景上的互惠与回馈贡献。一方认为他们应得的比另一方认为的要多，这种不明确的结果就会走向怨恨。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开源不等于免费&lt;/strong&gt;，尽管大部分开源软件都提供了让用户免费使用的条件，但免费的开源软件是一种没有条件的&lt;strong&gt;礼物&lt;/strong&gt;。作为收礼人，用户只有选择收或不收的权利；作为送礼人，期待得到特定回报是愚蠢的。作为开源贡献者，给别人戴上氧气面罩前，请务必先戴好自己的氧气面罩。如果某个开源企业自己都无法养活自己，那么选择用爱发电，四处慷慨送礼就是不明智的。&lt;/p&gt;
&lt;p&gt;因此，全职的开源软件的开发者与公司，必须审慎思考自己的商业模式 —— 想让项目与组织持续发展，资源是必不可少的。无论是做专门的企业版，提供服务支持与订阅，设置双协议，去拉赞助化缘卖周边，或者干脆像 Redis 一样使用所谓 “不开源” 的协议，&lt;strong&gt;这都无可厚非，应当是光明正大，且理直气壮的&lt;/strong&gt;。实际上，因为开源软件为用户提供了额外的“&lt;strong&gt;软件自由&lt;/strong&gt;” —— 因此在质量相同的前提下，收取比云租赁软件更高的费用也是完全合乎道德情理的！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;博弈均衡会走向哪里&#34;&gt;博弈均衡会走向哪里&lt;/h2&gt;
&lt;p&gt;云计算的故事与电力的推广过程如出一辙，让我们把目光回退至上个世纪初，从电力的推广普及垄断监管中汲取历史经验 —— &lt;strong&gt;供电也许会走向垄断、集中、国有化，但你管不住电器&lt;/strong&gt;。如果云硬件（算力）类似于电力，那么云软件便是电器。生活在现代的我们难以想象：洗衣机，冰箱，热水器，电脑，竟然还要跑到电站边的机房去用，我们也很难想象，居民要由自己的发电机而不是公共发电厂来供电。&lt;/p&gt;
&lt;p&gt;因此从长期来看，公有云厂商大概也会有这么一天：在云硬件上通过类似于电力行业，通过垄断并购与兼并形成“规模效应”，利用“峰谷电”，“弹性定价”等各种方式优化整体资源利用率，在相互斗兽竞争中将算力成本不断压低至新的底线，实现“家家有电用”。当然，最后也少不了政府监管介入，公私合营收归国有，成为如同国家电网与电信运营商类似的存在，最终实现 IaaS 层的存储带宽算力的垄断。&lt;/p&gt;
&lt;p&gt;而与之对应，制造灯泡、空调、洗衣机这类电器的职能会从电力公司中剥离，百花齐放。云厂商的 PaaS / SaaS 在被更好，更优质，更便宜的开源替代冲击下逐渐萎缩，或回归到足够低廉的价格水平。&lt;/p&gt;
&lt;p&gt;正如当年开源运动的死对头微软，现在也选择拥抱开源。公有云厂商肯定也会有这一天，与自由软件世界达成和解，心平气和地接受基础设施供应商的角色定位，为大家提供水与电一般的存算资源。而&lt;strong&gt;云软件终将&lt;/strong&gt;会回归正常毛利，&lt;strong&gt;希望那一天人们能记得，这不是因为云厂商大发慈悲，而是有人带来过开源平替。&lt;/strong&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
