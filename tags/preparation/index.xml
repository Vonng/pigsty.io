<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pigsty – Preparation</title>
    <link>/tags/preparation/</link>
    <description>Recent content in Preparation on Pigsty</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	  <atom:link href="/tags/preparation/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Preparation</title>
      <link>/docs/setup/prepare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/setup/prepare/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;node&#34;&gt;Node&lt;/h2&gt;
&lt;p&gt;Pigsty supports the &lt;code&gt;Linux&lt;/code&gt; kernel and &lt;code&gt;x86_64/aarch64&lt;/code&gt; arch, applicable to any node.&lt;/p&gt;
&lt;p&gt;A &amp;ldquo;node&amp;rdquo; refers to a resource that is SSH accessible and offers a bare OS environment, such as a physical machine, a virtual machine, or an OS container equipped with &lt;code&gt;systemd&lt;/code&gt; and &lt;code&gt;sshd&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Deploying Pigsty requires at least 1 node. The minimum spec requirement is &lt;code&gt;1C1G&lt;/code&gt;, but it is recommended to use at least &lt;code&gt;2C4G&lt;/code&gt;, with no upper limit: parameters will automatically optimize and adapt.&lt;/p&gt;
&lt;p&gt;For demos, personal sites, devbox, or standalone monitoring infra, &lt;strong&gt;1-2&lt;/strong&gt; nodes are recommended, while at least 3 nodes are suggested for an HA PostgreSQL cluster. For critical scenarios, &lt;strong&gt;4-5&lt;/strong&gt; nodes are advisable.&lt;/p&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Leverage IaC Tools for chores&lt;/h4&gt;

    &lt;p&gt;Managing a large-scale prod env could be tedious and error-prone. We recommend using Infrastructure as Code (IaC) tools to address these issues.&lt;/p&gt;
&lt;p&gt;You can use the &lt;a href=&#34;/docs/setup/provision/#terraform&#34;&gt;&lt;strong&gt;Terraform&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;/docs/setup/provision/#vagrant&#34;&gt;&lt;strong&gt;Vagrant&lt;/strong&gt;&lt;/a&gt; templates provided by Pigsty,
to create the required node environment with just one command through IaC, provisioning network, OS image, admin user, privileges, etc&amp;hellip;&lt;/p&gt;


&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;network&#34;&gt;Network&lt;/h2&gt;
&lt;p&gt;Pigsty requires nodes to use &lt;strong&gt;static IPv4 addresses&lt;/strong&gt;, which means you should explicitly assign your nodes a specific fixed IP address rather than using DHCP-assigned addresses.&lt;/p&gt;
&lt;p&gt;The IP address used by a node should be the primary IP address for internal network communications and will serve as the node&amp;rsquo;s unique identifier.&lt;/p&gt;
&lt;p&gt;If you wish to use the optional Node VIP and PG VIP features, ensure all nodes are located within an L2 network.&lt;/p&gt;
&lt;p&gt;Your firewall policy should ensure the required ports are open between nodes. For a detailed list of ports required by different modules, refer to &lt;a href=&#34;/docs/node/&#34;&gt;&lt;strong&gt;Node: Ports&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Which Ports Should Be Exposed?&lt;/h4&gt;

    &lt;p&gt;For beginners or those who are just trying it out, you can just open ports &lt;code&gt;5432&lt;/code&gt; (PostgreSQL database) and &lt;code&gt;3000&lt;/code&gt; (Grafana visualization interface) to the world.&lt;/p&gt;
&lt;p&gt;For a serious prod env, you should only expose the necessary ports to the exterior, such as &lt;code&gt;80/443&lt;/code&gt; for web services, open to the office network (or the entire Internet).&lt;/p&gt;
&lt;p&gt;Exposing database service ports directly to the Internet is not advisable. If you need to do this, consider consulting &lt;a href=&#34;/docs/setup/security/&#34;&gt;Security Best Practices&lt;/a&gt; and proceed cautiously.&lt;/p&gt;
&lt;p&gt;The method for exposing ports depends on your network implementation, such as security group policies, local iptables records, firewall configurations, etc.&lt;/p&gt;


&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;operating-system&#34;&gt;Operating System&lt;/h2&gt;
&lt;p&gt;Pigsty supports various Linux OS. We recommend using &lt;strong&gt;RockyLinux 8.9&lt;/strong&gt; or &lt;strong&gt;Ubuntu 22.04.3&lt;/strong&gt; as the default OS for installing Pigsty.&lt;/p&gt;
&lt;p&gt;Pigsty supports RHEL (7,8,9), Debian (11,12), Ubuntu (20,22), and many other compatible OS distros. Check &lt;a href=&#34;/docs/reference/compatibility/&#34;&gt;&lt;strong&gt;Compatibility&lt;/strong&gt;&lt;/a&gt; For a complete list of compatible OS distros.&lt;/p&gt;
&lt;p&gt;When deploying on multiple nodes, we &lt;strong&gt;strongly recommend&lt;/strong&gt; using the &lt;strong&gt;same version&lt;/strong&gt; of the OS distro and the Linux kernel on all nodes.&lt;/p&gt;
&lt;p&gt;We &lt;strong&gt;strongly recommend&lt;/strong&gt; using a clean, minimally installed OS environment with &lt;code&gt;en_US&lt;/code&gt; set as the primary language.&lt;/p&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;How to enable en_US locale?&lt;/h4&gt;

    &lt;p&gt;To ensure the &lt;code&gt;en_US&lt;/code&gt; locale is available when using other primary language:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install -y glibc-locale-source glibc-langpack-en
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;localedef -i en_US -f UTF-8 en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;localectl set-locale &lt;span style=&#34;color:#000&#34;&gt;LANG&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note: The PostgreSQL cluster deployed by Pigsty defaults to the &lt;code&gt;C.UTF8&lt;/code&gt; locale, but character set definitions use &lt;code&gt;en_US&lt;/code&gt; to ensure the &lt;code&gt;pg_trgm&lt;/code&gt; extension functions properly.
If you do not need this feature, you can configure the value of &lt;a href=&#34;/docs/reference/param/#pg_lc_ctype&#34;&gt;&lt;strong&gt;&lt;code&gt;pg_lc_ctype&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; to &lt;code&gt;C.UTF8&lt;/code&gt; to avoid this issue when en locale is missing.&lt;/p&gt;


&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;admin-user&#34;&gt;Admin User&lt;/h2&gt;
&lt;p&gt;You&amp;rsquo;ll need an &amp;ldquo;&lt;strong&gt;admin user&lt;/strong&gt;&amp;rdquo; on all nodes where Pigsty is meant to be deployed — an OS user with nopass &lt;code&gt;ssh&lt;/code&gt; login and nopass &lt;code&gt;sudo&lt;/code&gt; permissions.&lt;/p&gt;
&lt;p&gt;On the nodes where Pigsty is installed, you need an &amp;ldquo;&lt;strong&gt;administrative user&lt;/strong&gt;&amp;rdquo; who has nopass &lt;code&gt;ssh&lt;/code&gt; login and nopass &lt;code&gt;sudo&lt;/code&gt; permissions.&lt;/p&gt;
&lt;p&gt;No password &lt;code&gt;sudo&lt;/code&gt; is required to execute commands during the installation process, such as installing packages, configuring system settings, etc.&lt;/p&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;How to configure nopass sudo for admin user?&lt;/h4&gt;

    &lt;p&gt;Assuming your admin username is &lt;code&gt;vagrant&lt;/code&gt;, you can create a file in &lt;code&gt;/etc/sudoers.d/vagrant&lt;/code&gt; and add the following content:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;%vagrant &lt;span style=&#34;color:#000&#34;&gt;ALL&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=(&lt;/span&gt;ALL&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; NOPASSWD: ALL
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will allow the &lt;code&gt;vagrant&lt;/code&gt; user to execute all commands without a sudo password. If your username is not &lt;code&gt;vagrant&lt;/code&gt;, replace &lt;code&gt;vagrant&lt;/code&gt; in the above steps with your username.&lt;/p&gt;


&lt;/div&gt;



&lt;div class=&#34;alert alert-danger&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Avoid using the root user&lt;/h4&gt;

    &lt;p&gt;While it is possible to install Pigsty using the &lt;code&gt;root&lt;/code&gt; user, we do not recommend it.&lt;/p&gt;
&lt;p&gt;We recommend using a dedicated admin user, such as &lt;code&gt;dba&lt;/code&gt;, different from the root user (&lt;code&gt;root&lt;/code&gt;) and the database superuser (&lt;code&gt;postgres&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;There is a dedicated playbook subtask that can use an existing admin user (e.g., &lt;code&gt;root&lt;/code&gt;) with ssh/sudo password input to &lt;a href=&#34;/docs/node/#create-admin&#34;&gt;create&lt;/a&gt; a dedicated admin user.&lt;/p&gt;


&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;ssh-permission&#34;&gt;SSH Permission&lt;/h2&gt;
&lt;p&gt;In addition to nopass &lt;code&gt;sudo&lt;/code&gt; privilege, Pigsty also requires the admin user to have nopass &lt;code&gt;ssh&lt;/code&gt; login privilege (login via ssh key).&lt;/p&gt;
&lt;p&gt;For &lt;a href=&#34;/docs/concept/arch/#singleton-meta&#34;&gt;single-host installations&lt;/a&gt; setup, this means the admin user on the local node should be able to log in to the host itself via ssh without a password.&lt;/p&gt;
&lt;p&gt;If your Pigsty deployment involves multiple nodes, this means the admin user on the &lt;a href=&#34;/docs/node/#admin-node&#34;&gt;admin node&lt;/a&gt; should be able to log in to all nodes managed by Pigsty (including the local node) via ssh without a password, and execute &lt;code&gt;sudo&lt;/code&gt; commands without a password as well.&lt;/p&gt;
&lt;p&gt;During the &lt;a href=&#34;/docs/setup/install/#configuration&#34;&gt;&lt;strong&gt;&lt;code&gt;configure&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; procedure, if your current admin user does not have any SSH key, it will attempt to address this issue by generating a new &lt;code&gt;id_rsa&lt;/code&gt; key pair and adding it to the local &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file to ensure local SSH login capability for the local admin user.&lt;/p&gt;
&lt;p&gt;By default, Pigsty creates an admin user &lt;code&gt;dba&lt;/code&gt; (&lt;code&gt;uid=88&lt;/code&gt;) on all managed nodes. If you are already using this user, we recommend that you change the &lt;a href=&#34;/docs/reference/param/#node_admin_username&#34;&gt;&lt;code&gt;node_admin_username&lt;/code&gt;&lt;/a&gt; to a new username with a different uid, or disable it using the &lt;a href=&#34;/docs/reference/param/#node_admin_enabled&#34;&gt;&lt;code&gt;node_admin_enabled&lt;/code&gt;&lt;/a&gt; parameter.&lt;/p&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;How to configure nopass SSH login for admin user?&lt;/h4&gt;

    &lt;p&gt;Assuming your admin username is &lt;code&gt;vagrant&lt;/code&gt;, execute the following command as the &lt;code&gt;vagrant&lt;/code&gt; user will generate a public/private key pair for login. If a key pair already exists, there is no need to generate a new one.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen -t rsa -b &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2048&lt;/span&gt; -N &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; -f ~/.ssh/id_rsa -q
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The generated public key is by default located at: &lt;code&gt;/home/vagrant/.ssh/id_rsa.pub&lt;/code&gt;, and the private key at: &lt;code&gt;/home/vagrant/.ssh/id_rsa&lt;/code&gt;. If your OS username is not &lt;code&gt;vagrant&lt;/code&gt;, replace &lt;code&gt;vagrant&lt;/code&gt; in the above commands with your username.&lt;/p&gt;
&lt;p&gt;You should append the public key file (&lt;code&gt;id_rsa.pub&lt;/code&gt;) to the &lt;code&gt;authorized_keys&lt;/code&gt; file of the user you need to log into: &lt;code&gt;/home/vagrant/.ssh/authorized_keys&lt;/code&gt;. If you already have password access to the remote machine, you can use &lt;code&gt;ssh-copy-id&lt;/code&gt; to copy the public key:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-copy-id &amp;lt;ip&amp;gt;                        &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Enter password to complete public key copying&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sshpass -p &amp;lt;password&amp;gt; ssh-copy-id &amp;lt;ip&amp;gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Or: you can embed the password directly in the command to avoid interactive password entry (cautious!)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Pigsty recommends provisioning the admin user during node provisioning and making it viable by default.&lt;/p&gt;


&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;ssh-accessibility&#34;&gt;SSH Accessibility&lt;/h2&gt;
&lt;p&gt;If your environment has some restrictions on SSH access, such as a bastion server or ad hoc firewall rules that prevent simple SSH access via &lt;code&gt;ssh &amp;lt;ip&amp;gt;&lt;/code&gt;, consider using SSH aliases.&lt;/p&gt;
&lt;p&gt;For example, if there&amp;rsquo;s a node with IP &lt;code&gt;10.10.10.10&lt;/code&gt; that can not be accessed directly via ssh but can be accessed via an ssh alias &lt;code&gt;meta&lt;/code&gt; defined in &lt;code&gt;~/.ssh/config&lt;/code&gt;,
then you can configure the &lt;code&gt;ansible_host&lt;/code&gt; parameter for that node in the &lt;a href=&#34;/docs/setup/config/#inventory&#34;&gt;&lt;strong&gt;inventory&lt;/strong&gt;&lt;/a&gt; to specify the SSH Alias on the host level:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;nodes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hosts&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 10.10.10.10 can not be accessed directly via ssh, but can be accessed via ssh alias &amp;#39;meta&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;10.10.10.10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ansible_host&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;meta }&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the ssh alias does not meet your requirement, there are a plethora of custom &lt;a href=&#34;https://docs.ansible.com/archive/ansible/2.4/intro_inventory.html#list-of-behavioral-inventory-parameters&#34;&gt;&lt;strong&gt;ssh connection parameters&lt;/strong&gt;&lt;/a&gt; that can bring fine-grained control over SSH connection behavior.&lt;/p&gt;
&lt;p&gt;If the following cmd can be successfully executed on the admin node by the admin user, it means that the target node&amp;rsquo;s admin user is properly configured.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh &amp;lt;ip&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;alias&amp;gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;sudo ls&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;
&lt;p&gt;On the &lt;a href=&#34;/docs/node/#admin-node&#34;&gt;&lt;strong&gt;admin node&lt;/strong&gt;&lt;/a&gt;, Pigsty requires &lt;a href=&#34;/docs/setup/playbook/#ansible&#34;&gt;&lt;strong&gt;&lt;code&gt;ansible&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; to initiate control.
If you are using the singleton meta installation, Ansible is required on this node. It is not required for common nodes.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;/docs/setup/offline/#bootstrap&#34;&gt;&lt;strong&gt;&lt;code&gt;bootstrap&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; procedure will make every effort to do this for you.
But you can always choose to install Ansible manually. The process of manually installing Ansible varies with different OS distros / major versions (usually involving an additional weak dependency &lt;code&gt;jmespath&lt;/code&gt;):&lt;/p&gt;






&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;tabs-6&#34; role=&#34;tablist&#34;&gt;
  &lt;li class=&#34;nav-item&#34;&gt;
      &lt;button class=&#34;nav-link disabled&#34;
          id=&#34;tabs-06-00-tab&#34; data-bs-toggle=&#34;tab&#34; data-bs-target=&#34;#tabs-06-00&#34; role=&#34;tab&#34;
          aria-controls=&#34;tabs-06-00&#34; aria-selected=&#34;false&#34;&gt;
        Install Ansible
      &lt;/button&gt;
    &lt;/li&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;button class=&#34;nav-link active&#34;
          id=&#34;tabs-06-01-tab&#34; data-bs-toggle=&#34;tab&#34; data-bs-target=&#34;#tabs-06-01&#34; role=&#34;tab&#34;
          aria-controls=&#34;tabs-06-01&#34; aria-selected=&#34;true&#34;&gt;
        EL 8 / 9
      &lt;/button&gt;
    &lt;/li&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;button class=&#34;nav-link&#34;
          id=&#34;tabs-06-02-tab&#34; data-bs-toggle=&#34;tab&#34; data-bs-target=&#34;#tabs-06-02&#34; role=&#34;tab&#34;
          aria-controls=&#34;tabs-06-02&#34; aria-selected=&#34;false&#34;&gt;
        EL 7
      &lt;/button&gt;
    &lt;/li&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;button class=&#34;nav-link&#34;
          id=&#34;tabs-06-03-tab&#34; data-bs-toggle=&#34;tab&#34; data-bs-target=&#34;#tabs-06-03&#34; role=&#34;tab&#34;
          aria-controls=&#34;tabs-06-03&#34; aria-selected=&#34;false&#34;&gt;
        Debian / Ubuntu
      &lt;/button&gt;
    &lt;/li&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;button class=&#34;nav-link&#34;
          id=&#34;tabs-06-04-tab&#34; data-bs-toggle=&#34;tab&#34; data-bs-target=&#34;#tabs-06-04&#34; role=&#34;tab&#34;
          aria-controls=&#34;tabs-06-04&#34; aria-selected=&#34;false&#34;&gt;
        MacOS
      &lt;/button&gt;
    &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;tab-content&#34; id=&#34;tabs-6-content&#34;&gt;
    &lt;div class=&#34;tab-pane fade&#34;
        id=&#34;tabs-06-00&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-06-00-tab&#34; tabindex=&#34;6&#34;&gt;
        &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;tab-pane fade show active&#34;
        id=&#34;tabs-06-01&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-06-01-tab&#34; tabindex=&#34;6&#34;&gt;
        &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo dnf install -y ansible python3.12-jmespath&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;tab-pane fade&#34;
        id=&#34;tabs-06-02&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-06-02-tab&#34; tabindex=&#34;6&#34;&gt;
        &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo yum install -y ansible   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# EL7 does not need to install jmespath explicitly&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;tab-pane fade&#34;
        id=&#34;tabs-06-03&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-06-03-tab&#34; tabindex=&#34;6&#34;&gt;
        &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install -y ansible python3-jmespath&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;tab-pane fade&#34;
        id=&#34;tabs-06-04&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-06-04-tab&#34; tabindex=&#34;6&#34;&gt;
        &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install ansible&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;To install Pigsty, you also need to prepare the Pigsty source package. You can directly download a specific version from the &lt;a href=&#34;https://github.com/Vonng/pigsty/releases/&#34;&gt;GitHub Release&lt;/a&gt; page or use the following command to obtain the latest stable version:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -fsSL https://repo.pigsty.io/get &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If your env does not have Internet access, consider using the &lt;a href=&#34;/docs/setup/offline/#offline-packages&#34;&gt;&lt;strong&gt;offline packages&lt;/strong&gt;&lt;/a&gt;, which are pre-packed for different OS distros, and can be downloaded from the GitHub Release page.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
